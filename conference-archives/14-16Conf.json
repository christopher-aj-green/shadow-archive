{
  "Geer": {
    "author": "",
    "description": "Power exists to be used. Some wish for cyber safety, which they will not get. Others wish for cyber order, which they will not get. Some have the eye to discern cyber policies that are \"the least worst thing;\" may they fill the vacuum of wishful thinking.",
    "plaintextTitle": "Cybersecurity as Realpolitik",
    "material": [
      {
        "link": "http://geer.tinho.net/geer.blackhat.6viii14.txt",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=nT-TGvYOBpI"
      }
    ],
    "youtubeDescription": "Power exists to be used. Some wish for cyber safety, which they will not get. Others wish for cyber order, which they will not get. Some have the eye to discern cyber policies that are \"the least worst thing;\" may they fill the vacuum of wishful thinking."
  },
  "Ptacek": {
    "author": "Balducci",
    "description": "Over the past year, more than 10,000 people participated in the Matasano crypto challenges, a staged learning exercise where participants implemented 48 different attacks against realistic cryptographic constructions. In the process, we collected crypto exploit code in dozens of different languages, ranging from X86 assembly to Haskell. With the permission of the participants, we've built a \"Rosetta Code\" site with per-language implementations of each of the crypto attacks we taught.\n\nIn this talk, we'll run through all 48 of the crypto challenges, giving Black Hat attendees early access to all of the crypto challenges. We'll explain the importance of each of the attacks, putting them into the context of actual software flaws. Our challenges cover crypto concepts from block cipher mode selection to public key agreement algorithms. For some of the more interesting attacks, we'll step-by-step the audience through exploit code, in several languages simultaneously.",
    "plaintextTitle": "48 Dirty Little Secrets Cryptographers Don't Want You To Know",
    "material": []
  },
  "Antoniewicz": {
    "author": "",
    "description": "IEEE 802.1x has been leveraged for a long time for authentication purposes. Up until this point, little has been done to help researchers expose vulnerabilities within the systems that implement the protocol. In this talk, we'll dissect IEEE 802.1x, its surrounding protocols (RADIUS/EAP), provide testing tools, and detail a number of vulnerabilities identified in popular supporting systems. We'll wrap up demonstrating a vulnerability within a RADIUS server that allows for remote code execution over 802.11 wireless using WPA Enterprise before the user is authorized to join the network.",
    "plaintextTitle": "802.1x and Beyond!",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Antoniewicz-802.1x-And-Beyond.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=uXukuhVebtY"
      }
    ],
    "youtubeDescription": "By Brad Antoniewicz\n\nIEEE 802.1x has been leveraged for a long time for authentication purposes. Up until this point, little has been done to help researchers expose vulnerabilities within the systems that implement the protocol. In this talk, we'll dissect IEEE 802.1x, its surrounding protocols (RADIUS/EAP), provide testing tools, and detail a number of vulnerabilities identified in popular supporting systems. We'll wrap up demonstrating a vulnerability within a RADIUS server that allows for remote code execution over 802.11 wireless using WPA Enterprise before the user is authorized to join the network."
  },
  "Valtman": {
    "author": "Ferber",
    "description": "Cloud instances lifecycles are changing fast and forces us to improve the way we secure those IaaS instances. Nowadays we can find servers that are installed, launched, process data and terminate - all within a range of minutes. This new accelerated lifecycle makes traditional security processes such as periodic patches, vulnerability scanning, hardening, and forensics impossible. In this accelerated lifecycle, there are no maintenance windows for patches or ability to mitigate vulnerability, so the security infrastructure must adapt to new methods. In this new thinking, we require automation of instance security configuration, hardening, monitoring, and termination. Because there are no maintenance windows, Servers must be patched before they boot up, security configuration and hardening procedures should be integrated with server installation and vulnerability scanning and mitigation processes should be automatic. In this presentation, we announce a new open source tool called \"Cloudefigo\" and explain how it enables accelerated security lifecycle. We demonstrate how to launch a pre-configured, already patched instance into an encrypted storage environment automatically while evaluating their security and mitigating them automatically if a vulnerability is found. In the live demo, we leverage Amazon Web Services EC2 Cloud-Init scripts and object storage for provisioning automated security configuration, integrating encryption, including secure encryption key repositories for secure server's communication. The result of those techniques is cloud servers that are resilient, automatically configured, with reduced attack surface.",
    "plaintextTitle": "From Zero to Secure in One Minute",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Valtman-From-Zero-To-Secure-In-One-Minute.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=nknwsqP01F0"
      }
    ],
    "youtubeDescription": "by Nir Valtman &  Moshe Ferber\n\nCloud instances lifecycles are changing fast and forces us to improve the way we secure those IaaS instances. Nowadays we can find servers that are installed, launched, process data and terminate - all within a range of minutes. This new accelerated lifecycle makes traditional security processes such as periodic patches, vulnerability scanning, hardening, and forensics impossible. In this accelerated lifecycle, there are no maintenance windows for patches or ability to mitigate vulnerability, so the security infrastructure must adapt to new methods. In this new thinking, we require automation of instance security configuration, hardening, monitoring, and termination. Because there are no maintenance windows, Servers must be patched before they boot up, security configuration and hardening procedures should be integrated with server installation and vulnerability scanning and mitigation processes should be automatic. In this presentation, we announce a new open source tool called \"Cloudefigo\" and explain how it enables accelerated security lifecycle. We demonstrate how to launch a pre-configured, already patched instance into an encrypted storage environment automatically while evaluating their security and mitigating them automatically if a vulnerability is found. In the live demo, we leverage Amazon Web Services EC2 Cloud-Init scripts and object storage for provisioning automated security configuration, integrating encryption, including secure encryption key repositories for secure server's communication. The result of those techniques is cloud servers that are resilient, automatically configured, with reduced attack surface."
  },
  "Brodie": {
    "author": "Shaulov",
    "description": "The secure BYOD hype is growing and Virtual Desktop Infrastructure (VDI) is considered the alternative solution for secure containers. In a nutshell, VDI solutions provide a remote workstation offering so that no data is stored locally. We decided to examine the architecture and see for ourselves whether VDI delivers on its security promise.  \n\nIn this engaging session, we demonstrate a proof-of-concept attack where a malicious app leverages screen scraping to exfiltrate data through common VDI platforms. By simulating the user's interaction, we show how such an attack is not only feasible - but also efficient. While keeping the espionage activity invisible both from client-side and server-side malware detection measures, the attacker can automate the process and ultimately render the VDI solution ineffective.",
    "plaintextTitle": "A Practical Attack Against VDI Solutions",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Brodie-A-Practical-Attack-Against-VDI-Solutions-WP.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=amPOxWrbg1o"
      }
    ],
    "youtubeDescription": "By Daniel Brodie and Michael Shaulov\n\n\"The secure BYOD hype is growing and Virtual Desktop Infrastructure (VDI) is considered the alternative solution for secure containers. In a nutshell, VDI solutions provide a remote workstation offering so that no data is stored locally. We decided to examine the architecture and see for ourselves whether VDI delivers on its security promise.  \n\nIn this engaging session, we demonstrate a proof-of-concept attack where a malicious app leverages screen scraping to exfiltrate data through common VDI platforms. By simulating the user's interaction, we show how such an attack is not only feasible - but also efficient. While keeping the espionage activity invisible both from client-side and server-side malware detection measures, the attacker can automate the process and ultimately render the VDI solution ineffective.\""
  },
  "Saxe": {
    "author": "",
    "description": "The millions of unique malicious binaries gathered in today's white-hat malware repositories are connected through a dense web of hidden code-sharing relationships. If we could recover this shared-code network, we could provide much needed context for and insight into newly observed malware. For example, our analysis could leverage previous reverse engineering work performed on a new malware sample's older \"relatives,\" giving important context and accelerating the reverse engineering process. \n\nVarious approaches have been proposed to see through malware packing and obfuscation to identify code sharing.  A significant limitation of these existing approaches, however, is that they are either scalable but easily defeated or that they are complex but do not scale to millions of malware samples.  A final issue is that even the more complex approaches described in the research literature tend to only exploit one \"feature domain,\" be it malware instruction sequences, call graph structure, application binary interface metadata, or dynamic API call traces, leaving these methods open to defeat by intelligent adversaries.\n\nHow, then, do we assess malware similarity and \"newness\" in a way that both scales to millions of samples and is resilient to the zoo of obfuscation techniques that malware authors employ?  In this talk, I propose an answer: an obfuscation-resilient ensemble similarity analysis approach that addresses polymorphism, packing, and obfuscation by estimating code-sharing in multiple static and dynamic technical domains at once, such that it is very difficult for a malware author to defeat all of the estimation functions simultaneously.  To make this algorithm scale, we use an approximate feature counting technique and a feature-hashing trick drawn from the machine-learning domain, allowing for the fast feature extraction and fast retrieval of sample \"near neighbors\" even when handling millions of binaries.\n\nOur algorithm was developed over the course of three years and has been evaluated both internally and by an independent test team at MIT Lincoln Laboratories: we scored the highest on these tests against four competing malware cluster recognition techniques and we believe this was because of our unique \"ensemble\" approach.  In the presentation, I will give details on how to implement the algorithm and will go over these algorithm results in a series of large-scale interactive malware visualizations. As part of the algorithm description I will walk through a Python machine learning library that we will be releasing in the conference material which allows users to detect feature frequencies over billions of items on commodity hardware.",
    "plaintextTitle": "A Scalable, Ensemble Approach for Building and Visualizing Deep Code-Sharing Networks Over Millions of Malicious Binaries",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Saxe.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Saxe-Tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=k8d9pSdSsAI"
      }
    ],
    "youtubeDescription": "By Josh Saxe\n\n\"The millions of unique malicious binaries gathered in today's white-hat malware repositories are connected through a dense web of hidden code-sharing relationships. If we could recover this shared-code network, we could provide much needed context for and insight into newly observed malware. For example, our analysis could leverage previous reverse engineering work performed on a new malware sample's older \"\"relatives,\"\" giving important context and accelerating the reverse engineering process. \n\nVarious approaches have been proposed to see through malware packing and obfuscation to identify code sharing.  A significant limitation of these existing approaches, however, is that they are either scalable but easily defeated or that they are complex but do not scale to millions of malware samples.  A final issue is that even the more complex approaches described in the research literature tend to only exploit one \"\"feature domain,\"\" be it malware instruction sequences, call graph structure, application binary interface metadata, or dynamic API call traces, leaving these methods open to defeat by intelligent adversaries.\n\nHow, then, do we assess malware similarity and \"\"newness\"\" in a way that both scales to millions of samples and is resilient to the zoo of obfuscation techniques that malware authors employ?  In this talk, I propose an answer: an obfuscation-resilient ensemble similarity analysis approach that addresses polymorphism, packing, and obfuscation by estimating code-sharing in multiple static and dynamic technical domains at once, such that it is very difficult for a malware author to defeat all of the estimation functions simultaneously.  To make this algorithm scale, we use an approximate feature counting technique and a feature-hashing trick drawn from the machine-learning domain, allowing for the fast feature extraction and fast retrieval of sample \"\"near neighbors\"\" even when handling millions of binaries.\n\nOur algorithm was developed over the course of three years and has been evaluated both internally and by an independent test team at MIT Lincoln Laboratories: we scored the highest on these tests against four competing malware cluster recognition techniques and we believe this was because of our unique \"\"ensemble\"\" approach.  In the presentation, I will give details on how to implement the algorithm and will go over these algorithm results in a series of large-scale interactive malware visualizations. As part of the algorithm description I will walk through a Python machine learning library that we will be releasing in the conference material which allows users to detect feature frequencies over billions of items on commodity hardware.\""
  },
  "Miller": {
    "author": "Valasek",
    "description": "Automotive security concerns have gone from the fringe to the mainstream with security researchers showing the susceptibility of the modern vehicle to local and remote attacks. A malicious attacker leveraging a remote vulnerability could do anything from enabling a microphone for eavesdropping to turning the steering wheel to disabling the brakes. Unfortunately, research has only been presented on three or four particular vehicles. Each manufacturer designs their fleets differently; therefore analysis of remote threats must avoid generalities. This talk takes a step back and examines the automotive network of a large number of different manufacturers from a security perspective. From this larger dataset, we can begin to answer questions like: Are some cars more secure from remote compromise than others? Has automotive network security changed for the better (or worse) in the last five years? What does the future of automotive security hold and how can we protect our vehicles from attack moving forward?",
    "plaintextTitle": "A Survey of Remote Automotive Attack Surfaces",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=tnYO4U0h_wY"
      }
    ],
    "youtubeDescription": "A Survey of Remote Automotive Attack Surfaces \nCharlie Miller Security Engineer, Twitter \nChris Valasek Director of Threat Intelligence, IOActive\n\nAutomotive security concerns have gone from the fringe to the mainstream with security researchers showing the susceptibility of the modern vehicle to local and remote attacks. A malicious attacker leveraging a remote vulnerability could do anything from enabling a microphone for eavesdropping to turning the steering wheel to disabling the brakes.\n\nLast year, we discussed 2 particular vehicles. However, since each manufacturer designs their fleets differently; analysis of remote threats must avoid generalities. This talk takes a step back and examines the automotive network of a large number of different manufacturers from a security perspective. From this larger dataset we can begin to answer questions like: Are some cars more secure from remote compromise than others? Has automotive network security changed for the better (or worse) in the last 5 years? What does the future of automotive security hold and how can we protect our vehicles from attack moving forward?\n\nCharlie Miller is a security engineer at Twitter. Back when he still had time to research, he was the first with a public remote exploit for both the iPhone and the G1 Android phone. He is a four time winner of the CanSecWest Pwn2Own competition. He has authored three information security books and holds a PhD from the University of Notre Dame. He has hacked browsers, phones, cars, and batteries. Charlie spends his free time trying to get back together with Apple, but sadly they still list their relationship status as \"It's complicated\".\n\nTwitter: @0xcharlie\n\nChristopher Valasek is the Director of Security Intelligence at IOActive, an industry leader in comprehensive computer security services. Valasek specializes in offensive research methodologies with a focus in reverse engineering and exploitation. Valasek is known for his extensive research in the automotive field and his exploitation and reverse engineering of Windows. Valasek is also the Chairman of SummerCon, the nation's oldest hacker conference.\n\nTwitter: @nudehaberdasher"
  },
  "Spring": {
    "author": "Vixie",
    "description": "Consumer Premise Equipment (CPE) has become common, nearly ubiquitous, home and small office attire. Many homes have a router/modem device that mediates access between home devices and the ISP. Abuse of these devices is particularly problematic both because the owner has difficulty interfacing with (and fixing) the device and because the static code provided by the vendor is generally rotted (and vulnerable) by the time the consumer unpacks the device.   The poor management of CPE has created an Internet-scale problem and potential for abuse. For example, the plurality of open DNS resolvers accessible on the Internet are on medium-speed DSL connections, the sorts of connections leased to home and small-business users. These devices are available for abuse in reflected and amplified DDoS attacks. The vulnerable devices themselves can also be leveraged against the consumer in middleperson attacks. In this presentation, we quantify this problem and provide recommendations for how the Internet community can address this public-health-like problem.",
    "plaintextTitle": "Abuse of CPE Devices and Recommended Fixes",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Spring-Abuse-Of-CPE-Devices-And-Recommended-Fixes-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Spring-Abuse-Of-CPE-Devices-And-Recommended-Fixes.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ZZZzgT79Bn8"
      }
    ],
    "youtubeDescription": "By Jonathan Spring, Paul Vixie, and Christopher Hallenbeck\n\n\"Consumer Premise Equipment (CPE) has become common, nearly ubiquitous, home and small office attire. Many homes have a router/modem device that mediates access between home devices and the ISP. Abuse of these devices is particularly problematic both because the owner has difficulty interfacing with (and fixing) the device and because the static code provided by the vendor is generally rotted (and vulnerable) by the time the consumer unpacks the device. \n\nThe poor management of CPE has created an Internet-scale problem and potential for abuse. For example, the plurality of open DNS resolvers accessible on the Internet are on medium-speed DSL connections, the sorts of connections leased to home and small-business users. These  devices are available for abuse in reflected and amplified DDoS attacks. The vulnerable devices themselves can also be leveraged against the consumer in middleperson attacks. In this presentation, we quantify this problem and provide recommendations for how the Internet community can address this public-health-like problem.\""
  },
  "Duckwall": {
    "author": "Delpy",
    "description": "Microsoft Active Directory uses Kerberos to handle authentication requests by default. However, if the domain is compromised, how bad can it really be? With the loss of the right hash, Kerberos can be completely compromised for years after the attacker gained access. Yes, it really is that bad.\n\nIn this presentation Skip Duckwall, @passingthehash on twitter and Benjamin Delpy, @gentilkiwi on twitter and the author of Mimikatz, will demonstrate just how thoroughly compromised Kerberos can be under real world conditions.\n\nPrepare to have all your assumptions about Kerberos challenged!",
    "plaintextTitle": "Abusing Microsoft Kerberos: Sorry You Guys Don't Get It",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Duckwall-Abusing-Microsoft-Kerberos-Sorry-You-Guys-Don't-Get-It.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=lJQn06QLwEw"
      }
    ],
    "youtubeDescription": "By Alva Duckwall and Benjamin Delpy\n\n\"Microsoft Active Directory uses Kerberos to handle authentication requests by default. However, if the domain is compromised, how bad can it really be? With the loss of the right hash, Kerberos can be completely compromised for years after the attacker gained access. Yes, it really is that bad.\n\nIn this presentation Skip Duckwall, @passingthehash on twitter and Benjamin Delpy, @gentilkiwi on twitter and the author of Mimikatz, will demonstrate just how thoroughly compromised Kerberos can be under real world conditions.\n\nPrepare to have all your assumptions about Kerberos challenged!\""
  },
  "Lee": {
    "author": "Jang",
    "description": "The primary goal of ASLR is to effectively randomize a program's memory layout so that adversaries cannot easily infer such information. As ASLR is a critical defense against exploitation, there have been tremendous efforts to evaluate the mechanism's security. To date, previous attacks that bypass ASLR have focused mostly on exploiting memory leak vulnerabilities, or abusing non-randomized data structures.\n\nIn this presentation, we leverage vulnerabilities introduced by performance-oriented software design to reveal new ways in which ASLR can be bypassed. In addition to describing how vulnerabilities originate from such designs, we will present real attacks that exploit them. \n\nFirst, we analyze general hash table designs for various programming languages (JavaScript, Python, Ruby). To optimize object tracking for such languages, their interpreters may leak address information. Some hash table implementations directly store the address information in the table, whileothers permit inference of address information through repeated table scanning. We exhaustively examined several popular languages to see whether each of them has one or both of these problems, and present how they can be leveraged. As a concrete example, we demonstrate how address information can be leaked in the Safari web browser by simply running some JavaScript.\n\nSecond, we present an analysis of the Zygote process creation model, which is an Android operating system design for speeding up application launches. The results of our examination show that Zygote weakens ASLR because all applications are created with largely identical memory layouts. To highlight the severity of this issue, we demonstrate two different ASLR bypass attacks using real applications - Google Chrome and VLC Media Player.",
    "plaintextTitle": "Abusing Performance Optimization Weaknesses to Bypass ASLR",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=YwVuaMeGX44"
      }
    ],
    "youtubeDescription": "By Byoungyoung Lee, Yeongjin Jang, and Tielei Wang\n\n\"The primary goal of ASLR is to effectively randomize a program's memory layout so that adversaries cannot easily infer such information. As ASLR is a critical defense against exploitation, there have been tremendous efforts to evaluate the mechanism's security. To date, previous attacks that bypass ASLR have focused mostly on exploiting memory leak vulnerabilities, or abusing non-randomized data structures.\n\nIn this presentation, we leverage vulnerabilities introduced by performance-oriented software design to reveal new ways in which ASLR can be bypassed. In addition to describing how vulnerabilities originate from such designs, we will present real attacks that exploit them. \n\nFirst, we analyze general hash table designs for various programming languages (JavaScript, Python, Ruby). To optimize object tracking for such languages, their interpreters may leak address information. Some hash table implementations directly store the address information in the table, while others permit inference of address information through repeated table scanning. We exhaustively examined several popular languages to see whether each of them has one or both of these problems, and present how they can be leveraged. As a concrete example, we demonstrate how address information can be leaked in the Safari web browser by simply running some JavaScript.\n\nSecond, we present an analysis of the Zygote process creation model, which is an Android operating system design for speeding up application launches. The results of our examination show that Zygote weakens ASLR because all applications are created with largely identical memory layouts. To highlight the severity of this issue, we demonstrate two different ASLR bypass attacks using real applications - Google Chrome and VLC Media Player.\""
  },
  "Forristal": {
    "author": "",
    "description": "The team that discovered the Android MasterKey vulnerability in 2013 is here to present another new Android vulnerability with widespread impact: a flaw in Android application handling, allowing malicious applications to escape the normal application sandbox and get special security privileges without any user notification. This can lead to a malicious application having the ability to steal user data, recover passwords and secrets, or in certain cases, compromise the whole Android device.  The vulnerability is embedded in all shipped Android devices since January 2010 (Android Eclair 2.1).\n\nThis presentation aims to: walk through the technical root cause of this responsibly disclosed vulnerability (Google bug 13678484), explain why it's a problem, show how an attacker would create an exploit for it, and finally demonstrate the exploit against a live device. The presentation will also coincide with the release of a free security scanning tool to help end-users scan for risk of this vulnerability on their end devices.",
    "plaintextTitle": "Android FakeID Vulnerability Walkthrough",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Forristal-Android-FakeID-Vulnerability-Walkthrough.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5eJYCucZ-Tc"
      }
    ],
    "youtubeDescription": "By Jeff Forristal\n\n\"The team that discovered the Android MasterKey vulnerability in 2013 is here to present another new Android vulnerability with widespread impact: a flaw in Android application handling, allowing malicious applications to escape the normal application sandbox and get special security privileges without any user notification. This can lead to a malicious application having the ability to steal user data, recover passwords and secrets, or in certain cases, compromise the whole Android device.  The vulnerability is embedded in all shipped Android devices since January 2010 (Android Eclair 2.1).\n\nThis presentation aims to: walk through the technical root cause of this responsibly disclosed vulnerability (Google bug 13678484), explain why it's a problem, show how an attacker would create an exploit for it, and finally demonstrate the exploit against a live device. The presentation will also coincide with the release of a free security scanning tool to help end-users scan for risk of this vulnerability on their end devices.\""
  },
  "Li": {
    "author": "",
    "description": "Our talk is about how to detect virtual appliance environments with script and binary. The purpose of the detection is to evade those defense methods that are based on virtual machines.Virtual machines and virtualization technology play a critical role in virtual appliances to enable dynamic and parallel sample analysis. Methods for detecting virtual machines and sandboxes have been previously discussed but mostly at the operating system level. The talk focuses on a comprehensive set of techniques that range from the OS level to application level, and to web scripts that can detect virtual appliance from the environment running within the browser.The talk will cover the techniques that detect different virtualization models, from popular virtual machine such as KVM/QEMU, VMware, and XEN, to light weight bare-metal hypervisor, such as ESX. The talk will also cover different detection techniques from using native code to device fingerprints.The detection of virtual appliance could aid the attack side by enabling stealthy rootkit and malware, as well as malicious sites that evade VM based detection such the virtual execution engines. The comprehensive list of virtual appliance detection methods can also help the malware detection and defense side by alerting them the constraints and limitations of VM based solutions.",
    "plaintextTitle": "Comprehensive Virtual Appliance Detection  ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Li/Asia-14-Li-Comprehensive-Virtual-Appliance-Detection.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=PokQ93Cbo0s"
      }
    ],
    "youtubeDescription": ""
  },
  "Lindh": {
    "author": "",
    "description": "While there has certainly been some interesting research into the security of mobile broadband modems, or \"dongles,\" in the past, it has almost exclusively focused on novel attacks such as buffer overflows over text message, attacks on the device's file system, and other advanced approaches. The level of skill and effort required to execute such an attack reduces the potential number of attackers, but there are easier ways to monetize from attacking these devices too.\n\nThis talk will focus on some more likely scenarios; web-based attacks that are not that hard to pull off but that will allow the attacker to cash in without too much effort. The speaker will demonstrate how to profit, steal sensitive information, and establish a persistent hold on the devices, and also how a seemingly modest attack could be used as part of a more advanced attack chain. There will also be an analysis of why it is easy being an Internet criminal, and how it will continue to be so unless drastic changes are made to how we approach and implement new consumer technology.\n\nOh, and there will be demos.",
    "plaintextTitle": "Attacking Mobile Broadband Modems Like a Criminal Would",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Lindh-Attacking-Mobile-Broadband-Modems-Like-A-Criminal-Would-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Lindh-Attacking-Mobile-Broadband-Modems-Like-A-Criminal-Would.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=qju8h8Ivl2Y"
      }
    ],
    "youtubeDescription": "By Andreas Lindh\n\n\"While there has certainly been some interesting research into the security of mobile broadband modems, or \"\"dongles,\"\" in the past, it has almost exclusively focused on novel attacks such as buffer overflows over text message, attacks on the device's file system, and other advanced approaches. The level of skill and effort required to execute such an attack reduces the potential number of attackers, but there are easier ways to monetize from attacking these devices too.\n\nThis talk will focus on some more likely scenarios; web-based attacks that are not that hard to pull off but that will allow the attacker to cash in without too much effort. The speaker will demonstrate how to profit, steal sensitive information, and establish a persistent hold on the devices, and also how a seemingly modest attack could be used as part of a more advanced attack chain. There will also be an analysis of why it is easy being an Internet criminal, and how it will continue to be so unless drastic changes are made to how we approach and implement new consumer technology.\n\nOh, and there will be demos.\""
  },
  "Ottenheimer": {
    "author": "",
    "description": "Many companies are getting Hadoopy often with little or no consideration of security because Big Data is on their list of cool projects. Have they opened the door to compromise? Better predictions and more intelligent decisions are expected from our biggest data sets, yet can we really trust the systems we secure the least? And is anyone ready to face why our best \"learning\" machines continue to make amusing and sometimes tragic mistakes? Infosec is in this game but Big Data is moving at a pace faster than our controls are being considered. What have we done about emerging vulnerabilities and threats to Hadoop as it leaves many of our traditional data paradigms behind? This presentation, based on the new book \"Realities of Big Data Security\" takes the audience through seven simple ways to deal with serious risks and elephantine security challenges here today.",
    "plaintextTitle": "Hadoop Security: Seven Ways to Kill an Elephant",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=flUqDwVf6NQ"
      }
    ],
    "youtubeDescription": "By Davi Ottenheimer\n\nMany companies are getting Hadoopy often with little or no consideration of security because Big Data is on their list of cool projects. Have they opened the door to compromise? Better predictions and more intelligent decisions are expected from our biggest data sets, yet can we really trust the systems we secure the least? And is anyone ready to face why our best \"learning\" machines continue to make amusing and sometimes tragic mistakes? Infosec is in this game but Big Data is moving at a pace faster than our controls are being considered. What have we done about emerging vulnerabilities and threats to Hadoop as it leaves many of our traditional data paradigms behind? This presentation, based on the new book \"Realities of Big Data Security\" takes the audience through seven simple ways to deal with serious risks and elephantine security challenges here today."
  },
  "Rogers": {
    "author": "Rogers",
    "description": "The recently open sourced Cyber Physical Topology Language (CPTL) has allowed cyber defenders the capability of building tools to provide metrics for estimation of a security state. This provides a metric that can be used to assess the ongoing security status of data network.  Using CPTL's framework, monitoring data from any arbitrary tool can be imported through standard data gathering methods such as syslog and SNMP queries. The toolkit specifically provides a running score from a many configurable settings based on metrics gathered on applications, systems, or networks. A graphical canvas in the Badger provides an at a glance view of the state of networked security elements.",
    "plaintextTitle": "Badger - The Networked Security State Estimation Toolkit",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Rogers-Badger-The-Networked-Security-State-Estimation-Toolkit.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=TjF5TaYq0QM"
      }
    ],
    "youtubeDescription": "By Edmond Rogers, Will Rogers, and Gabe Weaver\n\nThe recently open sourced Cyber Physical Topology Language (CPTL) has allowed cyber defenders the capability of building tools to provide metrics for estimation of a security state. This provides a metric that can be used to assess the ongoing security status of data network.  Using CPTL's framework, monitoring data from any arbitrary tool can be imported through standard data gathering methods such as syslog and SNMP queries. The toolkit specifically provides a running score from a many configurable settings based on metrics gathered on applications, systems, or networks. A graphical canvas in the Badger provides an at a glance view of the state of networked security elements."
  },
  "Nohl": {
    "author": "Lell",
    "description": "USB has become so commonplace that we rarely worry about its security implications. USB sticks undergo the occasional virus scan, but we consider USB to be otherwise perfectly safe - until now.\n\nThis talk introduces a new form of malware that operates from controller chips inside USB devices. USB sticks, as an example, can be reprogrammed to spoof various other device types in order to take control of a computer, exfiltrate data, or spy on the user.\n\nWe demonstrate a full system compromise from USB and a self-replicating USB virus not detectable with current defenses.\n\nWe then dive into the USB stack and assess where protection from USB malware can and should be anchored.",
    "plaintextTitle": "BadUSB - On Accessories that Turn Evil",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=nuruzFqMgIw"
      }
    ],
    "youtubeDescription": "\"USB has become so commonplace that we rarely worry about its security implications. USB sticks undergo the occasional virus scan, but we consider USB to be otherwise perfectly safe - until now.\n\nThis talk introduces a new form of malware that operates from controller chips inside USB devices. USB sticks, as an example, can be reprogrammed to spoof various other device types in order to take control of a computer, exfiltrate data, or spy on the user.\n\nWe demonstrate a full system compromise from USB and a self-replicating USB virus not detectable with current defenses.\n\nWe then dive into the USB stack and assess where protection from USB malware can and should be anchored.\""
  },
  "Chechik": {
    "author": "Hayak",
    "description": "A mysterious vulnerability from 2011 almost made the Bitcoin network collapse. Silk Road, MTGox, and potentially many more trading websites claim to be prone to \"Transaction Malleability.\" We will shed some light and show in practice how to exploit this vulnerability.",
    "plaintextTitle": "Bitcoin Transaction Malleability Theory in Practice",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Chechik-Bitcoin-Transaction-Malleability-Theory-In-Practice.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Chechik-Malleability-Tool-Tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=bmxu3r_CUKE"
      }
    ],
    "youtubeDescription": "By Daniel Chechik, Ben Hayak, and Orit Kravitz Chechik\n\nA mysterious vulnerability from 2011 almost made the Bitcoin network collapse. Silk Road, MTGox, and potentially many more trading websites claim to be prone to \"Transaction Malleability.\" We will shed some light and show in practice how to exploit this vulnerability."
  },
  "Cesare": {
    "author": "",
    "description": "In this talk, I look at a number of household or common devices and things, including a popular model car and physical security measures such as home alarm systems. I then proceed to break the security of those devices. The keyless entry of a 2004/2005 popular make and widely used car is shown to be breakable with predictable rolling codes. The actual analysis involved not only mathematics and software defined radio, but the building of a button pushing robot to press the keyless entry to capture data sets that enable the mathematical analysis. Software defined radio is not only used in the kelyess entry attack, but in simple eavesdropping attacks against 40mhz analog baby monitors. But that's an easy attack. A more concering set of attacks are against home alarm systems. Practically all home alarm systems that had an RF remote to enable and disable the system were shown to used fixed codes. This meant that a replay attack could disable the alarm. I built an Arduino and Raspberry Pi based device for less than $50 dollars that could be trained to capture and replay those codes to defeat the alarms. I also show that by physically tampering with a home alarm system by connecting a device programmer, the eeprom data off the alarm's microcontroller can be read. This means that an attacker can read the secret passcode that disables or enables the alarm. In summary, these attacks are simple but effective in physical devices that are common in today's world. I will talk about ways of mitigating these attacks, which essentially comes down to avoiding the bad and buying the good. But how do you know what's the difference? Come to this talk to find out.",
    "plaintextTitle": "Breaking the Security of Physical Devices",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=TMpHB-pWseM"
      }
    ],
    "youtubeDescription": "In this talk, I look at a number of household or common devices and things, including a popular model car and physical security measures such as home alarm systems. I then proceed to break the security of those devices. The keyless entry of a 2004/2005 popular make and widely used car is shown to be breakable with predictable rolling codes. The actual analysis involved not only mathematics and software defined radio, but the building of a button pushing robot to press the keyless entry to capture data sets that enable the mathematical analysis. Software defined radio is not only used in the kelyess entry attack, but in simple eavesdropping attacks against 40mhz analog baby monitors. But that's an easy attack. A more concering set of attacks are against home alarm systems. Practically all home alarm systems that had an RF remote to enable and disable the system were shown to used fixed codes. This meant that a replay attack could disable the alarm. I built an Arduino and Raspberry Pi based device for less than $50 dollars that could be trained to capture and replay those codes to defeat the alarms. I also show that by physically tampering with a home alarm system by connecting a device programmer, the eeprom data off the alarm's microcontroller can be read. This means that an attacker can read the secret passcode that disables or enables the alarm. In summary, these attacks are simple but effective in physical devices that are common in today's world. I will talk about ways of mitigating these attacks, which essentially comes down to avoiding the bad and buying the good. But how do you know what's the difference? Come to this talk to find out."
  },
  "Picod": {
    "author": "Demay",
    "description": "The large adoption of wireless devices goes further than WiFi (smartmeters, wearable devices, Internet of Things, etc.).\n\n The developers of these new types of devices may not have a deep security background and it can lead to security and privacy issues when the solution is stressed.\n\nHowever, to assess those types of devices, the only solution would be a dedicated hardware component with an appropriate radio interface for each one of them.\n\nThat is why we developed an easy-to-use wireless monitor/injector tool based on Software Defined Radio using GNU Radio and the well-known scapy framework.\n\nIn this talk, we will introduce this tool we developed for a wide range of wireless security assessments: the main goal of our tool is to provide effective penetration testing capabilities for security auditors with little to no knowledge of radio communications.",
    "plaintextTitle": "Bringing Software Defined Radio to the Penetration Testing Community",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Picod-Bringing-Software-Defined-Radio-To-The-Penetration-Testing-Community-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Picod-Bringing-Software-Defined-Radio-To-The-Penetration-Testing-Community.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=hZJDdz6kVJ4"
      }
    ],
    "youtubeDescription": "\"The large adoption of wireless devices goes further than WiFi (smartmeters, wearable devices, Internet of Things, etc.).\n\nThe developers of these new types of devices may not have a deep security background and it can lead to security and privacy issues when the solution is stressed.\n\nHowever, to assess those types of devices, the only solution would be a dedicated hardware component with an appropriate radio interface for each one of them.\n\nThat is why we developed an easy-to-use wireless monitor/injector tool based on Software Defined Radio using GNU Radio and the well-known scapy framework.\n\nIn this talk, we will introduce this tool we developed for a wide range of wireless security assessments: the main goal of our tool is to provide effective penetration testing capabilities for security auditors with little to no knowledge of radio communications.\""
  },
  "Stamos": {
    "author": "",
    "description": "Our profession is at a crossroads. The success of malicious actors such as phishers, spammers, malvertisers, and other criminals combined with revelations of pervasive government surveillance has changed the way users look at technology and has greatly increased our responsibility for building safe software.  The role of security has also evolved significantly for Internet companies. Companies that began with a mission to provide engaging or entertaining experiences now serve as a conduit for populist uprisings and free expression. That evolution comes with a cost, as the very same companies are now targets for top-tier intelligence agencies.  This talk will recap the speaker's first six months as the CISO of Yahoo. We will review the impact of the government surveillance revelations on how Yahoo designs and builds hundreds of products for across dozens of markets. The talk includes discussion of the challenges Yahoo faced in deploying several major security initiatives and useful lessons for both Internet companies and the security industry from our experience. The session will close with a discussion of the fundamental challenges that are left to be tackled for large Internet companies as well as possible solutions.",
    "plaintextTitle": "Building Safe Systems at Scale - Lessons from Six Months at Yahoo",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Stamos-Building-Safe-Systems-At-Scale-Lessons-From-Six-Months-At Yahoo.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=t7j4TNB1zik"
      }
    ],
    "youtubeDescription": "By Alex Stamos\n\nOur profession is at a crossroads. The success of malicious actors such as phishers, spammers, malvertisers, and other criminals combined with revelations of pervasive government surveillance has changed the way users look at technology and has greatly increased our responsibility for building safe software.\n\nThe role of security has also evolved significantly for Internet companies. Companies that began with a mission to provide engaging or entertaining experiences now serve as a conduit for populist uprisings and free expression. That evolution comes with a cost, as the very same companies are now targets for top-tier intelligence agencies.\n\nThis talk will recap the speaker's first six months as the CISO of Yahoo. We will review the impact of the government surveillance revelations on how Yahoo designs and builds hundreds of products for across dozens of markets. The talk includes discussion of the challenges Yahoo faced in deploying several major security initiatives and useful lessons for both Internet companies and the security industry from our experience. The session will close with a discussion of the fundamental challenges that are left to be tackled for large Internet companies as well as possible solutions."
  },
  "Johns": {
    "author": "Lekies",
    "description": "Cross-Site Scripting (XSS) is one of the most severe security vulnerabilities of the web. With the introduction of HTML5, the complexity of web applications is ever increasing and despite the existence of robust protection libraries, Cross-Site Scripting vulnerabilities are nowadays omnipresent on the Web. In order to protect end users from being exploited, browser vendors reacted to this serious threat by outfitting their browsers with client-side XSS filters. Unfortunately, as we had to notice, the currently provided protection is severely limited, leaving end-users vulnerable to exploits in the majority of cases. In this talk, we first present an analysis of Chrome's XSS Auditor, in which we discovered 17 flaws that enable us to bypass the Auditor's filtering capabilities. We will demonstrate the bypasses and present a tool to automatically generated XSS attacks utilizing the bypasses. Furthermore, we will report on a practical, empirical study of the Auditor's protection capabilities in which we ran our generated attacks against a set of several thousand DOM-based, zero-day XSS vulnerabilities in the Alexa Top 10.000. In our experiments, we were able to successfully bypass the XSS filter on the first try in over 80% of all vulnerable Web applications. Thus, it appears safe to state that the current client-side defenses against DOM-XSS are insufficient to protect end-users. However, unlike general XSS, in the DOM-based variant, all significant information is readily available. Hence, we present an alternative XSS filter design that reliably detects successful XSS attacks via client-side taint tracking in the JavaScript engine. Unlike the current approach, our filter does not rely on coarse approximation but on precise data flow information that allows us to robustly stop DOM-XSS for good.",
    "plaintextTitle": "Client-Side Protection Against DOM-Based XSS Done Right (tm)",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Johns-Client-Side-Protection-Against-DOM-Based-XSS-Done-Right-(tm).pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=u7wrKchcOGU"
      }
    ],
    "youtubeDescription": "by Martin Johns &  Sebastian Lekies &  Ben Stock\n\nCross-Site Scripting (XSS) is one of the most severe security vulnerabilities of the web. With the introduction of HTML5, the complexity of web applications is ever increasing and despite the existence of robust protection libraries, Cross-Site Scripting vulnerabilities are nowadays omnipresent on the Web. In order to protect end users from being exploited, browser vendors reacted to this serious threat by outfitting their browsers with client-side XSS filters. Unfortunately, as we had to notice, the currently provided protection is severely limited, leaving end-users vulnerable to exploits in the majority of cases. In this talk, we first present an analysis of Chrome's XSS Auditor, in which we discovered 17 flaws that enable us to bypass the Auditor's filtering capabilities. We will demonstrate the bypasses and present a tool to automatically generated XSS attacks utilizing the bypasses. Furthermore, we will report on a practical, empirical study of the Auditor's protection capabilities in which we ran our generated attacks against a set of several thousand DOM-based, zero-day XSS vulnerabilities in the Alexa Top 10.000. In our experiments, we were able to successfully bypass the XSS filter on the first try in over 80% of all vulnerable Web applications. Thus, it appears safe to state that the current client-side defenses against DOM-XSS are insufficient to protect end-users. However, unlike general XSS, in the DOM-based variant, all significant information is readily available. Hence, we present an alternative XSS filter design that reliably detects successful XSS attacks via client-side taint tracking in the JavaScript engine. Unlike the current approach, our filter does not rely on coarse approximation but on precise data flow information that allows us to robustly stop DOM-XSS for good."
  },
  "Nguyen-Anh": {
    "author": "",
    "description": "Disassembly framework is the fundamental component in all binary analysis, reversing, and exploit development. However, it is shameful that until the end of 2013, there was no single framework that can handle multi-architecture machine code with a friendly license. Especially, with the shift of the computer industry towards multi-platforms products, the lack of such a disassembly engine becomes serious and should be fixed as soon as possible. Unfortunately, at that time, there was no light at the end of the tunnel, as apparently nobody proposed anything to fix it.  We decided to step up and took the problem in our own hands to solve it once and for all. As a result, Capstone engine was born, and fixed all the outstanding issues. Our disassembly framework offers some unparalleled features, as highlighted below:  - Multiple architectures: ARM, ARM64 (ARMv8), Mips, PowerPC, Sparc, SystemZ X86. - Multiple platforms: Windows & *nix (with Mac OSX, iOS, Android, Linux, *BSD & Solaris confirmed). - Implemented in pure C, with bindings for Python, Ruby, C#, Java, NodeJS, GO, OCaml & Vala available. - Clean/simple/lightweight/intuitive architecture-neutral API. - Provide details on disassembled instruction (called \"decomposer\" by some others). - Provide some semantics of the disassembled instruction, such as list of implicit registers read & written. - Thread-safe by design. - Special support for embedding into firmware or OS kernel. - Distributed under the open source BSD license.  This talk introduces some existing disassembly frameworks, then goes into details of their design/implementation and explains their current issues. Next, we will present the architecture of Capstone and the challenges of designing and implementing it. The audience will understand the advantages of our engine and see why the future is assured, so that Capstone will keep getting better, stronger and become the ultimate disassembly engine of choice for the security community.  Last but not least, we will introduce some cutting-edge binary analysis frameworks built on top of Capstone, which open the whole new potentials for a range of areas like reversing, exploitation development, and malware detection.  Full source code of Capstone with new advanced features will be released at Black Hat USA 2014.",
    "plaintextTitle": "Capstone: Next Generation Disassembly Framework",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-NguyenAnh-Capstone-Next-Generation-Disassembly-Framework.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=cwyJm6b1F0k"
      }
    ],
    "youtubeDescription": "By Quynh Nguyen Anh\n\n\"Disassembly framework is the fundamental component in all binary analysis, reversing, and exploit development. However, it is shameful that until the end of 2013, there was no single framework that can handle multi-architecture machine code with a friendly license. Especially, with the shift of the computer industry towards multi-platforms products, the lack of such a disassembly engine becomes serious and should be fixed as soon as possible. Unfortunately, at that time, there was no light at the end of the tunnel, as apparently nobody proposed anything to fix it.\n\nWe decided to step up and took the problem in our own hands to solve it once and for all. As a result, Capstone engine was born, and fixed all the outstanding issues. Our disassembly framework offers some unparalleled features, as highlighted below:\n\n- Multiple architectures: ARM, ARM64 (ARMv8), Mips, PowerPC, Sparc, SystemZ  X86.\n- Multiple platforms: Windows & *nix (with Mac OSX, iOS, Android, Linux, *BSD & Solaris confirmed).\n- Implemented in pure C, with bindings for Python, Ruby, C#, Java, NodeJS, GO, OCaml & Vala available.\n- Clean/simple/lightweight/intuitive architecture-neutral API.\n- Provide details on disassembled instruction (called â€œdecomposerâ€\u009d by some others).\n- Provide some semantics of the disassembled instruction, such as list of implicit registers read & written.\n- Thread-safe by design.\n- Special support for embedding into firmware or OS kernel.\n- Distributed under the open source BSD license.\n\nThis talk introduces some existing disassembly frameworks, then goes into details of their design/implementation and explains their current issues. Next, we will present the architecture of Capstone and the challenges of designing and implementing it. The audience will understand the advantages of our engine and see why the future is assured, so that Capstone will keep getting better, stronger and become the ultimate disassembly engine of choice for the security community.\n\nLast but not least, we will introduce some cutting-edge binary analysis frameworks built on top of Capstone, which open the whole new potentials for a range of areas like reversing, exploitation development, and malware detection.\n\nFull source code of Capstone with new advanced features will be released at Black Hat USA 2014.\""
  },
  "Mahjoub": {
    "author": "Reuille",
    "description": "The Internet is constantly growing, providing a myriad of new services both legitimate and malicious. Criminals take advantage of the scalable, distributed, and rather easily accessible naming, hosting and routing infrastructures of the Internet. As a result, the battle against malware is raging on multiple fronts: the endpoint, the network perimeter, and the application layer. The need for innovative measures to gain ground against the enemy has never been greater. \n\nIn this talk, we will present a novel and effective multi-pronged strategy to catch malware at the DNS and IP level, as well as our unique 3D visualization engine. We will describe the detection systems we built, and share several successful war stories about hunting down malware domains and associated rogue IP space.\n\nAt the DNS level, we will describe original methods for tracking botnets, both fast flux and DGA-based. We use a combination of fast, light-weight graph clustering and DNS traffic analysis techniques and threat intelligence feeds to rapidly detect botnet domain families, identify new live CnC domains and IPs, and mitigate them.\n\nAt the IP level, classical reputation methods assign \"maliciousness\" scores to IPs, BGP prefixes, or ASNs by merely counting domains and IPs. Our system takes an unconventional approach that combines two opposite, yet complementary views and leads to more effective predictive detections.\n\nOn one hand, we abstract away from the ASN view. We build the AS graph and investigate its topology to uncover hotspots of malicious or suspicious activities and then scan our DNS database for new domains hosted on these malicious IP ranges. To confirm certain common patterns in the AS graph and isolate suspicious address space, we will demonstrate novel forensics and investigative methods based on the monitoring of BGP prefix announcements.\n\nOn the other hand, we drill down to a granularity finer than the BGP prefix. For this, we zero in on re-assigned IP ranges reserved by bad customers within large prefixes to host Exploit kit domains, browlock, and other attack types. We will present various techniques we devised to efficiently discover suspicious reserved ranges and sweep en masse for candidate suspicious IPs.\n\nOur system provides actionable intelligence and preemptively detects and blocks malicious IP infrastructures prior to, or immediately after some of them are used to wage malware campaigns, therefore decisively closing the detection gap. During this presentation, we will publicly share some of the tools we built to gather this predictive intelligence.\n\nThe discussion of these detection engines and \"war stories\" wouldn't be complete without a visualization engine that adequately displays the use cases and offers a graph navigation and investigation tool.\n\nTherefore, in this presentation, we will present and publicly release for the first time our own 3D visualization engine, demonstrating the full process which transforms raw data into stunning 3D visuals. We will also present different techniques used to build and render large graph datasets: Force Directed algorithms accelerated on the GPU using OpenCL, 3D rendering and navigation using OpenGL ES, and GLSL Shaders. Finally, we will present a few scripts and methods used to explore our large networks. Every concept is intended to detect and highlight precise features and will be presented with its corresponding visual representation related to malware detection use cases.",
    "plaintextTitle": "Catching Malware En Masse: DNS and IP Style",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mahjoub-Catching-Malware-En-Masse-DNS-And-IP-Style-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mahjoub-Catching-Malware-En-Masse-DNS-And-IP-Style.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KFx4lhxMi-M"
      }
    ],
    "youtubeDescription": "Slides here: https://defcon.org/images/defcon-22/dc-22-presentations/Mahjoub-Toonk-Reuille/DEFCON-22-Mahjoub-Reuille-Toonk-Catching-Malware-En-Masse-DNS-IP-Style-UPDATED.pdf\n\nAdditional Materials available here: https://defcon.org/images/defcon-22/dc-22-presentations/Mahjoub-Toonk-Reuille/DEFCON-22-Mahjoub-Reuille-Toonk-Catching-Malware-En-Masse-DNS-IP-Style-WP.pdf\n\nCatching Malware En Masse: DNS and IP Style \nDhia Mahjoub SENIOR SECURITY RESEARCHER, OPENDNS \nThibault Reuille SECURITY RESEARCHER, OPENDNS INC \nAndree Toonk MANAGER OF NETWORK ENGINEERING, OPENDNS \nThe Internet is constantly growing, providing a myriad of new services both legitimate and malicious. Criminals take advantage of the scalable, distributed, and rather easily accessible naming, hosting and routing infrastructures of the Internet. As a result, the battle against malware is raging on multiple fronts: the endpoint, the network perimeter, and the application layer. The need for innovative measures to gain ground against the enemy has never been greater.\n\nIn this talk, we will present a novel and effective multi-pronged strategy to catch malware at the DNS and IP level, as well as our unique 3D visualization engine.\n\nWe will describe the detection systems we built, and share several successful war stories about hunting down malware domains and associated rogue IP space.\n\nAt the DNS level, we will describe original methods for tracking botnets, both fast flux and DGA-based. We use a combination of fast, light-weight graph clustering and DNS traffic analysis techniques and threat intelligence feeds to rapidly detect botnet domain families, identify new live CnC domains and IPs, and mitigate them.\n\nAt the IP level, classical reputation methods assign “maliciousness” scores to IPs, BGP prefixes, or ASNs by merely counting domains and IPs. Our system takes an unconventional approach that combines two opposite, yet complementary views and leads to more effective predictive detections.\n\n(1) On one hand, we abstract away from the ASN view. We build the AS graph and investigate its topology to uncover hotspots of malicious or suspicious activities and then scan our DNS database for new domains hosted on these malicious IP ranges. To confirm certain common patterns in the AS graph and isolate suspicious address space, we will demonstrate novel forensics and investigative methods based on the monitoring of BGP prefix announcements.\n\n(2) On the other hand, we drill down to a granularity finer than the BGP prefix. For this, we zero in on re-assigned IP ranges reserved by bad customers within large prefixes to host Exploit kit domains, browlock, and other attack types. We will present various techniques we devised to efficiently discover suspicious smaller ranges and sweep en masse for candidate suspicious IPs.\n\nOur system provides actionable intelligence and preemptively detects and blocks malicious IP infrastructures prior to, or immediately after some of them are used to wage malware campaigns, therefore decisively closing the detection gap. During this presentation, we will publicly share some of the tools we built to gather this predictive intelligence.\n\nThe discussion of these detection engines and “war stories” wouldn’t be complete without a visualization engine that adequately displays the use cases and offers a graph navigation and investigation tool.\n\nTherefore, in this presentation, we will present and publicly release for the first time our own 3D visualization engine, demonstrating the full process which transforms raw data into stunning 3D visuals. We will also present different techniques used to build and render large graph datasets: Force Directed algorithms accelerated on the GPU using OpenCL, 3D rendering and navigation using OpenGL ES, and GLSL Shaders. Finally, we will present a few scripts and methods used to explore our large networks. Every concept is intended to detect and highlight precise features and will be presented with its corresponding visual representation related to malware detection use cases."
  },
  "Solnik": {
    "author": "",
    "description": "Since the introduction of the smart phone, the issue of control has entered a new paradigm. Manufacturers and enterprises have claimed control over not just how your phone operates, but the software that is allowed to run on it. However, few people know that service providers have a hidden and pervasive level of control over your device. These hidden controls can be found in over 2 billion cellular devices worldwide. Organizations have been quietly deploying these controls in smart phones, feature phones, basebands, laptops, embedded M2M devices, and even certain cars. Someone with knowledge of these controls and the right techniques could potentially leverage them for cellular exploitation on a global scale.\n\nWe've reverse engineered embedded baseband and application space code. We've torn apart the Over-the-Air communications and implemented our own code to speak the relevant protocols. Layer by layer, we've deconstructed these hidden controls to learn how they work. While performing this work, we've unearthed subtle flaws in how the communication is handled and implemented. After understanding these flaws, we've written proof-of-concept exploits to demonstrate the true risk this software presents to the end user.\n\nIn this presentation, we will discuss and disclose how Over-the-Air code execution can be obtained on the major cellular platforms and networks (GSM/CDMA/LTE). Including but not limited to Android, iOS, Blackberry, and embedded M2M devices. You will come away from this talk armed with detailed insight into these hidden control mechanisms as well as the tools to help assess and protect from the new threats this hidden attack surface presents. These tools will include the ability to dynamically test proprietary system applications and simulate different aspects of a cellular environment.",
    "plaintextTitle": "Cellular Exploitation on a Global Scale: The Rise and Fall of the Control Protocol",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=wuO7yWkscP4"
      }
    ],
    "youtubeDescription": "\"Since the introduction of the smart phone, the issue of control has entered a new paradigm. Manufacturers and enterprises have claimed control over not just how your phone operates, but the software that is allowed to run on it. However, few people know that Service Providers have a hidden and pervasive level of control over your device. These hidden controls can be found in over 2 billion cellular devices worldwide. Organizations have been quietly deploying these controls in smart phones, feature phones, basebands, laptops, embedded M2M devices, and even certain cars. Someone with knowledge of these controls and the right techniques could potentially leverage them for cellular exploitation on a global scale.\n\nWe've reverse engineered embedded baseband and application space code. We've torn apart the Over-the-Air communications and implemented our own code to speak the relevant protocols. Layer by layer, we've deconstructed these hidden controls to learn how they work. While performing this work we've unearthed subtle flaws in how the communication is handled and implemented. After understanding these flaws, we've written proof-of-concept exploits to demonstrate the true risk this software presents to the end user.\n\nIn this presentation, we will discuss and disclose how Over-the-Air code execution can be obtained on the major cellular platforms and networks (GSM/CDMA/LTE). Including but not limited to Android, iOS, Blackberry, and Embedded M2M devices. You will come away from this talk armed with detailed insight into these hidden control mechanisms. We will also release open source tools to help assess and protect from the new threats this hidden attack surface presents. These tools will include the ability to dynamically test proprietary system applications and simulate different aspects of a cellular environment.\""
  },
  "Ragan": {
    "author": "Salazar",
    "description": "What happens when computer criminals start using friendly cloud services for malicious activities? In this presentation, we explore how to (ab)use free trials to get access to vast amounts of computing power, storage, and pre-made hacking environments. Oh! Also, we violate the hell out of some terms of service.\n\nWe explore just how easy it is to generate massive amounts of unique email addresses; in order to register free trial accounts, deploy code, and distribute commands (C2). We managed to build this cloud-based botnet all for the low cost of $0 and semi-legally. This botnet doesn't get flagged as malware, blocked by web filters, or get taken over. This is the stuff of nightmares!\n\nWhile riding on the fluffy Kumobot (kumo means cloud in Japanese), it was discovered that we were not the only ones doing this! With the rise of crypto currency we now face the impending rise of botnets that mine for digital gold on someone else's systems with someone else's dime footing the electric bill. Through our efforts in building a cloud-based botnet we built enough tools to share a framework for penetration testers and security researchers. The anti-anti-automation framework will show those tasked with defense exactly what it looks like when their free trial gets assaulted.",
    "plaintextTitle": "CloudBots: Harvesting Crypto Coins Like a Botnet Farmer",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=cpUtYq4SJKA"
      }
    ],
    "youtubeDescription": "06 August 2014 - Black Hat USA 2014\nRob Ragan & Oscar Salazar - Bishop Fox\nhttp://www.bishopfox.com\n\nhttps://www.blackhat.com/us-14/briefings.html#cloudbots-harvesting-crypto-coins-like-a-botnet-farmer\n\nWhat happens when computer criminals start using friendly cloud services for malicious activities? In this presentation, we explore how to (ab)use free trials to get access to vast amounts of computing power, storage, and pre-made hacking environments. Oh! Also, we violate the hell out of some terms of service.\n\nWe explore just how easy it is to generate massive amounts of unique email addresses; in order to register free trial accounts, deploy code, and distribute commands (C2). We managed to build this cloud-based botnet all for the low cost of $0 and semi-legally. This botnet doesn't get flagged as malware, blocked by web filters, or get taken over. This is the stuff of nightmares!\n\nWhile riding on the fluffy Kumobot (kumo means cloud in Japanese), it was discovered that we were not the only ones doing this! With the rise of crypto currency we now face the impending rise of botnets that mine for digital gold on someone else's systems with someone else's dime footing the electric bill. Through our efforts in building a cloud-based botnet we built enough tools to share a framework for penetration testers and security researchers. The anti-anti-automation framework will show those tasked with defense exactly what it looks like when their free trial gets assaulted.\n\nDISCLAIMER: This video is intended for pentesting training purposes only."
  },
  "Kamluk": {
    "author": "Belov",
    "description": "This presentation includes a live demonstration of security flaws in modern anti-theft technologies that reside in firmware and PC BIOS of most popular laptops and some desktop computers. While the general idea behind anti-theft technology is good, improper implementation can render it useless as well as harmful, or even extremely dangerous. We have found several proofs of unauthorized activations of Absolute Computrace anti-theft software on our private and corporate computers and discovered that this software can be used as an advanced removal-resistant BIOS-based backdoor.\n\nWhile physical security and a lack of proper code validation have already been shown in prior research presented at Black Hat 2009 by Anibal Sacco and Alfredo Ortega from Core Labs, in our research we demonstrate network security flaws. Our demo will show how to own remote hosts running Absolute Computrace. And there is a cool extra surprise for those who have already heard about Computrace network issues.",
    "plaintextTitle": "Computrace Backdoor Revisited",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Kamluk-Computrace-Backdoor-Revisited-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Kamlyuk-Kamluk-Computrace-Backdoor-Revisited.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=AKmNf-JmjKQ"
      }
    ],
    "youtubeDescription": "By Vitaly Kamluk, Sergey Belov, and Anibal Sacco \n\n\"This presentation includes a live demonstration of security flaws in modern anti-theft technologies that reside in firmware and PC BIOS of most popular laptops and some desktop computers. While the general idea behind anti-theft technology is good, improper implementation can render it useless as well as harmful, or even extremely dangerous. We have found several proofs of unauthorized activations of Absolute Computrace anti-theft software on our private and corporate computers and discovered that this software can be used as an advanced removal-resistant BIOS-based backdoor.\n\nWhile physical security and a lack of proper code validation have already been shown in prior research presented at Black Hat 2009 by Anibal Sacco and Alfredo Ortega from Core Labs, in our research we demonstrate network security flaws. Our demo will show how to own remote hosts running Absolute Computrace. And there is a cool extra surprise for those who have already heard about Computrace network issues.\""
  },
  "Cohen": {
    "author": "",
    "description": "The ability to automatically discover security vulnerabilities has been coveted since Martin Bishop's team found the black box in the 1992 film \"Sneakers.\"  Automatic exploitation generation research coming out of academia demonstrates that we're getting close and DARPA's Cyber Grand Challenge announcement indicates that we want it bad. Behind the facade of automatic program analysis is a lot of arduous computer theory and discrete math. But automatic analysis is supposed to make vulnerability research easier not harder!\n\nThis talk will begin with a brief history of program analysis; how manual analysis techniques slowly turned into automatic ones and how we started automatically discovering vulnerabilities and reasoning about code.  Next, I'll demonstrate the current landscape of program analysis; how you can use existing program analysis tools and techniques to automatically find vulnerabilities in almost anything.  Finally, I'll discuss the state-of-the-art of program analysis; how minor changes to existing projects and how small scripts (less than 100 lines) for existing libraries can yield world-class vulnerabilities.  The talk will include several practical code examples and demos and will be accompanied by online reference material.",
    "plaintextTitle": "Contemporary Automatic Program Analysis",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Cohen-Comtemporary-Automatic-Program-Analysis.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=P0nHId1umvY"
      }
    ],
    "youtubeDescription": "By Julian Cohen\n\n\"The ability to automatically discover security vulnerabilities has been coveted since Martin Bishop's team found the black box in the 1992 film \"\"Sneakers.\"\"  Automatic exploitation generation research coming out of academia demonstrates that we're getting close and DARPA's Cyber Grand Challenge announcement indicates that we want it bad. Behind the facade of automatic program analysis is a lot of arduous computer theory and discrete math. But automatic analysis is supposed to make vulnerability research easier not harder!\n\nThis talk will begin with a brief history of program analysis; how manual analysis techniques slowly turned into automatic ones and how we started automatically discovering vulnerabilities and reasoning about code.  Next, I'll demonstrate the current landscape of program analysis; how you can use existing program analysis tools and techniques to automatically find vulnerabilities in almost anything.  Finally, I'll discuss the state-of-the-art of program analysis; how minor changes to existing projects and how small scripts (less than 100 lines) for existing libraries can yield world-class vulnerabilities.  The talk will include several practical code examples and demos and will be accompanied by online reference material.\""
  },
  "Muttik": {
    "author": "Nayshtut",
    "description": "Often a solution from one area helps solve problems in a completely different field. In this session, we will show you how Intel CPU improvements designed to speed up computations have boosted security by creating a flexible memory monitor capable of detecting and reversing unauthorized memory changes. Modern CPUs support the detection and resolution of memory conflicts between multiple threads that access the same data: This is called the Transactional Synchronisation Extension (TSX) in modern Intel CPUs. Hardware-supported TSX technology (represented by XBEGIN and XEND instructions) helps avoid expensive software locks. Instead, TSX can automatically detect read/write memory conflicts and roll back corresponding RAM changes.We will show how TSX capabilities can be used for security. A special security thread reads protected RAM cells (data or code) in TSX mode; any other (potentially malicious) thread writing to the same cells will cause the CPU to abort the transaction. The abort context can be attributed to the address of the unauthorized memory write and to the instruction that caused it.We will discuss the following practical security scenarios: - Detecting unwanted memory accesses by suspicious threads and rolling them back (for example, in a HIPS system to verify if the code is malicious)- Detecting the execution of suspected shell code (with the rollback of all RAM changes the code performed)- Detecting memory changes with TSX but without the rollback capability. This could be highly useful for kernel and hypervisor self-protection (such as Microsoft PatchGuard).We will show a demo of TSX detecting malicious RAM modifications. There are three leading security benefits of using TSX to monitor protected memory areas:- Fully flexible via read accesses made by the security thread - Operates in hardware, leading to minimal overhead - Provides automatic rollback of memory changes (which is prohibitively expensive in software) We will also discuss potential problems - for example, a DoS attack on TSX to exhaust the Level 1 cache.",
    "plaintextTitle": "Creating a Spider Goat: Using Transactional Memory Support for Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Muttik-Creating-A-Spider-Goat-Using-Transactional-Memory-Support-For-Securitypdf.pdf",
        "type": "Presentation"
      }
    ]
  },
  "Tarakanov": {
    "author": "",
    "description": "Each new version of Windows OS Microsoft enhances security by adding security mitigation mechanisms - Kernel land vulnerabilities are getting more and more valuable these days. For example, the easy way to escape from a sandbox is by using a kernel vulnerability. That's why Microsoft struggles to enhance security of Windows kernel.\n\nKernel pool allocator plays a significant role in security of whole kernel. Since Windows 7, Microsoft started to enhance the security of the Windows kernel pool allocator. In Windows 8, Microsoft has eliminated almost all reliable (previously published) techniques of exploiting kernel pool corruptions.\n\nThen Microsoft eliminated \"0xBAD0B0B0\" technique in Windows 8.1, and there is no easy technique to exploit Pool Overflows on Windows 8.1 at the moment.\n\nThe brand new exploitation technique uses some tricks to convert pool overflow in several primitives:\n\n1. Arbitrary memory read/write\n2. Hijack of execution flow\n3. Adjacent read/write\n\nThis talk presents a new technique of exploiting pool overflows, with very interesting effect: elevating privileges without executing any kernel shellcode or using ROP.",
    "plaintextTitle": "Data-Only Pwning Microsoft Windows Kernel: Exploitation of Kernel Pool Overflows on Microsoft Windows 8.1",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Tarakanov-Data-Only-Pwning-Microsoft-Windows-Kernel-Exploitation-Of-Kernel-Pool-Overflows-On-Microsoft-Windows-8.1.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=FxZoAupttMI"
      }
    ],
    "youtubeDescription": "By Nikita Tarakanov\n\n\"Each new version of Windows OS Microsoft enhances security by adding security mitigation mechanisms - Kernel land vulnerabilities are getting more and more valuable these days. For example, the easy way to escape from a sandbox is by using a kernel vulnerability. That's why Microsoft struggles to enhance security of Windows kernel.\n\nKernel pool allocator plays a significant role in security of whole kernel. Since Windows 7, Microsoft started to enhance the security of the Windows kernel pool allocator. In Windows 8, Microsoft has eliminated almost all reliable (previously published) techniques of exploiting kernel pool corruptions.\n\nThen Microsoft eliminated \"\"0xBAD0B0B0\"\" technique in Windows 8.1, and there is no easy technique to exploit Pool Overflows on Windows 8.1 at the moment.\n\nThe brand new exploitation technique uses some tricks to convert pool overflow in several primitives:\n\n1. Arbitrary memory read/write\n2. Hijack of execution flow\n3. Adjacent read/write\n\nThis talk presents a new technique of exploiting pool overflows, with very interesting effect: elevating privileges without executing any kernel shellcode or using ROP.\""
  },
  "Forshaw": {
    "author": "",
    "description": "In June 2013, Microsoft started the first of their new bug-bounty programs, focusing on finding vulnerabilities in IE11 on the upcoming Windows 8.1 OS. Rather than spending my time fuzzing for RCEs, I focused on pure logic bugs and the best place to find them was in the sandbox implementation. As IE11 defaults to using Microsoft's new Enhanced Protected Mode (EPM) sandbox that repurposes Windows 8's App Container mechanism to more heavily restrict access to securable resources, it would seem to be a tough challenge, but it turned out not to be the case.   This workshop will contain a deep-dive into the 4 sandbox escapes I discovered during the 30-day bug bounty period, some which have been present since Vista and IE7. I'll run through the process I undertook to find these vulnerabilities, giving time to go in-depth on how to investigate the IE11 sandbox, run your own code and analyze the attack surface. Sample source code for all issues will be provided for use to allow you to test the issues out yourself.  In order to participate in the workshop, an installation of Windows 8.1 RTM will be required along with common tools such as Visual Studio 2013 and IDA Pro to analyze and develop the sandbox escape examples.",
    "plaintextTitle": "Digging for IE11 Sandbox Escapes",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Forshaw-Digging-For_IE11-Sandbox-Escapes.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Forshaw-Digging-For-IE11-Sandbox-Escapes-Tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=q9dnYno_Moc"
      }
    ],
    "youtubeDescription": "By James Forshaw\n\n\"In June 2013, Microsoft started the first of their new bug-bounty programs, focusing on finding vulnerabilities in IE11 on the upcoming Windows 8.1 OS. Rather than spending my time fuzzing for RCEs, I instead focused on pure logic bugs and the best place to find them was in the sandbox implementation. As IE11 defaults to using Microsoft's new Enhanced Protected Mode (EPM) sandbox that repurposes Windows 8's App Container mechanism to more heavily restrict access to securable resources, it would seem to be a tough challenge, but it turned out not to be the case. \n\nThis workshop will contain a deep-dive into the 4 sandbox escapes I discovered during the 30-day bug bounty period, some which have been present since Vista and IE7. I'll run through the process I undertook to find these vulnerabilities, giving time to go in-depth on how to investigate the IE11 sandbox, run your own code and analyze the attack surface. Sample source code for all issues will be provided for use to allow you to test the issues out yourself.\n\nIn order to participate in the workshop, an installation of Windows 8.1 RTM will be required along with common tools such as Visual Studio 2013 and IDA Pro to analyze and develop the sandbox escape examples.\""
  },
  "Hirvonen": {
    "author": "",
    "description": "Many of the latest Flash exploits seen in the wild (CVE-2013-5329, CVE-2013-5330, CVE-2014-0497, etc) are protected with commercial tools like DoSWF and secureSWF. Malicious Flash redirectors are also utilizing the same tools. Static analysis of protected Flash objects is slow and frustrating: you need to identify the encryption algorithm and the key, implement the decryption routine, and extract the encrypted data from the Flash object. Code obfuscation techniques can also be a real pain in the *** when static analysis is the only option. If only there were a decent tool for dynamic analysis Flash files...\n\nIn this presentation, we will release and demonstrate the first tool that enables dynamic analysis of malicious Flash files.  There is no need for decompilation - the tool utilizes binary instrumentation to log the interesting method calls. This approach not only significantly speeds up the analysis of individual files but also enables detailed automatic analysis of malicious Flash files.",
    "plaintextTitle": "Dynamic Flash Instrumentation for Fun and Profit",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Hirvonen-Dynamic-Flash-Instrumentation-For-Fun-And-Profit.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=sVyVCcuPBpY"
      }
    ],
    "youtubeDescription": "By Timo Hirvonen\n\n\"Many of the latest Flash exploits seen in the wild (CVE-2013-5329, CVE-2013-5330, CVE-2014-0497, etc) are protected with commercial tools like DoSWF and secureSWF. Malicious Flash redirectors are also utilizing the same tools. Static analysis of protected Flash objects is slow and frustrating: you need to identify the encryption algorithm and the key, implement the decryption routine, and extract the encrypted data from the Flash object. Code obfuscation techniques can also be a real pain in the *** when static analysis is the only option. If only there were a decent tool for dynamic analysis Flash files...\n\nIn this presentation, we will release and demonstrate the first tool that enables dynamic analysis of malicious Flash files.  There is no need for decompilation - the tool utilizes binary instrumentation to log the interesting method calls. This approach not only significantly speeds up the analysis of individual files but also enables detailed automatic analysis of malicious Flash files.\""
  },
  "Price": {
    "author": "Kouns",
    "description": "Many developers today are turning to well established third-party libraries to speed the development process and realize quality improvements over creating an in-house proprietary font parsing or image rendering library from the ground up. Efficiency comes at a cost though: a single application may have as many as 100 different third party libraries implemented. The result is that third-party and open source libraries have the ability to spread a single vulnerability across multiple products, exposing enterprises and requiring software vendors and IT organizations to patch the same vulnerability repeatedly. How big of a problem is this? What libraries are the biggest offenders for spreading pestilence? And what can be done to minimize this problem? This presentation will dive deep into vulnerability data and explore the source and spread of these vulnerabilities through products, as well as actions the security research community and enterprise customers can take to address this problem.",
    "plaintextTitle": "Epidemiology of Software Vulnerabilities: A Study of Attack Surface Spread",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Price-Epidemiology-Of-Software-Vulnerabilities-A-Study-Of-Attack-Surface-Spread.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=l5otkkU5meE"
      }
    ],
    "youtubeDescription": "By Kymberlee Price and Jake Kouns\n\nMany developers today are turning to well established third-party libraries to speed the development process and realize quality improvements over creating an in-house proprietary font parsing or image rendering library from the ground up. Efficiency comes at a cost though: a single application may have as many as 100 different third party libraries implemented. The result is that third-party and open source libraries have the ability to spread a single vulnerability across multiple products, exposing enterprises and requiring software vendors and IT organizations to patch the same vulnerability repeatedly. How big of a problem is this? What libraries are the biggest offenders for spreading pestilence? And what can be done to minimize this problem? This presentation will dive deep into vulnerability data and explore the source and spread of these vulnerabilities through products, as well as actions the security research community and enterprise customers can take to address this problem."
  },
  "Atlasis": {
    "author": "Salazar",
    "description": "Multicast Listener Discovery (MLD) and its successor, MLDv2, is a protocol of the IPv6 suite used by IPv6 routers for discovering multicast listeners on a directly attached link, much like IGMP is used in IPv4. Multicasting is a key feature of IPv6 which is supposed to be used even by the Neighbor Discovery process. Most modern Operating Systems (OS), like Windows, Linux, and FreeBSD, not only come per-configured with IPv6 enabled, but they also start-up by sending MLDv2 traffic, which is repeated periodically. Despite of the out-of-the-box usage of MLDv2, it is one of the IPv6 protocols that have not be studied yet to a suitable extent, especially as far as its potential security implications are concerned. These ones can vary from network scanning and OS fingerprinting on the local-link, to amplified DoS attacks and to consumption of resources at routers. To this end, we will discuss potential security issues related with the design of MLD and we will examine how they can be exploited by attackers. A live demo will show how such an attack can take place by using MLD messages in order to disrupt multicasting communication. Finally, specific security mitigation techniques will be proposed to defend against them, which will allow us to to secure IPv6 networks to the best possible extend in the emerging IPv6 era.",
    "plaintextTitle": "MLD Considered Harmful - Breaking Another IPv6 Subprotocol",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Atlasis-MLD-Considered-Harmful-Breaking-Another-IPV6-Subprotocol.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=AXS5vpJK46g"
      }
    ],
    "youtubeDescription": "by Antonios Atlasis &  Jayson Salazar &  Rafael Schaefer\n\nMulticast Listener Discovery (MLD) and its successor, MLDv2, is a protocol of the IPv6 suite used by IPv6 routers for discovering multicast listeners on a directly attached link, much like IGMP is used in IPv4. Multicasting is a key feature of IPv6 which is supposed to be used even by the Neighbor Discovery process. Most modern Operating Systems (OS), like Windows, Linux, and FreeBSD, not only come per-configured with IPv6 enabled, but they also start-up by sending MLDv2 traffic, which is repeated periodically. Despite of the out-of-the-box usage of MLDv2, it is one of the IPv6 protocols that have not be studied yet to a suitable extent, especially as far as its potential security implications are concerned. These ones can vary from network scanning and OS fingerprinting on the local-link, to amplified DoS attacks and to consumption of resources at routers. To this end, we will discuss potential security issues related with the design of MLD and we will examine how they can be exploited by attackers. A live demo will show how such an attack can take place by using MLD messages in order to disrupt multicasting communication. Finally, specific security mitigation techniques will be proposed to defend against them, which will allow us to to secure IPv6 networks to the best possible extend in the emerging IPv6 era."
  },
  "Jang": {
    "author": "Wang",
    "description": "Patching all vulnerabilities for a modern, complex software system (i.e., Windows, iOS) is often difficult due to the volume of bugs and response time requirements. Instead, software vendors usually devise quick workarounds to mitigate the exploitation of a given vulnerability. However, those patches are sometimes incomplete, and attackers can utilize different attack vectors to re-exploit a patched vulnerability. iOS is no exception.\n\nIn this presentation, we will disclose our process for jailbreaking the latest version of iOS (version 7.1.1), running on any iOS device including the iPhone 5s as well as older iPads and iPods. We start by finding new ways to exploit vulnerabilities with incomplete patches. We then use these vulnerabilities to discover new avenues of attack. Finally, we chain together these vulnerabilities and new attacks to run unsigned code out of the sandbox with root permissions and to defeat mandatory code signing. We include a detailed disclosure of several new vulnerabilities and the exploit techniques that we developed.",
    "plaintextTitle": "Exploiting Unpatched iOS Vulnerabilities for Fun and Profit",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=uh8neEmxC5Q"
      }
    ],
    "youtubeDescription": "By Yeongjin Jang, Tielei Wang, Byoungyoung Lee, and Bill Lau\n\n\"Patching all vulnerabilities for a modern, complex software system (i.e., Windows, iOS) is often difficult due to the volume of bugs and response time requirements. Instead, software vendors usually devise quick workarounds to mitigate the exploitation of a given vulnerability. However, those patches are sometimes incomplete, and attackers can utilize different attack vectors to re-exploit a patched vulnerability. iOS is no exception.\n\nIn this presentation, we will disclose our process for jailbreaking the latest version of iOS (version 7.1.1), running on any iOS device including the iPhone 5s as well as older iPads and iPods. We start by finding new ways to exploit vulnerabilities with incomplete patches. We then use these vulnerabilities to discover new avenues of attack. Finally, we chain together these vulnerabilities and new attacks to run unsigned code out of the sandbox with root permissions and to defeat mandatory code signing. We include a detailed disclosure of several new vulnerabilities and the exploit techniques that we developed.\""
  },
  "Haukli": {
    "author": "",
    "description": "Stealth and persistency are invaluable assets to an intruder. You cannot defend against what you cannot see. This talk discusses techniques to counter attempts at subverting modern security features, and regain control of compromised machines, by drilling down deep into internal structures of the operating system to battle the threat of bootkits.\n\nThe security features added in modern 64-bit versions of Windows raise the bar for kernel mode rootkits. Loading unsigned drivers, which is what most rootkits will attempt to do, is denied by Driver Signature Enforcement. PatchGuard protects the integrity of the running kernel, preventing them from modifying critical structures and setting up hooks. Although time has shown that these security measures are not perfect, and some may in fact be bypassed while actively running, an alternative approach is to subvert the system by running code before any of the security features kick in.\n\nSecure Boot has been introduced to protect the integrity of the boot process. However, the model only works when booting from signed firmware (UEFI). Legacy BIOS systems are still vulnerable as the Master Boot Record, Volume Boot Record, and the bootstrap code all reside in unsigned sectors on disk, with no security features in place to protect them from modification.\n\nUsing a combination of low-level anti-rootkit techniques, emulation, and heuristic detection logic, we have devised a way to detect anomalies in the boot sectors for the purpose of detecting the presence of bootkits.",
    "plaintextTitle": "Exposing Bootkits with BIOS Emulation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Haukli-Exposing-Bootkits-With-BIOS-Emulation-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Haukli-Exposing-Bootkits-With-BIOS-Emulation.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=siMj4bFx5nI"
      }
    ],
    "youtubeDescription": "By Lars Haukli\n\n\"Stealth and persistency are invaluable assets to an intruder. You cannot defend against what you cannot see. This talk discusses techniques to counter attempts at subverting modern security features, and regain control of compromised machines, by drilling down deep into internal structures of the operating system to battle the threat of bootkits.\n\nThe security features added in modern 64-bit versions of Windows raise the bar for kernel mode rootkits. Loading unsigned drivers, which is what most rootkits will attempt to do, is denied by Driver Signature Enforcement. PatchGuard protects the integrity of the running kernel, preventing them from modifying critical structures and setting up hooks. Although time has shown that these security measures are not perfect, and some may in fact be bypassed while actively running, an alternative approach is to subvert the system by running code before any of the security features kick in.\n\nSecure Boot has been introduced to protect the integrity of the boot process. However, the model only works when booting from signed firmware (UEFI). Legacy BIOS systems are still vulnerable as the Master Boot Record, Volume Boot Record, and the bootstrap code all reside in unsigned sectors on disk, with no security features in place to protect them from modification.\n\nUsing a combination of low-level anti-rootkit techniques, emulation, and heuristic detection logic, we have devised a way to detect anomalies in the boot sectors for the purpose of detecting the presence of bootkits.\""
  },
  "Kallenberg": {
    "author": "Kovah",
    "description": "The UEFI specification has more tightly coupled the bonds of the operating system and the platform firmware by providing the well-defined \"runtime services\" interface between the operating system and the firmware.\n\nThis interface is more expansive than the interface that existed in the days of conventional BIOS, which has inadvertently increased the attack surface against the platform firmware. Furthermore, Windows 8 has introduced APIs that allow accessing this UEFI interface from a userland process. Vulnerabilities in this interface can potentially allow a userland process to escalate its privileges from \"ring 3\" all the way up to that of the platform firmware, which includes permanently attaining control of the very-powerful System Management Mode (SMM).\n\nThis talk will disclose two of these vulnerabilities that were discovered in the Intel provided UEFI reference implementation, and detail the unusual techniques needed to successfully exploit them.",
    "plaintextTitle": "Extreme Privilege Escalation on Windows 8/UEFI Systems",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Kallenberg-Extreme-Privilege-Escalation-On-Windows8-UEFI-Systems-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Kallenberg-Extreme-Privilege-Escalation-On-Windows8-UEFI-Systems.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=d6VCri6sPnY"
      }
    ],
    "youtubeDescription": "Slides Here: https://defcon.org/images/defcon-22/dc-22-presentations/Kallenberg/DEFCON-22-Corey-Kallenberg-Extreme-Privilage-Escalation.pdf\n\nAdditional Materials available here: https://defcon.org/images/defcon-22/dc-22-presentations/Kallenberg/DEFCON-22-Corey-Kallenberg-Extreme-Privilage-Escalation-WP-UPDATED.pdf\n\nExtreme Privilege Escalation On Windows 8/UEFI Systems \nCorey Kallenberg MITRE \nXeno Kovah MITRE \nIt has come to light that state actors install implants in the BIOS. Let no one ever again question whether BIOS malware is practical or present in the wild. However, in practice attackers can install such implants without ever having physical access to the box. Exploits against the BIOS can allow an attacker to inject arbitrary code into the platform firmware. This talk will describe two such exploits we developed against the latest UEFI firmware.\n\nThe UEFI specification has more tightly coupled the bonds of the operating system and the platform firmware by providing the well-defined \"runtime services\" interface between the OS and the firmware. This interface is more expansive than the interface that existed in the days of conventional BIOS, which has inadvertently increased the attack surface against the platform firmware. Furthermore, Windows 8 has introduced APIs that allow accessing this UEFI interface from a userland process. Vulnerabilities in this interface can potentially allow a userland process to escalate its privileges from \"ring 3\" all the way up to that of the platform firmware, which includes permanently attaining control of the very-powerful System Management Mode (SMM).\n\nThis talk will disclose two vulnerabilities that were discovered in the Intel provided UEFI reference implementation, and detail the unusual techniques needed to successfully exploit them.\n\nCorey Kallenberg is a security researcher for The MITRE Corporation who has spent several years investigating operating system and firmware security on Intel computers. In 2012 he coauthored work presented at DEF CON and IEEE S&P on using timing based attestation to detect Windows kernel hooks. In 2013 he helped discover critical problems with current implementations of the Trusted Computing Group's \"Static Root of Trust for Measurement\" and co-presented this work at NoSuchCon and Blackhat USA. Later, he discovered several vulnerabilities which allowed bypassing of \"signed BIOS enforcement\" on a number of systems, allowing an attacker to make malicious modifications to the platform firmware. These attacks were presented at EkoParty, HITB, and PacSec. Recently, Corey has presented attacks against the UEFI \"Secure Boot\" feature. Corey is currently continuing to research the security of UEFI and the Intel architecture.\n\ntwitter: @coreykal\n\nXeno Kovah is a Lead InfoSec Engineer at The MITRE Corporation, a non-profit company that runs 6 federally funded research and development centers (FFRDCs) as well as manages CVE. He is the team lead for the BIOS Analysis for Detection of Advanced System Subversion project. On the predecessor project, Checkmate, he investigated kernel/userspace memory integrity verification & timing-based attestation. Both projects have a special emphasis on how to make it so that the measurement agent can't just be made to lie by an attacker. Xeno is also the founder and leading contributor to OpenSecurityTraining.info.\n\ntwitter: @xenokovah"
  },
  "Mulliner": {
    "author": "",
    "description": "Graphical user interfaces (GUIs) contain a number of common visual elements or widgets such as labels, text fields, buttons, and lists. GUIs typically provide the ability to set attributes on these widgets to control their visibility, enabled status, and whether they are writable. While these attributes are extremely useful to provide visual cues to users to guide them through an application's GUI, they can also be misused for purposes they were not intended. In particular, in the context of GUI-based applications that include multiple privilege levels within the application, GUI element attributes are often misused as a mechanism for enforcing access control policies.  In this session, we introduce GEMs, or instances of GUI element misuse, as a novel class of access control vulnerabilities in GUI-based applications. We present a classification of different GEMs that can arise through misuse of widget attributes, and describe a general algorithm for identifying and confirming the presence of GEMs in vulnerable applications. We then present GEM Miner, an implementation of our GEM analysis for the Windows platform. We evaluate GEM Miner using real-world GUI-based applications that target the small business and enterprise markets, and demonstrate the efficacy of our analysis by finding numerous previously unknown access control vulnerabilities in these applications.",
    "plaintextTitle": "Finding and Exploiting Access Control Vulnerabilities in Graphical User Interfaces",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mulliner-Finding-And-Exploiting-Access-Control-Vulnerabilities-In-Graphical-User-Interfacess-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mulliner-Finding-And-Exploiting-Access-Control-Vulnerabilities-In-Graphical-User-Interfaces.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mulliner-Finding-And-Exploiting-Access-Control-Vulnerabilities-In-Graphical-User-Interfaces-Tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Gy45h-mnHfI"
      }
    ],
    "youtubeDescription": "By Collin Mulliner\n\n\"Graphical user interfaces (GUIs) contain a number of common visual elements or widgets such as labels, text fields, buttons, and lists. GUIs typically provide the ability to set attributes on these widgets to control their visibility, enabled status, and whether they are writable. While these attributes are extremely useful to provide visual cues to users to guide them through an application's GUI, they can also be misused for purposes they were not intended. In particular, in the context of GUI-based applications that include multiple privilege levels within the application, GUI element attributes are often misused as a mechanism for enforcing access control policies.\n\nIn this session we introduce GEMs, or instances of GUI element misuse, as a novel class of access control vulnerabilities in GUI-based applications. We present a classification of different GEMs that can arise through misuse of widget attributes, and describe a general algorithm for identifying and confirming the presence of GEMs in vulnerable applications. We then present GEM Miner, an implementation of our GEM analysis for the Windows platform. We evaluate GEM Miner using real-world GUI-based applications that target the small business and enterprise markets, and demonstrate the efficacy of our analysis by finding numerous previously unknown access control vulnerabilities in these applications.\""
  },
  "Bongard": {
    "author": "",
    "description": "Fingerprinting is an important preliminary step when auditing web applications. But the usual techniques based on the analysis of cookies, headers, and static files are easy to fool. Fingerprinting digital images is a technique commonly used for forensic investigations but rarely for security audits. Moreover, it is mostly based on the analysis of JPEG images only. In this talk we study the implementation differences between a number of PNG decoders/encoders, either build-in or commonly used with the main web application development platforms. As a result, we give a set of tests that can discriminate between various PNG libraries. As a consequence, it is often possible to identify the platform behind a website even when an effort has been made to prevent fingerprinting, as long as said website allows the upload of PNG images.",
    "plaintextTitle": "Fingerprinting Web Application Platforms by Variations in PNG Implementations",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Bongard-Fingerprinting-Web-Application-Platforms-By-Variations-In-PNG-Implementations-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Bongard-Fingerprinting-Web-Application-Platforms-By-Variations-In-PNG-Implementations.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=8WrluFRoJhs"
      }
    ],
    "youtubeDescription": "By Dominique Bongard\n\nFingerprinting is an important preliminary step when auditing web applications. But the usual techniques based on the analysis of cookies, headers, and static files are easy to fool. Fingerprinting digital images is a technique commonly used for forensic investigations but rarely for security audits. Moreover, it is mostly based on the analysis of JPEG images only. In this talk we study the implementation differences between a number of PNG decoders/encoders, either build-in or commonly used with the main web application development platforms. As a result, we give a set of tests that can discriminate between various PNG libraries. As a consequence, it is often possible to identify the platform behind a website even when an effort has been made to prevent fingerprinting, as long as said website allows the upload of PNG images."
  },
  "Sager": {
    "author": "",
    "description": "By any historical standard, it would be fair to call today the \"Golden Age Of Threat.\" As defenders, never before in our history have we known so much about bad guys, vulnerabilities, attacks, incidents, tradecraft, exploitation, etc. And it has become its own fast-rising industry of threat feeds, alerts, intelligence reports, standards, and tools. \n\nBut the sharing of threat intelligence is not a miracle cure. In fact, threat sharing is just the means to an end - we need a way to translate this information into specific and scalable defensive actions we can each take to prevent or manage these attacks in the first place. \n\nThe non-profit Council on CyberSecurity has taken a community approach to this problem, working with numerous companies and individuals who analyze attacks and adversaries for a living, and then we translate that knowledge into defensive actions that are captured in the Critical Security Controls. \n\nWe'll describe how this has evolved from informal brainstorming among trusted friends, to a community data call, to mapping from a single authoritative source (the Verizon Data Breach Report in 2013) to the Controls, to inclusion of numerous authoritative threat and incident sources, to building a consistent and efficient community workflow. We also discuss how such an approach naturally synchronizes with various Risk Management Frameworks, including the Executive Order Cybersecurity Framework from NIST. \n\nThis approach gives you value from information you don't have time to read, experts you'll never meet, insight you can't develop alone, and most importantly a translation to action that you must take in order to survive. \n\nAs long as the bad guys are beating up on us, we might as well learn something from it.",
    "plaintextTitle": "From Attacks to Action - Building a Usable Threat Model to Drive Defensive Choices",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=TANVAco3am4"
      }
    ],
    "youtubeDescription": "By Tony Sager\n\n\"By any historical standard, it would be fair to call today the \"\"Golden Age Of Threat.\"\" As defenders, never before in our history have we known so much about bad guys, vulnerabilities, attacks, incidents, tradecraft, exploitation, etc. And it has become its own fast-rising industry of threat feeds, alerts, intelligence reports, standards, and tools. \n\nBut the sharing of threat intelligence is not a miracle cure. In fact, threat sharing is just the means to an end - we need a way to translate this information into specific and scalable defensive actions we can each take to prevent or manage these attacks in the first place. \n\nThe non-profit Council on CyberSecurity has taken a community approach to this problem, working with numerous companies and individuals who analyze attacks and adversaries for a living, and then we translate that knowledge into defensive actions that are captured in the Critical Security Controls. \n\nWe'll describe how this has evolved from informal brainstorming among trusted friends, to a community data call, to mapping from a single authoritative source (the Verizon Data Breach Report in 2013) to the Controls, to inclusion of numerous authoritative threat and incident sources, to building a consistent and efficient community workflow. We also discuss how such an approach naturally synchronizes with various Risk Management Frameworks, including the Executive Order Cybersecurity Framework from NIST. \n\nThis approach gives you value from information you don't have time to read, experts you'll never meet, insight you can't develop alone, and most importantly a translation to action that you must take in order to survive. \n\nAs long as the bad guys are beating up on us, we might as well learn something from it.\""
  },
  "Kruegel": {
    "author": "",
    "description": "Today, forensics experts and anti-malware solutions face a multitude of challenges when attempting to extract information from malicious files; dynamic analysis (sandboxing) is a popular method of identifying behavior associated with running or opening a given file, and provides the ability to examine the actions which that file is responsible for. Dynamic analysis technology is gaining popularity for use in detecting targeted threats and zero-day attacks, because this approach need not rely on detecting the malicious code. Instead, it can leverage the ability to identify generic \"suspicious behaviors\" to assess the risk inherent in running a given sample, and provide intelligence about the protocols and infrastructure attackers can use to control malicious samples.  Of course, many of the attackers have a vested interest in making it much more difficult to extract intelligence from their backdoors or implants. New techniques to evade or complicate analysis of samples are growing in popularity and diversity. With malware authors constantly evolving new techniques to hamper automated analysis, what is a researcher to do?  In the first part of our presentation, Christopher Kruegel, Co-Founder and Chief Scientist at Lastline, will talk about designing dynamic analysis systems, how one might go about building such a system, and what information one should seek to extract with a dynamic analysis platform. He will explain the advantages and limitations of externally instrumented full-system emulation, and demonstrate its value in comparison with other approaches such as OS emulation or traditional virtualization solutions which instrument from inside the analysis environment.  In the second part, Christopher will discuss and provide recent examples of several classes of evasion techniques observed in the wild, including environment triggers, stalling code, and detection of human interaction, and demonstrate the evolution of techniques over time.  In the third part, he will present a number of solutions to these challenges, each enabled by full system emulation. He will discuss how to extend a sandbox to detect environment-dependent branching, identifying or circumventing environment detection attempts, and forcing execution along each possible path, covering as much of the executable code as possible. Christopher will also present approaches to identify and mitigate stalling code blocks, dramatically reducing the overhead of analysis when this approach is sufficient, or forcing the execution to exit the costly blocks when it is not. The session will also cover methods for identifying attempts to detect human behaviors, and recipes for bypassing these detection attempts.",
    "plaintextTitle": "Full System Emulation: Achieving Successful Automated Dynamic Analysis of Evasive Malware",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Kruegel-Full-System-Emulation-Achieving-Successful-Automated-Dynamic-Analysis-Of-Evasive-Malware-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Kruegel-Full-System-Emulation-Achieving-Successful-Automated-Dynamic-Analysis-Of-Evasive-Malware.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=y2lhY18f578"
      }
    ],
    "youtubeDescription": "By Christopher Kruegel\n\n\"Today, forensics experts and anti-malware solutions face a multitude of challenges when attempting to extract information from malicious files; dynamic analysis (sandboxing) is a popular method of identifying behavior associated with running or opening a given file, and provides the ability to examine the actions which that file is responsible for. Dynamic analysis technology is gaining popularity for use in detecting targeted threats and zero-day attacks, because this approach need not rely on detecting the malicious code. Instead, it can leverage the ability to identify generic â€œsuspicious behaviorsâ€\u009d to assess the risk inherent in running a given sample, and provide intelligence about the protocols and infrastructure attackers can use to control malicious samples.\n\nOf course, many of the attackers have a vested interest in making it much more difficult to extract intelligence from their backdoors or implants. New techniques to evade or complicate analysis of samples are growing in popularity and diversity. With malware authors constantly evolving new techniques to hamper automated analysis, what is a researcher to do?\n\nIn the first part of our presentation, Christopher Kruegel, co-founder and chief scientist at Lastline, will talk about designing dynamic analysis systems, how one might go about building such a system, and what information one should seek to extract with a dynamic analysis platform. He will explain the advantages and limitations of externally instrumented full-system emulation, and demonstrate its value in comparison with other approaches such as OS emulation or traditional virtualization solutions which instrument from inside the analysis environment.\n\nIn the second part, Christopher will discuss and provide recent examples of several classes of evasion techniques observed in the wild, including environment triggers, stalling code, and detection of human interaction, and demonstrate the evolution of techniques over time.\n\nIn the third part, he will present a number of solutions to these challenges, each enabled by full system emulation. He will discuss how to extend a sandbox to detect environment-dependent branching, identifying or circumventing environment detection attempts, and forcing execution along each possible path, covering as much of the executable code as possible. Christopher will also present approaches to identify and mitigate stalling code blocks, dramatically reducing the overhead of analysis when this approach is sufficient, or forcing the execution to exit the costly blocks when it is not. The session will also cover methods for identifying attempts to detect human behaviors, and recipes for bypassing these detection attempts.\""
  },
  "Hypponen": {
    "author": "",
    "description": "After cancelling his RSA talk in protest, Mikko delivered his talk on Goverments as Malware Authors at TrustyCon instead. This follow-up talk will look at what's changed since then, and what new we have learned about governments that write malware. Which governments are involved? Where do they get the skills? How big are the budgets for this? And, most importantly: do we have any hope of fighting malwareof this caliber?",
    "plaintextTitle": "Governments As Malware Authors: The Next Generation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Hypponen-Goverments-As-Malware-Authors.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=DZ_tnEmg8Ho"
      }
    ],
    "youtubeDescription": ""
  },
  "Castle": {
    "author": "",
    "description": "While on vacation Joe saw something weird happen on his machine, and thinks he might be owned. From the comfort of your desk: collect common persistence mechanisms and submit the binaries to your bulk malware analysis pipeline, grab a netstat, a process listing, and check recent browsing history. See something interesting? Grab a process listing from memory, collect deleted files, find the badness. Now check every machine in your fleet for the same malware within 30 minutes.  Use cases like this pushed Google to start work on GRR, an open-source remote live-forensics system, back in 2011. For the past three years we've been using it to analyze Joe's machine and do all of the above. Recently, we've added the ability to write and share simple definitions for forensic artifacts and perform large scale binary collection to hunt for badness across the fleet.  Greg will introduce GRR capabilities with some use cases and discuss the difficulties of running the tool across different environments. He will explain and demonstrate GRR artifact collection as well as talk about some of the aspects that make artifacts powerful but challenging to implement. He'll finish with a discussion of future directions for artifacts, integration with other open source forensics projects, IOCs, and the GRR project in general.",
    "plaintextTitle": "GRR: Find All the Badness, Collect All the Things",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Castle-GRR-Find-All-The-Badness-Collect-All-The-Things-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Castle-GRR-Find-All-The-Badness-Collect-All-The-Things.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ren6QSvwFvg"
      }
    ],
    "youtubeDescription": "By Greg Caste\n\n\"While on vacation Joe saw something weird happen on his machine, and thinks he might be owned. From the comfort of your desk: collect common persistence mechanisms and submit the binaries to your bulk malware analysis pipeline, grab a netstat, a process listing, and check recent browsing history. See something interesting? Grab a process listing from memory, collect deleted files, find the badness. Now check every machine in your fleet for the same malware within 30 minutes.\n\nUse cases like this pushed Google to start work on GRR, an open-source remote live-forensics system, back in 2011.  For the past three years we've been using it to analyze Joe's machine and do all of the above.  Recently, we've added the ability to write and share simple definitions for forensic artifacts and perform large scale binary collection to hunt for badness across the fleet.\n\nGreg will introduce GRR capabilities with some use cases and discuss the difficulties of running the tool across different environments.  He will explain and demonstrate GRR artifact collection as well as talk about some of the aspects that make artifacts powerful but challenging to implement.  He'll finish with a discussion of future directions for artifacts, integration with other open source forensics projects, IOCs, and the GRR project in general. \""
  },
  "Seeber": {
    "author": "",
    "description": "Ever wanted to communicate with a NASA space probe launched in 1978, or spoof a restaurant's pager system? There are surprising similarities! How about use an airport's Primary Surveillance RADAR to build your own bistatic RADAR system and track moving objects? What sorts of RF transactions take place in RFID systems, such as tollbooths, building security, and vehicular keyless entry? Then there's 'printing' steganographic images onto the radio spectrum. Wireless systems, and their radio signals, are everywhere: consumer, corporate, government, amateur - widely deployed and often vulnerable. If you have ever wondered what sort of information is buzzing around you, this talk will introduce how you can dominate the RF spectrum by 'blindly' analyzing any signal, and then begin reverse engineering it from the physical layer up. I will demonstrate how these techniques can be applied to dissect and hack RF communications systems, such as those above, using open source software and cheap radio hardware. In addition, I'll show how long-term radio data gathering can be used to crack poorly implemented encryption schemes, such as the Radio Data Service's Traffic Message Channel. I'll also look briefly at some other systems that are close to my heart: reversing satellite communications, tracking aircraft using Mode S and visualizing local airspace in real-time on a 3D map, monitoring the health of aircraft with ACARS (how many faults have been reported by the next plane you'll be traveling on, e.g. do the toilets work?), and hunting down the source of an interfering clandestine radio transmission.If you have any SDR equipment, bring it along!",
    "plaintextTitle": "Hacking the Wireless World with Software Defined Radio - 2.0",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Seeber-Hacking-the-Wireless-World-With-Software-Defined-Radio-2.0.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=N0p3_ES2dBU"
      }
    ],
    "youtubeDescription": "By Balint Seeber\n\n\"Ever wanted to communicate with a NASA space probe launched in 1978, or spoof a restaurant's pager system? There are surprising similarities! How about use an airport's Primary Surveillance RADAR to build your own bistatic RADAR system and track moving objects? What sorts of RF transactions take place in RFID systems, such as toll booths, building security and vehicular keyless entry? Then there's 'printing' steganographic images onto the radio spectrum...\n\nWireless systems, and their radio signals, are everywhere: consumer, corporate, government, amateur - widely deployed and often vulnerable. If you have ever wondered what sort of information is buzzing around you, this talk will introduce how you can dominate the RF spectrum by 'blindly' analysing any signal, and then begin reverse engineering it from the physical layer up. I will demonstrate how these techniques can be applied to dissect and hack RF communications systems, such as those above, using open source software and cheap radio hardware. In addition, I'll show how long-term radio data gathering can be used to crack poorly-implemented encryption schemes, such as the Radio Data Service's Traffic Message Channel.\n\nI'll also look briefly at some other systems that are close to my heart: reversing satellite communications, tracking aircraft using Mode S and visualising local airspace in real-time on a 3D map, monitoring the health of aircraft with ACARS (how many faults have been reported by the next plane you'll be travelling on, e.g. do the toilets work?), and hunting down the source of an interfering clandestine radio transmission.\n\nIf you have any SDR equipment, bring it along!\""
  },
  "Anderson": {
    "author": "",
    "description": "The USA is starting to introduce EMV, the Europay-Mastercard-Visa system for making payments using chip cards instead of the old mag strip variety. EMV is already in wide use in Europe, and has started to appear in countries from Canada to India. In theory, smartcards should have reduced fraud by making bankcards much harder to copy and by enabling banks to authenticate users at the point of sale using PINs rather than signatures. The practice has been different. In Britain, for example, fraud first went up, then down, and is now headed upwards again. There have been many fascinating attacks, which I'll describe. The certification system wasn't fit for purpose, so terminals that were certified as tamper-resistant turned out not to be. We even saw Trojans inserted in the supply chain. A protocol flaw meant that a crook could use a stolen card without knowing the PIN; he could use a man-in-the-middle device to persuade the terminal that the card had accepted the PIN, while the card was told to do a signature-only transaction. Merchant refunds were not authenticated, so a crook could pretend to the bank that he was a merchant, and credit his card back after making a purchase. The most recent series of attacks exploit the freshness mechanisms in the EMV protocol. To prevent transaction replay, the terminal generates an \"unpredictable number\" while the card supplies an \"application transaction counter\" or ATC that is supposed to increase monotonically and never repeat. Yet the unpredictable numbers often aren't (in many of the terminals we looked at, they seem to be just counters) while many banks don't bother to check the ATC, as writing code to deal with out-of-order offline transactions is too much bother. As a result, we've seen some interesting attacks where cardholders unlucky enough to shop at a dishonest merchant find themselves dunned for a lot of large transactions later. In fact these \"preplay\" attacks behave just like card cloning, and make all the fancy tamper-resistant electronics almost irrelevant. At heart these are problems of governance and regulation. The vendors sell what they can get away with; the acquiring banks dump liability on merchants and card-issuing banks; they in turn dump it on the cardholder where they can; and the regulators just don't want to know as it's all too difficult. This wonderful system is now being rolled out at scale in the USA.",
    "plaintextTitle": "How Smartcard Payment Systems Fail",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Anderson-How_Smartcard-Payment-Systems-Fail.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ET0MFkRorbo"
      }
    ],
    "youtubeDescription": "By Ross Anderson\n\n\"The USA is starting to introduce EMV, the Europay-Mastercard-Visa system for making payments using chip cards instead of the old mag strip variety. EMV is already in wide use in Europe, and has started to appear in countries from Canada to India.\nIn theory, smartcards should have reduced fraud by making bankcards much harder to copy and by enabling banks to authenticate users at the point of sale using PINs rather than signatures. The practice has been different. In Britain, for example, fraud first went up, then down, and is now headed upwards again. There have been many fascinating attacks, which I'll describe. The certification system wasn't fit for purpose, so terminals that were certified as tamper-resistant turned out not to be. We even saw Trojans inserted in the supply chain. A protocol flaw meant that a crook could use a stolen card without knowing the PIN; he could use a man-in-the-middle device to persuade the terminal that the card had accepted the PIN, while the card was told to do a signature-only transaction. Merchant refunds were not authenticated, so a crook could pretend to the bank that he was a merchant, and credit his card back after making a purchase.\nThe most recent series of attacks exploit the freshness mechanisms in the EMV protocol. To prevent transaction replay, the terminal generates an \"\"unpredictable number\"\" while the card supplies an \"\"application transaction counter\"\" or ATC that is supposed to increase monotonically and never repeat. Yet the unpredictable numbers often aren't (in many of the terminals we looked at, they seem to be just counters) while many banks don't bother to check the ATC, as writing code to deal with out-of-order offline transactions is too much bother. As a result, we've seen some interesting attacks where cardholders unlucky enough to shop at a dishonest merchant find themselves dunned for a lot of large transactions later. In fact these \"\"preplay\"\" attacks behave just like card cloning, and make all the fancy tamper-resistant electronics almost irrelevant.\nAt heart these are problems of governance and regulation. The vendors sell what they can get away with; the acquiring banks dump liability on merchants and card-issuing banks; they in turn dump it on the cardholder where they can; and the regulators just don't want to know as it's all too difficult. This wonderful system is now being rolled out at scale in the USA.\""
  },
  "Hu": {
    "author": "Lau",
    "description": "Many Online Social Networks (OSN) are using OAuth 2.0 to grant access to API endpoints nowadays. Despite many thorough threat model analyses (e.g. RFC6819), only a few real world attacks have been discovered and demonstrated. To our knowledge, previously discovered loopholes are all based on the misuse of OAuth. It was generally believed that the correct use of OAuth 2.0 (by OSN provider and application developer) is secure enough. We break this belief by demonstrating a massive leakage of user data which roots from the scotoma of OAuth's fundamental design rationale: focus on protecting user, not protecting application.We show that, even if OSN providers and application developers follow best practice, application impersonation is inevitable on many platforms: According to the OAuth 2.0 standard, they support implicit-authorization-grant flow and bearer-token usage. Although it has become common knowledge for application developers to use authorization-code-grant flow and use access token in a MAC-token style wherever possible, there is no mechanism for them to opt out from the OSN platforms' support of implicit-authorization-grant flow and bearer-token usage. Since different applications may have different privileges like accessing permissions and rate limits, application impersonation in general enables privilege escalation and the consequence depends on platform-specific details.As a proof-of-concept experiment, application impersonation has been demonstrated on a large-scale Facebook-like (not Facebook) OSN. Based on this technique, one can use a casual crawler to collect its 100-million-user social graph within just one week and the projected cost based on Amazon Web Service is just $150 USD. Due to its implementation specifics, similar techniques can be applied on this OSN to obtain other private data like all users' status lists and albums. Note that, without privilege escalation, this amount of data (order of 10^8) cannot be obtained in such short time with such little cost even on open graphs like Twitter.Our discovery shows that it is urgent for industrial practitioners to provide the two aforementioned opt-outs in OAuth and review their API design. This work also highlights that application protection must be considered in the design of the next version of OAuth, and similarly other Single-Sign-On protocols.",
    "plaintextTitle": "How to Leak a 100-Million-Node Social Graph in Just One Week? - A Reflection on Oauth and API Design in Online Social Networks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Hu-How-To-Leak-A100-Million-Node-Social-Graph-In-Just-One-Week-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Hu-How-To-Leak-A100-Million-Node-Social-Graph-In-Just-One-Week.pdf",
        "type": "Presentation"
      }
    ]
  },
  "Jakobsson": {
    "author": "",
    "description": "We introduce a new authentication paradigm that achieves both a desirable user experience and a high level of security. We describe and demo an implementation of an identity manager in the guise of a smart bracelet. This bracelet is equipped with a low-power processor, a Bluetooth LE transmitter, an accelerometer, and a clasp that is constructed so that opening and closing it breaks and closes a circuit, thereby allowing an automatic detection of when the bracelet is put on and taken off. However, for reasons of cost, design and error avoidance, the bracelet does not have any user interface, nor any biometric sensors: All user interaction is assisted by third-party devices, such as user phones and point of sale terminals. \n\nOur approach is based on the principle of physical tethering of an identity manager  to a user (e.g., by closing the clasp), where the identity manager represents its user's interests after an initial user authentication phase, and until the user causes a disassociation by untethering the device (e.g., by opening the clasp). The authentication phase can be based on any type of authentication, and - to allow for the greatest possible simplicity of design - is aided by a third-party device, such as the user's cell phone. \n\nWe describe the physical design, including aspects to protect against violent attacks on users. We also describe the lightweight security protocols needed for pairing, determination of user intent, and credential management, and give examples of  usage scenarios- including automated login; simplified online and point-of-sale purchases; assisted appliance personalization; and automated event logging. We then detail the protocols associated with the example usage scenarios, and discuss the security implications of our proposed design.",
    "plaintextTitle": "How to Wear Your Password",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Jakobsson-How-To-Wear-Your-Password-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Jakobsson-How-To-Wear-Your-Password.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=I-eDLRW_ctc"
      }
    ],
    "youtubeDescription": "By Markus Jakobsson\n\n\"We introduce a new authentication paradigm that achieves both a desirable user experience and a high level of security. We describe and demo an implementation of an identity manager in the guise of a smart bracelet. This bracelet is equipped with a low-power processor, a Bluetooth LE transmitter, an accelerometer, and a clasp that is constructed so that opening and closing it breaks and closes a circuit, thereby allowing an automatic detection of when the bracelet is put on and taken off. However, for reasons of cost, design and error avoidance, the bracelet does not have any user interface, nor any biometric sensors: All user interaction is assisted by third-party devices, such as user phones and point of sale terminals. \n\nOur approach is based on the principle of physical tethering of an identity manager  to a user (e.g., by closing the clasp), where the identity manager represents its user's interests after an initial user authentication phase, and until the user causes a disassociation by untethering the device (e.g., by opening the clasp). The authentication phase can be based on any type of authentication, and - to allow for the greatest possible simplicity of design - is aided by a third-party device, such as the user's cell phone. \n\nWe describe the physical design, including aspects to protect against violent attacks on users. We also describe the lightweight security protocols needed for pairing, determination of user intent, and credential management, and give examples of  usage scenarios- including automated login; simplified online and point-of-sale purchases; assisted appliance personalization; and automated event logging. We then detail the protocols associated with the example usage scenarios, and discuss the security implications of our proposed design.\""
  },
  "Williams": {
    "author": "",
    "description": "Email and web filtering products and services are core components for protecting company employees from malware, phishing and client-side attacks.\n\nHowever, it can be trivial for an attacker to bypass these security controls if they know exactly what products and services are in use, how they are configured, and have a clear picture of the solutions' weaknesses in advance of an attack. \n\nThe Speaker has previously demonstrated that email and web filtering security appliances often have vulnerabilities which can be exploited to enable an attacker to gain control of these systems (and the data they process). More recently, he has been researching what information an external attacker can discover about the filtering solutions that a target organization has, and how to bypass controls to deliver effective client-side attacks to target employees, without detection. \n\nIn this presentation, the Speaker will demonstrate new tools and techniques for the automated enumeration of email and web filtering services, products and policies, and will show how flaws can be discovered and exploited.\n\nThis presentation will include statistical analysis of the filtering products, services and policies used by some of the world's top companies. He will show examples of easy-to-create client-side attacks which evade most filtering solutions, and work on fully patched systems to give attackers remote control.\n\nThese tools and techniques are very useful from a defensive perspective, to quickly enable the identification of filtering weaknesses and misconfiguration, or to assess the capabilities of filtering products and services.",
    "plaintextTitle": "I Know Your Filtering Policy Better than You Do: External Enumeration and Exploitation of Email and Web Security Solutions",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Williams-I-Know-Your-Filtering-Policy-Better-Than-You-Do-wp1.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Williams-I-Know-Your-Filtering-Policy-Better-Than-You-Do-wp2.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Williams-I-Know-Your-Filtering-Policy-Better-Than-You-Do.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=MY0TdEVChho"
      }
    ],
    "youtubeDescription": "By Ben Williams \n\n\"Email and web filtering products and services are core components for protecting company employees from malware, phishing and client-side attacks.\n\nHowever, it can be trivial for an attacker to bypass these security controls if they know exactly what products and services are in use, how they are configured, and have a clear picture of the solutions' weaknesses in advance of an attack. \n\nThe Speaker has previously demonstrated that email and web filtering security appliances often have vulnerabilities which can be exploited to enable an attacker to gain control of these systems (and the data they process). More recently, he has been researching what information an external attacker can discover about the filtering solutions that a target organization has, and how to bypass controls to deliver effective client-side attacks to target employees, without detection. \n\nIn this presentation, the Speaker will demonstrate new tools and techniques for the automated enumeration of email and web filtering services, products and policies, and will show how flaws can be discovered and exploited.\n\nThis presentation will include statistical analysis of the filtering products, services and policies used by some of the world's top companies. He will show examples of easy-to-create client-side attacks which evade most filtering solutions, and work on fully patched systems to give attackers remote control.\n\nThese tools and techniques are very useful from a defensive perspective, to quickly enable the identification of filtering weaknesses and misconfiguration, or to assess the capabilities of filtering products and services.\""
  },
  "Bolshev": {
    "author": "Cherbov",
    "description": "Today, industrial control system architectures are complex, multilayered networks, based on many popular (now and not so long ago) technologies, such as XML, COM, ActiveX, OLE32, JSON, .Net, and others. FDT/DTM is one of such architectural elements. In short, FDT/DTM standardizes the communication and configuration interface between all (industrial) field devices and host systems. This is archived with the help of DTM - COM, ActiveX or .Net components. Such components exist for many devices used in oil, gas, energy, nuclear, chemical, and other critical industries. Look at any factory, plant, or other industry object, and you'll find an RTU or PLC that is configured by a DTM component.\n\nDuring our research, we've analyzed the components for hundreds of field devices based on the Modbus, HART, and Profibus DP low-level protocols. Many of them are exposed to insufficient filtration of user-supplied data, XSS, XXE, SSRF, DoS, and other vulnerabilities. We will provide detailed statistics on the security flaws of DTM components from various vendors.",
    "plaintextTitle": "DTM Components: Shadow Keys to the ICS Kingdom",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Bolshev-DTM-Components-Shadow-Keys-To-The-ICS-Kingdom-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Bolshev-DTM-Components-Shadow-Keys-To-The-ICS-Kingdom.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=VeMgbC0a-u8"
      }
    ],
    "youtubeDescription": "By Alexander Bolshev and Gleb Cherbov\n\n\"Today, industrial control system architectures are complex, multilayered networks, based on many popular (now and not so long ago) technologies, such as XML, COM, ActiveX, OLE32, JSON, .Net, and others. FDT/DTM is one of such architectural elements. In short, FDT/DTM standardizes the communication and configuration interface between all (industrial) field devices and host systems. This is archived with the help of DTM - COM, ActiveX or .Net components. Such components exist for many devices used in oil, gas, energy, nuclear, chemical, and other critical industries. Look at any factory, plant, or other industry object, and you'll find an RTU or PLC that is configured by a DTM component.\n\nDuring our research, we've analyzed the components for hundreds of field devices based on the Modbus, HART, and Profibus DP low-level protocols. Many of them are exposed to insufficient filtration of user-supplied data, XSS, XXE, SSRF, DoS, and other vulnerabilities. We will provide detailed statistics on the security flaws of DTM components from various vendors.\""
  },
  "Schloesser": {
    "author": "",
    "description": "Over the past year, the Rapid7 Labs team has conducted large-scale analysis on the data coming out of the Critical.IO and Internet Census 2012 scanning projects. This revealed a number of widespread security issues and painted a gloomy picture of an Internet rife with insecurity. The problem is, this isn't news, and the situation continues to get worse. Rapid7 Labs believes the only way to make meaningful progress is through data sharing and collaboration across the security community as a whole.  As a result, we launched Project Sonar and urged the community to get involved with the research and analysis effort. To make this easier, we highlight various free tools and share a huge amount of our own research data for analysis on a regular basis in cooperation with the University of Michigan and their scans.io website.We've seen in the last year that Internet-wide surveys became easier to conduct with better tools and also need significantly less resources to accomplish. Previous research like the EFF observatory reveal are of great benefit for the general community and would have even bigger impact if conducted on a regular basis.Visibility into the evolution of Internet protocols, devices and vulnerabilities is essential to improve the security of the Internet as a whole. Large-scale Internet scanning provides the necessary datasets to prioritize research, gain statistics and hard evidence on risks and vulnerability exposure. Examples of this are the UPnP vulnerability research published by Rapid7 after gathering Internet-wide exposure data and the high amount of misconfigured and vulnerable Serial Port Server devices connected to the Internet.This talk presents the history of Internet scanning and its motivations, explains the required tools and resources for conducting Internet-wide surveys and shows the vulnerability research and exposure statistics gathered so far. The data analysis possibilities will be demoed and thus enable the audience to engage in the project in order to find data on their own assets or participate in the analysis effort.",
    "plaintextTitle": "Scan All the Things - Project Sonar  ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Schloesser/Asia-14-Schloesser-Scan-All-The-Things.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=BzAK7eLIhpk"
      }
    ],
    "youtubeDescription": ""
  },
  "Kazanciyan": {
    "author": "Hastings",
    "description": "Over the past two years, we've seen targeted attackers increasingly make use of PowerShell to conduct command-and-control in compromised Windows environments. If your organization is running Windows 7 or Server 2008 R2, you've got PowerShell 2.0 installed (and on Server 2012, remoting is enabled by default!). This has created a whole new playground of attack techniques for intruders that have already popped a few admin accounts (or an entire domain). Even if you're not legitimately using PowerShell to administer your systems, you need to be aware of how attackers can enable and abuse its features.\n\nThis presentation will focus on common attack patterns performed through PowerShell - such as lateral movement, remote command execution, reconnaissance, file transfer, and establishing persistence - and the sources of evidence they leave behind. We'll demonstrate how to collect and interpret these forensic artifacts, both on individual hosts and at scale across the enterprise. Throughout the presentation, we'll include examples from real-world incidents and recommendations on how to limit exposure to these attacks.",
    "plaintextTitle": "Investigating PowerShell Attacks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Kazanciyan-Investigating-Powershell-Attacks-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Kazanciyan-Investigating-Powershell-Attacks.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=qF06PFcezLs"
      }
    ],
    "youtubeDescription": "Slides Here: https://www.defcon.org/images/defcon-22/dc-22-presentations/Kazanciyan-Hastings/DEFCON-22-Ryan-Kazanciyan-Matt-Hastings-Investigating-Powershell-Attacks.pdf\n\nInvestigating PowerShell Attacks \nRyan Kazanciyan TECHNICAL DIRECTOR, MANDIANT \nMatt Hastings CONSULTANT, MANDIANT \nOver the past two years, we've seen targeted attackers increasingly utilize PowerShell to conduct command-and-control in compromised Windows environments. If your organization is running Windows 7 or Server 2008 R2, you've got PowerShell 2.0 installed (and on Server 2012, remoting is enabled by default!). This has created a whole new playground of attack techniques for intruders that have already popped a few admin accounts (or an entire domain). Even if you're not legitimately using PowerShell to administer your systems, you need to be aware of how attackers can enable and abuse its features.\n\nThis presentation will focus on common attack patterns performed through PowerShell - such as lateral movement, remote command execution, reconnaissance, file transfer, etc. - and the sources of evidence they leave behind. We'll demonstrate how to collect and interpret these forensic artifacts, both on individual hosts and at scale across the enterprise. Throughout the presentation, we'll include examples from real-world incidents and recommendations on how to limit exposure to these attacks.\n\nRyan Kazanciyan is a Technical Director with Mandiant and has ten years of experience in incident response, forensic analysis, and penetration testing. Since joining Mandiant in 2009, he has led incident response and remediation efforts for dozens of Fortune 500 organizations, focusing on targeted attacks, industrial espionage, and financial crime. He has also helped develop Mandiant's investigative methodologies, forensic analysis techniques, and technologies to address the challenges posed by skilled intruders in complex environments. Prior to his work in incident response, Ryan led and executed penetration tests for both private and public-sector clients. His background included red-team operations in Windows and Unix environments, web application security assessments, and social engineering. As a lead instructor and content author for Mandiant's incident response training, Ryan also regularly teaches classes for corporate security teams, federal law enforcement, and at industry conferences.\n\nTwitter: @ryankaz42\n\nMatt Hastings is a Consultant with Mandiant, a division of FireEye, Inc. Based in the Washington D.C area, Matt focuses on enterprise-wide incident response, high-tech crime investigations, penetration testing, strategic corporate security development, and security control assessments; working with the Federal government, defense industrial base, financial industry, Fortune 500 companies, and global organizations.\n\nTwitter: @HastingsVT"
  },
  "Diquet": {
    "author": "",
    "description": "With the release of iOS 7, Apple has quietly introduced a nifty feature called Multipeer Connectivity. Using a surprisingly small and simple set of APIs, developers can create applications that have the ability to discover and directly communicate with nearby iOS devices over Bluetooth or WiFi, without the need for an Internet connection. While the Multipeer Connectivity Framework brings the promise of peer-to-peer and mesh networking apps significantly closer to reality, little is known regarding how it actually works behind the scenes and what the risks are for applications leveraging this functionality.\n\nThis talk will first present an analysis of what happens at the network level when two devices start communicating with each other over WiFi, including a description of the protocols and encryption algorithms used. From this analysis, we'll derive a security model for Multipeer Connectivity and describe the threats and underlying assumptions that developers should be aware of when building applications. The impact of the various pairing options, data transmission modes, and encryption settings exposed by the Framework will also be explained. Lastly, we'll study the implementation of a real-world app that uses the Framework and describe issues and potential weaknesses; at the end of the presentation, a tool that was used to find some of these issues will be released.",
    "plaintextTitle": "It Just (Net)works: The Truth About iOS 7's Multipeer Connectivity Framework",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Diquet-It-Just-Networks-The-Truth-About-iOS-7s-Multipeer-Connectivity-Framework.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5NDmDtgpCEw"
      }
    ],
    "youtubeDescription": "By Alban Diquet\n\n\"With the release of iOS 7, Apple has quietly introduced a nifty feature called Multipeer Connectivity. Using a surprisingly small and simple set of APIs, developers can create applications that have the ability to discover and directly communicate with nearby iOS devices over Bluetooth or WiFi, without the need for an Internet connection. While the Multipeer Connectivity Framework brings the promise of peer-to-peer and mesh networking apps significantly closer to reality, little is known regarding how it actually works behind the scenes and what the risks are for applications leveraging this functionality.\n\nThis talk will first present an analysis of what happens at the network level when two devices start communicating with each other over WiFi, including a description of the protocols and encryption algorithms used. From this analysis, we'll derive a security model for Multipeer Connectivity and describe the threats and underlying assumptions that developers should be aware of when building applications. The impact of the various pairing options, data transmission modes, and encryption settings exposed by the Framework will also be explained. Lastly, we'll study the implementation of a real-world app that uses the Framework and describe issues and potential weaknesses; at the end of the presentation, a tool that was used to find some of these issues will be released.\""
  },
  "Molina": {
    "author": "",
    "description": "Have you ever had the urge to create mayhem at a hotel?  Force every hotel guest to watch your favorite TV show with you? Or wake your neighbors up (all 290 of them!) with blaring music and with their blinds up at 3 AM? \n\nFor those with the urge, I have the perfect place for you.  The St. Regis ShenZhen, a gorgeous luxury hotel occupying the top 28 floors of a 100 story skyscraper, offers guests a unique feature:  a room remote control in the form of an iPad2. The iPad2 controls the lighting, temperature, music, do not disturb light, TV, even the blinds and other miscellaneous room actions. However, the deployment of the home automation protocol contained several fatal flaws that allow an arbitrary attacker to control virtually every appliance in the hotel remotely.  I discovered these flaws and as a result, I was able to create the ultimate remote control: Switch TV off 1280,1281,1283 will switch off the TV in these three room.  The attacker does not even need to be at the hotel - he could be in another country.\n\nThis talk provides a detailed discussion of the anatomy of the attack: an explanation of reverse engineering of the KNX/IP home automation protocol;  a description of the deployment flaws;  blueprints on how to create an iPad Trojan to send commands outside the hotel; and, of course, solutions to avoid all these pitfall in future deployments.  Attendees will gain valuable field lessons on how to improve wide scale home automation architectures and discussion topics will include the dangers of utilizing legacy but widely used automation protocols, the utilization of insecure wireless connection, and the use of insecure and unlocked commodity hardware that could easily be modified by an attacker.\n\nThe attack has important implications for large scale home automation applications, as several hotels around the world are beginning to offer this room amenity. The severity of these types of security flaws cannot be understated - from creating a chaotic atmosphere to raising room temperatures at night with fatal consequences - hoteliers need to understand the risks and liabilities they are exposed to by faulty security deployments.",
    "plaintextTitle": "Learn How to Control Every Room at a Luxury Hotel Remotely: The Dangers of Insecure Home Automation Deployment",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Molina-Learn-How-To-Control-Every-Room-At-A-Luxury-Hotel-Remotely-The-Dangers-Of-Insecure-Home-Automation-Deployment.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=RX-O4XuCW1Y"
      }
    ],
    "youtubeDescription": "Slides Here: http://defcon.org/images/defcon-22/dc-22-presentations/Molina/DEFCON-22-Jesus-Molina-Learn-how-to-control-every-room.pdf\n\nWhite paper Here: http://defcon.org/images/defcon-22/dc-22-presentations/Molina/DEFCON-22-Jesus-Molina-Learn-how-to-control-every-room-WP.pdf\n\nLearn how to control every room at a luxury hotel remotely: the dangers of insecure home automation deployment \nJesus Molina Security Consultant\n\nHave you ever had the urge to create mayhem at a hotel? Force every hotel guest to watch your favorite TV show with you? Or wake your neighbors up (all 290 of them!) with blaring music and with their blinds up at 3 AM?\n\nFor those with the urge, I have the perfect place for you. The St. Regis ShenZhen, a gorgeous luxury hotel occupying the top 28 floors of a 100 story skyscraper, offers guests a unique feature: a room remote control in the form of an IPAD2. The IPAD2 controls the lighting, temperature, music, do not disturb light, TV, even the blinds and other miscellaneous room actions. However, the deployment of the home automation protocol contained several fatal flaws that allow an arbitrary attacker to control virtually every appliance in the hotel remotely. I discovered these flaws and as a result, I was able to create the ultimate remote control: Switch TV off 1280,1281,1283 will switch off the TV in these three room. The attacker does not even need to be at the hotel – he could be in another country.\n\nThis talk provides a detailed discussion of the anatomy of the attack: an explanation of reverse engineering of the KNX/IP home automation protocol; a description of the deployment flaws; blueprints on how to create an Ipad Trojan to send commands outside the hotel; and, of course, solutions to avoid all these pitfall in future deployments. Attendees will gain valuable field lessons on how to improve wide scale home automation architectures and discussion topics will include the dangers of utilizing legacy but widely used automation protocols, the utilization of insecure wireless connection, and the use of insecure and unlocked commodity hardware that could easily be modified by an attacker.\n\nThe attack has important implications for large scale home automation applications, as several hotels around the world are beginning to offer this room amenity. The severity of these types of security flaws cannot be understated – from creating a chaotic atmosphere to raising room temperatures at night with fatal consequences – hoteliers need to understand the risks and liabilities they are exposed to by faulty security deployments.\n\nJesus Molina is an independent security consultant. As a former security researcher at Fujitsu Laboratories of America he created several prototypes and corresponding patents on ground breaking research, including self-erasable memories and mobile trusted virtual machins. He has acted as a chair at the Trusted Computing Group, a NSF grant reviewer, and guest editor at IEEE Security & Privacy. He has worked in offensive security research demonstrating flaws in SmartMeters. Mr. Molina holds a Ms. and a PhD. from the University of Maryland.\n\nTwitter: @verifythentrust"
  },
  "Geers": {
    "author": "Thompson",
    "description": "Every day, computer network attackers leverage a Leviathan of compromised infrastructure, based in every corner of the globe, to play hide-and-seek with network security, law enforcement, and counterintelligence personnel.This presentation draws a new map of Planet Earth, based not on traditional parameters, but on hacker command and control (C2) communications. The primary data points used in this worldwide cyber survey are more than 30 million malware callbacks to over 200 countries and territories over an 18-month period, from January 2013 to June 2014.First, this talk covers the techniques that hackers use to communicate with compromised infrastructure across the globe. The authors analyze the domains, protocols, ports, and websites used for malicious C2. They explain how covert C2 works, and how attackers keep their communications hidden from network security personnel.Second, this talk looks at strategic impact. The authors examine relationships between the targeted industries and countries and the first-stage malware servers communicating with them. Traffic analysis is used to deduce important relationships, patterns, and trends in the data. This section correlates C2 communications to traditional geopolitical conflicts and considers whether computer network activity can be used to predict real world events.In conclusion, the authors consider the future of this Leviathan, including whether governments can subdue it and whether they would even want to. ",
    "plaintextTitle": "Leviathan: Command and Control Communications on Planet Earth",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Geers-Leviathan-Command-And-Control-Communications-On-Planet-Earth-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Geers-Leviathan-Command-And-Control-Communications-On-Planet-Earth.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=OwpWevJKgNo"
      }
    ],
    "youtubeDescription": "These are the videos from GrrCON 2014:\nhttp://www.irongeek.com/i.php?page=videos/grrcon2014/mainlist"
  },
  "Balasubramaniyan": {
    "author": "Bandyopadhyay",
    "description": "Enterprises are vulnerable to \"human hacking,\" the effective social engineering of employees, contractors, and other trusted persons. In particular, financial institutions have seen a significant increase in account takeover attacks over the phone by sophisticated fraudsters socially engineering call center agents. The customer information required is often obtained by gathering intelligence through reconnaissance, probing systems or humans. In this talk, we will show how to detect both the account takeover calls using acoustical anomalies and the reconnaissance calls leading to it through graph analysis. Using acoustical anomalies, we are able to detect over 80% of these calls with less than a 2% false positive rate. Furthermore, our graph analysis is able to see reconnaissance calls for 46% of these account takeovers 10 days before the actual takeover. These results are on a dataset of over hundreds of million calls. In the process, we will reveal the lifecycle of a phone fraudster as he works through both the call center agent and its technology to extract information about a customer and takeover his or her account.",
    "plaintextTitle": "Lifecycle of a Phone Fraudster: Exposing Fraud Activity from Reconnaissance to Takeover Using Graph Analysis and Acoustical Anomalies",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Balasubramaniyan-Lifecycle-Of-A-Phone-Fraudster-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Balasubramaniyan-Lifecycle-Of-A-Phone-Fraudster.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=bot74uHn4fs"
      }
    ],
    "youtubeDescription": "By Vijay Balasubramaniyan, Raj Bandyopadhyay, and Telvis Calhoun\n\nEnterprises are vulnerable to \"human hacking,\" the effective social engineering of employees, contractors, and other trusted persons. In particular, financial institutions have seen a significant increase in account takeover attacks over the phone by sophisticated fraudsters socially engineering call center agents. The customer information required is often obtained by gathering intelligence through reconnaissance, probing systems or humans. In this talk, we will show how to detect both the account takeover calls using acoustical anomalies and the reconnaissance calls leading to it through graph analysis. Using acoustical anomalies, we are able to detect over 80% of these calls with less than a 2% false positive rate. Furthermore, our graph analysis is able to see reconnaissance calls for 46% of these account takeovers 10 days before the actual takeover. These results are on a dataset of over hundreds of million calls. In the process, we will reveal the lifecycle of a phone fraudster as he works through both the call center agent and its technology to extract information about a customer and takeover his or her account."
  },
  "Larsen": {
    "author": "",
    "description": "Too often researchers ignore the hard parts of SCADA hacking.  Too many presentations could be described as \"I got past the SCADA firewall so I win!!!\"  Little information is available on what to do after the attacker gains control of the process.  As a challenge, consider the scenario where  I just gave you control of a paint factory.  Now what?  The answer to that question is often specific to the process, but there are a number of generic techniques that can be discussed.  Often, designing an attack leads to interesting hacking and computer science challenges.\n\nMiniaturization is one of those problems.  Suppose an attacker wanted to hide in a PLC.  Suppose he wanted to hide all the way down in a pressure sensor.  Is such a thing possible?  The attack must be miniaturized to fit within the constraints of the embedded device and may need to be miniaturized into just a few kilobytes of memory. This is an interesting problem.\n\nThe sensor has only a few kilobytes of memory and the attacker has a number of tasks to perform. During the attack he must spoof the original process to keep the operator happy.  He must estimate the state of the physical process by extracting artifacts from noisy sensor signals. He must also process those artifacts to extract the necessary constants to perform an attack.  \n\nIn order to keep the presentation real and understandable, it will walk through setting up an optimal pressure transient in a chemical piping system. (Commonly referred to as a water hammer). A set of novel algorithms will be describe that would allow someone to pull off such an attack.  A variant of \"runs analysis\" taken from statistics will be used to produce nearly perfect sensor noise without previous look at the sensor.  An algorithm derived from 3D graphics will be used to extract artifacts from noisy sensor data.  Finally scale-free geometry matching techniques will be used to process the artifacts into the time constants needed to pull off an attack.",
    "plaintextTitle": "Miniaturization",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Larsen-Miniturization-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Larsen-Miniturization.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KCgJMfn2OBQ"
      }
    ],
    "youtubeDescription": ""
  },
  "Butler": {
    "author": "",
    "description": "Mobile Point-of-Sale (mPOS) systems allow small businesses and drug dealers to accept credit card payments using their favourite iDevice (Disclaimer: other mobile devices are available). During our research, we had a look at the security of the leading solutions for mobile Chip&Pin payments. If you saw our previous PinPadPwn research, you won't be surprised to hear we discovered a series of vulnerabilities which allow us to gain code execution on these devices through each of the available input vectors. We will discuss the weaknesses of current solutions and have live demonstrations for multiple attack vectors, our favourite being a malicious credit card which drops a remote root shell on an embedded mPOS device.",
    "plaintextTitle": "Mission mPOSsible",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=B3ACLsZwjAk"
      }
    ],
    "youtubeDescription": "With the 5th Mission Impossible film coming up soon, we thought we'd go back and watch the original movie in the franchise and look for sins. It's a mission we chose to accept. \n\nThursday: More sins with false identities.\n\nRemember, no movie is without sin. Which movie's sins do YOU want to see recounted? \n\nTweet us: http://twitter.com/cinemasins\nTumble us: http://cinema-sins.tumblr.com\nCall us: 405-459-7466\nReddit with us: http://reddit.com/r/cinemasins\nJeremy's book now available: http://theablesbook.com"
  },
  "Breen": {
    "author": "",
    "description": "MDM solutions are ubiquitous in today's enterprise environment. They provide a way for security and IT departments to mitigate the risk of mobile malware and lost/stolen devices when personal devices are being used to access and store corporate resources.  Like any other piece of software being deployed on a large scale, we need to ask the questions \"is it secure?,\" \"what are the risks?\"; because MDM is a security product itself, this crucial step seems to have been overlooked. With a few exceptions, the security community has not had much to say about vulnerabilities in MDM products and this is likely due to the extremely restrictive licensing requirements to gain access to the software.  This talk focuses on vulnerabilities in MDM products themselves. Through a number of penetration tests we have conducted on our clients, we have discovered and leveraged critical vulnerabilities in MDM solutions to gain access to sensitive information. We will provide an overview of these vulnerabilities, some of which seem to be systemic across a number of products.",
    "plaintextTitle": "Mobile Device Mismanagement",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Breen-Mobile-Device-Mismanagement.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=llwxM_v3Sew"
      }
    ],
    "youtubeDescription": "By Stephen Breen\n\n\"MDM solutions are ubiquitous in today's enterprise environment. They provide a way for security and IT departments to mitigate the risk of mobile malware and lost/stolen devices when personal devices are being used to access and store corporate resources.\n\nLike any other piece of software being deployed on a large scale, we need to ask the questions \"\"is it secure?\"\", \"\"what are the risks?\"\"; because MDM is a security product itself, this crucial step seems to have been overlooked. With a few exceptions, the security community has not had much to say about vulnerabilities in MDM products and this is likely due to the extremely restrictive licensing requirements to gain access to the software.\n\nThis talk focuses on vulnerabilities in MDM products themselves. Through a number of penetration tests we have conducted on our clients, we have discovered and leveraged critical vulnerabilities in MDM solutions to gain access to sensitive information. We will provide an overview of these vulnerabilities, some of which seem to be systemic across a number of products.\""
  },
  "Torrey": {
    "author": "",
    "description": "This talk will cover the concept of translation lookaside buffer (TLB) splitting for code hiding and how the evolution of the Intel x86 architecture has rendered previous techniques obsolete and new techniques to perform TLB-splitting on modern hardware. After requisite background is provided, a timeline of how TLB-splitting was used for both defensive (PaX memory protections) and offensive purposes (Shadow Walker root-kit) and how the new Intel Core i-series processors fundamentally changed the TLB architecture, breaking those technologies. The talk will then move to the new research, the author's method for splitting a TLB on Core i-series and newer processors and how it can again be used for defensive (MoRE code-injection detection) and offensive purposes (EPT Shadow Walker root-kit).\n\nAfter the timeline, details on how to perform and leverage TLB-splitting with the EPT Shadow Walker root-kit is used to present one version of memory to defensive tools for validation and a different (and possibly malicious) version to the CPU for execution, effectively hiding a root-kit from anti-virus or anti-patching systems. A demo of this memory changing and hiding will be shown and results from the research presented.",
    "plaintextTitle": "MoRE Shadow Walker: The Progression of TLB-Splitting on x86",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Torrey-MoRE-Shadow-Walker-The-Progression-Of-TLB-Splitting-On-x86-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Torrey-MoRE-Shadow-Walker-The-Progression-Of-TLB-Splitting-On-x86.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=yrFqaF-gd0g"
      }
    ],
    "youtubeDescription": "By Jacob Torrey\n\n\"This talk will cover the concept of translation lookaside buffer (TLB) splitting for code hiding and how the evolution of the Intel x86 architecture has rendered previous techniques obsolete and new techniques to perform TLB-splitting on modern hardware. After requisite background is provided, a timeline of how TLB-splitting was used for both defensive (PaX memory protections) and offensive purposes (Shadow Walker root-kit) and how the new Intel Core i-series processors fundamentally changed the TLB architecture, breaking those technologies. The talk will then move to the new research, the author's method for splitting a TLB on Core i-series and newer processors and how it can again be used for defensive (MoRE code-injection detection) and offensive purposes (EPT Shadow Walker root-kit).\n\nAfter the timeline, details on how to perform and leverage TLB-splitting with the EPT Shadow Walker root-kit is used to present one version of memory to defensive tools for validation and a different (and possibly malicious) version to the CPU for execution, effectively hiding a root-kit from anti-virus or anti-patching systems. A demo of this memory changing and hiding will be shown and results from the research presented.\""
  },
  "Pearce": {
    "author": "Thomas",
    "description": "MultiPath TCP (MPTCP) is an extension to TCP that enables sessions to use multiple network endpoints and multiple network paths at the same time, and to change addresses in the middle of a connection. MPTCP works transparently over most existing network infrastructure, yet very few security and network management tools can correctly interpret MPTCP streams. With MPTCP network security is changed: how do you secure traffic when you can't see it all and when the endpoint addresses change in the middle of a connection?\n\nThis session shows you how MPTCP breaks assumptions about how TCP works, and how it can be used to evade security controls. We will also show tools and strategies for understanding and mitigating the risk of MPTCP-capable devices on a network.",
    "plaintextTitle": "Multipath TCP: Breaking Today's Networks with Tomorrow's Protocols",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Pearce-Multipath-TCP-Breaking-Todays-Networks-With-Tomorrows-Protocols-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Pearce-Multipath-TCP-Breaking-Todays-Networks-With-Tomorrows-Protocols.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Pearce-Multipath-TCP-Breaking-Todays-Networks-With-Tomorrows-Protocols-Tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Ss2zmwzKG3k"
      }
    ],
    "youtubeDescription": "By Catherine Pearce and Patrick Thomas\n\n\"MultiPath TCP (MPTCP) is an extension to TCP that enables sessions to use multiple network endpoints and multiple network paths at the same time, and to change addresses in the middle of a connection. MPTCP works transparently over most existing network infrastructure, yet very few security and network management tools can correctly interpret MPTCP streams. With MPTCP network security is changed: how do you secure traffic when you can't see it all and when the endpoint addresses change in the middle of a connection?\n\nThis session shows you how MPTCP breaks assumptions about how TCP works, and how it can be used to evade security controls. We will also show tools and strategies for understanding and mitigating the risk of MPTCP-capable devices on a network.\""
  },
  "Fu": {
    "author": "Yue",
    "description": "In this presentation, we introduce a novel computer vision based attack that automatically discloses inputs on a touch enabled device. Our spying camera, including Google Glass, can take a video of the victim tapping on the touch screen and automatically recognize more than 90% of the tapped passcodes from three meters away, even if our naked eyes cannot see those passcodes or anything on the touch screen. The basic idea is to track the movement of the fingertip and use the fingertip's relative position on the touch screen to recognize the touch input. We carefully analyze the shadow formation around the fingertip, apply the optical flow, deformable part-based model (DPM) object detector, k-means clustering and other computer vision techniques to automatically track the touching fingertip and locate the touched points. Planar homography is then applied to map the estimated touched points to a software keyboard in a reference image. Our work is substantially different from related work on blind recognition of touch inputs. We target passcodes where no language model can be applied to correct estimated touched keys. We are interested in scenarios such as conferences and similar gathering places where a Google Glass, webcam, or smartphone can be used for a stealthy attack. Extensive experiments were performed to demonstrate the impact of this attack. As a countermeasure, we design a context aware Privacy Enhancing Keyboard (PEK) which pops up a randomized keyboard on Android systems for sensitive information such as password inputs and shows a conventional QWERTY keyboard for normal inputs.",
    "plaintextTitle": "My Google Glass Sees Your Passwords!",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Fu-My-Google-Glass-Sees-Your-Passwords-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Fu-My-Google-Glass-Sees-Your-Passwords.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ctHwINsIg4c"
      }
    ],
    "youtubeDescription": "By Xinwen Fu, Qinggang Yue, and Zhen Ling\n\nIn this presentation, we introduce a novel computer vision based attack that automatically discloses inputs on a touch enabled device. Our spying camera, including Google Glass, can take a video of the victim tapping on the touch screen and automatically recognize more than 90% of the tapped passcodes from three meters away, even if our naked eyes cannot see those passcodes or anything on the touch screen. The basic idea is to track the movement of the fingertip and use the fingertip's relative position on the touch screen to recognize the touch input. We carefully analyze the shadow formation around the fingertip, apply the optical flow, deformable part-based model (DPM) object detector, k-means clustering and other computer vision techniques to automatically track the touching fingertip and locate the touched points. Planar homography is then applied to map the estimated touched points to a software keyboard in a reference image. Our work is substantially different from related work on blind recognition of touch inputs. We target passcodes where no language model can be applied to correct estimated touched keys. We are interested in scenarios such as conferences and similar gathering places where a Google Glass, webcam, or smartphone can be used for a stealthy attack. Extensive experiments were performed to demonstrate the impact of this attack. As a countermeasure, we design a context aware Privacy Enhancing Keyboard (PEK) which pops up a randomized keyboard on Android systems for sensitive information such as password inputs and shows a conventional QWERTY keyboard for normal inputs."
  },
  "Holcomb": {
    "author": "",
    "description": "Through extensive analysis, ISE has identified dozens of previously undisclosed, critical security vulnerabilities in numerous network storage devices from a handful of goto manufacturers (manufacturers: e.g., Seagate, D-Link, Netgear). Vulnerabilities of network-attached storage not only expose stored data, but also provide a vantage point for further PWNAGE of the network infrastructure on which the storage system sits. Our research efforts focused on identifying vulnerabilities that obtained administrative access (such as command injection, directory traversal, authentication bypass, memory corruption, backdoors, etc.), and quantifying the associated risk.\n\nThe attacks we developed demonstrate how unauthenticated attackers can compromise and control storage systems with and without user interaction.\n\nNetwork based storage systems are used in millions of homes, schools, government agencies, and businesses around the world for data storage and retrieval. With today's dependence on Internet based services, virtualization technologies, and the need to access data from anywhere, storage systems are relied on more than ever. Similar to other network hardware (e.g., routers), these devices are purchased and installed by IT teams and home consumers with the expectation that the system is protected from the infamous hacker.\n\nThis presentation focuses on \"how to,\" and the implications of compromising network based storage systems, but will conclude that the absence of security in not only storage hardware, but networking hardware in general, has left data unprotected and millions of networks vulnerable to exploitation.\n\nThroughout this presentation, several vulnerabilities will be exploited in order to achieve the glorious ro0t (#) shell! This presentation will also showcase a self-propagating worm that is capable of exploiting network storage systems on both internal and external networks!",
    "plaintextTitle": "Network Attached Shell: N.A.S.ty Systems that Store Network Accessible Shells",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Holcomb-Network-Attached-Shell-N-A-S-ty-Systems-That-Store-Network-Accessible-Shells.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=3ZcEMqc7ivQ"
      }
    ],
    "youtubeDescription": "By Jacob Holcomb\n\n\"Through extensive analysis, ISE has identified dozens of previously undisclosed, critical security vulnerabilities in numerous network storage devices from a handful of goto manufacturers (manufacturers: e.g., Seagate, D-Link, Netgear). Vulnerabilities of network-attached storage not only expose stored data, but also provide a vantage point for further PWNAGE of the network infrastructure on which the storage system sits. Our research efforts focused on identifying vulnerabilities that obtained administrative access (such as command injection, directory traversal, authentication bypass, memory corruption, backdoors, etc.), and quantifying the associated risk.\n\nThe attacks we developed demonstrate how unauthenticated attackers can compromise and control storage systems with and without user interaction.\n\nNetwork based storage systems are used in millions of homes, schools, government agencies, and businesses around the world for data storage and retrieval. With today's dependence on Internet based services, virtualization technologies, and the need to access data from anywhere, storage systems are relied on more than ever. Similar to other network hardware (e.g., routers), these devices are purchased and installed by IT teams and home consumers with the expectation that the system is protected from the infamous hacker.\n\nThis presentation focuses on \"\"how to,\"\" and the implications of compromising network based storage systems, but will conclude that the absence of security in not only storage hardware, but networking hardware in general, has left data unprotected and millions of networks vulnerable to exploitation.\n\nThroughout this presentation, several vulnerabilities will be exploited in order to achieve the glorious ro0t (#) shell! This presentation will also showcase a self-propagating worm that is capable of exploiting network storage systems on both internal and external networks!\""
  },
  "Jaycox": {
    "author": "Allen",
    "description": "\"We failed to connect the dots. And so, we had to come up with a way of helping to stop attacks.\" - General Keith B. Alexander, Former Director of NSA, at Black Hat USA 2013. \n\nThere's been lot of hyperbole and misinformation about the NSA's collection of Americans' phone calls, emails, address books, buddy lists, calling records, online video game chats, financial documents, browsing history, video chats, text messages, and calendar data. Currently, a debate rages involving privacy advocates, the Congressional House and Senate Committees on Judiciary and Intelligence, and the Intelligence Community about the NSA's activities. Join the debate by hearing former Staff Director of the House Intelligence Committee and current Managing Director of Beacon Global Strategies, Michael Allen, debate and discuss these issues with Mark Jaycox, a Legislative Analyst with the Electronic Frontier Foundation who specializes in user privacy and surveillance law. The conversation will include an overview of the NSA's activities, argue positions for and against the activities, and end with questions from the audience.",
    "plaintextTitle": "\"Nobody is Listening to Your Phone Calls.\" Really? A Debate and Discussion on the NSA's Activities",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5yB3n9fu-rM"
      }
    ],
    "youtubeDescription": "https://edwardsnowden.com/ | https://freedom.press\n\nCopyright © 2013 Praxis Films / Laura Poitras\nFAIR USE NOTICE: This video contains copyrighted material the use of which has not always been specifically authorized by the copyright owner. We are making such material available in an effort to advance understanding of environmental, political, human rights, economic, democracy, scientific, and social justice issues, etc. We believe this constitutes a 'fair use' of any such copyrighted material as provided for in section 107 of the US Copyright Law. In accordance with Title 17 U.S.C. Section 107, the material in this video is distributed without profit to those who have expressed a prior interest in receiving the included information for research and educational purposes."
  },
  "Mesbahi": {
    "author": "Swinnen",
    "description": "Lately, many popular anti-virus solutions claim to be the most effective against unknown and obfuscated malware. Most of these solutions are rather vague about how they supposedly achieve this goal, making it hard for end-users to evaluate and compare the effectiveness of the different products on the market. This presentation presents empirically discovered results on the various implementations of these methods per solution, which reveal that some anti-virus solutions have more mature methods to detect x86 malware than others, but all of them are lagging behind when it comes to x64 malware. In general, at most three stages were identified in the detection process: Static detection, Code Emulation detection (before execution), and Runtime detection (during execution). New generic evasion techniques are presented for each of these stages. These techniques were implemented by an advanced, dedicated packer, which is an approach commonly taken by malware developers to evade detection of their malicious toolset. Two brand new packing methods were developed for this cause. By combining several evasion techniques, real-world malicious executables with a high detection rate were rendered completely undetected to the prying eyes of anti-virus products.",
    "plaintextTitle": "One Packer to Rule Them All: Empirical Identification, Comparison, and Circumvention of Current Antivirus Detection Techniques",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mesbahi-One-Packer-To-Rule-Them-All-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mesbahi-One-Packer-To-Rule-Them-All.pdf",
        "type": "Presentation"
      }
    ]
  },
  "Beitnes": {
    "author": "",
    "description": "OpenStack is an Open Source project that allows you to manage a cloud of VMs that has grown into a widely adopted platform. The issue with having a centralized Infrastructure As A Service (IAAS) is that if you compromise the management cluster you can attack everything it controls, which is a lot at Yahoo scale. How do you keep your OpenStack cluster safe? What do you do when a management system, hypervisor, or VM is compromised? \n\nThis talk will discuss specific things that you can do to harden your cluster and make it more difficult for a large compromise to happen. If a compromise is detected, there are specific steps you can take to reduce the impact as well as to gather intelligence you can take action on. The impact of different network architectures on OpenStack security will also be discussed.  Throughout this talk, I will use examples from the Yahoo deployments of OpenStack clusters to illustrate what Yahoo does to secure its systems and ensure our users continue to trust us.",
    "plaintextTitle": "OpenStack Cloud at Yahoo Scale: How to Avoid Disaster",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Beitnes-OpenStack-Cloud-At-Yahoo Scale-How-To-Avoid-Disaster.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7JSNdavXzis"
      }
    ],
    "youtubeDescription": "By Anders Beitnes\n\n\"OpenStack is an Open Source project that allows you to manage a cloud of VMs that has grown into a widely adopted platform. The issue with having a centralized Infrastructure As A Service (IAAS) is that if you compromise the management cluster you can attack everything it controls, which is a lot at Yahoo scale. How do you keep your OpenStack cluster safe? What do you do when a management system, hypervisor, or VM is compromised? \n\nThis talk will discuss specific things that you can do to harden your cluster and make it more difficult for a large compromise to happen. If a compromise is detected, there are specific steps you can take to reduce the impact as well as to gather intelligence you can take action on. The impact of different network architectures on OpenStack security will also be discussed.  Throughout this talk, I will use examples from the Yahoo deployments of OpenStack clusters to illustrate what Yahoo does to secure its systems and ensure our users continue to trust us.\""
  },
  "Litchfield": {
    "author": "",
    "description": "The Oracle data redaction service is a new feature introduced with Oracle 12c. It allows sensitive data, such as PII, to be redacted to prevent it being exposed to attackers. On paper this sounds like a great idea, but in practice, Oracle's implementation is vulnerable to multiple attacks that allow an attacker to bypass the redaction and launch privilege escalation attacks.",
    "plaintextTitle": "Oracle Data Redaction is Broken",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=L6Fc9S0xUtY"
      }
    ],
    "youtubeDescription": "Slides here: https://defcon.org/images/defcon-22/dc-22-presentations/Litchfield/DEFCON-22-David-Litchfield-Oracle-Data-Redaction-is-Broken.pdf\n\nOracle Data Redaction is Broken \nDavid Litchfield SECURITY SPECIALIST, DATACOM TSS \nThe Oracle data redaction service is a new feature introduced with Oracle 12c. It allows sensitive data, such as PII, to be redacted or masked to prevent it being exposed to attackers. On paper this sounds like a great idea but in practice, Oracle's implementation is vulnerable to multiple attacks that allow an attacker to trivially bypass the masking and launch privilege escalation attacks.\n\nDavid Litchfield is a computer security researcher with a special interest in buffer overflow exploitation and database systems. He has written and contributed to several books including the Shellcoder's Handbook, The Database Hacker's Handbook and the Oracle Hacker's Handbook. He spends his spare time diving with great white sharks.\n\nTwitter: @dlitchfield"
  },
  "Riancho": {
    "author": "",
    "description": "From no access at all, to the company Amazon's root account, this talk will teach attendees about the components used in cloud applications like: EC2, SQS, IAM, RDS, meta-data, user-data, Celery; and how misconfigurations in each can be abused to gain access to operating systems, database information, application source code, and Amazon's services through its API.\n\nThe talk will follow a knowledgeable intruder from the first second after identifying a vulnerability in a cloud-deployed Web application and all the steps he takes to reach the root account for the Amazon user.\n\nExcept for the initial vulnerability, a classic remote file included in a Web application which grants access to the front-end EC2 instance, all the other vulnerabilities and weaknesses exploited by this intruder are going to be cloud-specific.\n\nThe tools used by this intruder are going to be released after the talk and will provide the following features:\n\n - Enumerate access to AWS services for current IAM role\n - Use poorly configured IAM role to create new AWS user\n - Extract current AWS credentials from meta-data, .boto.cfg, environment variables, etc.\n - Clone DB to access information stored in snapshot\n - Inject raw Celery task for pickle attack",
    "plaintextTitle": "Pivoting in Amazon Clouds",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Riancho-Pivoting-In-Amazon-Clouds-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Riancho-Pivoting-In-Amazon-Clouds.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Riancho-Nimbostratus-Target-Tool.zip",
        "type": "Source"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Riancho-Nimbostratus-Tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=2NF4LjjwoZw"
      }
    ],
    "youtubeDescription": "By Andres Riancho\n\n\"From no access at all, to the company Amazon's root account, this talk will teach attendees about the components used in cloud applications like: EC2, SQS, IAM, RDS, meta-data, user-data, Celery; and how misconfigurations in each can be abused to gain access to operating systems, database information, application source code, and Amazon's services through its API.\n\nThe talk will follow a knowledgeable intruder from the first second after identifying a vulnerability in a cloud-deployed Web application and all the steps he takes to reach the root account for the Amazon user.\n\nExcept for the initial vulnerability, a classic remote file included in a Web application which grants access to the front-end EC2 instance, all the other vulnerabilities and weaknesses exploited by this intruder are going to be cloud-specific.\n\nThe tools used by this intruder are going to be released after the talk and will provide the following features:\n\n - Enumerate access to AWS services for current IAM role\n - Use poorly configured IAM role to create new AWS user\n - Extract current AWS credentials from meta-data, .boto.cfg, environment variables, etc.\n - Clone DB to access information stored in snapshot\n - Inject raw Celery task for pickle attack\""
  },
  "Wojtczuk": {
    "author": "",
    "description": "Hypervisors have become a key element of both cloud and client computing. It is without doubt that hypervisors are going to be commonplace in future devices, and play an important role in the security industry. In this presentation, we discuss in detail the various lessons learnt whilst building and breaking various common hypervisors. In particular, we take a trip down memory lane and examine vulnerabilities found in all the popular hypervisors that have led to breakouts. To add some spice, we will talk about details of four not-yet-discussed vulnerabilities we recently discovered.\n\nOne of the key value propositions of hypervisors, as they relate to security, is to shrink the attack surface. However, in the quest for new features and functionality some trade-offs are made, which can prove to be fatal. While discussing the particular problems, we will examine what the strong (and weak) security-related features of hypervisors are. We compare the attack surface of hypervisors with that of user mode applications and operating systems kernels, and show that the purpose and design of the hypervisor significantly changes its attack surface size. Most importantly, we make a fact-based argument that many hypervisors aren't designed with security in mind. We show how superfluous code and poor design can be punished by demonstrating real examples of hypervisor breakouts.\n\nThe presentation ends with lessons learnt, and recommendations for hypervisor design and approaches that can be taken to harden them.",
    "plaintextTitle": "Lessons Learned from Eight Years of Breaking Hypervisors",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Wojtczuk-Lessons-Learned-From-Eight-Years-Of-Breaking-Hypervisors-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Wojtczuk-Lessons-Learned-From-Eight-Years-Of-Breaking-Hypervisors.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=PJWJjb0uxXE"
      }
    ],
    "youtubeDescription": "By Rafal Wojtczuk\n\n\"Hypervisors have become a key element of both cloud and client computing. It is without doubt that hypervisors are going to be commonplace in future devices, and play an important role in the security industry. In this presentation, we discuss in detail the various lessons learnt whilst building and breaking various common hypervisors. In particular, we take a trip down memory lane and examine vulnerabilities found in all the popular hypervisors that have led to breakouts. To add some spice, we will talk about details of four not-yet-discussed vulnerabilities we recently discovered.\n\nOne of the key value propositions of hypervisors, as they relate to security, is to shrink the attack surface. However, in the quest for new features and functionality some trade-offs are made, which can prove to be fatal. While discussing the particular problems, we will examine what the strong (and weak) security-related features of hypervisors are. We compare the attack surface of hypervisors with that of user mode applications and operating systems kernels, and show that the purpose and design of the hypervisor significantly changes its attack surface size. Most importantly, we make a fact-based argument that many hypervisors aren't designed with security in mind. We show how superfluous code and poor design can be punished by demonstrating real examples of hypervisor breakouts.\n\nThe presentation ends with lessons learnt, and recommendations for hypervisor design and approaches that can be taken to harden them.\""
  },
  "Zaichkowsky": {
    "author": "",
    "description": "To most people, Point of Sale (POS) systems with integrated payment processing are a black box where magic happens. Financial criminals breach hundreds of merchants each year, displaying a better understanding of how these systems operate than the dealer technicians that install and maintain them. With an understanding of POS architecture, integrated payment processing, and weaknesses in the technology, security professionals can better protect local businesses, major retailers, and developers handling payment card information. In this session, attendees will learn and see how POS components operate, their integration points, and the flow of payment data including where it's most vulnerable. A live demonstration will show exactly what sensitive data is passed in the clear by both magstripe and EMV chip readers, mapping it from peripheral all the way through the electronic payments infrastructure. Common attack vectors will then be presented, building on that architectural knowledge. Finally, top attack mitigations will be provided to save businesses from being breached and the disastrous losses that result.",
    "plaintextTitle": "Point of Sale System Architecture and Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Zaichkowsky-Point-Of-Sale System-Architecture-And-Security.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=MWCmXOwlUpA"
      }
    ],
    "youtubeDescription": "By Lucas Zaichkowsky\n\nTo most people, Point of Sale (POS) systems with integrated payment processing are a black box where magic happens. Financial criminals breach hundreds of merchants each year, displaying a better understanding of how these systems operate than the dealer technicians that install and maintain them. With an understanding of POS architecture, integrated payment processing, and weaknesses in the technology, security professionals can better protect local businesses, major retailers, and developers handling payment card information. In this session, attendees will learn and see how POS components operate, their integration points, and the flow of payment data including where it's most vulnerable. A live demonstration will show exactly what sensitive data is passed in the clear by both magstripe and EMV chip readers, mapping it from peripheral all the way through the electronic payments infrastructure. Common attack vectors will then be presented, building on that architectural knowledge. Finally, top attack mitigations will be provided to save businesses from being breached and the disastrous losses that result."
  },
  "Branco": {
    "author": "Negreira-Barbosa",
    "description": "Malware is widely acknowledged as a growing threat with hundreds of thousands of new samples reported each week. Analysis of these malware samples has to deal with this significant quantity but also with the defensive capabilities built into malware. Malware authors use a range of evasion techniques to harden their creations against accurate analysis. The evasion techniques aim to disrupt attempts of disassembly, debugging or analyze in a virtualized environment.  Two years ago, in 2011, we presented (with other researchers) at Black Hat USA a wide range of anti-reverse engineering techniques that malware were currently employing. For each technique, we documented how it works, we created an algorithm to detect its usage, and we provided statistics on the technique prevalence in a 4 million samples database. We also provided a fully-working PoC implementing each of the techniques (either in C or Assembly). Our expectation was that the AV industry would use our ideas (proven with the prevalence numbers) to significantly improve the malware prevention coverage. Nothing changed. In the meanwhile, we improved our detection algorithms, fixed bugs, and expanded the research to 12+ million samples.  In this talk, we are going to give another try and demonstrate the prevalence of more than 50 non-defensive additional characteristics found in modern malware. Additionally to that, we also extended our previous research demonstrating what the malware does once it detects it is being analyzed. The resulting data will help security companies and researchers around the world to focus their attention on making their tools and processes more efficient to rapidly avoid the malware authors' countermeasures.  This first of its kind, comprehensive catalog of malware characteristics was compiled by the paper's authors by researching some techniques employed by malware, and in the process new detections were proposed and developed. The underlying malware sample database has an open architecture that allows researchers not only to see the results of the analysis, but also to develop and plug-in new analysis capabilities.",
    "plaintextTitle": "Prevalent Characteristics in Modern Malware",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Branco-Prevalent-Characteristics-In-Modern-Malware.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5KkuesPPC0c"
      }
    ],
    "youtubeDescription": "By Rodrigo BSDaemon and Gabriel Negreira Barbosa\n\n\"Malware is widely acknowledged as a growing threat with hundreds of thousands of new samples reported each week. Analysis of these malware samples has to deal with this significant quantity but also with the defensive capabilities built into malware. Malware authors use a range of evasion techniques to harden their creations against accurate analysis. The evasion techniques aim to disrupt attempts of disassembly, debugging or analyze in a virtualized environment.\n\nTwo years ago, in 2011, we presented (with other researchers) at Black Hat Las Vegas a wide range of anti-reverse engineering techniques that malware were currently employing. For each technique, we documented how it works, we created an algorithm to detect its usage, and we provided statistics on the technique prevalence in a 4 million samples database. We also provided a fully-working PoC implementing each of the techniques (either in C or Assembly).  Our expectation was that the AV industry would use our ideas (proven with the prevalence numbers) to significantly improve the malware prevention coverage. Nothing changed.  In the meanwhile, we improved our detection algorithms, fixed bugs, and expanded the research to 12+ million samples.\n\nIn this talk, we are going to give another try and demonstrate the prevalence of more than 50 non-defensive additional characteristics found in modern malware. Additionally to that, we also extended our previous research demonstrating what the malware does once it detects it is being analyzed. The resulting data will help security companies and researchers around the world to focus their attention on making their tools and processes more efficient to rapidly avoid the malware authors' countermeasures.\n\nThis first of its kind, comprehensive catalog of malware characteristics was compiled by the paper's authors by researching some techniques employed by malware, and in the process new detections were proposed and developed. The underlying malware sample database has an open architecture that allows researchers not only to see the results of the analysis, but also to develop and plug-in new analysis capabilities.\""
  },
  "Niemczyk": {
    "author": "Rao",
    "description": "At the network layer, encrypted tunnels are typically seen as black boxes. Network traffic however, leaks side channel information that can often be analyzed to determine what the tunnel is being used for and the type of content being sent over it. Probabilistic algorithms will be explored that can analyze this side channel information and identify application protocols within the tunnel. An open-source toolkit containing the algorithms/attacks presented will be released.",
    "plaintextTitle": "Probabilistic Spying on Encrypted Tunnels",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Niemczyk-Probabilist-Spying-On-Encrypted-Tunnels.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Niemczyk-Pacumen.tar-Tool.gz",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=WKp4PPEFDLk"
      }
    ],
    "youtubeDescription": "By Brandon Niemczyk and Prasad Rao\n\nAt the network layer, encrypted tunnels are typically seen as black boxes.  Network traffic however, leaks side channel information that can often be analyzed to determine what the tunnel is being used for and the type of content being sent over it.  Probabilistic algorithms will be explored that can analyze this side channel information and identify application protocols within the tunnel.  An open-source toolkit containing the algorithms / attacks presented will be released."
  },
  "Weis": {
    "author": "",
    "description": "Recent revelations of the NSA ANT program illustrated the many well-known and low-cost physical and firmware attacks that can compromise data in-use and system integrity. These attacks have become more concerning as more computing infrastructure runs outside an organization's physical control.\n\nThis talk will review several such attacks, including SMM bootkits, \"cold booting,\" and malicious devices. We'll discuss several existing tools and technologies that can mitigate these risk such as Trusted Execution Technology (TXT) and memory encryption technologies. We will also discuss how upcoming technologies such as Software Guard Extensions (SGX), Enhanced Privacy ID (EPID), and TPM 2.0 can help protect against firmware and physical threats.",
    "plaintextTitle": "Protecting Data In-Use from Firmware and Physical Attacks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Weis-Protecting-Data-In-Use-From-Firmware-And-Physical-Attacks-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Weis-Protecting-Data-In-Use-From-Firmware-And-Physical-Attacks.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=edNkIc6L9Qo"
      }
    ],
    "youtubeDescription": "By Steve Weis\n\n\"Recent revelations of the NSA ANT program illustrated the many well-known and low-cost physical and firmware attacks that can compromise data in-use and system integrity. These attacks have become more concerning as more computing infrastructure runs outside an organization's physical control.\n\nThis talk will review several such attacks, including SMM bootkits, \"\"cold booting,\"\" and malicious devices. We'll discuss several existing tools and technologies that can mitigate these risk such as Trusted Execution Technology (TXT) and memory encryption technologies. We will also discuss how upcoming technologies such as Software Guard Extensions (SGX), Enhanced Privacy ID (EPID), and TPM 2.0 can help protect against firmware and physical threats.\""
  },
  "Rios": {
    "author": "",
    "description": "Modern facilities (such as corporate headquarters) are marvels of engineering. These buildings employ numerous embedded and software systems to help ensure convenience, efficiency, and even security. The door that unlocks after you swipe your badge is managed by an access control system. The lights and even power to your building are managed by a facility management system. These invisible embedded and software systems make modern life in the corporate headquarters convenient and comfortable. What if someone were to take over these systems? Join us as we demonstrate what can happen when these systems are compromised. We'll cover various vulnerabilities that exist in access control systems, facility management systems, and other systems that support modern buildings. We'll show real examples of how these systems can be exploited to unlock the front door to your corporate headquarters, disrupt business operations, and even shut the lights off in your building.",
    "plaintextTitle": "Owning a Building: Exploiting Access Control and Facility Management Systems ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Rios/Asia-14-Rios-Owning-A-Building-Exploiting-Access-Control-And-Facility-Management.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=wvO3puWSGgQ"
      }
    ],
    "youtubeDescription": ""
  },
  "Wang": {
    "author": "",
    "description": "The Font Scaler engine is widely used in Microsoft Windows and Mac OS operating systems for rendering TrueType/OpenType fonts. It was first introduced in 1989. Later, to improve the performance of the Windows NT operating system, Microsoft decided to move the engine from user mode to kernel mode. This enhancement does improve the performance, but it also brings security issues. Specifically, Font Scaler engine represents a significant kernel attack surface, and it is perhaps the most easily accessible point which can be reached remotely. For example, the famous Duqu malware well demonstrated vulnerabilities in this engine in 2011.  Many things make the font engine vulnerable. Such as the complexity of font file format, the enhancement of the Font Scaler engine (i.e., moving from user mode to kernel), the assumptions about the interactions between the font engine and its clients (win32k.sys), and the existence of font cache. Among these vulnerabilities, TOCTTOU (Time-of-Check to Time-of-Use) is the most critical type.  In this talk, I'm going to discuss the basic double fetch problem. Furthermore, I would like to present the more stealthy TOCTTOU vulnerability which is introduced by the design of the font engine.",
    "plaintextTitle": "Understanding TOCTTOU in the Windows Kernel Font Scaler Engine",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=61K3kqTRbzU"
      }
    ],
    "youtubeDescription": "By Yu Wang\n\n\"The Font Scaler engine is widely used in Microsoft Windows and Mac OS operating systems for rendering TrueType/OpenType fonts. It was first introduced in 1989. Later, to improve the performance of the Windows NT operating system, Microsoft decided to move the engine from user mode to kernel mode. This enhancement does improve the performance, but it also brings security issues. Specifically, Font Scaler engine represents a significant kernel attack surface, and it is perhaps the most easily accessible point which can be reached remotely. For example, the famous Duqu malware well demonstrated vulnerabilities in this engine in 2011.\n\nMany things make the font engine vulnerable. Such as the complexity of font file format, the enhancement of the Font Scaler engine (i.e., moving from user mode to kernel), the assumptions about the interactions between the font engine and its clients (win32k.sys), and the existence of font cache. Among these vulnerabilities, TOCTTOU (Time-of-Check to Time-of-Use) is the most critical type.\n\nIn this talk, I'm going to discuss the basic double fetch problem. Furthermore, I would like to present the more stealthy TOCTTOU vulnerability which is introduced by the design of the font engine.\""
  },
  "Rosenberg": {
    "author": "",
    "description": "TrustZone has emerged as a leading option for security-critical tasks on ARM devices. It has been billed as a \"100% secure solution\" for restricting access to sensitive device hardware components and securely storing highly privileged information. As a result, TrustZone is used on millions of mobile devices for diverse tasks including managing secure boot, storing DRM keys on behalf of digital content providers, supporting mobile payments, and performing integrity validation on the live operating system kernel.\n\nThis talk will take a deep technical dive into the inner workings of a major vendor's TrustZone kernel, which is currently deployed on millions of Android devices. After providing a review of prior work in TrustZone exploitation, this talk will describe a previously unpublished vulnerability in this TrustZone implementation, and provide details on steps taken to exploit this vulnerability. The talk will conclude with a discussion of the ramifications of this vulnerability and others like it, including a live demonstration of using it to permanently unlock the bootloader of a major Android phone.",
    "plaintextTitle": "Reflections on Trusting TrustZone",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Rosenberg-Reflections-On-Trusting-TrustZone-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Rosenberg-Reflections-on-Trusting-TrustZone.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7w40mS5yLjc"
      }
    ],
    "youtubeDescription": "By Dan Rosenberg\n\n\"TrustZone has emerged as a leading option for security-critical tasks on ARM devices. It has been billed as a \"\"100% secure solution\"\" for restricting access to sensitive device hardware components and securely storing highly privileged information. As a result, TrustZone is used on millions of mobile devices for diverse tasks including managing secure boot, storing DRM keys on behalf of digital content providers, supporting mobile payments, and performing integrity validation on the live operating system kernel.\n\nThis talk will take a deep technical dive into the inner workings of a major vendor's TrustZone kernel, which is currently deployed on millions of Android devices. After providing a review of prior work in TrustZone exploitation, this talk will describe a previously unpublished vulnerability in this TrustZone implementation, and provide details on steps taken to exploit this vulnerability. The talk will conclude with a discussion of the ramifications of this vulnerability and others like it, including a live demonstration of using it to permanently unlock the bootloader of a major Android phone.\""
  },
  "Drake": {
    "author": "",
    "description": "In the last few years, Android has become the world's leading smart phone operating system. Unfortunately, the diversity and sheer number of devices in the ecosystem represent a significant challenge to security researchers. Primarily, auditing and exploit development efforts are less effective when focusing on a single device because each device is like a snowflake: unique.\n\nThis presentation centers around the speaker's approach to dealing with the Android diversity problem, which is often called \"fragmentation.\" To deal with the issue, Joshua created a heterogeneous cluster of Android devices. By examining and testing against multiple devices, you can discover similarities and differences between devices or families of devices. Such a cluster also enables quickly testing research findings or extracting specific information from each device.\n\nWhen you leave this presentation, you will understand why the diversity problem exists and how to tackle it by creating a cluster of your own. Joshua will show you how to build such a cluster, provide a set of tools to manage one, and show you all the ways to leverage it to be more successful in your auditing and exploit development tasks.",
    "plaintextTitle": "Researching Android Device Security with the Help of a Droid Army",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Drake-Researching-Android-Device-Security-With-The-Help-Of-A-Droid-Army.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=dIYeNgU5EAg"
      }
    ],
    "youtubeDescription": "By Joshua 'jduck' Drake\n\n\"In the last few years, Android has become the world's leading smart phone operating system. Unfortunately, the diversity and sheer number of devices in the ecosystem represent a significant challenge to security researchers. Primarily, auditing and exploit development efforts are less effective when focusing on a single device because each device is like a snowflake: unique.\n\nThis presentation centers around the speaker's approach to dealing with the Android diversity problem, which is often called \"\"fragmentation.\"\" To deal with the issue, Joshua created a heterogeneous cluster of Android devices. By examining and testing against multiple devices, you can discover similarities and differences between devices or families of devices. Such a cluster also enables quickly testing research findings or extracting specific information from each device.\n\nWhen you leave this presentation, you will understand why the diversity problem exists and how to tackle it by creating a cluster of your own. Joshua will show you how to build such a cluster, provide a set of tools to manage one, and show you all the ways to leverage it to be more successful in your auditing and exploit development tasks.\""
  },
  "Oh": {
    "author": "",
    "description": "There are many benefits to interacting directly with Flash memory when you're having a hard time finding the correct JTAG connection points. That's especially true when you're a software reverse engineer who delves into hardware reversing. Some vendors intentionally obfuscate JTAG points or remove them to prevent reverse engineering.\n\nIn this talk, we look closely at the process of reverse engineering embedded devices by interacting directly with Flash memory. We also look at reprogramming chips and putting them back on the board. The fun with this method is that you can access the underlying out-of-band data that contains page and block information. As Flash memory is a fragile media, bad blocks or page data contamination are common problems. Whenever you extract data from memory, you should be able to take care of this meta information. When you write back the data, you need to recalculate sums and set the correct flags on these areas. We talk about the chips we've worked on and how we have dealt with the meta information.\n\nThe other entertaining part we'll examine is the file system. Embedded systems that interact directly with Flash memory usually use journaling file systems to avoid repeating write operations on specific pages. The journaling file system is interesting as it contains the entire history of file operations. You can just mount the file system directly from your Linux box or you can write a simple parser to check the history of the file system operations. This feature might give reverse engineers a good view of how Flash memory is programmed and used.",
    "plaintextTitle": "Reverse Engineering Flash Memory for Fun and Benefit",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Oh-Reverse-Engineering-Flash-Memory-For-Fun-And-Benefit-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Oh-Reverse-Engineering-Flash-Memory-For-Fun-And-Benefit.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=hOKWTeiyy-Q"
      }
    ],
    "youtubeDescription": "By Matt Oh\n\n\"There are many benefits to interacting directly with Flash memory when you're having a hard time finding the correct JTAG connection points. That's especially true when you're a software reverse engineer who delves into hardware reversing. Some vendors intentionally obfuscate JTAG points or remove them to prevent reverse engineering.\n\nIn this talk, we look closely at the process of reverse engineering embedded devices by interacting directly with Flash memory. We also look at reprogramming chips and putting them back on the board. The fun with this method is that you can access the underlying out-of-band data that contains page and block information. As Flash memory is a fragile media, bad blocks or page data contamination are common problems. Whenever you extract data from memory, you should be able to take care of this meta information. When you write back the data, you need to recalculate sums and set the correct flags on these areas. We talk about the chips we've worked on and how we have dealt with the meta information.\n\nThe other entertaining part we'll examine is the file system. Embedded systems that interact directly with Flash memory usually use journaling file systems to avoid repeating write operations on specific pages. The journaling file system is interesting as it contains the entire history of file operations. You can just mount the file system directly from your Linux box or you can write a simple parser to check the history of the file system operations. This feature might give reverse engineers a good view of how Flash memory is programmed and used.\""
  },
  "Thomas": {
    "author": "",
    "description": "This presentation walks through the reverse engineering and exploitation of a hardened embedded device and provides certain techniques you can use to exploit similar devices.  The Supra iBox BT is a bluetooth and IR-based physical key storage device used by many real estate professionals in the US.  It is physically hardened, and inside is a hardened MSP430 with a blown JTAG fuse. As MSP430 devices become more common, it is slowly becoming the norm to encounter devices in production with blown JTAG fuses. Previously, this was a significant hurdle. In 2008, Goodspeed described several attacks against the MSP's BSL (bootstrap loader). This presentation will review those attacks and describe the challenges facing a researcher attempting to perform them.  This presentation will demonstrate how to reliably perform successful firmware extraction on a MSP430 with a blown JTAG fuse.\n\nThe second part of the presentation covers what I found inside the Supra iBox firmware, including a demonstration of an exploit that can open any iBox. The presentation will describe the complex and surprisingly effective crypto key management scheme used by Supra. The Supra lock has no internet access, and must rely on the keys (generally smartphones) to perform any necessary synchronization with the internet.  The key management scheme used by the Supra would be interesting to any developer attempting to manage cryptographic keys in embedded devices with occasional internet access.",
    "plaintextTitle": "Reverse-Engineering the Supra iBox: Exploitation of a Hardened MSP430-Based Device",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Thomas-Reverse-Engineering-The-Supra-iBox-Exploitation-Of-A-Hardened MSP430-Based-DeviceSupra.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=bEXbNPMjciA"
      }
    ],
    "youtubeDescription": "By Braden Thomas\n\n\"This presentation walks through the reverse engineering and exploitation of a hardened embedded device and provides certain techniques you can use to exploit similar devices.  The Supra iBox BT is a bluetooth and IR-based physical key storage device used by many real estate professionals in the US.  It is physically hardened, and inside is a hardened MSP430 with a blown JTAG fuse. As MSP430 devices become more common, it is slowly becoming the norm to encounter devices in production with blown JTAG fuses. Previously, this was a significant hurdle. In 2008, Goodspeed described several attacks against the MSP's BSL (bootstrap loader). This presentation will review those attacks and describe the challenges facing a researcher attempting to perform them.  This presentation will demonstrate how to reliably perform successful firmware extraction on a MSP430 with a blown JTAG fuse.\n\nThe second part of the presentation covers what I found inside the Supra iBox firmware, including a demonstration of an exploit that can open any iBox. The presentation will describe the complex and surprisingly effective crypto key management scheme used by Supra.  The Supra lock has no internet access, and must rely on the keys (generally smartphones) to perform any necessary synchronization with the internet.  The key management scheme used by the Supra would be interesting to any developer attempting to manage cryptographic keys in embedded devices with occasional internet access.\""
  },
  "Arsal": {
    "author": "",
    "description": "SAP applications build the business backbone of the largest organizations in the world. In this presentation, exploits will be shown manipulating a business process to extract critical payment and credit card data out of the business backbone. Follow the bird and enjoy tweets of data that will interest you.  ",
    "plaintextTitle": "SAP, Credit Cards, and the Bird That Knows Too Much ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Arsal/Asia-14-Arsal-SAP-Credit-Cards-And-The-Bird-That-Knows-Too-Much.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=K-XUA-ULpUA"
      }
    ],
    "youtubeDescription": ""
  },
  "Santamarta": {
    "author": "",
    "description": "Satellite Communications (SATCOM) play a vital role in the global telecommunications system. We live in a world where data is constantly flowing. It is clear that those who control communications traffic have a distinct advantage. The ability to disrupt, inspect, modify, or re-route traffic provides an invaluable opportunity to carry out attacks.\n\nSATCOM infrastructure can be divided into two major segments, space and ground. Space includes those elements needed to deploy, maintain, track, and control a satellite. Ground includes the infrastructure required to access a satellite repeater from Earth station terminals. \n\nEarth station terminals encompass the equipment located both on the ground and on airplanes and ships; therefore, this segment includes air and sea. This specific portion of the ground segment was the focus of our research. We analyzed devices, from leading SATCOM vendors, used to access services such as: \n\n - Inmarsat-C\n -\tInmarsat BGAN / M2M\n - FleetBroadBand\n - \tSwiftBroadBand\n - Classic Aero Services\n - GMDSS (Global Maritime Distress Safety System)\n - \tSSAS (Ship Security Alert System)\n\nIOActive found that 100% of the devices could be abused. The vulnerabilities we uncovered included multiple backdoors, hardcoded credentials, undocumented and/or insecure protocols or weak encryption algorithms. \n\nThese vulnerabilities allow remote, unauthenticated attackers to fully compromise the affected products. In certain cases no user interaction is required to exploit the vulnerability, just sending a simple SMS or specially crafted message from one ship to another ship can do it.\n\nThe talk will show all the technical details, mainly based on static firmware analysis via reverse engineering, also including a live demo against one of these systems.\n\nShips, aircraft, military personnel, emergency services, media services, and industrial facilities (oil rigs, gas pipelines, water treatment plants, wind turbines, substations, etc.) could all be impacted by these vulnerabilities.",
    "plaintextTitle": "SATCOM Terminals: Hacking by Air, Sea, and Land",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Santamarta-SATCOM-Terminals-Hacking-By-Air-Sea-And-Land-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Santamarta-SATCOM-Terminals-Hacking-By-Air-Sea-And-Land.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=YeKswEamOl4"
      }
    ],
    "youtubeDescription": "\"Satellite Communications (SATCOM) play a vital role in the global telecommunications system. We live in a world where data is constantly flowing. It is clear that those who control communications traffic have a distinct advantage. The ability to disrupt, inspect, modify, or re-route traffic provides an invaluable opportunity to carry out attacks.\n\nSATCOM infrastructure can be divided into two major segments, space and ground. Space includes those elements needed to deploy, maintain, track, and control a satellite. Ground includes the infrastructure required to access a satellite repeater from Earth station terminals.\n\nEarth station terminals encompass the equipment located both on the ground and on airplanes and ships; therefore, this segment includes air and sea. This specific portion of the ground segment was the focus of our research. We analyzed devices, from leading SATCOM vendors, used to access services such as:\n\n- Inmarsat-C\n- Inmarsat BGAN / M2M\n- FleetBroadBand\n- SwiftBroadBand\n- Classic Aero Services\n- GMDSS (Global Maritime Distress Safety System)\n- SSAS (Ship Security Alert System)\n\nIOActive found that 100% of the devices could be abused. The vulnerabilities we uncovered included multiple backdoors, hardcoded credentials, undocumented and/or insecure protocols or weak encryption algorithms.\n\nThese vulnerabilities allow remote, unauthenticated attackers to fully compromise the affected products. In certain cases no user interaction is required to exploit the vulnerability, just sending a simple SMS or specially crafted message from one ship to another ship can do it.\n\nThe talk will show all the technical details, mainly based on static firmware analysis via reverse engineering, also including a live demo against one of these systems.\n\nShips, aircraft, military personnel, emergency services, media services, and industrial facilities (oil rigs, gas pipelines, water treatment plants, wind turbines, substations, etc.) could all be impacted by these vulnerabilities.\""
  },
  "Healey": {
    "author": "",
    "description": "Imagine that twenty years after Johannes Gutenberg invented mechanical movable type, the Pope and the petty princes - in fact, anyone who tried hard enough - had the ability to determine exactly who was printing exactly what.  Worrying about intellectual property theft, privacy or civil rights violations, had those concepts existed, would be missing the point.\n\nThe future of Europe, the future of humanity, would have been profoundly changed, not just for five years but five hundred. If people lost trust in the underlying communication medium, could there even have been a Renaissance or Enlightenment?\n\nUnfortunately, the world is facing this dilemma today as it is possible, even likely, the Internet will not remain as resilient, free, secure, and as awesome, for future generations as it has been for ours. It is under grave threat from data breaches, theft of commercial secrets, the opportunity for widespread disruptive attacks and systemic failures, erection of sovereign borders, and mass surveillance.\n\nThe only truly goal for this new cyber strategy should be to give the defenders the high-ground advantage over attackers.  This is just imaginable with a clever push for new technology, policy, and practice which is applied patiently, internationally, at scale, and with the private sector at the fore.\n\nThis talk will discuss these threats to the Internet and novel approaches to sidestep much of the current unproductive debate over privacy versus security.",
    "plaintextTitle": "Saving Cyberspace",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Healey-Saving-Cyberspace-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Healey-Saving-Cyberspace.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=dXv1Fd6k1QA"
      }
    ],
    "youtubeDescription": "This talk was given at a local TEDx event, produced independently of the TED Conferences. Cyber expert and former White House policy director Jason Healey examines threats looming over the Internet. He warns we must ensure the Internet remains at least as free, and as awesome, for future generations as it has been for ours.\n\nJason Healey is a director at the Atlantic Council in charge of the Cyber Statecraft Initiative. He has published several academic articles, essays, and books on the topic of cyber security and has advised on security measures for corporate, government, and military institutions. He has been identified as the first historian of cyber conflict.\n\nAbout TEDx, x = independently organized event In the spirit of ideas worth spreading, TEDx is a program of local, self-organized events that bring people together to share a TED-like experience. At a TEDx event, TEDTalks video and live speakers combine to spark deep discussion and connection in a small group. These local, self-organized events are branded TEDx, where x = independently organized TED event. The TED Conference provides general guidance for the TEDx program, but individual TEDx events are self-organized.* (*Subject to certain rules and regulations)"
  },
  "FitzPatrick": {
    "author": "",
    "description": "Secure development processes for software have formed, developed, and matured in the past decade to the point where there are well defined categories of security bugs and proven methods to find them. Secure hardware development, on the other hand, is essentially undefined at this point. Most developers of integrated circuits do no hardware security validation, or are secretive about their methods and findings.  This talk will document some pre- and post- silicon validation techniques by applying them to various open-source core designs. It will present a number of examples of actual Verilog security vulnerabilities along with the vulnerable code, and present methods of resolving them. It will conclude by generalizing several hardware security bug categories.",
    "plaintextTitle": "SecSi Product Development: Techniques for Ensuring Secure Silicon Applied to Open-Source Verilog Projects",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-FitzPatrick-SecSi-Product-Development-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-FitzPatrick-SecSi-Product-Development.pdf",
        "type": "Presentation"
      }
    ]
  },
  "Pinto": {
    "author": "",
    "description": "We could all have predicted this with our magical Big Data analytics platforms, but it seems that machine learning is the new hotness in Information Security. A great number of start-ups with 'cy' and 'threat' in their names that claim that their product will defend or detect more effectively than their neighbors' product \"because math.\" And it should be easy to fool people without a PhD or two that math just works.\n\nIndeed, math is powerful and large scale machine learning is an important cornerstone of much of the systems that we use today. However, not all algorithms and techniques are born equal. Machine learning is a very powerful tool box, but not every tool can be applied to every problem and that's where the pitfalls lie.\n\nThis presentation will describe the different techniques available for data analysis and machine learning for information security, and discuss their strengths and caveats. The ghost of marketing past will also show how similar the unfulfilled promises of deterministic and exploratory analysis were, and how to avoid making the same mistakes again. \n\nFinally, the presentation will describe the techniques and feature sets that were developed by the presenter in the past year as a part of his ongoing research project on the subject, in particular he'll present some interesting results obtained since the last presentation at Black Hat USA 2013, and some ideas that could improve the application of machine learning for use in information security, specially in its use as a helper for security analysts in incident detection and response.",
    "plaintextTitle": "Secure Because Math: A Deep-Dive on Machine Learning-Based Monitoring",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Pinto-Secure-Because-Math-A-Deep-Dive-On-Machine-Learning-Based-Monitoring-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Pinto-Secure-Because-Math-A-Deep-Dive-On-Machine-Learning-Based-Monitoring.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=TYVCVzEJhhQ"
      }
    ],
    "youtubeDescription": "Full Abstract:\n\nWe could all have predicted this with our magical Big Data analytics platforms, but it seems that Machine Learning is the new hotness in Information Security. A great number of startups with ‘cy’ and ‘threat’ in their names that claim that their product will defend or detect more effectively than their neighbors' product \"because math\". And it should be easy to fool people without a PhD or two that math just works. \n\nIndeed, math is powerful and large scale machine learning is an important cornerstone of much of the systems that we use today. However, not all algorithms and techniques are born equal. Machine Learning is a most powerful tool box, but not every tool can be applied to every problem and that’s where the pitfalls lie. \n\nThis presentation will describe the different techniques available for data analysis and machine learning for information security, and discuss their strengths and caveats. The Ghost of Marketing Past will also show how similar the unfulfilled promises of deterministic and exploratory analysis were, and how to avoid making the same mistakes again. \n\nFinally, the presentation will describe the techniques and feature sets that were developed by the presenter on the past year as a part of his ongoing research project on the subject, in particular present some interesting results obtained since the last presentation on DEFCON 21, and some ideas that could improve the application of machine learning for use in information security, especially in its use as a helper for security analysts in incident detection and response."
  },
  "Wei": {
    "author": "Zhang",
    "description": "While Google Play has little malware, many vulnerabilities exist in the apps as well as the Android system itself, and aggressive ad libs leak a lot of user privacy information. When they are combined together, more powerful targeted attacks can be conducted.  We will present one practical case of such attacks called \"Sidewinder Targeted Attack.\" It targets victims by intercepting location information reported from ad libs, which can be used to locate targeted areas such as a CEO's office or some specific conference rooms. When the target is identified, \"Sidewinder Targeted Attack\" exploits popular vulnerabilities in ad libs, such as Javascript-binding-over-HTTP or dynamic-loading-over-HTTP, etc.  During the exploit, it is a well-known challenge to call Android services from injected native code due to the lack of Android application context. So we will also demonstrate how attackers can invoke Android services such as taking photos, calling phone numbers, sending SMS, reading/writing the clipboard, etc.  Once intruding into the target, the attackers can exploit several Android vulnerabilities to get valuable privacy information or initiate more advanced attacks. We will reveal how to exploit new vulnerabilities we discovered in this phase.  In this talk, we will show demos using real-world apps downloaded from Google Play.  Although we notified Google, ad vendors and app developers about related issues half a year ago, there are still millions of users under the threat of \"Sidewinder Targeted Attacks\" due to the slow patching/upgrading/fragmentation of the Android ecosystem.",
    "plaintextTitle": "Sidewinder Targeted Attack Against Android in the Golden Age of Ad Libs",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Wei-Sidewinder-Targeted-Attack-Against-Android-In-The-Golden-Age-Of-Ad-Libs.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=mcZMj1HX_hM"
      }
    ],
    "youtubeDescription": "By Tao Wei and Yulong Zhang\n\n\"While Google Play has little malware, many vulnerabilities exist in the apps as well as the Android system itself, and aggressive ad libs leak a lot of user privacy information. When they are combined together, more powerful targeted attacks can be conducted.\n\nWe will present one practical case of such attacks called \"\"Sidewinder Targeted Attack.\"\" It targets victims by intercepting location information reported from ad libs, which can be used to locate targeted areas such as a CEO's office or some specific conference rooms. When the target is identified, \"\"Sidewinder Targeted Attack\"\" exploits popular vulnerabilities in ad libs, such as Javascript-binding-over-HTTP or dynamic-loading-over-HTTP, etc..\n\nDuring the exploit, it is a well-known challenge to call Android services from injected native code due to the lack of Android application context. So we will also demonstrate how attackers can invoke Android services such as taking photos, calling phone numbers, sending SMS, reading/writing the clipboard, etc.\n\nOnce intruding into the target, the attackers can exploit several Android vulnerabilities to get valuable privacy information or initiate more advanced attacks. We will reveal how to exploit new vulnerabilities we discovered in this phase.\n\nIn this talk, we will show demos using real-world apps downloaded from Google Play.\n\nAlthough we notified Google, ad vendors and app developers about related issues half a year ago, there are still millions of users under the threat of \"\"Sidewinder Targeted Attacks\"\" due to the slow patching/upgrading/fragmentation of the Android ecosystem.\""
  },
  "Jin": {
    "author": "Hernandez",
    "description": "The Nest thermostat is a smart home automation device that aims to learn about your heating and cooling habits to help optimize your scheduling and power usage. Debuted in 2010, the smart NEST devices have been proved a huge success that Google spent $3.2B to acquire the whole company. However, the smartness of the thermostat also breeds security vulnerabilities, similar to all other smart consumer electronics. The severity of security breach has not been fully embraced due to the traditional assumption that thermostat cannot function more than a thermostat even though users are enjoying its smartness.Equipped with two ARM cores, in addition to WiFi and ZigBee chips, this is no ordinary thermostat. In this presentation, we will demonstrate our ability to fully control a Nest with a USB connection within seconds (in our demonstration, we will show that we can plug in a USB for 15 seconds and walk away with a fully rooted Nest). Although OS level security checks are available and are claimed to be very effective in defeating various attacks, instead of attacking the higher level software, we went straight for the hardware and applied OS-guided hardware attacks. As a result, our method bypasses the existing firmware signing and allows us to backdoor the Nest software in any way we choose. With Internet access, the Nest could now become a beachhead for an external attacker. The Nest thermostat is aware of when you are home and when you are on vacation, meaning a compromise of the Nest would allow remote attackers to learn the schedule of users. Furthermore, saved data, including WiFi credentials, would now become available to attackers. Besides its original role of monitor the user's behavior, the smart Nest is now a spy rooted inside a house fully controlled by attackers.Using the USB exploit mentioned above, we have loaded a custom compiled kernel with debug symbols added. This enables us to explore the software protocols used by the nest, such as Nest Weave, in order to find potential vulnerabilities that can be remotely exploited. Loading a custom kernel into the system also shows how we have obtained total control of the device, introducing the potential for rootkits, spyware, rogue services and other network scanning methods, further allowing the compromise of other nodes within the local network.",
    "plaintextTitle": "Smart Nest Thermostat: A Smart Spy in Your Home",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Jin-Smart-Nest-Thermostat-A-Smart-Spy-In-Your-Home-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Jin-Smart-Nest-Thermostat-A-Smart-Spy-In-Your-Home.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=DKE-pWA68Ac"
      }
    ],
    "youtubeDescription": "By Yier Jin, Grant Hernandez, and Daniel Buentello\n\n\"The Nest thermostat is a smart home automation device that aims to learn about your heating and cooling habits to help optimize your scheduling and power usage. Debuted in 2010, the smart NEST devices have been proved a huge success that Google spent $3.2B to acquire the whole company. However, the smartness of the thermostat also breeds security vulnerabilities, similar to all other smart consumer electronics. The severity of security breach has not been fully embraced due to the traditional assumption that thermostat cannot function more than a thermostat even though users are enjoying its smartness.\n\nEquipped with two ARM cores,in addition to WiFi and ZigBee chips, this is no ordinary thermostat. In this presentation, we will demonstrate our ability to fully control a Nest with a USB connection within seconds (in our demonstration, we will show that we can plug in a USB for 15 seconds and walk away with a fully rooted Nest). Although OS level security checks are available and are claimed to be very effective in defeating various attacks, instead of attacking the higher level software, we went straight for the hardware and applied OS-guided hardware attacks. As a result, our method bypasses the existing firmware signing and allows us to backdoor the Nest software in any way we choose. With Internet access, the Nest could now become a beachhead for an external attacker. The Nest thermostat is aware of when you are home and when you are on vacation, meaning a compromise of the Nest would allow remote attackers to learn the schedule of users. Furthermore, saved data, including WiFi passwords, would now become available to attackers also. Besides its original role of monitor the user's behavior, the smart Nest is now a spy rooted inside a house fully controlled by attackers.\n\nWe are currently exploiting the vulnerability of Nest's proprietary peer-to-peer protocol, Nest Weave, in order to enable stealthy remote control or data exfiltration. Hopefully, by the time we give a talk at Black Hat, we would be able to skip the 15 seconds USB connection and control the Nest remotely.\""
  },
  "Gallingani": {
    "author": "",
    "description": "We identified a set of vulnerabilities that common Android Apps programming (mis)practices might introduce.  We developed an effective static analyzer to automatically detect a set of vulnerabilities rising by incorrect Android's Inter-Component Communication usage.  We completed our analysis by automatically demonstrating whether the vulnerabilities identified by static analysis can actually be exploited or not at run-time by an attacker.  We adopted a formal and sound approach to automatically produce malicious payloads able to reproduce the dangerous behavior in vulnerable applications.  The lack of exhaustive sanity checks when receiving messages from unknown sources is the evidence of the underestimation of this problem in real world application development.",
    "plaintextTitle": "Static Detection and Automatic Exploitation of Intent Message Vulnerabilities in Android Applications",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=clVBOP7XJM8"
      }
    ],
    "youtubeDescription": "By Daniele Gallingani\n\n\"We identified a set of vulnerabilities that common Android Apps programming (mis)practices might introduce.\n\nWe developed an effective static analyzer to automatically detect a set of vulnerabilities rising by incorrect Android‰Ûªs Inter-Component Communication usage.\n\nWe completed our analysis by automatically demonstrating whether the vulnerabilities identified by static analysis can actually be exploited or not at run-time\n\nby an attacker.\n\nWe adopt a formal and sound approach to automatically produce malicious payloads able to reproduce the dangerous behavior in vulnerable applications.\n\n\n\nThe lack of exhaustive sanity checks when receiving messages from unknown sources is the evidence of the underestimation of this problem in real world application development.\""
  },
  "Lanier": {
    "author": "Lum",
    "description": "Despite a plethora of data security and protection standards and certifications, companies and their systems are still leaking information like a sieve. Data Loss Prevention (DLP) solutions have often been touted as the \"silver bullet\" that will keep corporations from becoming the next headline. With deployment models ranging from a fat agent on an endpoint, to a blinky-lights box surveilling all network traffic, to some unified threat management gateway with DLP secret sauce, these solutions are ripe for bypass - or worse.\n\nThis talk will discuss our research into a handful of DLP solutions, including their capabilities and their shortcomings. We will demonstrate flaws in administrative and programmatic interfaces and the inspection engines themselves.",
    "plaintextTitle": "Stay Out of the Kitchen: A DLP Security Bake-Off",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KWfIgq3iZ8A"
      }
    ],
    "youtubeDescription": "By Zach Lanier and Kelly Lum\n\n\"Despite a plethora of data security and protection standards and certifications, companies and their systems are still leaking information like a sieve. Data Loss Prevention (DLP) solutions have often been touted as the \"\"silver bullet\"\" that will keep corporations from becoming the next headline. With deployment models ranging from a fat agent on an endpoint, to a blinky-lights box surveilling all network traffic, to some unified threat management gateway with DLP secret sauce, these solutions are ripe for bypass - or worse.\n\nThis talk will discuss our research into a handful of DLP solutions, including their capabilities and their shortcomings. We will demonstrate flaws in administrative and programmatic interfaces and the inspection engines themselves.\""
  },
  "deGraaf": {
    "author": "",
    "description": "SVG is an XML-based format for vector graphics. Modern web browsers support it natively and allow it to be styled using CSS and manipulated using JavaScript. It is less well-known that SVG can contain its own JavaScript and can import external scripts and stylesheets. Consequently, from a browser security perspective, SVG must be treated like HTML; treating it like JPEG will lead to great suffering.",
    "plaintextTitle": "SVG: Exploiting Browsers without Image Parsing Bugs",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-DeGraaf-SVG-Exploiting-Browsers-Without-Image-Parsing-Bugs.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=dxL0570oDIg"
      }
    ],
    "youtubeDescription": "By Rennie deGraaf\n\nSVG is an XML-based format for vector graphics. Modern web browsers support it natively and allow it to be styled using CSS and manipulated using JavaScript. It is less well-known that SVG can contain its own JavaScript and can import external scripts and stylesheets. Consequently, from a browser security perspective, SVG must be treated like HTML; treating it like JPEG will lead to great suffering."
  },
  "Lehmann": {
    "author": "Sadeghi",
    "description": "Return-oriented Programming (ROP) is a powerful exploitation technique used in nearly every exploit today. It maliciously combines short code snippets (gadgets) residing in shared libraries and the executable to bypass data execution prevention (DEP). As a consequence, several new control-flow integrity (CFI) mechanisms and tools have been recently proposed to thwart ROP attacks. For instance, kBouncer and ROPGuard both restrict return instructions to target a call-preceded instruction. In addition, ROPecker and kBouncer force the adversary to invoke a long instruction sequence after a pre-defined number of short gadgets thereby preventing an attacker to execute a sequence of ROP gadgets. Some of the proposed mechanisms have already been integrated in Microsoft's Windows EMET tool. In general, these mechanisms significantly reduce the gadget space and make it challenging for an attacker to mount ROP attacks.   While others have hypothesized or even exploited weaknesses in some of these emerging CFI techniques, we provide the first comprehensive analysis thereof. Specifically, we conducted a security analysis of various recently proposed CFI solutions (including kBouncer, ROPGuard, ROPecker, and CFI for COTS binaries). Our key contribution is in demonstrating that these techniques can be effectively undermined even when all their protection mechanisms are combined. In particular, we transformed existing (publicly available) exploits against Windows (which are detected by Microsoft EMET) into more stealthy attacks that bypass all recently proposed CFI techniques. We show that our performed transformations require no specific assumptions, and demonstrate that a 1MB Windows library (kernel32.dll) is already sufficient to derive a (turing-) complete gadget set using only call-preceded gadgets.",
    "plaintextTitle": "The Beast is in Your Memory: Return-Oriented Programming Attacks Against Modern Control-Flow Integrity Protection Techniques",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=iCaw0dwlIRU"
      }
    ],
    "youtubeDescription": "By Ahmad-Reza Sadeghi and Daniel Lehmann\n\n\"Return-oriented Programming (ROP) is a powerful exploitation technique used in nearly every exploit today. It maliciously combines short code snippets (gadgets) residing in shared libraries and the executable to bypass data execution prevention (DEP). As a consequence, several new control-flow integrity (CFI) mechanisms and tools have been recently proposed to thwart ROP attacks. For instance, kBouncer and ROPGuard both restrict return instructions to target a call-preceded instruction. In addition, ROPecker and kBouncer force the adversary to invoke a long instruction sequence after a pre-defined number of short gadgets thereby preventing an attacker to execute a sequence of ROP gadgets. Some of the proposed mechanisms have already been integrated in Microsoft's Windows EMET tool. In general, these mechanisms significantly reduce the gadget space and make it challenging for an attacker to mount ROP attacks. \n\nWhile others have hypothesized or even exploited weaknesses in some of these emerging CFI techniques, we provide the first comprehensive analysis thereof. Specifically, we conducted a security analysis of various recently proposed CFI solutions (including kBouncer, ROPGuard, ROPecker, and CFI for COTS binaries). Our key contribution is in demonstrating that these techniques can be effectively undermined even when all their protection mechanisms are combined. In particular, we transformed existing (publicly available) exploits against Windows (which are detected by Windows EMET) into more stealthy attacks that bypass all recently proposed CFI techniques. We show that our performed transformations require no specific assumptions, and demonstrate that a 1MB Windows library (kernel32.dll) is already sufficient to derive a (turing-) complete gadget set using only call-preceded gadgets.\""
  },
  "Delignat-Lavaud": {
    "author": "",
    "description": "SSL has been around for decades and yet it keeps happening: new attacks are being discovered against TLS at a steady rate. The past year has seen its share of rogue CA certificates and critical vulnerabilities in TLS libraries that we have come to expect. In this talk, I will present no less than three new attacks against the use of TLS on the web. The first one relies on a long-known cryptographic weakness in the protocol that can be combined with long-known issues in TLS implementations to re-enable a flavor of the 2009 renegotiation attack that was thought to be fixed. The second one exploits the truncation weakness known since SSL2 but left unsolved to bypass anti-stripping defenses (strict transport security) and steal secure cookies. The last one exploits vulnerabilities in the deployment of HTTPS, in particular, how HTTP servers process requests and manage certificates and sessions, to reach the holy grail of TLS attacks: full server impersonation of several thousands of websites, including Microsoft, Apple, Twitter, PayPal. The three attacks have strong common points: they rely on an attacker that operates both at the TLS and HTTP levels, and they exploit misunderstandings and false assumptions between TLS libraries and applications.\n\nIn the course of this talk, you will learn about the full capabilities of the \"beastly\" attacker that operates jointly at the transport and application levels and how they can be exploited. You will also learn how to configure your HTTPS server to avoid being vulnerable to our virtual host confusion attacks, for which no simple universal fix exists. Lastly, I will try to disprove some misconceptions about TLS and privacy in the context of powerful network attackers.",
    "plaintextTitle": "The BEAST Wins Again: Why TLS Keeps Failing to Protect HTTP",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Delignat-The-BEAST-Wins-Again-Why-TLS-Keeps-Failing-To-Protect-HTTP-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Delignat-The-BEAST-Wins-Again-Why-TLS-Keeps-Failing-To-Protect-HTTP.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=mOzAofijqYI"
      }
    ],
    "youtubeDescription": "By Antoine Delignat-Lavaud\n\n\"SSL has been around for decades and yet it keeps happening: new attacks are being discovered against TLS at a steady rate. The past year has seen its share of rogue CA certificates and critical vulnerabilities in TLS libraries that we have come to expect. In this talk, I will present no less than three new attacks against the use of TLS on the web. The first one relies on a long-known cryptographic weakness in the protocol that can be combined with long-known issues in TLS implementations to re-enable a flavor of the 2009 renegotiation attack that was thought to be fixed. The second one exploits the truncation weakness known since SSL2 but left unsolved to bypass anti-stripping defenses (strict transport security) and steal secure cookies. The last one exploits vulnerabilities in the deployment of HTTPS, in particular, how HTTP servers process requests and manage certificates and sessions, to reach the holy grail of TLS attacks: full server impersonation of several thousands of websites, including Microsoft, Apple, Twitter, PayPal. The three attacks have strong common points: they rely on an attacker that operates both at the TLS and HTTP levels, and they exploit misunderstandings and false assumptions between TLS libraries and applications.\n\nIn the course of this talk, you will learn about the full capabilities of the \"\"beastly\"\" attacker that operates jointly at the transport and application levels and how they can be exploited. You will also learn how to configure your HTTPS server to avoid being vulnerable to our virtual host confusion attacks, for which no simple universal fix exists. Lastly, I will try to disprove some misconceptions about TLS and privacy in the context of powerful network attackers.\""
  },
  "Ford": {
    "author": "Hofmann",
    "description": "Security research is a dangerous business.  \n\nThe threat of lawsuits or even prosecution hangs heavy over the heads of white hat hackers as well as black hats.  From Dmitry Skylarov being prosecuted for cracking ebook crypto back in 2001, to Weev being prosecuted today for exposing flaws in AT&T's website security, the legal landscape is littered with potential landmines for those trying to improve Internet and software security. When a major company like Google can be sued for billions over its interception of unencrypted WiFi signals, what's a wireless security researcher to do?  When an Internet luminary like Aaron Swartz can be threatened with decades of jail time for his open data activism, what's your average pen tester supposed to think?  How serious are these threats - and what can researchers do to avoid them, and maybe even fix the law?  \n\nTwo veteran digital rights lawyers - one who counsels companies and defends hackers, and another who is an expert in the DC policy game - and the lead strategist of a major security firm will use a game show format to share examples of legally risky research and ask the question: \"Computer Crime or Legitimate Research?\" Using the answer to that question, we'll start gaming out how to craft legislation that would provide a sensible security research exception to laws like the Wiretap Act, the Digital Millennium Copyright Act, and the Computer Fraud and Abuse Act.",
    "plaintextTitle": "The Big Chill: Legal Landmines that Stifle Security Research and How to Disarm Them",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Ford-Big-Chill.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=8UUIFyr-85Q"
      }
    ],
    "youtubeDescription": "By Trey Ford, Marcia Hofmann, and Kevin Bankston\n\n\"Security research is a dangerous business.  \n\nThe threat of lawsuits or even prosecution hangs heavy over the heads of white hat hackers as well as black hats.  From Dmitry Skylarov being prosecuted for cracking ebook crypto back in 2001, to Weev being prosecuted today for exposing flaws in AT&T's website security, the legal landscape is littered with potential landmines for those trying to improve Internet and software security. When a major company like Google can be sued for billions over its interception of unencrypted WiFi signals, what's a wireless security researcher to do?  When an Internet luminary like Aaron Swartz can be threatened with decades of jail time for his open data activism, what's your average pen tester supposed to think?  How serious are these threats - and what can researchers do to avoid them, and maybe even fix the law?  \n\nTwo veteran digital rights lawyers - one who counsels companies and defends hackers, and another who is an expert in the DC policy game - and the lead strategist of a major security firm will use a game show format to share examples of legally risky research and ask the question: \"\"Computer Crime or Legitimate Research?\"\" Using the answer to that question, we'll start gaming out how to craft legislation that would provide a sensible security research exception to laws like the Wiretap Act, the Digital Millennium Copyright Act, and the Computer Fraud and Abuse Act.\""
  },
  "Mateski": {
    "author": "Devost",
    "description": "While it might be convenient to think of cyberadversaries as ones and zeros, the reality is that systems are attacked and defended by human beings. As a result, it is important to understand the role deception plays in network operations. This presentation draws upon traditional and emerging research on deception and associated game theories to help the audience understand how attackers might deceive them, how to recognize that deception, and how defenders can also deceive their attackers.",
    "plaintextTitle": "The Devil Does Not Exist - The Role of Deception in Cyber",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mateski-The-Devil-Does-Not-Exist-The-Role-Of-Deception-In-Cyber.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=PpFpOnviDSY"
      }
    ],
    "youtubeDescription": "By Mark Mateski and Matt Devost\n\nWhile it might be convenient to think of cyberadversaries as ones and zeros, the reality is that systems are attacked and defended by human beings. As a result, it is important to understand the role deception plays in network operations. This presentation draws upon traditional and emerging research on deception and associated game theories to help the audience understand how attackers might deceive them, how to recognize that deception, and how defenders can also deceive their attackers."
  },
  "Raymond": {
    "author": "Conti",
    "description": "On today's increasingly militarized Internet, companies, non-profits, activists, and individual hackers are forced to melee with nation-state class adversaries.  Just as one should never bring a knife to a gun fight, a network defender should not rely on tired maxims such as \"perimeter defense\" and \"defense in depth.\"  Today's adversaries are well past that.  This talk teaches you how to tap what we call the Library of Sparta - the collective written expertise codified into military doctrine.  Hidden in plain sight, vast free libraries contain the time-tested wisdom of combat at the tactical, operational, and strategic levels.  This is the playbook nation-state adversaries are using to target and attack you. This talk will help you better understand how adversaries will target your organization, and it will help you to employ military processes and strategies in your defensive operations. These techniques scale from the individual and small team level all the way up to online armies.  This talk isn't a dry index into the library of doctrine, we provide entirely new approaches and examples about how to translate and employ doctrinal concepts in your current operations.\n\nMany people in the computer security community use words like \"OPSEC,\" \"Kill Chain,\" and \"intelligence-driven\" without fully understanding the underlying concepts. Even worse, many show their ignorance by using military jargon incorrectly, thereby alienating clients, customers, and colleagues.  These concepts are powerful and should not be ignored, but they must be well understood before they can be leveraged in your network.  \n\nThis talk will include topics such as deception, electronic warfare, operations security, intelligence preparation of the battlefield, human intelligence collection, targeting, psychological operations, information operations, maneuver, and military cryptanalysis, among numerous others.  Conventional wisdom at Black Hat is that that attacker will always win.  Attackers have a clear intelligence advantage over defenders when it comes to vulnerabilities, malware, and open source information.  A key point of the talk will be helping defenders generate the intelligence, information, and disinformation advantage necessary to turn the tables.  You will leave this talk with an entirely new arsenal of military-grade strategies that will help you advance your work beyond the individual and small-team level and will prepare you to take on the most advanced adversaries.",
    "plaintextTitle": "The Library of Sparta",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Raymond-The-Library-Of-Sparta-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Raymond-The-Library-Of-Sparta.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=pUaFz5WUIJg"
      }
    ],
    "youtubeDescription": "By David Raymond, Greg Conti, and Tom Cross\n\n\"On today's increasingly militarized Internet, companies, non-profits, activists, and individual hackers are forced to melee with nation-state class adversaries.  Just as one should never bring a knife to a gun fight, a network defender should not rely on tired maxims such as \"\"perimeter defense\"\" and \"\"defense in depth.\"\"  Today's adversaries are well past that.  This talk teaches you how to tap what we call the Library of Sparta - the collective written expertise codified into military doctrine.  Hidden in plain sight, vast free libraries contain the time-tested wisdom of combat at the tactical, operational, and strategic levels.  This is the playbook nation-state adversaries are using to target and attack you. This talk will help you better understand how adversaries will target your organization, and it will help you to employ military processes and strategies in your defensive operations. These techniques scale from the individual and small team level all the way up to online armies.  This talk isn't a dry index into the library of doctrine, we provide entirely new approaches and examples about how to translate and employ doctrinal concepts in your current operations.\n\nMany people in the computer security community use words like \"\"OPSEC,\"\" \"\"Kill Chain,\"\" and \"\"intelligence-driven\"\" without fully understanding the underlying concepts. Even worse, many show their ignorance by using military jargon incorrectly, thereby alienating clients, customers, and colleagues.  These concepts are powerful and should not be ignored, but they must be well understood before they can be leveraged in your network.  \n\nThis talk will include topics such as deception, electronic warfare, operations security, intelligence preparation of the battlefield, human intelligence collection, targeting, psychological operations, information operations, maneuver, and military cryptanalysis, among numerous others.  Conventional wisdom at Black Hat is that that attacker will always win.  Attackers have a clear intelligence advantage over defenders when it comes to vulnerabilities, malware, and open source information.  A key point of the talk will be helping defenders generate the intelligence, information, and disinformation advantage necessary to turn the tables.  You will leave this talk with an entirely new arsenal of military-grade strategies that will help you advance your work beyond the individual and small-team level and will prepare you to take on the most advanced adversaries.\""
  },
  "Novikov": {
    "author": "",
    "description": "Memcached is a distributed memory caching system. It is in great demand in big-data Internet projects as it allows reasonably sped up web applications by caching data in RAM. Cached data often includes user sessions and other operational information.\n\nThis talk is based on research of different memcached wrappers to popular web application development platforms, such as Go, Ruby, Java, Python, PHP, Lua, and .NET. The primary goal is determining input validation issues at key-value data which could be used to inject arbitrary commands to memcached protocol.\n\nAs a result, the Speaker found a way to do something like \"SQL Injection attacks,\" but on memcached service. Such an attack in practice leads to different effects from authentication bypass to execution of arbitrary interpreter's code. It's a real world problem found on security audits and exists on different popular web applications.",
    "plaintextTitle": "The New Page of Injections Book: Memcached Injections",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Novikov-The-New-Page-Of-Injections-Book-Memcached-Injections-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Novikov-The-New-Page-Of-Injections-Book-Memcached-Injections-WP.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=K4OWPdMLi64"
      }
    ],
    "youtubeDescription": "By Ivan Novikov\n\n\"Memcached is a distributed memory caching system. It is in great demand in big-data Internet projects as it allows reasonably sped up web applications by caching data in RAM. Cached data often includes user sessions and other operational information.\n\nThis talk is based on research of different memcached wrappers to popular web application development platforms, such as Go, Ruby, Java, Python, PHP, Lua, and .NET. The primary goal is determining input validation issues at key-value data which could be used to inject arbitrary commands to memcached protocol.\n\nAs a result, the Speaker found a way to do something like \"\"SQL Injection attacks,\"\" but on memcached service. Such an attack in practice leads to different effects from authentication bypass to execution of arbitrary interpreter's code. It's a real world problem found on security audits and exists on different popular web applications.\""
  },
  "James": {
    "author": "Bambenek",
    "description": "In March of this year, a Romanian man killed himself and his 4-year old son because of a ransomware he received after visiting adult websites. This \"police impersonation\" malware instructed him to pay a massive fine or else go to jail for 11 years. Ransomware isn't a new threat; however, it introduced new life with CryptoLocker, the very first variant to perform encryption correctly, thussignificantly inhibiting security researchers and their typical countermeasures. Due to its unique nature, CryptoLocker is one of the few current malware campaigns that spawned its own working group focused around remediation. As time progressed, other ransomware copycat campaigns emerged, some of which got media attention even though they were nothing but vaporware.  This talk will focus on what the threat intelligence community did in response to this threat, including the development of near-time tracking of its infrastructure and what can be learned in order to manage new threats as they emerge.",
    "plaintextTitle": "The New Scourge of Ransomware: A Study of CryptoLocker and Its Friends",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=X994Rdt-36o"
      }
    ],
    "youtubeDescription": "By Lance James and John Bambenek\n\n\"In March of this year, a Romanian man killed himself and his 4-year old son because of a ransomware he received after visiting adult websites. This \"\"police impersonation\"\" malware instructed him to pay a massive fine or else go to jail for 11 years. Ransomware isn't a new threat; however, it introduced new life with CryptoLocker, the very first variant to perform encryption correctly, thus significantly inhibiting security researchers and their typical countermeasures. Due to its unique nature, CryptoLocker is one of the few current malware campaigns that spawned its own working group focused around remediation. As time progressed, other ransomware copycat campaigns emerged, some of which got media attention even though they were nothing but vaporware.\n\nThis talk will focus on what the threat intelligence community did in response to this threat, including the development of near-time tracking of its infrastructure and what can be learned in order to manage new threats as they emerge.\""
  },
  "Schneier": {
    "author": "",
    "description": "The last of the protection-detection-response triad to get any real attention, incident response is big business these days.  I plan on stepping back and looking at both the economic and psychological forces that affect incident response as both a business and a technical activity.  Nothing seems to be able to keep sufficiently skilled and motivated attackers out of a network.  Can incident response save the day?",
    "plaintextTitle": "The State of Incident Response",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=u54Radu2bF0"
      }
    ],
    "youtubeDescription": "The last of the protection-detection-response triad to get any real attention, incident response is big business these days. I plan on stepping back and looking at both the economic and psychological forces that affect incident response as both a business and a technical activity. Nothing seems to be able to keep sufficiently skilled and motivated attackers out of a network. Can incident response save the day?"
  },
  "Gorenc": {
    "author": "Spelman",
    "description": "Attacking the modern browser and its plugins is becoming harder. Vendors are employing numerous mitigation technologies to increase the cost of exploit development. An attacker is now forced to uncover multiple vulnerabilities to gain privileged-level code execution on his targets. First, an attacker needs to find a vulnerability, leak an address to get around ASLR, and bypass DEP to gain code execution within the renderer process. The attacker then needs to bypass the application sandbox to elevate his privileges, which will allow him to do something interesting. Our journey begins at the sandbox and investigates some of the more obscure techniques used to violate this trust boundary.\n\nWhat should you focus on when you are auditing a sandbox implementation? There are the traditional approaches: find a memory corruption vulnerability in IPC message handling, attack the kernel to get SYSTEM-level privilege escalation, or abuse shared memory regions. Sure, any of these will work but they may not be the easiest way. Our presentation will examine four bypass techniques successfully used in winning entries at this year's Pwn2Own contest. We will analyze the attack vector used, root causes, and possible fixes for each technique. These uncommon, yet highly effective, approaches have been used to bypass the most advanced application sandboxes in use today, and understanding them will provide a unique perspective for those working to find and verify such bypasses.",
    "plaintextTitle": "Thinking Outside the Sandbox - Violating Trust Boundaries in Uncommon Ways",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Gorenc-Thinking-Outside-The-Sandbox-Violating-Trust-Boundaries-In-Uncommon-Ways-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Gorenc-Thinking-Outside-The-Sandbox-Violating-Trust-Boundaries-In-Uncommon-Ways.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=eeklS-lvDx4"
      }
    ],
    "youtubeDescription": "By Brian Gorenc and Jasiel Spelman\n\n\"Attacking the modern browser and its plugins is becoming harder. Vendors are employing numerous mitigation technologies to increase the cost of exploit development. An attacker is now forced to uncover multiple vulnerabilities to gain privileged-level code execution on his targets. First, an attacker needs to find a vulnerability, leak an address to get around ASLR, and bypass DEP to gain code execution within the renderer process. The attacker then needs to bypass the application sandbox to elevate his privileges, which will allow him to do something interesting. Our journey begins at the sandbox and investigates some of the more obscure techniques used to violate this trust boundary.\n\nWhat should you focus on when you are auditing a sandbox implementation? There are the traditional approaches: find a memory corruption vulnerability in IPC message handling, attack the kernel to get SYSTEM-level privilege escalation, or abuse shared memory regions. Sure, any of these will work but they may not be the easiest way. Our presentation will examine four bypass techniques successfully used in winning entries at this year's Pwn2Own contest. We will analyze the attack vector used, root causes, and possible fixes for each technique. These uncommon, yet highly effective, approaches have been used to bypass the most advanced application sandboxes in use today, and understanding them will provide a unique perspective for those working to find and verify such bypasses.\""
  },
  "Trost": {
    "author": "",
    "description": "Cyber indicators are the 'new-er' detection strategy to help dismantle adversarial assaults and the volume of crowdsourced and private community malicious IOCs grows exponentially every day forcing the security industry to create a new must have tool - a threat library.  The effectiveness of every SOC is based on their ability to discover, ingest, analyze, respond to, and pivot off threat intelligence and, historically, an ad-hoc spreadsheet combined with a day of analyst muscle was manageable to maintain and chase IOCs.  However, over the past several years, as crowdsourcing intelligence has become mainstream, the volume of IOCs released by cyber intelligence providers (commercial and public do-gooders), industry blogs, malware repositories, vendor whitepapers, and open source intelligence (OSINT) has turned the spreadsheet firedrill into a bottleneck of operational inefficiencies amongst the typical workflows within an adversary hunting SOC.  This discussion will provide a first-hand operational look from within a large 30+ team DIB SOC and explore the evolution of IOCs, associated SOC workflows, assess IOC overlap by Source, discuss several tools that help manage threat intelligence, and finally some hindsight implementation lessons learned.",
    "plaintextTitle": "Threat Intelligence Library - A New Revolutionary Technology to Enhance the SOC Battle Rhythm!",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=kstOKWL_OEk"
      }
    ],
    "youtubeDescription": "By Ryan Trost\n\nCyber indicators are the 'new-er' detection strategy to help dismantle adversarial assaults and the volume of crowdsourced and private community malicious IOCs grows exponentially every day forcing the security industry to create a new must have tool - a threat library.  The effectiveness of every SOC is based on their ability to discover, ingest, analyze, respond to, and pivot off threat intelligence and, historically, an ad-hoc spreadsheet combined with a day of analyst muscle was manageable to maintain and chase IOCs.  However, over the past several years, as crowdsourcing intelligence has become mainstream, the volume of IOCs released by cyber intelligence providers (commercial and public do-gooders), industry blogs, malware repositories, vendor whitepapers, and open source intelligence (OSINT) has turned the spreadsheet firedrill into a bottleneck of operational inefficiencies amongst the typical workflows within an adversary hunting SOC.  This discussion will provide a first-hand operational look from within a large 30+ team DIB SOC and explore the evolution of IOCs, associated SOC workflows, assess IOC overlap by Source, discuss several tools that help manage threat intelligence, and finally some hindsight implementation lessons learned."
  },
  "Mayer": {
    "author": "Sandin",
    "description": "Attacks on software become increasingly sophisticated over time and while the community has a good understanding of many classes of vulnerabilities that are commonly exploited, the practical relevance of side-channel attacks is much less understood.\n\nOne common side-channel vulnerability that is present in many web applications today are timing side-channels which allow an attacker to extract information based on different response times. These side-channel vulnerabilities are easily introduced wherever sensitive values such as credentials or API keys are processed before responding to a client. Even though there is basic awareness of timing side-channel attacks in the community, they often go unnoticed or are flagged during code audits without a true understanding of their exploitability in practice.\n\nIn this talk, we provide both a tool 'time trial' and guidance on the detection and exploitability of timing side-channel vulnerabilities in common web application scenarios. Specifically, the focus of our presentation is on remote timing attacks, which are performed over a LAN, in a cloud environment, or on the Internet. To illustrate this, we first present experimental timing results that demonstrate how precisely timing can be measured and, more importantly, which timing differences can be distinguished remotely. Second, we compare our results with timing differences that are typically encountered in modern web frameworks and servers. The discussed attack scenarios include database queries, message authentication codes, web API keys, OAuth tokens, and login functions.\n\nOur presentation has significance for a wide spectrum of the conference audience. Attendees in defensive security roles will gain a better understanding of the threat timing side-channel vulnerabilities pose and, based on the demonstrated attacks, will be better able to evaluate the severity and impact of a successful side-channel attack. Attendees in a penetration testing role will learn how to distinguish theoretical timing attacks from legitimately exploitable flaws by using our tool 'time trial'. Finally, attendees focused on research implications will receive a comprehensive update on the state-of-the-art in exploiting timing attacks in practice.",
    "plaintextTitle": "Time Trial: Racing Towards Practical Timing Attacks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mayer-Time-Trial-Racing-Towards-Practical-Timing-Attacks-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Mayer-Time-Trial-Racing-Towards-Practical-Timing-Attacks.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=md6NEmq1n-A"
      }
    ],
    "youtubeDescription": "By Daniel A. Mayer and Joel Sandin\n\n\"Attacks on software become increasingly sophisticated over time and while the community has a good understanding of many classes of vulnerabilities that are commonly exploited, the practical relevance of side-channel attacks is much less understood.\n\nOne common side-channel vulnerability that is present in many web applications today are timing side-channels which allow an attacker to extract information based on different response times. These side-channel vulnerabilities are easily introduced wherever sensitive values such as credentials or API keys are processed before responding to a client. Even though there is basic awareness of timing side-channel attacks in the community, they often go unnoticed or are flagged during code audits without a true understanding of their exploitability in practice.\n\nIn this talk, we provide both a tool 'time trial' and guidance on the detection and exploitability of timing side-channel vulnerabilities in common web application scenarios. Specifically, the focus of our presentation is on remote timing attacks, which are performed over a LAN, in a cloud environment, or on the Internet. To illustrate this, we first present experimental timing results that demonstrate how precisely timing can be measured and, more importantly, which timing differences can be distinguished remotely. Second, we compare our results with timing differences that are typically encountered in modern web frameworks and servers. The discussed attack scenarios include database queries, message authentication codes, web API keys, OAuth tokens, and login functions.\n\nOur presentation has significance for a wide spectrum of the conference audience. Attendees in defensive security roles will gain a better understanding of the threat timing side-channel vulnerabilities pose and, based on the demonstrated attacks, will be better able to evaluate the severity and impact of a successful side-channel attack. Attendees in a penetration testing role will learn how to distinguish theoretical timing attacks from legitimately exploitable flaws by using our tool 'time trial'. Finally, attendees focused on research implications will receive a comprehensive update on the state-of-the-art in exploiting timing attacks in practice.\""
  },
  "Borgaonkar": {
    "author": "Udar",
    "description": "It is said that 80% of the world's population now has a mobile phone. They use mobile devices to make calls, send SMS messages, and to access the Internet via the cellular network infrastructure.  End-users carrying mobile phones 24 hours trust cellular network operators and believe that the provided mobile communication link is secure.\n\nHowever, on the other hand, mobile operators, device manufacturers, OS providers, and baseband suppliers do little to provide best security and privacy features to them. In particular, security capabilities of mobile communications are not shown to the end-users. Hence, it is easy for malicious attackers to mount subsequent attacks using IMSI catcher equipments. Further some hidden features, for example 'silent SMS', are supported in currently used mobile telephony systems but not notified to the end-users when in use. Attackers or illegitimate agencies exploit this weakness to track user movements regularly without the user's consent. \n\nIn this talk, we address these long-standing issues by developing a low-cost, easy-to-use privacy framework based on Android OS. We demonstrate our effort to build an ideal way to protect user privacy. A live demo of framework detecting hidden (in ) security features of mobile communication system will be provided.",
    "plaintextTitle": "Understanding IMSI Privacy",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=E-IPzlptM1A"
      }
    ],
    "youtubeDescription": "By Ravishankar Borgaonkar and Swapnil Udar\n\n\"It is said that 80% of the world's population now has a mobile phone. They use mobile devices to make calls, send SMS messages, and to access the Internet via the cellular network infrastructure.  End-users carrying mobile phones 24 hours trust cellular network operators and believe that the provided mobile communication link is secure.\n\nHowever, on the other hand, mobile operators, device manufacturers, OS providers, and baseband suppliers do little to provide best security and privacy features to them. In particular, security capabilities of mobile communications are not shown to the end-users. Hence, it is easy for malicious attackers to mount subsequent attacks using IMSI catcher equipments. Further some hidden features, for example 'silent SMS', are supported in currently used mobile telephony systems but not notified to the end-users when in use. Attackers or illegitimate agencies exploit this weakness to track user movements regularly without the user's consent. \n\nIn this talk, we address these long-standing issues by developing a low-cost, easy-to-use privacy framework based on Android OS. We demonstrate our effort to build an ideal way to protect user privacy. A live demo of framework detecting hidden (in ) security features of mobile communication system will be provided. \""
  },
  "Reuille": {
    "author": "Hay",
    "description": "The way a human efficiently digests information varies from person-to-person. Scientific studies have shown that some individuals learn better through the presentation of visual/spatial information compared to simply reading text. Why then do vendors expect customers to consume presented data following only the written word method as opposed to advanced graphical representations of the data? We believe this approach is dated.\n\nTo help the neglected visually inclined masses, we decided to create a free and Open Source engine to remove the complexity of creating advanced data visualizations. The ultimate goal of the project was to allow for the visualization of any loosely related data without having to endlessly reformat that data. For the visual/spatial learners, the engine will interpret their own data, whether it be a simple or complex system, and present the results in a way that their brains can understand. \n\nLearning, for visual-spatial learners, takes place all at once, with large chunks of information grasped in intuitive leaps, rather than in the gradual accretion of isolated facts or small steps. For example, a visual-spatial learner can grasp all of the multiplication facts as a related set in a chart much easier and faster than memorizing each fact independently. We believe that some security practitioners might be able to better utilize their respective data sets if provided with an investigative model that their brains can understand.\n\nDuring this presentation, we will show you how you can take any relational data set, quickly massage the format, and visualize the results. We will also share some observations and conclusions drawn from the results of the visualization that may not have appeared in simple text form. We have used this engine within OpenDNS to track CryptoLocker and CryptoDefense ransomware, Red October malware, and the Kelihos botnet. Additionally, specific Syrian Electronic Army (SEA) campaigns, carding sites, and even a map of the Internet via Autonomous Systems have been visualized using the engine.\n\nInteresting data can also be isolated through the use of Python and JavaScript-based plugins that can be easily added to the engine's framework. These plugins affect the way the data is visualized and allow analysts to make sense of their data as it relates to the question they're trying to answer. The \"big picture\" model will help visually inclined incident responders, security analysts, and malware researchers visually stitch together complex data sets without needing a PhD in math or particle physics.",
    "plaintextTitle": "Unveiling the Open Source Visualization Engine for Busy Hackers",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Hay-Unveiling-The-Open-Source-Visualization-Engine-For-Busy-Hackers-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Hay-Unveiling-The-Open-Source-Visualization-Engine-For-Busy-Hackers.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Hay-OpenGraphiti-Black-Hat-2014-Release-Tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=mR_BhumEKcY"
      }
    ],
    "youtubeDescription": "By Andrew Hay and Thibault Reuille\n\n\"The way a human efficiently digests information varies from person-to-person. Scientific studies have shown that some individuals learn better through the presentation of visual/spatial information compared to simply reading text. Why then do vendors expect customers to consume presented data following only the written word method as opposed to advanced graphical representations of the data? We believe this approach is dated.\n\nTo help the neglected visually inclined masses, we decided to create a free and Open Source engine to remove the complexity of creating advanced data visualizations. The ultimate goal of the project was to allow for the visualization of any loosely related data without having to endlessly reformat that data. For the visual/spatial learners, the engine will interpret their own data, whether it be a simple or complex system, and present the results in a way that their brains can understand. \n\nLearning, for visual-spatial learners, takes place all at once, with large chunks of information grasped in intuitive leaps, rather than in the gradual accretion of isolated facts or small steps. For example, a visual-spatial learner can grasp all of the multiplication facts as a related set in a chart much easier and faster than memorizing each fact independently. We believe that some security practitioners might be able to better utilize their respective data sets if provided with an investigative model that their brains can understand.\n\nDuring this presentation, we will show you how you can take any relational data set, quickly massage the format, and visualize the results. We will also share some observations and conclusions drawn from the results of the visualization that may not have appeared in simple text form. We have used this engine within OpenDNS to track CryptoLocker and CryptoDefense ransomware, Red October malware, and the Kelihos botnet. Additionally, specific Syrian Electronic Army (SEA) campaigns, carding sites, and even a map of the Internet via Autonomous Systems have been visualized using the engine.\n\nInteresting data can also be isolated through the use of Python and JavaScript-based plugins that can be easily added to the engine's framework. These plugins affect the way the data is visualized and allow analysts to make sense of their data as it relates to the question they're trying to answer. The \"\"big picture\"\" model will help visually inclined incident responders, security analysts, and malware researchers visually stitch together complex data sets without needing a PhD in math or particle physics.\""
  },
  "Gutierrez": {
    "author": "Komal",
    "description": "One of the latest trends of BYOD solutions is to employ \"Mobile Application Management (MAM),\" which allows organizations to wrap existing applications to perform policy enforcement and data/transport security at the application layer rather than at the device level. Today's organizations face a complex choice: there are a plethora of BYOD application wrapping products on the market, each with their own colorful datasheets and hefty security claims. How well do these BYOD application wrapping solutions stand up to their claims? And perhaps just as important, how well do they defend against real-life mobile threats?\n\nIn this talk we will analyze the application wrapping solutions offered by some of the major commercial BYOD products on the market today. We'll reverse engineer how these application wrapping solutions work for both iOS and Android; as well as, analyze their authentication, cryptography, interprocess communication (IPC), and client-side security control implementations. Finally, we'll explore the security vulnerabilities we've discovered in major vendor products that could result in the compromise of sensitive information.",
    "plaintextTitle": "Unwrapping the Truth: Analysis of Mobile Application Wrapping Solutions",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Gutierrez-Unwrapping-The-Truth-Analysis-Of-Mobile-Application-Wrapping-Solutions.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=TfjnkOI5B18"
      }
    ],
    "youtubeDescription": "By Ron Gutierrez and Stephen Komal\n\n\"One of the latest trends of BYOD solutions is to employ \"\"Mobile Application Management (MAM),\"\" which allows organizations to wrap existing applications to perform policy enforcement and data/transport security at the application layer rather than at the device level. Today's organizations face a complex choice: there are a plethora of BYOD application wrapping products on the market, each with their own colorful datasheets and hefty security claims. How well do these BYOD application wrapping solutions stand up to their claims? And perhaps just as important, how well do they defend against real-life mobile threats?\n\nIn this talk we will analyze the application wrapping solutions offered by some of the major commercial BYOD products on the market today. We'll reverse engineer how these application wrapping solutions work for both iOS and Android; as well as, analyze their authentication, cryptography, interprocess communication (IPC), and client-side security control implementations. Finally, we'll explore the security vulnerabilities we've discovered in major vendor products that could result in the compromise of sensitive information.\""
  },
  "Ozavci": {
    "author": "",
    "description": "Many hosted VoIP service providers are using Cisco hosted collaboration suite and Cisco VoIP solutions. These Cisco hosted VoIP implementations are very similar; they have Cisco Unified Communication services, SIP protocol for IP Phones of tenants, common conference solutions, Skinny protocol for compliance, generic RTP implementation, VOSS Solutions product family for management services for tenants. Tenants use desktop and mobile clients to connect these services. Cisco hosted VoIP implementations and VoIP clients are vulnerable to many attacks, including:  - VLAN attacks, - SIP trust hacking, - Skinny based signaling attacks, - Bypassing authentication and authorization, - Call spoofing, - Eavesdropping, - Desktop/mobile client compromising - Attacks against IP Phone management services; and, - Web based vulnerabilities of the products  The presentation covers Skinny and SIP signaling attacks, 0day bypass technique for call spoofing and billing bypass, LAN attacks against supportive services for IP Phones, desktop and mobile phones, practical 0-day attacks against IP Phone management and tenant services. These attacks are available for desktop and mobile clients too, such as caller ID spoofing and fake messaging to compromise clients, fuzzing VoIP call signaling, MITM attacks and crashing mobile clients. Attacking Cisco VoIP services requires limited knowledge today with the Viproy Penetration Testing Kit (written by the presenter). It has a dozen modules to test trust hacking issues, signaling attacks against SIP services and Skinny services, gaining unauthorized access, call spoofing, brute-forcing VoIP accounts and debugging services using as MITM. Furthermore, Viproy provides these attack modules in a penetration testing environment and full integration. The presentation contains live demonstration of practical VoIP attacks and usage of new Viproy modules.",
    "plaintextTitle": "VoIP Wars: Attack of the Cisco Phones",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Ozavci-VoIP-Wars-Attack-Of-The-Cisco-Phones.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Ozavci-Viproy-1.9.0-Tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=qyXgX6VELHc"
      }
    ],
    "youtubeDescription": "By Fatih Ozavci\n\n\"Many hosted VoIP service providers are using Cisco hosted collaboration suite and Cisco VoIP solutions. These Cisco hosted VoIP implementations are very similar; they have Cisco Unified Communication services, SIP protocol for IP Phones of tenants, common conference solutions, Skinny protocol for compliance, generic RTP implementation, VOSS Solutions product family for management services for tenants. Tenants use desktop and mobile clients to connect these services. Cisco hosted VoIP implementations and VoIP clients are vulnerable to many attacks, including:\n\n - VLAN attacks,\n - SIP trust hacking,\n - Skinny based signaling attacks,\n - Bypassing authentication and authorization,\n - Call spoofing,\n - Eavesdropping,\n - Desktop/mobile client compromising\n - Attacks against IP Phone management services; and,\n - Web based vulnerabilities of the products\n\nThe presentation covers Skinny and SIP signaling attacks, 0day bypass technique for call spoofing and billing bypass, LAN attacks against supportive services for IP Phones, desktop and mobile phones, practical 0-day attacks against IP Phone management and tenant services. These attacks are available for desktop and mobile clients too, such as caller ID spoofing and fake messaging to compromise clients, fuzzing VoIP call signaling, MITM attacks and crashing mobile clients.\nAttacking Cisco VoIP services requires limited knowledge today with the Viproy Penetration Testing Kit (written by the presenter). It has a dozen modules to test trust hacking issues, signaling attacks against SIP services and Skinny services, gaining unauthorized access, call spoofing, brute-forcing VoIP accounts and debugging services using as MITM. Furthermore, Viproy provides these attack modules in a penetration testing environment and full integration. The presentation contains live demonstration of practical VoIP attacks and usage of new Viproy modules.\""
  },
  "Sood": {
    "author": "",
    "description": "Bot herders deploy Command and Control (C&C) panels for commanding and collecting exfiltrated data from the infected hosts on the Internet. To protect C&C panels, bot herders deploy several built-in (software-centric) protection mechanisms to restrict direct access to these C&C panels. However, there exist fundamental mistakes in the design and deployment of these C&C panels that can be exploited to take complete control. This talk discusses about the methodology of launching reverse attacks on the centralized C&C panels to derive intelligence that can be used to build automated solutions. This research reveals how to detect vulnerabilities and configuration flaws in the remote C&C panels and exploit them by following the path of penetration testing.  This talk is derived from the real time research in which several C&C panels were targeted and intelligence was gathered to attack the next set of C&C panels. A number of case studies will be discussed to elaborate step-by-step process of attacking and compromising C&C panels. This talk also demonstrates the use of automated tools authored for making the testing easier for the researchers.",
    "plaintextTitle": "What Goes Around Comes Back Around - Exploiting Fundamental Weaknesses in Botnet C&C Panels!",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Sood-What-Goes-Around-Comes-Back-Around-Exploiting-Fundamental-Weaknesses-In-Botnet-C&C-Panels-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Sood-What-Goes-Around-Comes-Back-Around-Exploiting-Fundamental-Weaknesses-In-Botnet-C&C-Panels.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=gil0zwI-1bM"
      }
    ],
    "youtubeDescription": "By Aditya K Sood\n\nBot herders deploy Command and Control (C&C) panels for commanding and collecting exfiltrated data from the infected hosts on the Internet. To protect C&C panels, bot herders deploy several built-in (software-centric) protection mechanisms to restrict direct access to these C&C panels. However, there exist fundamental mistakes in the design and deployment of these C&C panels that can be exploited to take complete control. This talk discusses about the methodology of launching reverse attacks on the centralized C&C panels to derive intelligence that can be used to build automated solutions. This research reveals how to detect vulnerabilities and configuration flaws in the remote C&C panels and exploit them by following the path of penetration testing.  This talk is derived from the real time research in which several C&C panels were targeted and intelligence was gathered to attack the next set of C&C panels. A number of case studies will be discussed to elaborate step-by-step process of attacking and compromising C&C panels. This talk also demonstrates the use of automated tools authored for making the testing easier for the researchers."
  },
  "Luft": {
    "author": "Koca",
    "description": "Energy Management Protocols (EMPs) are used in a variety of devices and environments. Their purpose is always the same: Controlling and measuring the energy consumption of connected devices. However, most EMPs are designed and implemented for embedded, non-IP environments, such as HDMI or home automation networks. \n\nCisco EnergyWise is a proprietary, closed-source protocol that brings EMPs to the main stream IP networks (e.g. by including EnergyWise clients in widely used notebooks and phones). The resulting broad deployment in a high number of environments, such as office networks (for example, ThinkPad notebooks include an EnergyWise Client in the default configuration) or even data centers (as power consumption is always a huge issue), leads to the potential to cause huge blackouts if EnergyWise is misconfigured or contains vulnerabilities which can be abused.\n\nIn this talk, we will describe our results on the EnergyWise architecture and protocol specification, present the reverse-engineered proprietary protocol , and show how you can hijack enerygwise domains in order to perform DoS service attacks. In addition, we will release our toolkit that implements all of the presented attacks.",
    "plaintextTitle": "When the Lights Go Out: Hacking Cisco EnergyWise",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Luft-When-The-Lights-Go-Out-Hacking-Cisco-EnergyWise-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Luft-When-The-Lights-Go-Out-Hacking-Cisco-EnergyWise.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Luft-When-The-Lights-Go-Out-Hacking-Cisco-EnergyWise-Tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Ym8SdKB3Wo4"
      }
    ],
    "youtubeDescription": "By Matthias Luft and Ayhan Soner Koca\n\n\"Energy Management Protocols (EMPs) are used in a variety of devices and environments. Their purpose is always the same: Controlling and measuring the energy consumption of connected devices. However, most EMPs are designed and implemented for embedded, non-IP environments, such as HDMI or home automation networks. \n\nCisco EnergyWise is a proprietary, closed-source protocol that brings EMPs to the main stream IP networks (e.g. by including EnergyWise clients in widely used notebooks and phones). The resulting broad deployment in a high number of environments, such as office networks (for example, ThinkPad notebooks include an EnergyWise Client in the default configuration) or even data centers (as power consumption is always a huge issue), leads to the potential to cause huge blackouts if EnergyWise is misconfigured or contains vulnerabilities which can be abused.\n\nIn this talk, we will describe our results on the EnergyWise architecture and protocol specification, present the reverse-engineered proprietary protocol , and show how you can hijack enerygwise domains in order to perform DoS service attacks. In addition, we will release our toolkit that implements all of the presented attacks.\""
  },
  "Lders": {
    "author": "",
    "description": "Since the 2010's \"Stuxnet\" sabotage attempt, cyber-security of industrial control systems (ICS) or \"SCADA\" has become a buzzword in industry. The (cyber-) protection of the critical infrastructure became a focal point for governments. Vendors and manufacturers have pushed \"Industrial Security\" appliances onto the market, or claim that their products are now with \"enhanced security\". A cacophony of standards have emerged, and certification schemes are offered. But does this help? Given the increasing interconnectivity of ICS (SmartMeters, later the Internet-of-Things), shouldn't the direction be more towards standard IT than sticking to a dedicated ICS IT? Why is it that I can patch a computer centre over night, but not a control system within a year? This presentation will not give the answers but outline why control system cyber-security sucks and which hurdles we encountered to handle ICS cyber-security like that of our computer centres' A change of paradigm is needed, and this change must start with people and not with technology.",
    "plaintextTitle": "Why Control System Cyber-Security Sucks...",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Luders-Why-Control-System-Cyber-Security-Sucks.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=4Ec3sTkcSKQ"
      }
    ],
    "youtubeDescription": "By Dr. Stefan Lüders\n\nSince the 2010’s “Stuxnet” sabotage attempt, cyber-security of industrial control systems (ICS) or “SCADA” has become a buzzword in industry. The (cyber-)protection of the critical infrastructure became a focal point for governments. Vendors and manufacturers have pushed “Industrial Security” appliances onto the market, or claim that their products are now with “enhanced security”. A cacophony of standards have emerged, and certification schemes are offered. But does this help? Given the increasing interconnectivity of ICS (SmartMeters, later the Internet-of-Things), shouldn’t the direction be more towards standard IT than sticking to a dedicated ICS IT? Why is it that I can patch a computer centre over night, but not a control system within a year? This presentation will not give the answers but outline why control system cyber-security sucks and which hurdles we encountered to handle ICS cyber-security like that of our computer centres… A change of paradigm is needed, and this change must start with people and not with technology."
  },
  "Hathaway": {
    "author": "Myers",
    "description": "Compromised credentials are a key predatory weapon in the attackers arsenal, and this isn't changing in the foreseeable future. This talk will systematically explore why they can be prevented but never cut off completely, and how to leverage this knowledge in detection. In closing, we will pick apart IoCs focused on Pass-the-Hash (PtH), while detailing more efficient detection techniques focused on misused, donated, or otherwise compromised credentials.",
    "plaintextTitle": "Why You Need to Detect More Than PtH",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Hathaway-Why-You-Need-To-Detect-More-Than-PtH-WP.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Hathaway-Why-You-Need-To-Detect-More-Than-PtH.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=fXgZKFlw13I"
      }
    ],
    "youtubeDescription": "By Matt Hathaway and Jeff Myers\n\nCompromised credentials are a key predatory weapon in the attackers arsenal, and this isn't changing in the foreseeable future. This talk will systematically explore why they can be prevented but never cut off completely, and how to leverage this knowledge in detection. In closing, we will pick apart IoCs focused on Pass-the-Hash (PtH), while detailing more efficient detection techniques focused on misused, donated, or otherwise compromised credentials."
  },
  "van-Sprundel": {
    "author": "",
    "description": "Ever wondered about the attack surface of graphics drivers on Windows? Are they similar to other drivers? Do they expose ioctl's? In this talk, all those questions will be answered and more. Whether you're a security researcher, a developer looking for some security guidance when writing these drivers, or just generally curious about driver internals, there's something here for all.   The research done focuses both on C/C++ code when available, as well as reverse engineering of these drivers.",
    "plaintextTitle": "Windows Kernel Graphics Driver Attack Surface",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-vanSprundel-Windows-Kernel-Graphics-Driver-Attack-Surface.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=uzPTyXQ1Oys"
      }
    ],
    "youtubeDescription": "By Ilja van Sprundel\n\n\"Ever wondered about the attack surface of graphics drivers on Windows? Are they similar to other drivers? Do they expose ioctl's? In this talk, all those questions will be answered and more. Whether you're a security researcher, a developer looking for some security guidance when writing these drivers, or just generally curious about driver internals, there's something here for all. \n\nThe research done focuses both on c/c++ code when available, as well as reverse engineering of these drivers.\""
  },
  "Yu": {
    "author": "",
    "description": "Modern Windows use mitigation techniques such as DEP and ASLR to mitigate exploitation. The combination of ASLR and DEP have been proven to be a solid shield in most cases. Mitigation bypass is always one of the hottest topic in the security community.\n\nThis presentation contains two kind of new DEP bypass techniques, two kind of new ASLR bypass techniques, and many lesser known exploration skills. These techniques don't need ROP, JIT, third-party plugins or Non-ASLR modules. They are OS-independent, even CPU-independent in some cases. So exploits can easily \"Write Once, Pwn Anywhere\" now.\n\nThese techniques are fairly different from traditional exploit technique. So they may also be difficult to detect and identify if you don't know them.",
    "plaintextTitle": "Write Once, Pwn Anywhere",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Yu-Write-Once-Pwn-Anywhere-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-14/materials/us-14-Yu-Write-Once-Pwn-Anywhere.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_z647GBTSlk"
      }
    ],
    "youtubeDescription": "By Yang Yu\n\n\"Modern Windows use mitigation techniques such as DEP and ASLR to mitigate exploitation. The combination of ASLR and DEP have been proven to be a solid shield in most cases. Mitigation bypass is always one of the hottest topic in the security community.\n\nThis presentation contains two kind of new DEP bypass techniques, two kind of new ASLR bypass techniques, and many lesser known exploration skills. These techniques don't need ROP, JIT, third-party plugins or Non-ASLR modules. They are OS-independent, even CPU-independent in some cases. So exploits can easily \"\"Write Once, Pwn Anywhere\"\" now.\n\nThese techniques are fairly different from traditional exploit technique. So they may also be difficult to detect and identify if you don't know them.\""
  },
  "the-lifecycle-of-a-revolution": {
    "author": "jennifer-granick",
    "description": "In the early days of the public internet, we believed that we were helping build something totally new, a world that would leave behind the shackles of age, of race, of gender, of class, even of law. Twenty years on, \"cyberspace\" looks a lot less revolutionary than it once did. Hackers have become information security professionals. Racism and sexism have proven resiliant enough to thrive in the digital world. Big companies are getting even bigger, and the decisions corporationsnot just governmentsmake about security, privacy, and free speech affect hundreds of thousands, or millions, of people. The Four Horsemen of the Infocalypseterrorists, pedophiles, drug dealers, and money launderersare driving online policy as governments around the world are getting more deeply involved in the business of regulating the network. Meanwhile, the Next Billion Internet Users are going to connect from Asia and developing countries without a Bill of Rights. Centralization, Regulation, and Globalization are the key words, and over the next twenty years, we'll see these forces change digital networks and information security as we know it today. So where does that leave security, openness, innovation, and freedom?The Digital Millennium Copyright Act is being used to weld the hood of cars shut to keep engine software safe from mechanics. Will we still have the Freedom to Tinker even in the oldest of technologies? What does it mean that the U.S. is a big player in the zero-day market even as international agreements seek to regulate exploit code and surveillance tools? Will we see liability for insecure software and what does that mean for open source? With advances in artificial intelligence that will decide who gets run over, who gets a loan, who gets a job, how far off can legal liability regimes for robots, drones, and even algorythms be? Is the global Internet headed for history's dustbin, and what does a balkanized network mean for security, for civil rights?In this talk, Granick will look forward at the forces that are shaping and will determine the next 20 years in the lifecycle of the revolutionary communications technology that we've had such high hopes for.",
    "plaintextTitle": "The Lifecycle of a Revolution",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Granick-The-Lifecycle-Of-A-Revolution.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Tjvw5fz_GuA"
      }
    ],
    "youtubeDescription": "by Jennifer Granick\n\nIn the early days of the public internet, we believed that we were helping build something totally new, a world that would leave behind the shackles of age, of race, of gender, of class, even of law. Twenty years on, \"cyberspace\" looks a lot less revolutionary than it once did. Hackers have become information security professionals. Racism and sexism have proven resiliant enough to thrive in the digital world. Big companies are getting even bigger, and the decisions corporationsnot just governmentsmake about security, privacy, and free speech affect hundreds of thousands, or millions, of people. The Four Horsemen of the Infocalypseterrorists, pedophiles, drug dealers, and money launderersare driving online policy as governments around the world are getting more deeply involved in the business of regulating the network. Meanwhile, the Next Billion Internet Users are going to connect from Asia and developing countries without a Bill of Rights. Centralization, Regulation, and Globalization are the key words, and over the next twenty years, we'll see these forces change digital networks and information security as we know it today. So where does that leave security, openness, innovation, and freedom?\n\nThe Digital Millennium Copyright Act is being used to weld the hood of cars shut to keep engine software safe from mechanics. Will we still have the Freedom to Tinker even in the oldest of technologies? What does it mean that the U.S. is a big player in the zero-day market even as international agreements seek to regulate exploit code and surveillance tools? Will we see liability for insecure software and what does that mean for open source? With advances in artificial intelligence that will decide who gets run over, who gets a loan, who gets a job, how far off can legal liability regimes for robots, drones, and even algorythms be? Is the global Internet headed for history's dustbin, and what does a balkanized network mean for security, for civil rights?\n\nIn this talk, Granick will look forward at the forces that are shaping and will determine the next 20 years in the lifecycle of the revolutionary communications technology that we've had such high hopes for."
  },
  "abusing-silent-mitigations-understanding-weaknesses-within-internet-explorers-isolated-heap-and-memoryprotection": {
    "author": "brian-gorenc",
    "description": "In the Summer of 2014, Microsoft silently introduced two new exploit mitigations into Internet Explorer with the goal of disrupting the threat landscape. These mitigations increase the complexity of successfully exploiting a use-after-free vulnerability. June's patch (MS14-035) introduced a separate heap, called Isolated Heap, which handles most of the DOM and supporting objects. July's patch (MS14-037) introduced a new strategy called MemoryProtection for freeing memory on the heap.This talk covers the evolution of the Isolated Heap and MemoryProtection mitigations, examines how they operate, and studies their weaknesses. It outlines techniques and steps an attacker must take to attack these mitigations to gain code execution on use-after-free vulnerabilities where possible. It describes how an attacker can use MemoryProtection as an oracle to determine the address at which a module will be loaded to bypass ASLR. Finally, additional recommended defenses are laid out to further harden Internet Explorer from these new attack vectors.",
    "plaintextTitle": "Abusing Silent Mitigations - Understanding Weaknesses Within Internet Explorers Isolated Heap and MemoryProtection",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Gorenc-Abusing-Silent-Mitigations-Understanding-Weaknesses-Within-Internet-Explorers-Isolated-Heap-And-MemoryProtection.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Gorenc-Abusing-Silent-Mitigations-Understanding-Weaknesses-Within-Internet-Explorers-Isolated-Heap-And-MemoryProtection-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=P_WSNVm-4ho"
      }
    ],
    "youtubeDescription": "by Brian Gorenc  &  Abdul-Aziz Hariri  &  Simon Zuckerbraun\n\nIn the Summer of 2014, Microsoft silently introduced two new exploit mitigations into Internet Explorer with the goal of disrupting the threat landscape. These mitigations increase the complexity of successfully exploiting a use-after-free vulnerability. June's patch (MS14-035) introduced a separate heap, called Isolated Heap, which handles most of the DOM and supporting objects. July's patch (MS14-037) introduced a new strategy called MemoryProtection for freeing memory on the heap.\n\nThis talk covers the evolution of the Isolated Heap and MemoryProtection mitigations, examines how they operate, and studies their weaknesses. It outlines techniques and steps an attacker must take to attack these mitigations to gain code execution on use-after-free vulnerabilities where possible. It describes how an attacker can use MemoryProtection as an oracle to determine the address at which a module will be loaded to bypass ASLR. Finally, additional recommended defenses are laid out to further harden Internet Explorer from these new attack vectors."
  },
  "abusing-windows-management-instrumentation-wmi-to-build-a-persistent-asynchronous-and-fileless-backdoor": {
    "author": "matthew-graeber",
    "description": "Imagine a technology that is built into every Windows operating system going back to Windows 95, runs as System, executes arbitrary code, persists across reboots, and does not drop a single file to disk. Such a thing does exist and it's called Windows Management Instrumentation (WMI).With increased scrutiny from anti-virus and 'next-gen' host endpoints, advanced red teams and attackers already know that the introduction of binaries into a high-security environment is subject to increased scrutiny. WMI enables an attacker practicing a minimalist methodology to blend into their target environment without dropping a single utility to disk. WMI is also unlike other persistence techniques in that rather than executing a payload at a predetermined time, WMI conditionally executes code asynchronously in response to operating system events.This talk will introduce WMI and demonstrate its offensive uses. We will cover what WMI is, how attackers are currently using it in the wild, how to build a full-featured backdoor, and how to detect and prevent these attacks from occurring.",
    "plaintextTitle": "Abusing Windows Management Instrumentation (WMI) to Build a Persistent Asynchronous and Fileless Backdoor",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent Asynchronous-And-Fileless-Backdoor.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent Asynchronous-And-Fileless-Backdoor-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent Asynchronous-And-Fileless-Backdoor-WMIBackdoor.ps1",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=0SjMgnGwpq8"
      }
    ],
    "youtubeDescription": "by Matthew Graeber\n\nImagine a technology that is built into every Windows operating system going back to Windows 95, runs as System, executes arbitrary code, persists across reboots, and does not drop a single file to disk. Such a thing does exist and it's called Windows Management Instrumentation (WMI).\n\nWith increased scrutiny from anti-virus and 'next-gen' host endpoints, advanced red teams and attackers already know that the introduction of binaries into a high-security environment is subject to increased scrutiny. WMI enables an attacker practicing a minimalist methodology to blend into their target environment without dropping a single utility to disk. WMI is also unlike other persistence techniques in that rather than executing a payload at a predetermined time, WMI conditionally executes code asynchronously in response to operating system events.\n\nThis talk will introduce WMI and demonstrate its offensive uses. We will cover what WMI is, how attackers are currently using it in the wild, how to build a full-featured backdoor, and how to detect and prevent these attacks from occurring."
  },
  "abusing-xslt-for-practical-attacks": {
    "author": "fernando-arnaboldi",
    "description": "Over the years, XML has been a rich target for attackers due to flaws in its design as well as implementations. It is a tempting target because it is used by other programming languages to interconnect applications and is supported by web browsers. In this talk, I will demonstrate how to use XSLT to produce documents that are vulnerable to new exploits.XSLT can be leveraged to affect the integrity of arithmetic operations, lead to code logic failure, or cause random values to use the same initialization vector. Error disclosure has always provided valuable information, but thanks to XSLT, it is possible to partially read system files that could disclose service or system's passwords. Finally, XSLT can be used to compromise end-user confidentiality by abusing the same-origin policy concept present in web browsers.This presentation includes proof-of-concept attacks demonstrating XSLTs potential to affect production systems, along with recommendations for safe development.",
    "plaintextTitle": "Abusing XSLT for Practical Attacks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Arnaboldi-Abusing-XSLT-For-Practical-Attacks.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Arnaboldi-Abusing-XSLT-For-Practical-Attacks-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=FCtcza-pP8U"
      }
    ],
    "youtubeDescription": "Over the years, XML has been a rich target for attackers due to flaws in its design as well as implementations. It is a tempting target because it is used by other programming languages to interconnect applications and is supported by web browsers. In this talk, I will demonstrate how to use XSLT to produce documents that are vulnerable to new exploits.\n\nXSLT can be leveraged to affect the integrity of arithmetic operations, lead to code logic failure, or cause random values to use the same initialization vector. Error disclosure has always provided valuable information, but thanks to XSLT, it is possible to partially read system files that could disclose service or system's passwords. Finally, XSLT can be used to compromise end-user confidentiality by abusing the same-origin policy concept present in web browsers.\n\nThis presentation includes proof-of-concept attacks demonstrating XSLT’s potential to affect production systems, along with recommendations for safe development.\n\nSpeaker Bio:\nFernando Arnaboldi is a senior security researcher and consultant at IOActive, Inc. He has over 10 years of experience in the security research space (Deloitte, Core Security Technologies and IOActive) and holds a Bachelor's degree in Computer Science."
  },
  "advanced-ic-reverse-engineering-techniques-in-depth-analysis-of-a-modern-smart-card": {
    "author": "olivier-thomas",
    "description": "Hardware attacks are often overlooked since they are generally considered to be complex and resource intensive. However certain industries, such as pay TV, are plagued by piracy and hardware counterfeits. The threat of piracy was so great that pay TV manufacturers were forced to create extensive countermeasures to protect their smartcards in the field.One of the most effective countermeasures is to implement parts or all of their proprietary algorithms in hardware. To analyze proprietary hardware implementations additional analysis techniques are necessary. It is no longer sufficient to follow individual signals on the chip. Instead, full extraction and analysis of the device's netlist is necessary.This talk will focus on a case study of a widely-used pay TV smartcard. The card includes extensive custom hardware functions and has yet to be compromised after over 5 years in the field.This talk will demonstrate the tools and techniques necessary for successfully performing the analysis of such a target. The research highlights the capabilities of advanced analysis techniques. Such techniques also make analysis significantly more efficient, reducing the time required for a study from many months to a few weeks.",
    "plaintextTitle": "Advanced IC Reverse Engineering Techniques: In Depth Analysis of a Modern Smart Card",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Thomas-Advanced-IC-Reverse-Engineering-Techniques-In-Depth-Analysis-Of-A-Modern-Smart-Card.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Thomas-Advanced-IC-Reverse-Engineering-Techniques-In-Depth-Analysis-Of-A-Modern-Smart-Card-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=YM5I8yR7yCw"
      }
    ],
    "youtubeDescription": "by Olivier Thomas\n\nHardware attacks are often overlooked since they are generally considered to be complex and resource intensive. However certain industries, such as pay TV, are plagued by piracy and hardware counterfeits. The threat of piracy was so great that pay TV manufacturers were forced to create extensive countermeasures to protect their smartcards in the field.\n\nOne of the most effective countermeasures is to implement parts or all of their proprietary algorithms in hardware. To analyze proprietary hardware implementations additional analysis techniques are necessary. It is no longer sufficient to follow individual signals on the chip. Instead, full extraction and analysis of the device's netlist is necessary.\n\nThis talk will focus on a case study of a widely-used pay TV smartcard. The card includes extensive custom hardware functions and has yet to be compromised after over 5 years in the field.\n\nThis talk will demonstrate the tools and techniques necessary for successfully performing the analysis of such a target. The research highlights the capabilities of advanced analysis techniques. Such techniques also make analysis significantly more efficient, reducing the time required for a study from many months to a few weeks."
  },
  "adventures-in-femtoland-350-yuan-for-invaluable-fun": {
    "author": "alexey-osipov",
    "description": "GSM networks are compromised for over five years. Starting from passive sniffing of unencrypted traffic, moving to a fully compromised A5/1 encryption and then even to your own base station, we have different tools and opportunities. A Motorola phone retails for only $5 gives you the opportunity to peep into your girlfriend's calls. RTL-SDR retails for $20 which allows you to intercept all two-factor authentication in a medium-sized office building. Lastly, USRP retails for $700 and can intercept almost everything that you can see in 2G.But who cares about 2G? Those who are concerned switched off of 2G. AT&T is preparing to switch off all its 2G networks by the end of 2016. Even GSMA (GSM Alliance) admitted that security through obscurity is a bad idea (referring to COMP128, A5/*, GEA algorithms and other things). 3G and LTE networks have mandatory cryptographical integrity checks for all communications, mutual authentication both for mobile devices and base station. The opportunity to analyze all protocols and cryptographical primitives due to their public availability is important.However, the main problem is that we do not have calypso phones for 3G. We do not have cheap and ready to use devices to fuzz 3G devices over the air. Or do we? What about femtocells? Perhaps telecoms are to fast to take their guard down with security considerations embedded in 3G/4G? Users can connect to femocells. and have access the Internet on high speeds, make calls, ect.. Why don't we abuse it?Yes, there is already research that allows you to gain control over femtocell. There is also research that allows sniffing calls and messages after gaining control. But all such solutions are not scalable. You are still bound to the telecom provider. You still have to connect to a VPN - to a core network. You have to bypass location binding and so on. Perhaps there is an easier solution? Parhaps we can create UMTS-in-a-box from readily available femtocell and have them available in large quantities without telecom-branding? We already know.We will tell the whole story from unboxing to proof-of-concept data intercept and vulnerabilities in UMTS networks with all your favorite acronyms: HNB, SeGW, HMS, RANAP, SCTP, TR-069.",
    "plaintextTitle": "Adventures in Femtoland: 350 Yuan for Invaluable Fun",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=3kldGKec-gg"
      }
    ],
    "youtubeDescription": "by Alexey Osipov  &  Alexander Zaitsev\n\nGSM networks are compromised for over five years. Starting from passive sniffing of unencrypted traffic, moving to a fully compromised A5/1 encryption and then even to your own base station, we have different tools and opportunities. A Motorola phone retails for only $5 gives you the opportunity to peep into your girlfriend's calls. RTL-SDR retails for $20 which allows you to intercept all two-factor authentication in a medium-sized office building. Lastly, USRP retails for $700 and can intercept almost everything that you can see in 2G.\n\nBut who cares about 2G? Those who are concerned switched off of 2G. AT&T is preparing to switch off all its 2G networks by the end of 2016. Even GSMA (GSM Alliance) admitted that security through obscurity is a bad idea (referring to COMP128, A5/*, GEA algorithms and other things). 3G and LTE networks have mandatory cryptographical integrity checks for all communications, mutual authentication both for mobile devices and base station. The opportunity to analyze all protocols and cryptographical primitives due to their public availability is important.\n\nHowever, the main problem is that we do not have calypso phones for 3G. We do not have cheap and ready to use devices to fuzz 3G devices over the air. Or do we? What about femtocells? Perhaps telecoms are to fast to take their guard down with security considerations embedded in 3G/4G? Users can connect to femocells. and have access the Internet on high speeds, make calls, ect.. Why don't we abuse it?\n\nYes, there is already research that allows you to gain control over femtocell. There is also research that allows sniffing calls and messages after gaining control. But all such solutions are not scalable. You are still bound to the telecom provider. You still have to connect to a VPN - to a core network. You have to bypass location binding and so on. Perhaps there is an easier solution? Parhaps we can create UMTS-in-a-box from readily available femtocell and have them available in large quantities without telecom-branding? We already know.\n\nWe will tell the whole story from unboxing to proof-of-concept data intercept and vulnerabilities in UMTS networks with all your favorite acronyms: HNB, SeGW, HMS, RANAP, SCTP, TR-069."
  },
  "ah-universal-android-rooting-is-back": {
    "author": "wen-xu",
    "description": "In recent months, we focus on bug hunting to achieve root on android devices. Our kernel fuzzing, leaded by @wushi, generated a lot of crashes and among them, we found a kernel Use-After-Free bug which lies in all versions of Linux kernel and we successfully take advantage of it to root most android devices(version>=4.3) on the market nowadays, even for the 64-bit ones.We leverage this bug to root whatever android devices(version>=4.3) of whatever brands. And also we are the first one in the world, as far as we are aware, rooting the 64-bit android device by taking advantage of a kernel memory corruption bug. The related kernel exploitation method is unique.In this talk, we will explain the root cause of this UAF bug and also the methods used to exploit it. We will demonstrate how we can fill the kernel memory once occupied by the vulnerable freed kernel object with fully user-controlled data by spraying and finally achieved arbitrarily code execution in kernel mode to gain root. All our spraying methods and exploiting ways apply to the latest Android kernel, and we also bypass all the modern kernel mitigations on Android device like PXN and so on. Even introduced 64-bit address space fails to stop our rooting. And a very important thing is that the rooting is stable and reliable. Actually, we will present a common way to exploit android kernel Use-After-Free bug to gain root. We will also cover some new kernel security issue on the upcoming 64-bit android platform in the future.",
    "plaintextTitle": "Ah! Universal Android Rooting is Back",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Xu-Ah-Universal-Android-Rooting-Is-Back.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Xu-Ah-Universal-Android-Rooting-Is-Back-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=HVP1c7Ct1nM"
      }
    ],
    "youtubeDescription": "by Wen Xu\n\nIn recent months, we focus on bug hunting to achieve root on android devices. Our kernel fuzzing, leaded by @wushi, generated a lot of crashes and among them, we found a kernel Use-After-Free bug which lies in all versions of Linux kernel and we successfully take advantage of it to root most android devices on the market nowadays, even for the 64-bit ones.\n\nWe leverage this bug to root whatever android devices of whatever brands. And also we are the first one in the world, as far as we are aware, rooting the 64-bit android device by taking advantage of a kernel memory corruption bug. The related kernel exploitation method is unique.\n\nIn this talk, we will explain the root cause of this UAF bug and also the methods used to exploit it. We will demonstrate how we can fill the kernel memory once occupied by the vulnerable freed kernel object with fully user-controlled data by spraying and finally achieved arbitrarily code execution in kernel mode to gain root. All our spraying methods and exploiting ways apply to the latest Android kernel, and we also bypass all the modern kernel mitigations on Android device like PXN and so on. Even introduced 64-bit address space fails to stop our rooting. And a very important thing is that the rooting is stable and reliable. Actually, we will present a common way to exploit android kernel Use-After-Free bug to gain root. We will also cover some new kernel security issue on the upcoming 64-bit android platform in the future."
  },
  "android-security-state-of-the-union": {
    "author": "adrian-ludwig",
    "description": "The world of security is riddled with assumptions and guesses. Using data collected from hundreds of millions of Android devices, we'll establish a baseline for the major factors driving security in the Android ecosystem. This will help provide direction for the issues that we think will benefit the most from security community attention and research contributions.",
    "plaintextTitle": "Android Security State of the Union",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=aBWh7izacqg"
      }
    ],
    "youtubeDescription": "by Adrian Ludwig\n\nThe world of security is riddled with assumptions and guesses. Using data collected from hundreds of millions of Android devices, we'll establish a baseline for the major factors driving security in the Android ecosystem. This will help provide direction for the issues that we think will benefit the most from security community attention and research contributions."
  },
  "api-deobfuscator-resolving-obfuscated-api-functions-in-modern-packers": {
    "author": "seokwoo-choi",
    "description": "Modern packers use API obfuscation techniques to obstruct malware sandboxes and reverse engineers. In such packers, API call instructions are replaced with equivalent lengthy and complex code. API obfuscation techniques can be categorized into two according to the obfuscation time - static and dynamic. Static obfuscation embeds obfuscated instructions into the executable file. Dynamic obfuscation allocates a new memory block and copies obfuscated API function code into the newly allocated block.For dynamic obfuscation, I suggest memory access analysis. Previous approaches use pattern matching of the obfuscating code or code optimization on instruction trace. Pattern matching and code optimization based approaches are fragile to pattern change along the version up of the packers. My approach utilizes the API function obfuscation process which is harder to change than obfuscation pattern. Embedded obfuscator in packed file obfuscates each API function during runtime by reading the original API function code and writing the obfuscated API code on a newly allocated memory block. Memory access analysis relates memory reads of each API function and its corresponding memory writes. Memory access analysis produces a map from the obfuscated API function addresses to the original API function. Obfuscated API calls are retrieved by obfuscated call pattern at OEP. Each obfuscated call instruction is replaced by the deobfuscated API calls of which the call target is resolved by the map from memory access analysis. This deobfuscation method is implemented with Intel Pin to record each memory read/write/execute of the packed binary.For static obfuscation, I suggest iterative run-until-API method. Previous approaches used code emulators to identify obfuscated API calls. But most code emulators are not appropriate for deobfuscation because they are developed for emulating the whole operating system. Developing own emulators is time consuming because it requires implementing complex runtime behavior, such as exception based branches and multi-threads that modern packers use. I use a dynamic binary instrumentation tool - Intel Pin - by which the process can be monitored without being detected by protection mechanisms of the packers. After executing the packed binary until the original entry point, the tool changes the instruction pointer into an obfuscated API call address. The execution continues until the instruction pointer reaches the real API function. So the original API function is identified, but the function itself is not executed. In order to confirm the identified API function is correct, the integrity of stack pointer and stack data is also checked. This process is performed for each obfuscated API call instruction. In order to identify obfuscated API calls, the tool searches for all call instructions of which the target address is in the other section of the process.With the two deobfuscation methods, obfuscated API calls of Themida 32/64 packed binaries can be deobfuscated. We can analyze the deobfuscated binary with common reversing tools, such as x64dbg, Ollydbg and IDA Pro.",
    "plaintextTitle": "API Deobfuscator: Resolving Obfuscated API Functions in Modern Packers",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Choi-API-Deobfuscator-Resolving-Obfuscated-API-Functions-In-Modern-Packers.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=O4usD-11tTU"
      }
    ],
    "youtubeDescription": "by Seokwoo Choi\n\nModern packers use API obfuscation techniques to obstruct malware sandboxes and reverse engineers. In such packers, API call instructions are replaced with equivalent lengthy and complex code. API obfuscation techniques can be categorized into two according to the obfuscation time - static and dynamic. Static obfuscation embeds obfuscated instructions into the executable file. Dynamic obfuscation allocates a new memory block and copies obfuscated API function code into the newly allocated block.\n\nFor dynamic obfuscation, I suggest memory access analysis. Previous approaches use pattern matching of the obfuscating code or code optimization on instruction trace. Pattern matching and code optimization based approaches are fragile to pattern change along the version up of the packers. My approach utilizes the API function obfuscation process which is harder to change than obfuscation pattern. Embedded obfuscator in packed file obfuscates each API function during runtime by reading the original API function code and writing the obfuscated API code on a newly allocated memory block. Memory access analysis relates memory reads of each API function and its corresponding memory writes. Memory access analysis produces a map from the obfuscated API function addresses to the original API function. Obfuscated API calls are retrieved by obfuscated call pattern at OEP. Each obfuscated call instruction is replaced by the deobfuscated API calls of which the call target is resolved by the map from memory access analysis. This deobfuscation method is implemented with Intel Pin to record each memory read/write/execute of the packed binary.\n\nFor static obfuscation, I suggest iterative run-until-API method. Previous approaches used code emulators to identify obfuscated API calls. But most code emulators are not appropriate for deobfuscation because they are developed for emulating the whole operating system. Developing own emulators is time consuming because it requires implementing complex runtime behavior, such as exception based branches and multi-threads that modern packers use. I use a dynamic binary instrumentation tool - Intel Pin - by which the process can be monitored without being detected by protection mechanisms of the packers. After executing the packed binary until the original entry point, the tool changes the instruction pointer into an obfuscated API call address. The execution continues until the instruction pointer reaches the real API function. So the original API function is identified, but the function itself is not executed. In order to confirm the identified API function is correct, the integrity of stack pointer and stack data is also checked. This process is performed for each obfuscated API call instruction. In order to identify obfuscated API calls, the tool searches for all call instructions of which the target address is in the other section of the process.\n\nWith the two deobfuscation methods, obfuscated API calls of Themida 32/64 packed binaries can be deobfuscated. We can analyze the deobfuscated binary with common reversing tools, such as x64dbg, Ollydbg and IDA Pro."
  },
  "assessing-and-exploiting-bignum-vulnerabilities": {
    "author": "ralf-philipp-weinmann",
    "description": "The majority of deployed asymmetric cryptography implementations (RSA, DH, ECDH/ECDSA with GF(p) curves) need to perform calculations on integers that are larger than a single machine word. Just like every software package, implementations of multi-precision integer arithmetic sometimes have bugs. This talk investigates the implications of these bugs and shows how they can be used by attackers to exploit asymmetric cryptographic primitives. Isolating bug patterns and understanding exploitation requirements allows us to develop strategies for automated bug hunting.",
    "plaintextTitle": "Assessing and Exploiting BigNum Vulnerabilities",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=oje2ZgUzARo"
      }
    ],
    "youtubeDescription": "by Ralf-Philipp Weinmann\n\nThe majority of deployed asymmetric cryptography implementations (RSA, DH, ECDH/ECDSA with GF(p) curves) need to perform calculations on integers that are larger than a single machine word. Just like every software package, implementations of multi-precision integer arithmetic sometimes have bugs. This talk investigates the implications of these bugs and shows how they can be used by attackers to exploit asymmetric cryptographic primitives. Isolating bug patterns and understanding exploitation requirements allows us to develop strategies for automated bug hunting."
  },
  "attacking-ecmascript-engines-with-redefinition": {
    "author": "natalie-silvanovich",
    "description": "The dynamic nature of ECMAScript allows for functions and properties to be redefined in a variety of ways - even functions that are vital for internal functionality of the ECMAScript engine. This presentation explores the problems that can arise from ECMAScript redefinition. It goes through the various ways that functions and properties can be redefined in different ECMAScript implementations and describes several vulnerabilities we found as a result of these methods. It also provides some strategies for finding these types of security issues in other targets.",
    "plaintextTitle": "Attacking ECMAScript Engines with Redefinition",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Silvanovich-Attacking-ECMA-Script-Engines-With-Redefinition.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Silvanovich-Attacking-ECMA-Script-Engines-With-Redefinition-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KT2vYWcwj-w"
      }
    ],
    "youtubeDescription": "by Natalie Silvanovich\n\nThe dynamic nature of ECMAScript allows for functions and properties to be redefined in a variety of ways - even functions that are vital for internal functionality of the ECMAScript engine. This presentation explores the problems that can arise from ECMAScript redefinition. It goes through the various ways that functions and properties can be redefined in different ECMAScript implementations and describes several vulnerabilities we found as a result of these methods. It also provides some strategies for finding these types of security issues in other targets."
  },
  "attacking-hypervisors-using-firmware-and-hardware": {
    "author": "yuriy-bulygin",
    "description": "In this presentation, we explore the attack surface of modern hypervisors from the perspective of vulnerabilities in system firmware, such as BIOS and in hardware emulation. We will demonstrate a number of new attacks on hypervisors based on system firmware vulnerabilities with impacts ranging from VMM DoS to hypervisor privilege escalation to SMM privilege escalation from within the virtual machines.We will also show how a firmware rootkit based on these vulnerabilities could expose secrets within virtual machines and explain how firmware issues can be used for analysis of hypervisor-protected content such as VMCS structures, EPT tables, host physical addresses (HPA) map, IOMMU page tables etc. To enable further hypervisor security testing, we will also be releasing new modules in the open source CHIPSEC framework to test issues in hypervisors when virtualizing hardware.",
    "plaintextTitle": "Attacking Hypervisors Using Firmware and Hardware",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=XGAGfXSbOh0"
      }
    ],
    "youtubeDescription": "In this presentation, we explore the attack surface of modern hypervisors from the perspective of vulnerabilities in system firmware such as BIOS and in hardware emulation. We will demonstrate a number of new attacks on hypervisors based on system firmware vulnerabilities with impacts ranging from VMM DoS to hypervisor privilege escalation to SMM privilege escalation from within the virtual machines.\n\nWe will also show how a firmware rootkit based on these vulnerabilities could expose secrets within virtual machines and explain how firmware issues can be used for analysis of hypervisor-protected content such as VMCS structures, EPT tables, host physical addresses (HPA) map, IOMMU page tables etc. To enable further hypervisor security testing, we will also be releasing new modules in the open source CHIPSEC framework to test issues in hypervisors when virtualizing hardware.\n\nSpeaker Bios:\nMikhail Gorobets is a security researcher in the Advanced Threat Research team. His area of expertise includes hardware security, virtualization technologies, reverse engineering, and vulnerability analysis. Previously, he led a team of security researchers working on Intel Virtualization Technology (VTx) and Intel Atom core security evaluation.  Mikhail holds a MS in computing machines, systems, and networks from the Moscow Institute of Electronics and Mathematics.\n\nAlexander Matrosov has more than ten years of experience with malware analysis, reverse engineering, and advanced exploitation techniques. He is currently a senior security researcher in the Advanced Threat Research team at Intel Security Group. Prior to this role, he spent four years focused on advanced malware research at ESET. He is co-author of numerous research papers, including “Stuxnet Under the Microscope,” “The Evolution of TDL: Conquering x64,” and \"Mind the Gapz: The most complex bootkit ever analyzed?\". Alexander is frequently invited to speak at security conferences such as REcon, Ekoparty, Zeronigths, AVAR, CARO, and Virus Bulletin. Nowadays, he specializes in the comprehensive analysis of advanced threats, modern vectors of exploitation, and hardware security research.\n\nOleksandr Bazhaniuk is a security researcher in the Advanced Threat Research team. His primary interests are low-level hardware security, bios/uefi security, and automation of binary vulnerability analysis. His work has been presented at world-renowned conferences, including Black Hat USA, Hack In The Box, Hackito Ergo Sum, Positive Hack Days, Toorcon, CanSecWest. He is also a co-founder of DCUA, the first DEF CON group in Ukraine.\n\nAndrew Furtak is a security researcher focusing on security analysis of firmware and hardware of modern computing platforms. He was previously a security software engineer. Andrew holds a MS in applied mathematics and physics from the Moscow Institute of Physics and Technology.\n\nYuriy Bulygin is chief threat researcher at Intel Security Group where he is leading the Advanced Threat Research team in identifying and analyzing new threats impacting modern platforms and researching mitigations in hardware and software against these threats. He joined Intel’s Security Center of Excellence in 2006, where he was responsible for conducting security analysis and penetration testing of microprocessors, chipsets, graphics, and various other components, firmware, and technologies on Intel PCs, servers, and mobile devices. Yuriy is also a member of the core security architecture team reviewing Intel’s future products. Prior to joining Intel, he was teaching undergrad seminars in information security at Moscow Institute of Physics and Technology.\n\nTwitter: @c7zero"
  },
  "attacking-interoperability-an-ole-edition": {
    "author": "haifei-li",
    "description": "Object Linking and Embedding (OLE) is a technology based on Component Object Model (COM) allowing an application to embed and link to other documents or objects, and its primarily used in Microsoft Office and WordPad. In the recent years, we have seen a number of vulnerabilities, especially some critical zero-day attacks, are involving OLE. The typical examples are the \"Sandworm\" attack (CVE-2014-4114) that was disclosed in October 2014, and the CVE-2012-0158 - a years-old vulnerability but is still being actively exploited in the real world.However, the previous work usually focus on the vulnerability or malware but the internals of OLE are never examined. This paper intends to fill this gap. The another important part of this research is to explore the attack surface it exposes on Windows, and to explain how an attacker may possibly leverage OLE vulnerability to perform document-based exploitation. These areas are never being looked at from a security point of view. In the 0-day demo section of our presentation, we will disclose and demonstrate a previously-unknown OLE attack vector introduced by the nature of the OLE mechanism, which could lead to a series of similar vulnerabilities being discovered in future. ",
    "plaintextTitle": "Attacking Interoperability - An OLE Edition",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Li-Attacking-Interoperability-An-OLE-Edition.pdf",
        "type": "Presentation"
      }
    ]
  },
  "attacking-your-trusted-core-exploiting-trustzone-on-android": {
    "author": "di-shen",
    "description": "For years fingerprint scanning has been supported in many Android devices. Fingerprint scanning on ARM always needs an implementation of TrustZone. While we enjoy unlocking devices and paying by fingerprint, we also figure out these new features bring out some new attack surfaces. Attacking the kernel of Android or the secure world of TrustZone may be not impossible.Theoretically, devices developed with TrustZone technology can support a full Trusted Execution Environment (TEE). TEE runs in a special CPU mode called secure mode, so memory for secure mode and security functions can be hidden to the normal world. In this way, Android vendors can provide many secure features such as fingerprint scanning, DRM, kernel protection, secure boot, and so on.Even though TrustZone is designed for solving security problems, there may be some security issues inside when a developer implements a TEE for Android. The Huawei Hisilicon Kirin 925 processor is the new chip being used on the Huawei Ascend Mate 7, and Hisilicon implemented its own TEE software. There are few documents about it. I found some vulnerabilities both in a normal Android world and the secure world while analyzing Hisilicon's TEE OS.In this talk, I'll show how to analyze the TEE architecture of Huawei Hisilicon and find some new vulnerabilities in such an undocumented black hole. Then, I'll talk about exploit development in TrustZone. I exploited two bugs, one for rooting Androids normal world and disabling the newest SE for Android, the other for running shellcode in secure world. With these exploits, we can get the fingerprint image or bypass some other security features.",
    "plaintextTitle": "Attacking Your Trusted Core: Exploiting Trustzone on Android",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Shen-Attacking-Your-Trusted-Core-Exploiting-Trustzone-On-Android.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Shen-Attacking-Your-Trusted-Core-Exploiting-Trustzone-On-Android-wp.pdf",
        "type": "White Paper"
      }
    ]
  },
  "automated-human-vulnerability-scanning-with-ava": {
    "author": "laura-bell",
    "description": "It will not be a surprise to you that of all the elements within our organisations and systems, the people are most likely to expose us to risk. In short we are a mess of emotional unpredictablity that threaten us all (and security professionals are the worst of the bunch).Many very clever people have spent a long time teaching us this. This is not news.So if this is the case, why in 20 years of modern information security have we done so little to actively protect them?Technical vulnerability scanning is now mature and commoditised, allowing us to repeatably test and adapt our systems in the face of a changing threat landscape. The time has come to apply the same logic to our people, actively understand human connectivity and behaviours when faced with threat and understand the effect of this behaviour with our organisations.This talk will discuss why this is a difficult challenge and introduce AVA, the first automated human vulnerability scanner that allows us to map the connectivity of our people, test them with a range of security threats and measure their behaviour. A tool built to make human security risk (and the effectiveness of our countermeasures and training) measurable.Let's change the way we approach human security risk. Let's protect our people.",
    "plaintextTitle": "Automated Human Vulnerability Scanning with AVA",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Bell-Automated-Human-Vulnerability-Scanning-With-AVA.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=8aZvtOeftl8"
      }
    ],
    "youtubeDescription": "by Laura Bell\n\nIt will not be a surprise to you that of all the elements within our organisations and systems, the people are most likely to expose us to risk. In short we are a mess of emotional unpredictablity that threaten us all (and security professionals are the worst of the bunch).\n\nMany very clever people have spent a long time teaching us this. This is not news.\n\nSo if this is the case, why in 20 years of modern information security have we done so little to actively protect them?\n\nTechnical vulnerability scanning is now mature and commoditised, allowing us to repeatably test and adapt our systems in the face of a changing threat landscape. The time has come to apply the same logic to our people, actively understand human connectivity and behaviours when faced with threat and understand the effect of this behaviour with our organisations.\n\nThis talk will discuss why this is a difficult challenge and introduce AVA, the first automated human vulnerability scanner that allows us to map the connectivity of our people, test them with a range of security threats and measure their behaviour. A tool built to make human security risk (and the effectiveness of our countermeasures and training) measurable.\n\nLet's change the way we approach human security risk. Let's protect our people."
  },
  "back-doors-and-front-doors-breaking-the-unbreakable-system": {
    "author": "james-denaro",
    "description": "Governments are demanding backdoor access to encrypted data - particularly on mobile devices and in the cloud - as strong encryption becomes commonplace. Governments fear going dark with encryption hindering criminal and national security investigations. Privacy advocates have opposed backdoors since the 1990s and the battle is heating up again, this time on a global scale. Backdoors have also been criticized as making systems inherently less secure. Current proposals, such as key escrow, split-key systems, and account mirroring, are complicated and difficult to implement securely. We provide a background on end-to-end encryption, a techno-political history of backdoors, and an update on the current state of affairs. We explore various options for working around end-to-end encryption, focusing on implementation details and potential weakness due to administrative failure in procedures to request and obtain access and technical attacks on the implementation. We conclude with proposals to answer the lingering question of whether there is a solution that does not weaken encryption systems or mandate technological designs while still enabling limited government access to secure communications.",
    "plaintextTitle": "Back Doors and Front Doors  Breaking the Unbreakable System",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=yOSl9h9yn70"
      }
    ],
    "youtubeDescription": "by James Denaro  &  Matthew Green\n\nGovernments are demanding backdoor access to encrypted data - particularly on mobile devices and in the cloud - as strong encryption becomes commonplace. Governments fear going dark with encryption hindering criminal and national security investigations. Privacy advocates have opposed backdoors since the 1990s and the battle is heating up again, this time on a global scale. Backdoors have also been criticized as making systems inherently less secure. Current proposals, such as key escrow, split-key systems, and account mirroring, are complicated and difficult to implement securely. We provide a background on end-to-end encryption, a techno-political history of backdoors, and an update on the current state of affairs. We explore various options for working around end-to-end encryption, focusing on implementation details and potential weakness due to administrative failure in procedures to request and obtain access and technical attacks on the implementation. We conclude with proposals to answer the lingering question of whether there is a solution that does not weaken encryption systems or mandate technological designs while still enabling limited government access to secure communications."
  },
  "battle-of-the-skm-and-ium-how-windows-10-rewrites-os-architecture": {
    "author": "alex-ionescu",
    "description": "In Windows 10, Microsoft is introducing a radical new concept to the underlying OS architecture, and likely the biggest change to the NT design since the decision to move the GUI in kernel-mode.In this new model, the Viridian Hypervisor Kernel now becomes a core part of the operating system and implements Virtual Secure Machines (VSMs) by loading a true microkernel - a compact (200kb) NT look-alike with its own drivers called the Secure Kernel Mode (SKM) environment, which then uses the Hypervisor to hook and intercept execution of the true NT kernel. This creates a new paradigm where the NT Kernel, executing in Ring 0, now runs below the Secure Kernel, at Ring ~0 (called Virtual Trust Level 1).But it doesn't stop there - as the Ring 0 NT kernel now has the ability to not only create standard Ring 3 user-mode applications, but also Ring ~3 applications (or Virtual Trust Level 0) that run in Isolated User Mode (IUM). Because VTLs are all more privileged than Ring 0, this now creates a model where a user-mode application running inside a VSM now has data and rights that even the kernel itself cannot modify. Why go through all this trouble? Because it seems like the hottest thing these days is Pass-the-Hash, and attacks must seemingly be mitigated at all costs. And even in Windows 8.1, an attacker with the permissions to load a kernel driver can bypass the existing mitigations (and Mimikatz is signed!). With VTLs, now even the most privileged attacker is only as privileged as the hypervisor will allow it - never able to truly read the hash date that is stored in the secure partition.How \"secure\" is this new model really? And what prevents a malicious application from running in such a secure mode to begin with?",
    "plaintextTitle": "Battle of the SKM and IUM: How Windows 10 Rewrites OS Architecture",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=LqaWIn4y26E"
      }
    ],
    "youtubeDescription": "by Alex Ionescu\n\nIn Windows 10, Microsoft is introducing a radical new concept to the underlying OS architecture, and likely the biggest change to the NT design since the decision to move the GUI in kernel-mode.\n\nIn this new model, the Viridian Hypervisor Kernel now becomes a core part of the operating system and implements Virtual Secure Machines (VSMs) by loading a true microkernel - a compact (200kb) NT look-alike with its own drivers called the Secure Kernel Mode (SKM) environment, which then uses the Hypervisor to hook and intercept execution of the true NT kernel. This creates a new paradigm where the NT Kernel, executing in Ring 0, now runs below the Secure Kernel, at Ring ~0 (called Virtual Trust Level 1).\n\nBut it doesn't stop there - as the Ring 0 NT kernel now has the ability to not only create standard Ring 3 user-mode applications, but also Ring ~3 applications (or Virtual Trust Level 0) that run in Isolated User Mode (IUM). Because VTLs are all more privileged than Ring 0, this now creates a model where a user-mode application running inside a VSM now has data and rights that even the kernel itself cannot modify. Why go through all this trouble? Because it seems like the hottest thing these days is Pass-the-Hash, and attacks must seemingly be mitigated at all costs. And even in Windows 8.1, an attacker with the permissions to load a kernel driver can bypass the existing mitigations (and Mimikatz is signed!). With VTLs, now even the most privileged attacker is only as privileged as the hypervisor will allow it - never able to truly read the hash date that is stored in the secure partition.\n\nHow \"secure\" is this new model really? And what prevents a malicious application from running in such a secure mode to begin with?"
  },
  "behind-the-mask-the-agenda-tricks-and-tactics-of-the-federal-trade-commission-as-they-regulate-cybersecurity": {
    "author": "michael-daugherty",
    "description": "While the FTC, FCC and Homeland Security joust over who is going to regulate the internet, Michael J. Daugherty will rivet you about his blood in the water battle with the Federal Trade Commission over their relentless investigation into LabMD's data security practices showing you what they do to those who dare not \"go along to get along.\"This is an insider's look at how agencies exploit their power by bullying the small and weak to control the private sector. You will hear about Mike's shrewd investigation of the investigator (FTC) which resulted in a House Oversight investigation, a stinging Congressional report about the FTC's behavior, and criminal immunity from the Justice Department for a whistleblower. The administrative case against LabMD, stayed in June 2014 when the whistleblower pled the 5th, started again May 5, 2015, after criminal immunity had been granted. Mike exposes the real time maneuvers of government lawyers and regulators who are accustomed to no one looking.Because of his work, Mike has testified before the House of Representatives House Oversight Committee and regularly keynotes in front of healthcare, law, business and technology audiences educating them on what to expect when the Federal Government investigates you.",
    "plaintextTitle": "Behind the Mask: The Agenda Tricks and Tactics of the Federal Trade Commission as they Regulate Cybersecurity",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Daugherty-Behind-The-Mask-The-Agenda-Tricks-And-Tactics-Of-The-Federal-Trade-Commission-As-They-Regulate-Cybersecurity.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=TyukVbS10TI"
      }
    ],
    "youtubeDescription": "Behind The Mask: The Agenda, Tricks, And Tactics Of The Federal Trade Commission As They Regulate Cybersecurity\n\nby Michael Daugherty\n\nWhile the FTC, FCC and Homeland Security joust over who is going to regulate the internet, Michael J. Daugherty will rivet you about his blood in the water battle with the Federal Trade Commission over their relentless investigation into LabMD's data security practices showing you what they do to those who dare not \"go along to get along.\"\n\nThis is an insider's look at how agencies exploit their power by bullying the small and weak to control the private sector. You will hear about Mike's shrewd investigation of the investigator (FTC) which resulted in a House Oversight investigation, a stinging Congressional report about the FTC's behavior, and criminal immunity from the Justice Department for a whistleblower. The administrative case against LabMD, stayed in June 2014 when the whistleblower pled the 5th, started again May 5, 2015, after criminal immunity had been granted. Mike exposes the real time maneuvers of government lawyers and regulators who are accustomed to no one looking.\n\nBecause of his work, Mike has testified before the House of Representatives House Oversight Committee and regularly keynotes in front of healthcare, law, business and technology audiences educating them on what to expect when the Federal Government investigates you."
  },
  "bgp-stream": {
    "author": "dan-hubbard",
    "description": "BGP is the fabric of routing on the Internet today. There are approximately half a million routes on the Internet originated by about 50,000 unique Autonomous Systems. On a typical day there are thousands of changes and although the vast majority of these are simply planned routing changes, configuration updates, and network additions there are signals in the noise that can be detected as nefarious. Throughout the last couple years there have been several large scale BGP incidents, such as outages and hijacks of networks that have been done using BGP. These include government sponsored regimes taking entire countries offline and criminals routing traffic for profit.BGPmon has been operating a network of BGP probes, classifiers, and associated alerts on these changes and has discovered and publicized several attacks that utilize BGP.Today, we are announcing BGP Stream. This stream will be publishing on Twitter and open to everyone with a goal of announcing potentially malicious BGP/ASN data. By subscribing to the stream one can monitor and alert potentially damaging network changes that affect traffic flows.",
    "plaintextTitle": "BGP Stream",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=MDTXfvECcMQ"
      }
    ],
    "youtubeDescription": "by Dan Hubbard  &  Andree Toonk\n\nBGP is the fabric of routing on the Internet today. There are approximately half a million routes on the Internet originated by about 50,000 unique Autonomous Systems. On a typical day there are thousands of changes and although the vast majority of these are simply planned routing changes, configuration updates, and network additions there are signals in the noise that can be detected as nefarious. Throughout the last couple years there have been several large scale BGP incidents, such as outages and hijacks of networks that have been done using BGP. These include government sponsored regimes taking entire countries offline and criminals routing traffic for profit.\n\nBGPmon has been operating a network of BGP probes, classifiers, and associated alerts on these changes and has discovered and publicized several attacks that utilize BGP.\n\nToday, we are announcing BGP Stream. This stream will be publishing on Twitter and open to everyone with a goal of announcing potentially malicious BGP/ASN data. By subscribing to the stream one can monitor and alert potentially damaging network changes that affect traffic flows."
  },
  "big-game-hunting-the-peculiarities-of-nation-state-malware-research": {
    "author": "morgan-marquis-boire",
    "description": "The security industry focus on state-sponsored espionage is a relatively recent phenomenon. Since the Aurora Incident brought nation-state hacking into the spotlight, there's been high profile reports on targeted hacking by China, Russia, U.S.A, Israel, to name a few. This has lead to the rise of a lucrative Threat intelligence business, propelling marketing and media campaigns and fueling political debate.This talk will cover the idiosyncrasies of nation-state malware research using the experiences of presenters in the 'Threat Analyst Sweatshop.' Regin (aka WARRIORPRIDE, allegedly written by the Five Eyes) and Babar (aka SNOWGLOBE, allegedly written by France) will be used as case studies in examining attribution difficulties. Additionally, we'll examine attributing commercially written offensive software (implants and exploits) and the (mostly negative) vendor responses. We'll cover what happens when you find other players on the hunt, and address the public misconception that attribution is frequently done using open source information.We will focus on the attribution problem and present a novel approach on creating credible links between binaries originating from the same group of authors. Our goal is to add to transparency in attribution and supply analysts with a tool to emphasize or deny vendor statements. The technique is based on features derived from different domains, such as implementation details, applied evasion techniques, classical malware traits or infrastructure attributes; which are then leveraged to compare the handwriting among binaries.",
    "plaintextTitle": "Big Game Hunting: The Peculiarities of Nation-State Malware Research",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-MarquisBoire-Big-Game-Hunting-The-Peculiarities-Of-Nation-State-Malware-Research.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=hVlMYXLB0m0"
      }
    ],
    "youtubeDescription": "by Morgan Marquis-Boire, Marion Marschalek, Claudio Guarnieri\n\nThe security industry focus on state-sponsored espionage is a relatively recent phenomenon. Since the Aurora Incident brought nation-state hacking into the spotlight, there's been high profile reports on targeted hacking by China, Russia, U.S.A, Israel, to name a few. This has lead to the rise of a lucrative Threat intelligence business, propelling marketing and media campaigns and fueling political debate.\n\nThis talk will cover the idiosyncrasies of nation-state malware research using the experiences of presenters in the 'Threat Analyst Sweatshop.' Regin (aka WARRIORPRIDE, allegedly written by the Five Eyes) and Babar (aka SNOWGLOBE, allegedly written by France) will be used as case studies in examining attribution difficulties. Additionally, we'll examine attributing commercially written offensive software (implants and exploits) and the (mostly negative) vendor responses. We'll cover what happens when you find other players on the hunt, and address the public misconception that attribution is frequently done using open source information.\n\nWe will focus on the attribution problem and present a novel approach on creating credible links between binaries originating from the same group of authors. Our goal is to add to transparency in attribution and supply analysts with a tool to emphasize or deny vendor statements. The technique is based on features derived from different domains, such as implementation details, applied evasion techniques, classical malware traits or infrastructure attributes; which are then leveraged to compare the handwriting among binaries."
  },
  "breaking-access-controls-with-blekey": {
    "author": "eric-evenchick",
    "description": "RFID access controls are broken. In this talk, we will demonstrate how to break into buildings using open-source hardware we're releasing.  Over the years, we've seen research pointing to deficiencies in every aspect of access control systems: the cards, the readers, and the backend. Yet, despite these revelations, there has been no meaningful change in their design or reduction in use around the world. Do these companies not care about physical security, or do they not understand the implications of these weaknesses?  We have improved upon previous research with an open-source hardware device that exploits the communication protocol used by the majority of access control systems today. Using a tiny device that can be easily embedded in an RFID reader, attendees will learn how to use Bluetooth LE and a cell phone (or PC) to circumvent access controls, log access information, and clone RFID cards.  Our goal is to use this device to help those relying on insecure devices understand the risks. We will also explain what can be done to lower the risk of access control attacks.",
    "plaintextTitle": "Breaking Access Controls with BLEKey",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=3QK3LoovWxo"
      }
    ],
    "youtubeDescription": "by Eric Evenchick  &  Mark Baseggio\n\nRFID access controls are broken. In this talk, we will demonstrate how to break into buildings using open-source hardware we're releasing.\n\nOver the years, we've seen research pointing to deficiencies in every aspect of access control systems: the cards, the readers, and the backend. Yet, despite these revelations, there has been no meaningful change in their design or reduction in use around the world. Do these companies not care about physical security, or do they not understand the implications of these weaknesses?\n\nWe have improved upon previous research with an open-source hardware device that exploits the communication protocol used by the majority of access control systems today. Using a tiny device that can be easily embedded in an RFID reader, attendees will learn how to use Bluetooth LE and a cell phone (or PC) to circumvent access controls, log access information, and clone RFID cards.\n\nOur goal is to use this device to help those relying on insecure devices understand the risks. We will also explain what can be done to lower the risk of access control attacks."
  },
  "breaking-honeypots-for-fun-and-profit": {
    "author": "dean-sysman",
    "description": "We will detect, bypass, and abuse honeypot technologies and solutions, turning them against the defender. We will also release a global map of honeypot deployments, honeypot detection vulnerabilities, and supporting code.The concept of a honeypot is strong, but the way honeypots are implemented is inherently weak, enabling an attacker to easily detect and bypass them, as well as make use of them for his own purposes. Our methods are analyzing the network protocol completeness and operating system software implementation completeness, and vulnerable code.As a case study, we will concentrate on platforms deployed in real organizational networks, mapping them globally, and demonstrating how it is possible to both bypass and use these honeypots to the attacker's advantage.",
    "plaintextTitle": "Breaking Honeypots for Fun and Profit",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=dzply9XiHck"
      }
    ],
    "youtubeDescription": "These are the videos from BSides San Francisco 2016:\nhttp://www.irongeek.com/i.php?page=videos/bsidessf2016/mainlist"
  },
  "breaking-https-with-bgp-hijacking": {
    "author": "artyom-gavrichenkov",
    "description": "BGP hijacking is now a reality: it happens often (mostly in the form of route leak due to misconfiguration, though), there's no practical way to prevent it, we have to deal with it. Internet routing was designed to be a conversation between trusted parties, but now it isn't, though it still behaves like it is.However, people are used to believe that BGP hijacking is not a huge issue. Yes, a denial of service can happen, and some plaintext data may be disclosed to an attacker, but there's nothing more to it, since all sensitive data transmitted over the Internet should be encrypted already, and a man in the middle of the Internet cannot decrypt it or break into encrypted connection. So there's pretty much nothing to really worry about.The problem is: the encryption is backed by SSL/TLS PKI, which itself trusts Internet routing. Now there's a way to exploit this trust, and we are going to show how, and to discuss how to prevent this from happening.",
    "plaintextTitle": "Breaking HTTPS with BGP Hijacking",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Gavrichenkov-Breaking-HTTPS-With-BGP-Hijacking.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Gavrichenkov-Breaking-HTTPS-With-BGP-Hijacking-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=iG5rIqgKuK4"
      }
    ],
    "youtubeDescription": "by Artyom Gavrichenkov\n\nBGP hijacking is now a reality: it happens often (mostly in the form of route leak due to misconfiguration, though), there's no practical way to prevent it, we have to deal with it. Internet routing was designed to be a conversation between trusted parties, but now it isn't, though it still behaves like it is.\n\nHowever, people are used to believe that BGP hijacking is not a huge issue. Yes, a denial of service can happen, and some plaintext data may be disclosed to an attacker, but there's nothing more to it, since all sensitive data transmitted over the Internet should be encrypted already, and a man in the middle of the Internet cannot decrypt it or break into encrypted connection. So there's pretty much nothing to really worry about.\n\nThe problem is: the encryption is backed by SSL/TLS PKI, which itself trusts Internet routing. Now there's a way to exploit this trust, and we are going to show how, and to discuss how to prevent this from happening."
  },
  "breaking-payloads-with-runtime-code-stripping-and-image-freezing": {
    "author": "collin-mulliner",
    "description": "Fighting off attacks based on memory corruption vulnerabilities is hard and a lot of research was and is conducted in this area. In our recent work we take a different approach and looked into breaking the payload of an attack. Current attacks assume that they have access to every piece of code and the entire platform API. In this talk, we present a novel defensive strategy that targets this assumption. We built a system that removes unused code from an application process to prevent attacks from using code and APIs that would otherwise be present in the process memory but normally are not used by the actual application. Our system is only active during process creation time, and, therefore, incurs no runtime overhead and thus no performance degradation. Our system does not modify any executable files or shared libraries as all actions are executed in memory only. We implemented our system for Windows 8.1 and tested it on real world applications. Besides presenting our system we also show the results of our investigation into code overhead present in current applications.",
    "plaintextTitle": "Breaking Payloads with Runtime Code Stripping and Image Freezing",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Mulliner-Breaking-Payloads-With-Runtime-Code-Stripping-And-Image-Freezing.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Mulliner-Breaking-Payloads-With-Runtime-Code-Stripping-And-Image-Freezing-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=sKCEtbMCVNM"
      }
    ],
    "youtubeDescription": "by Collin Mulliner  &  Matthias Neugschwandtner\n\nFighting off attacks based on memory corruption vulnerabilities is hard and a lot of research was and is conducted in this area. In our recent work we take a different approach and looked into breaking the payload of an attack. Current attacks assume that they have access to every piece of code and the entire platform API. In this talk, we present a novel defensive strategy that targets this assumption. We built a system that removes unused code from an application process to prevent attacks from using code and APIs that would otherwise be present in the process memory but normally are not used by the actual application. Our system is only active during process creation time, and, therefore, incurs no runtime overhead and thus no performance degradation. Our system does not modify any executable files or shared libraries as all actions are executed in memory only. We implemented our system for Windows 8.1 and tested it on real world applications. Besides presenting our system we also show the results of our investigation into code overhead present in current applications."
  },
  "bring-back-the-honeypots": {
    "author": "haroon-meer",
    "description": "Honeypots were all the rage in the 90's - A raft of tools (and even a world-wide alliance) sprung up extolling their virtues but they never managed to live up to their hype. They were largely relegated to researchers and tinkerers on the fringes. At the same time, we have the Verizon DBIR telling us that most companies are first informed by 3rd parties that they are breached. This is a stupid situation to be in.Well deployed honeypots can be invaluable tools in the defenders arsenal, and don't need to look anything like the honeypots of old. From application layer man-traps, to booby-trapped documents. From network-level deception, to cloud based honeypottery, we are bringing honeypots back!During this talk, we will discuss and demonstrate the current state of the art regarding honeypots. We will explore the factors that limit adoption (and will discuss how to overcome them.) We will demonstrate new techniques to make your honeypots more \"hacker-discoverable\" & will share data from running actual honeypots in real organizations. We will also discuss (and release) OpenCanary, our new open source honeypot (along with supporting scripts and utilities).Over the past few years, honeypots have gotten a bit of a bad rap. We will give you tools, techniques and takeaways, to move them from geeky time-wasters, to the most useful pieces of kit you will deploy.",
    "plaintextTitle": "Bring Back the Honeypots",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=W7U2u-qLAB8"
      }
    ],
    "youtubeDescription": "by Haroon Meer, Marco Slaviero\n\nHoneypots were all the rage in the 90's - A raft of tools (and even a world-wide alliance) sprung up extolling their virtues but they never managed to live up to their hype. They were largely relegated to researchers and tinkerers on the fringes. At the same time, we have the Verizon DBIR telling us that most companies are first informed by 3rd parties that they are breached. This is a stupid situation to be in.\n\nWell deployed honeypots can be invaluable tools in the defenders arsenal, and don't need to look anything like the honeypots of old. From application layer man-traps, to booby-trapped documents. From network-level deception, to cloud based honeypottery, we are bringing honeypots back!\n\nDuring this talk, we will discuss and demonstrate the current state of the art regarding honeypots. We will explore the factors that limit adoption (and will discuss how to overcome them.) We will demonstrate new techniques to make your honeypots more \"hacker-discoverable\" & will share data from running actual honeypots in real organizations. We will also discuss (and release) OpenCanary, our new open source honeypot (along with supporting scripts and utilities).\n\nOver the past few years, honeypots have gotten a bit of a bad rap. We will give you tools, techniques and takeaways, to move them from geeky time-wasters, to the most useful pieces of kit you will deploy."
  },
  "bringing-a-cannon-to-a-knife-fight": {
    "author": "adam-kozy",
    "description": "Chinas Great Cannon (GC), the offensive standalone system that serves as a complement to its defensive Great Firewall (GFW), debuted with a bang in early 2015, carrying out massive attacks on anti-censorship site Greatfire.org and everyones favorite code-sharing resource, Github. Not cool, man...This talk aims to examine Chinas destructive new toy and its methods for turning both Chinese users and global visitors to Chinese sites into the worlds largest botnet. We'll review the Great Cannons early construction, examine how it intercepts traffic as a Man-in-the-Middle proxy by doing live probe requests to the GC & GFW to determine the difference between their traffic, and show the relative ease with which it can further weaponize users to carry out attacks on sites deemed a threat to the Chinese Communist Party. Arguably as important as comprehending the methods by which the Great Cannon functions is understanding the WHY we intend to walk you through why the GC made an appearance at the time it did, the political underpinnings behind the decision to attack the Github repos, and how you can expect to see it change in the future as HTTPS and DNSSEC become more widely used.Are you wondering how to protect your company's traffic even if you use Baidu Ads or communicate with Chinese servers? Yep, we'll cover that too.Although the GC was wielded with all the subtlety of a sledgehammer during its debut, it is certainly capable of being a much more devious and dangerous tool to suppress perceived threats in a targeted and hard-to-detect fashion. Needless to say, it won't be going away anytime soon. Bulletproof yourself by attending this talk and learning all about Chinas Great Cannon.",
    "plaintextTitle": "Bringing a Cannon to a Knife Fight",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Kozy-Bringing-A-Cannon-To-A-Knife-Fight.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=wewFYh8pQrY"
      }
    ],
    "youtubeDescription": "by Adam Kozy  &  Johannes Gilger\n\nChinas Great Cannon (GC), the offensive standalone system that serves as a complement to its defensive Great Firewall (GFW), debuted with a bang in early 2015, carrying out massive attacks on anti-censorship site Greatfire.org and everyones favorite code-sharing resource, Github. Not cool, man...\n\nThis talk aims to examine Chinas destructive new toy and its methods for turning both Chinese users and global visitors to Chinese sites into the worlds largest botnet. We'll review the Great Cannons early construction, examine how it intercepts traffic as a Man-in-the-Middle proxy by doing live probe requests to the GC & GFW to determine the difference between their traffic, and show the relative ease with which it can further weaponize users to carry out attacks on sites deemed a threat to the Chinese Communist Party. Arguably as important as comprehending the methods by which the Great Cannon functions is understanding the WHY we intend to walk you through why the GC made an appearance at the time it did, the political underpinnings behind the decision to attack the Github repos, and how you can expect to see it change in the future as HTTPS and DNSSEC become more widely used.\n\nAre you wondering how to protect your company's traffic even if you use Baidu Ads or communicate with Chinese servers? Yep, we'll cover that too.\n\nAlthough the GC was wielded with all the subtlety of a sledgehammer during its debut, it is certainly capable of being a much more devious and dangerous tool to suppress perceived threats in a targeted and hard-to-detect fashion. Needless to say, it won't be going away anytime soon. Bulletproof yourself by attending this talk and learning all about Chinas Great Cannon."
  },
  "broadcasting-your-attack-security-testing-dab-radio-in-cars": {
    "author": "andy-davis",
    "description": "Digital Audio Broadcasting (DAB) radio receivers can be found in many new cars and are in most cases integrated into an IVI (In-Vehicle Infotainment) system, which is connected to other vehicle modules via the CAN bus. Therefore, any vulnerabilities discovered in the DAB radio stack code could potentially result in an attacker exploiting the IVI system and pivoting their attacks toward more cyber-physical modules such as those concerned with steering or braking. This talk will discuss the complex protocol capabilities of DAB and DAB+ and describe the potential areas where security vulnerabilities in different implementations may exist. I will discuss the use of Software Defined Radio in conjunction with open source DAB transmission software to develop our security testing tool (DABble). Finally, I will talk about some of our findings, the implications of exploiting DAB-based vulnerabilities via a broadcast radio medium, and what this could mean for the automotive world.",
    "plaintextTitle": "Broadcasting Your Attack: Security Testing DAB Radio in Cars",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ryNtz1nxmO4"
      }
    ],
    "youtubeDescription": "by Andy Davis \n\nDigital Audio Broadcasting (DAB) radio receivers can be found in many new cars and are in most cases integrated into an IVI (In-Vehicle Infotainment) system, which is connected to other vehicle modules via the CAN bus. Therefore, any vulnerabilities discovered in the DAB radio stack code could potentially result in an attacker exploiting the IVI system and pivoting their attacks toward more cyber-physical modules such as those concerned with steering or braking. This talk will discuss the complex protocol capabilities of DAB and DAB+ and describe the potential areas where security vulnerabilities in different implementations may exist. I will discuss the use of Software Defined Radio in conjunction with open source DAB transmission software to develop our security testing tool (DABble). Finally, I will talk about some of our findings, the implications of exploiting DAB-based vulnerabilities via a broadcast radio medium, and what this could mean for the automotive world."
  },
  "bypass-control-flow-guard-comprehensively": {
    "author": "yunhai-zhang",
    "description": "Control Flow Guard (CFG) is an exploit mitigation technique that Microsoft enabled in Windows 8.1 Update 3 and Windows 10 technical preview. CFG checks the target of indirect call and raises an exception if the target is invalid, thus preventing a vital step of many exploit techniques.This talk analyses the weak-point of CFG and presents a new technique that can be used to bypass CFG comprehensively and make the prevented exploit techniques exploitable again. Furthermore, this technique is based on a generic capability, thus more exploit techniques can be developed from that capability.",
    "plaintextTitle": "Bypass Control Flow Guard Comprehensively",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Zhang-Bypass-Control-Flow-Guard-Comprehensively.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Zhang-Bypass-Control-Flow-Guard-Comprehensively-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=K929gLPwlUs"
      }
    ],
    "youtubeDescription": "by Yunhai Zhang\n\nControl Flow Guard (CFG) is an exploit mitigation technique that Microsoft enabled in Windows 8.1 Update 3 and Windows 10 technical preview. CFG checks the target of indirect call and raises an exception if the target is invalid, thus preventing a vital step of many exploit techniques.\n\nThis talk analyses the weak-point of CFG and presents a new technique that can be used to bypass CFG comprehensively and make the prevented exploit techniques exploitable again. Furthermore, this technique is based on a generic capability, thus more exploit techniques can be developed from that capability."
  },
  "bypass-surgery-abusing-content-delivery-networks-with-server-side-request-forgery-ssrf-flash-and-dns": {
    "author": "mike-brooks",
    "description": "It is unlikely when a bug affects almost every CDN and it becomes vulnerable, but when this happens the possibilities are endless and potentially disastrous.Imagine - a Facebook worm giving an attacker full access to your bank account completely unbeknownst to you, until seven Bentleys, plane tickets for a herd of llamas, a mink coat once owned by P. Diddy, and a single monster cable all show up on your next statement. What a nightmare.But in all seriousness, thousands of websites relying on the most popular CDNs are at risk. While some application requirements may need a security bypass in order to work, these intentional bypasses can become a valuable link in an exploit chain. Our research has unveiled a collection of general attack patterns that can be used against the infrastructure that supports high availability websites.This is a story of exploit development with fascinating consequences.",
    "plaintextTitle": "Bypass Surgery  Abusing Content Delivery Networks with Server-Side-Request Forgery (SSRF) Flash and DNS",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ekUQIVUzDX4"
      }
    ],
    "youtubeDescription": "06 August 2015 - Black Hat USA (2015)\nMike Brooks & Matt Bryant - Bishop Fox\nhttp://www.bishopfox.com/resources/slides/\nhttp://www.bishopfox.com/download/5439/\n\nhttps://www.blackhat.com/us-15/briefings.html#bypass-surgery-abusing-content-delivery-networks-with-server-side-request-forgery-ssrf-flash-and-dns\n\nTitle: Bypass Surgery Abusing Content Delivery Networks with Server-Side-Request Forgery (SSRF) Flash and DNS\n\nIt is unlikely when a bug affects almost every CDN and it becomes vulnerable, but when this happens the possibilities are endless and potentially disastrous.\n\nImagine - a Facebook worm giving an attacker full access to your bank account completely unbeknownst to you, until seven Bentleys, plane tickets for a herd of llamas, a mink coat once owned by P. Diddy, and a single monster cable all show up on your next statement. What a nightmare.\n\nBut in all seriousness, thousands of websites relying on the most popular CDNs are at risk. While some application requirements may need a security bypass in order to work, these intentional bypasses can become a valuable link in an exploit chain. Our research has unveiled a collection of general attack patterns that can be used against the infrastructure that supports high availability websites.\n\nThis is a story of exploit development with fascinating consequences.\n\nDISCLAIMER: This video is intended for pentesting training purposes only."
  },
  "certifi-gate-front-door-access-to-pwning-millions-of-androids": {
    "author": "ohad-bobrov",
    "description": "Hundreds of millions of Android devices, including those running Lollipop, the latest and most secure version of Android OS, can be hijacked. A comprehensive study has revealed the existence of multiple instances of a fundamental flaw within the Android customisation chain that leave millions of devices (and users) vulnerable to attack.These vulnerabilities allow an attacker to take advantage of unsecure apps certified by OEMs and carriers to gain unfettered access to any device, including screen scraping, key logging, private information exfiltration, back door app installation, and more. In this session, Lacoon researchers will walk through the technical root cause of these responsibly-disclosed vulnerabilities including hash collisions, IPC abuse and certificate forging which allow an attacker to grant their malware complete control of a victims device. We'll explain why these vulnerabilities are a serious problem that in some ways can't be completely eliminated, show how attackers exploit them, demonstrate an exploit against a live device, and provide remediation advice.",
    "plaintextTitle": "Certifi-gate: Front-Door Access to Pwning Millions of Androids",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Bobrov-Certifi-Gate-Front-Door-Access-To-Pwning-Millions-Of-Androids.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Bobrov-Certifi-Gate-Front-Door-Access-To-Pwning-Millions-Of-Androids-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=G-uOgxhOGx8"
      }
    ],
    "youtubeDescription": "by Ohad Bobrov  &  Avi Bashan\n\nHundreds of millions of Android devices, including those running Lollipop, the latest and most secure version of Android OS, can be hijacked. A comprehensive study has revealed the existence of multiple instances of a fundamental flaw within the Android customisation chain that leave millions of devices (and users) vulnerable to attack.\n\nThese vulnerabilities allow an attacker to take advantage of unsecure apps certified by OEMs and carriers to gain unfettered access to any device, including screen scraping, key logging, private information exfiltration, back door app installation, and more. In this session, Lacoon researchers will walk through the technical root cause of these responsibly-disclosed vulnerabilities including hash collisions, IPC abuse and certificate forging which allow an attacker to grant their malware complete control of a victims device. We'll explain why these vulnerabilities are a serious problem that in some ways can't be completely eliminated, show how attackers exploit them, demonstrate an exploit against a live device, and provide remediation advice."
  },
  "cloning-3g-4g-sim-cards-with-a-pc-and-an-oscilloscope-lessons-learned-in-physical-security": {
    "author": "yu-yu",
    "description": "Recently, documents leaked from Edward Snowden alleged that NSA and GCHQ had stolen millions of SIM card encryption keys from one of the world's largest chip manufacturers. This incident draws the public attention to the longstanding concern for the mobile network security. Despite that various attacks against 2G (GSM) algorithms (COMP-128, A5) were found in literature, no practical attacks were known against 3G/4G (UMTS/LTE) SIM cards. 3G/4G SIM cards adopt a mutual authentication algorithm called MILENAGE, which is in turn based on AES-128, a mathematically secure block cipher standardized by NIST. In addition to the encryption key, MILENAGE also uses nearly a dozen of 128-bit secrets to further obfuscate the algorithm.In this presentation, we show how to amount differential power analysis that recovers encryption key and other secrets in a divide-and-conquer manner within a few (10 to 40) minutes, allowing for SIM cards cloning. Our experiments succeeded on eight 3G/4G SIM cards from a variety of operators and manufacturers. The measurement setup of our experiment mainly consists of an oscilloscope (for power acquisition), an MP300-SC2 protocol analyzer (for interception of the messages), a self-made SIM card reader, and a PC (for signal processing and cryptanalysis). We finish the presentation by showing what happens to a 3G/4G SIM card and its duplicate when receiving texts/calls at the same time.",
    "plaintextTitle": "Cloning 3G/4G SIM Cards with a PC and an Oscilloscope: Lessons Learned in Physical Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Yu-Cloning-3G-4G-SIM-Cards-With-A-PC-And-An-Oscilloscope-Lessons-Learned-In-Physical-Security.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Yu-Cloning-3G-4G-SIM-Cards-With-A-PC-And-An-Oscilloscope-Lessons-Learned-In-Physical-Security-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=qKCQ1KL9GEc"
      }
    ],
    "youtubeDescription": "by Yu Yu \n\nRecently, documents leaked from Edward Snowden alleged that NSA and GCHQ had stolen millions of SIM card encryption keys from one of the world's largest chip manufacturers. This incident draws the public attention to the longstanding concern for the mobile network security. Despite that various attacks against 2G (GSM) algorithms (COMP-128, A5) were found in literature, no practical attacks were known against 3G/4G (UMTS/LTE) SIM cards. 3G/4G SIM cards adopt a mutual authentication algorithm called MILENAGE, which is in turn based on AES-128, a mathematically secure block cipher standardized by NIST. In addition to the encryption key, MILENAGE also uses nearly a dozen of 128-bit secrets to further obfuscate the algorithm.\n\nIn this presentation, we show how to amount differential power analysis that recovers encryption key and other secrets in a divide-and-conquer manner within a few (10 to 40) minutes, allowing for SIM cards cloning. Our experiments succeeded on eight 3G/4G SIM cards from a variety of operators and manufacturers. The measurement setup of our experiment mainly consists of an oscilloscope (for power acquisition), an MP300-SC2 protocol analyzer (for interception of the messages), a self-made SIM card reader, and a PC (for signal processing and cryptanalysis). We finish the presentation by showing what happens to a 3G/4G SIM card and its duplicate when receiving texts/calls at the same time."
  },
  "commercial-mobile-spyware-detecting-the-undetectable": {
    "author": "joshua-dalman",
    "description": "Research shows commercial spyware is becoming common place. These programs turn smartphones into effective spy tools and pose a threat to both smartphone users privacy and to corporate enterprises. Furthermore, the tools are sold and marketed as being completely undetectable to the users. We put that claim to the test.",
    "plaintextTitle": "Commercial Mobile Spyware - Detecting the Undetectable",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Dalman-Commercial-Spyware-Detecting-The-Undetectable.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Dalman-Commercial-Spyware-Detecting-The-Undetectable-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=FNSjGsYsi-0"
      }
    ],
    "youtubeDescription": "by Joshua Dalman  &  Valerie Hantke\n\nResearch shows commercial spyware is becoming common place. These programs turn smartphones into effective spy tools and pose a threat to both smartphone users privacy and to corporate enterprises. Furthermore, the tools are sold and marketed as being completely undetectable to the users. We put that claim to the test."
  },
  "cracklord-maximizing-password-cracking-boxes": {
    "author": "lucas-morris",
    "description": "Over the past several years the world of password cracking has exploded with new tools and techniques. These new techniques have made it easier than ever to reverse captured password hashes. Based on our experience, within the past few years passwords have often become the first step into compromising the entire network. New techniques such as LLMNR/NetBIOS response have reduced the efficacy of pass the hash techniques, again increasing the necessity of actually cracking the hashes. With the addition of powerful techniques, from GPGPU cracking to rainbow tables, it is easier than ever to access the plaintext for fun and profit.Heavy utilization of GPUs has increased the power of these tools exponentially. Many organizations and individuals have built massive GPU password cracking rigs and cloud based services, such as AWS GPU instances, have also placed high performance cracking into the realm of affordability. Although the current tools do an amazing job providing heavy utilization for individual hardware, they have not kept pace with the need for distributed cracking services. Additionally, these tools can often make the sharing of expensive hardware difficult, requiring manual job tracking, GNU screen, or scripts put together to queue cracking jobs.CrackLord attempts to change this by providing a scalable, pluggable, and distributed password cracking system. Better said, CrackLord is a way to load balance the resources, such as GPUs and CPUs, from multiple hardware systems into a single queuing service. CrackLord uses two primary services: the Resource and Queue. The Resource is a service that runs on individual systems, providing access to their underlying hardware. Resources utilize various tools, such as Hashcat, John the Ripper, rcrack, or others, to run jobs and use the local CPU or GPU to crack hashes. The Queue is a service that runs on a single system, providing an interface for users to submit cracking jobs. These jobs are then processed and sent to available Resources to perform the actual crack. Users are able to create, pause, resume, and delete jobs in the Queue which will communicate with the Resource to handle the results. Finally, the system is designed to be extensible providing standard interfaces and libraries allowing new tools, resource types, and management interfaces to be written and added as necessary.",
    "plaintextTitle": "CrackLord: Maximizing Password Cracking Boxes",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Morris-CrackLord-Maximizing-Password-Cracking.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Morris-CrackLord-Maximizing-Password-Cracking-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Morris-CrackLord-Maximizing-Password-Cracking-src.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=g8MX-ErHDNg"
      }
    ],
    "youtubeDescription": "by Lucas Morris  &  Michael McAtee\n\nOver the past several years the world of password cracking has exploded with new tools and techniques. These new techniques have made it easier than ever to reverse captured password hashes. Based on our experience, within the past few years passwords have often become the first step into compromising the entire network. New techniques such as LLMNR/NetBIOS response have reduced the efficacy of pass the hash techniques, again increasing the necessity of actually cracking the hashes. With the addition of powerful techniques, from GPGPU cracking to rainbow tables, it is easier than ever to access the plaintext for fun and profit.\n\nHeavy utilization of GPUs has increased the power of these tools exponentially. Many organizations and individuals have built massive GPU password cracking rigs and cloud based services, such as AWS GPU instances, have also placed high performance cracking into the realm of affordability. Although the current tools do an amazing job providing heavy utilization for individual hardware, they have not kept pace with the need for distributed cracking services. Additionally, these tools can often make the sharing of expensive hardware difficult, requiring manual job tracking, GNU screen, or scripts put together to queue cracking jobs.\n\nCrackLord attempts to change this by providing a scalable, pluggable, and distributed password cracking system. Better said, CrackLord is a way to load balance the resources, such as GPUs and CPUs, from multiple hardware systems into a single queuing service. CrackLord uses two primary services: the Resource and Queue. The Resource is a service that runs on individual systems, providing access to their underlying hardware. Resources utilize various tools, such as Hashcat, John the Ripper, rcrack, or others, to run jobs and use the local CPU or GPU to crack hashes. The Queue is a service that runs on a single system, providing an interface for users to submit cracking jobs. These jobs are then processed and sent to available Resources to perform the actual crack. Users are able to create, pause, resume, and delete jobs in the Queue which will communicate with the Resource to handle the results. Finally, the system is designed to be extensible providing standard interfaces and libraries allowing new tools, resource types, and management interfaces to be written and added as necessary."
  },
  "crash-and-pay-how-to-own-and-clone-contactless-payment-devices": {
    "author": "peter-fillmore",
    "description": "With all this talk about NFC payments (Apple Pay, Google Wallet, etc.), are there claims on your card that can't be cloned? What security mechanisms can prevent this? How can they be subverted to make fraudulent transactions?This talk answers these questions by taking you through how NFC payments work and how you can perform fraudulent transactions with just an off-the-shelf phone and a little bit of software. I'll take you through how you can clone common NFC payment cards; show you the attacks and explain why it is possible. Information will be provided on the inexpensive tools now available for testing NFC devices and how to put together your own testing lab to test for vulnerabilities over these interfaces.",
    "plaintextTitle": "Crash & Pay: How to Own and Clone Contactless Payment Devices",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Fillmore-Crash-Pay-How-To-Own-And-Clone-Contactless-Payment-Devices.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Fillmore-Crash-Pay-How-To-Own-And-Clone-Contactless-Payment-Devices-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=SLGl9X9LBv4"
      }
    ],
    "youtubeDescription": "by Peter Fillmore\n\nWith all this talk about NFC payments (Apple Pay, Google Wallet, etc.), are there claims on your card that can't be cloned? What security mechanisms can prevent this? How can they be subverted to make fraudulent transactions?\n\nThis talk answers these questions by taking you through how NFC payments work and how you can perform fraudulent transactions with just an off-the-shelf phone and a little bit of software. I'll take you through how you can clone common NFC payment cards; show you the attacks and explain why it is possible. Information will be provided on the inexpensive tools now available for testing NFC devices and how to put together your own testing lab to test for vulnerabilities over these interfaces."
  },
  "dance-like-nobodys-watching-encrypt-like-everyone-is-a-peek-inside-the-black-hat-network": {
    "author": "neil-wyler",
    "description": "Every year thousands of security professionals descend upon Las Vegas to learn the latest and greatest offensive and defensive infosec techniques. They check into a hotel, they pick up their badge, they get on the Black Hat network...and inevitably, they play. \"Security professionals\"? That's just corporate speak for \"Hackers.\"This presentation will explore the inner workings of what is, without a doubt, one of the most hostile network environments ever created. Oh!, we don't make it hostile. You do. We just try to keep it up and running. So come see what goes into the planning, deployment, and maintenance of the Black Hat network infrastructure. We'll share as much as we can about the history of the network, the gear we're using today, and the traffic patterns that keep us sweating, and laughing, well into the night.",
    "plaintextTitle": "Dance Like Nobodys Watching Encrypt Like Everyone Is: A Peek Inside the Black Hat Network",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7O5qqQy675c"
      }
    ],
    "youtubeDescription": "by Guangdong Bai\n\nSecurity of authentication protocols heavily replies on the confidentiality of credentials (or authenticators) like passwords and session IDs. However, unlike browser-based web applications for which highly evolved browsers manage the authenticators, Android apps have to construct their own management. We find that most apps simply locate the authenticators into the persistent storage and entrust the underlying Android OS for mediation. Consequently, the authenticators can be leaked through compromised backup channels. In this work, we conduct the first systematic investigation on this previously overlooked attack vector. We find that nearly all backup apps on Google Play inadvertently expose backup data to any app with Internet and SD card permissions. With this exposure, the malicious apps can steal other apps' authenticators and obtain complete control over the authenticated sessions. We show that this can be stealthily and efficiently done by building a proof-of-concept app named AuthSniffer. We find that 80 (68.4%) out of 117 tested top-ranked apps which have implemented authentication schemes are subject to this threat. Our study should raise the awareness of app developers and protocol analysts about this attack vector."
  },
  "data-driven-threat-intelligence-metrics-on-indicator-dissemination-and-sharing": {
    "author": "alex-pinto",
    "description": "For the past 18 months, Niddel have been collecting threat intelligence indicator data from multiple sources in order to make sense of the ecosystem and try to find a measure of efficiency or quality in these feeds. This initiative culminated in the creation of Combine and TIQ-test, two of the open source projects from MLSec Project. These projects have been improved upon for the last year and are able to gather and compare data from multiple Threat Intelligence sources on the Internet.We take this analysis a step further and extract insights form more than 12 months of collected threat intel data to verify the overlap and uniqueness of those sources. If we are able to find enough overlap, there could be a strategy that could put together to acquire an optimal number of feeds, but as Niddel demonstrated on the 2015 Verizon DBIR, that is not the case.We also gathered aggregated usage information from intelligence sharing communities in order to determine if the added interest and \"push\" towards sharing is really being followed by the companies and if its adoption is putting us in the right track to close these gaps.Join us in an data-driven analysis of over an year of collected Threat Intelligence indicators and their sharing communities!",
    "plaintextTitle": "Data-Driven Threat Intelligence: Metrics on Indicator Dissemination and Sharing",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Pinto-Data-Driven-Threat-Intelligence-Metrics-On-Indicator-Dissemination-And-Sharing.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=6JMEKnes-w0"
      }
    ],
    "youtubeDescription": "by Alex Pinto  &  Alexandre Sieira\n\nFor the past 18 months, Niddel have been collecting threat intelligence indicator data from multiple sources in order to make sense of the ecosystem and try to find a measure of efficiency or quality in these feeds. This initiative culminated in the creation of Combine and TIQ-test, two of the open source projects from MLSec Project. These projects have been improved upon for the last year and are able to gather and compare data from multiple Threat Intelligence sources on the Internet.\n\nWe take this analysis a step further and extract insights form more than 12 months of collected threat intel data to verify the overlap and uniqueness of those sources. If we are able to find enough overlap, there could be a strategy that could put together to acquire an optimal number of feeds, but as Niddel demonstrated on the 2015 Verizon DBIR, that is not the case.\n\nWe also gathered aggregated usage information from intelligence sharing communities in order to determine if the added interest and \"push\" towards sharing is really being followed by the companies and if its adoption is putting us in the right track to close these gaps.\n\nJoin us in an data-driven analysis of over an year of collected Threat Intelligence indicators and their sharing communities!"
  },
  "deep-learning-on-disassembly": {
    "author": "matt-wolff",
    "description": "Recently, the application of deep learning techniques to natural language processing has led to state-of-the-art results for speech recognition, language modeling, and language translation. To some degree, disassembly can be considered an extension or augmentation of natural language. As an loose example, many experienced reverse engineers can read through disassembled code and understand the meaning in one pass, similar to their skill in reading text in natural languages.In this talk, we show the effectiveness of applying deep learning techniques to disassembly in an effort to generate models designed to identify malware. Starting with a brief explanation of deep learning, we then work through the different pieces of the pipeline to go from a collection of raw binaries, to extraction and transformation of disassembly data, and training of a deep learning model. We then conclude by providing data on the efficacy of these models, and follow up with a live demo where we will evaluate the models against active malware feeds.",
    "plaintextTitle": "Deep Learning on Disassembly",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Davis-Deep-Learning-On-Disassembly.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=LQh8dktQReI"
      }
    ],
    "youtubeDescription": "by Matt Wolff  &  Andrew Davis\n\nRecently, the application of deep learning techniques to natural language processing has led to state-of-the-art results for speech recognition, language modeling, and language translation. To some degree, disassembly can be considered an extension or augmentation of natural language. As an loose example, many experienced reverse engineers can read through disassembled code and understand the meaning in one pass, similar to their skill in reading text in natural languages.\n\nIn this talk, we show the effectiveness of applying deep learning techniques to disassembly in an effort to generate models designed to identify malware. Starting with a brief explanation of deep learning, we then work through the different pieces of the pipeline to go from a collection of raw binaries, to extraction and transformation of disassembly data, and training of a deep learning model. We then conclude by providing data on the efficacy of these models, and follow up with a live demo where we will evaluate the models against active malware feeds."
  },
  "defeating-machine-learning-what-your-security-vendor-is-not-telling-you": {
    "author": "bob-klein",
    "description": "Machine learning is rapidly gaining popularity in the security space. Many vendors and security professionals are touting this new technology as the ultimate malware defense. While evidence from both research and practice validates the improved efficacy of machine learning-based approaches, their drawbacks are rarely discussed.In this talk, we will demonstrate, from an attacker's perspective, how commonly deployed machine learning defenses can be defeated. We then step back and examine how existing systemic issues in the network security industry allow this to occur, and begin the discussion with the community about these issues. Finally, we propose a solution that uses novel data sourcing techniques to address these problems.",
    "plaintextTitle": "Defeating Machine Learning: What Your Security Vendor is Not Telling You",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Klein-Defeating-Machine-Learning-What-Your-Security-Vendor-Is-Not-Telling-You.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=M57tfJW8kQw"
      }
    ],
    "youtubeDescription": "by Bob Klein  &  Ryan Peters\n\nMachine learning is rapidly gaining popularity in the security space. Many vendors and security professionals are touting this new technology as the ultimate malware defense. While evidence from both research and practice validates the improved efficacy of machine learning-based approaches, their drawbacks are rarely discussed.\n\nIn this talk, we will demonstrate, from an attacker's perspective, how commonly deployed machine learning defenses can be defeated. We then step back and examine how existing systemic issues in the network security industry allow this to occur, and begin the discussion with the community about these issues. Finally, we propose a solution that uses novel data sourcing techniques to address these problems."
  },
  "defeating-pass-the-hash-separation-of-powers": {
    "author": "seth-moore",
    "description": "The harvest and reuse of symmetric credentials has become a linchpin of system breaches. Under the guise of Pass-the-Hash, attackers are adept at reusing not only passwords, but derivatives such as hashes and keys. Windows 10 brings strong isolation of these artifacts, defeating Pass-the-Hash attacks originating from clients.Legacy protocols such as Kerberos and NTLM are broadly deployed and will be vulnerable to attack for many years to come. Business needs dictate that Pass-the-Hash mitigations must work within the limitations of these protocols. In such an environment, how can Pass-the-Hash be stopped?The answer is a new level of OS isolation, based on virtualization technology. Hashes, keys, and other secrets are sequestered within physical memory not even the kernel may read. If an attacker cannot read the secrets, the attacker cannot reuse them.In this talk, we give an overview of the isolation technology. In addition, we answer questions such as: How does Windows 10 guarantee isolation of secrets? How does this go beyond simple client security? Can this even be achieved without major protocol revisions?",
    "plaintextTitle": "Defeating Pass-the-Hash: Separation of Powers",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Moore-Defeating Pass-the-Hash-Separation-Of-Powers.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Moore-Defeating Pass-the-Hash-Separation-Of-Powers-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Bg3rWutoNTM"
      }
    ],
    "youtubeDescription": "by Seth Moore  &  Baris Saydag\n\nThe harvest and reuse of symmetric credentials has become a linchpin of system breaches. Under the guise of Pass-the-Hash, attackers are adept at reusing not only passwords, but derivatives such as hashes and keys. Windows 10 brings strong isolation of these artifacts, defeating Pass-the-Hash attacks originating from clients.\n\nLegacy protocols such as Kerberos and NTLM are broadly deployed and will be vulnerable to attack for many years to come. Business needs dictate that Pass-the-Hash mitigations must work within the limitations of these protocols. In such an environment, how can Pass-the-Hash be stopped?\n\nThe answer is a new level of OS isolation, based on virtualization technology. Hashes, keys, and other secrets are sequestered within physical memory not even the kernel may read. If an attacker cannot read the secrets, the attacker cannot reuse them.\n\nIn this talk, we give an overview of the isolation technology. In addition, we answer questions such as: How does Windows 10 guarantee isolation of secrets? How does this go beyond simple client security? Can this even be achieved without major protocol revisions?"
  },
  "distributing-the-reconstruction-of-high-level-intermediate-representation-for-large-scale-malware-analysis": {
    "author": "rodrigo-branco",
    "description": "Malware is acknowledged as an important threat and the number of new samples grows at an absurd pace. Additionally, targeted and so called advanced malware became the rule, not the exception. Analysts and companies use different degrees of automation to be able to handle the challenge, but there is always a gap. Reverse engineering is an even harder task due to the increased amount of work and the stricter time-frame to accomplish it. This has a direct impact on the investigative process and thus makes prevention of future threats more challenging.In this work, the authors discuss distributed reverse engineering techniques, using intermediate representation (thanks Hex-Rays team for support us in this research) in a clustered environment. The results presented demonstrate different uses for this kind of approach, for example to find algorithmic commonalities between malware families.A higher level abstraction of the malware code is constructed from the abstract syntax tree (ctree) provided by Hex-Rays Decompiler. That abstraction facilitates the extraction of characteristics such as domain generation algorithms (DGA), custom encryption and specific parsers for configuration data. In order to reduce the number of false positives in some C++ metadata identification, such as virtual function tables and RTTI, the authors created the object-oriented artifacts directly from the analyzed malware.The extracted characteristics of 2 million malware samples are analyzed and the presented results provide a rich dataset to improve malware analysis efforts and threat intelligence initiatives. With that dataset, other researchers will be able to extract a ctree from new samples and compare to the millions we performed.As an additional contribution, the gathered representation together with all the raw information from the samples will be available to other researchers after the presentation; together with additional ideas for future development. The developed Hex-Rays Decompiler plugin and analysis/automation tools used to extract the characteristics will also be made available to the audience on Github.",
    "plaintextTitle": "Distributing the Reconstruction of High-Level Intermediate Representation for Large Scale Malware Analysis",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Branco-Distributing-The-Reconstruction-Of-High-Level-Intermediate-Representation-For-Large-Scale-Malware-Analysis.pdf",
        "type": "Presentation"
      }
    ]
  },
  "dom-flow-untangling-the-dom-for-more-easy-juicy-bugs": {
    "author": "ahamed-nafeez",
    "description": "Modern day web applications are quite JavaScript heavy and its only going to get worse for pen-testers and scanners alike, because of the complexity involved. Client side attacks like DOM XSS, insecure usage of WebSockets, unwanted use of Global variables, insecure user-defined functions, and many other similar patterns are quite hard to detect for the pen-tester manually or even by static JavaScript analysers.How about we hook onto all the JavaScript actions dynamically and transparently? The results are very useful to conduct more advanced penetration tests on web apps. Existing JS dynamic analysis tools only work if its built within the code, such as performance analysis. Moreover, the JS files are minified in production. To solve this problem enter Hookish!Hookish! is an open-source chrome-extension which overrides most of the DOM properties and brings out the interesting stuff to the pen-tester. For instance, imagine a single page web-app with some complex JS code and you would like to know whether all the content being dynamically updated to the DOM are clean. Do they use a safe filter / encoder before pushing it to the DOM? Well, Hookish! can solve this problem for you. It hooks into all XHR responses, and matches those strings with DOM mutation events like DOMNodeInserted, DOMSubtreeModified etc. and also tries relevant payloads to check whether there are possible DOM XSS vulnerabilities and other such shenanigans. This is just scratching the surface, things can become more intuitive when a pen-tester uses Dom Flow.Dom Flow is a feature where one can drag and drop the sources and sinks as he wishes to understand how data flows between them in the given app. This is something which brings out more understanding of the app and reveals hidden DOM based bugs and also helps the pen-tester to conduct further attacks.",
    "plaintextTitle": "Dom Flow - Untangling the DOM for More Easy-Juicy Bugs",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Nafeez-Dom-Flow-Untangling-The-DOM-For-More-Easy-Juicy-Bugs.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=kedmtrIEW1k"
      }
    ],
    "youtubeDescription": "by Ahamed Nafeez\n\nModern day web applications are quite JavaScript heavy and its only going to get worse for pen-testers and scanners alike, because of the complexity involved. Client side attacks like DOM XSS, insecure usage of WebSockets, unwanted use of Global variables, insecure user-defined functions, and many other similar patterns are quite hard to detect for the pen-tester manually or even by static JavaScript analysers.\n\nHow about we hook onto all the JavaScript actions dynamically and transparently? The results are very useful to conduct more advanced penetration tests on web apps. Existing JS dynamic analysis tools only work if its built within the code, such as performance analysis. Moreover, the JS files are minified in production. To solve this problem enter Hookish!\n\nHookish! is an open-source chrome-extension which overrides most of the DOM properties and brings out the interesting stuff to the pen-tester. For instance, imagine a single page web-app with some complex JS code and you would like to know whether all the content being dynamically updated to the DOM are clean. Do they use a safe filter / encoder before pushing it to the DOM? Well, Hookish! can solve this problem for you. It hooks into all XHR responses, and matches those strings with DOM mutation events like DOMNodeInserted, DOMSubtreeModified etc. and also tries relevant payloads to check whether there are possible DOM XSS vulnerabilities and other such shenanigans. This is just scratching the surface, things can become more intuitive when a pen-tester uses Dom Flow.\n\nDom Flow is a feature where one can drag and drop the sources and sinks as he wishes to understand how data flows between them in the given app. This is something which brings out more understanding of the app and reveals hidden DOM based bugs and also helps the pen-tester to conduct further attacks."
  },
  "emanate-like-a-boss-generalized-covert-data-exfiltration-with-funtenna": {
    "author": "ang-cui",
    "description": "Funtenna is a software-only technique which causes intentional compromising emanation in a wide spectrum of modern computing hardware for the purpose of covert, reliable data exfiltration through secured and air-gapped networks. We present a generalized Funtenna technique that reliably encodes and emanates arbitrary data across wide portions of the electromagnetic spectrum, ranging from the sub-acoustic to RF and beyond.The Funtenna technique is hardware agnostic, can operate within nearly all modern computer systems and embedded devices, and is specifically intended to operate within hardware not designed to to act as RF transmitters.We believe that Funtenna is an advancement of current state-of-the-art covert wireless exfiltration technologies. Specifically, Funtenna offers comparable exfiltration capabilities to RF-based retro-reflectors, but can be realized without the need for physical implantation and illumination.We first present a brief survey of the history of compromising emanation research, followed by a discussion of the theoretical mechanisms of Funtenna and intentionally induced compromising emanation in general. Lastly, we demonstrate implementations of Funtenna as small software implants within several ubiquitous embedded devices, such as VoIP phones and printers, and in common computer peripherals, such as hard disks, console ports, network interface cards and more.",
    "plaintextTitle": "Emanate Like a Boss: Generalized Covert Data Exfiltration with Funtenna",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Cui-Emanate-Like-A-Boss-Generalized-Covert-Data-Exfiltration-With-Funtenna.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=-YXkgN2-JD4"
      }
    ],
    "youtubeDescription": "by Ang Cui\n\nFuntenna is a software-only technique which causes intentional compromising emanation in a wide spectrum of modern computing hardware for the purpose of covert, reliable data exfiltration through secured and air-gapped networks. We present a generalized Funtenna technique that reliably encodes and emanates arbitrary data across wide portions of the electromagnetic spectrum, ranging from the sub-acoustic to RF and beyond.\n\nThe Funtenna technique is hardware agnostic, can operate within nearly all modern computer systems and embedded devices, and is specifically intended to operate within hardware not designed to to act as RF transmitters.\n\nWe believe that Funtenna is an advancement of current state-of-the-art covert wireless exfiltration technologies. Specifically, Funtenna offers comparable exfiltration capabilities to RF-based retro-reflectors, but can be realized without the need for physical implantation and illumination.\n\nWe first present a brief survey of the history of compromising emanation research, followed by a discussion of the theoretical mechanisms of Funtenna and intentionally induced compromising emanation in general. Lastly, we demonstrate implementations of Funtenna as small software implants within several ubiquitous embedded devices, such as VoIP phones and printers, and in common computer peripherals, such as hard disks, console ports, network interface cards and more."
  },
  "exploiting-out-of-order-execution-for-covert-cross-vm-communication": {
    "author": "sophia-dantoine",
    "description": "This presentation will demonstrate a novel side channel exploiting CPU out-of-order-execution to enable covert cross-VM communication in cloud computing environments. Live demonstrations will show several applications of this side channel, including cross process or VM eavesdropping, malware command & control and environmental keying. The presentation will conclude with a brief analysis of detection and mitigation techniques for this attack.",
    "plaintextTitle": "Exploiting Out-of-Order Execution for Covert Cross-VM Communication",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-DAntoine-Exploiting-Out-Of-Order-Execution-For-Covert-Cross-VM-Communication.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-DAntoine-Exploiting-Out-Of-Order-Execution-For-Covert-Cross-VM-Communication-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=SjcKqVRjNHc"
      }
    ],
    "youtubeDescription": "by Sophia D'Antoine\n\nThis presentation will demonstrate a novel side channel exploiting CPU out-of-order-execution to enable covert cross-VM communication in cloud computing environments. Live demonstrations will show several applications of this side channel, including cross process or VM eavesdropping, malware command & control and environmental keying. The presentation will conclude with a brief analysis of detection and mitigation techniques for this attack."
  },
  "exploiting-the-dram-rowhammer-bug-to-gain-kernel-privileges": {
    "author": "mark-seaborn",
    "description": "\"Rowhammer\" is a problem with DRAM in which repeatedly accessing a row of memory can cause bit flips in adjacent rows. While the industry has known about the problem for a while and has started mitigating the problem in newer hardware, it was rarely mentioned in public until the publication of Yoongu Kim et al's paper in the summer of 2014 which included hard data about the prevalence of the problem. In spite of the paper's speculations about the exploitability of the issue, most people still classified rowhammer as only a reliability issue - the probabilistic aspect of the problem seems to have made people think exploitability would be impractical.We have shown that rowhammer is practically exploitable in real-world scenarios - both in-browser through NaCl, and outside of the browser to escalate to kernel privileges. The probabilistic aspect can be effectively tamed so that the problem can be reliably exploited.Rowhammer, to our knowledge, represents the first public discussion of turning a widespread, real-world, physics-level hardware problem into a security issue.We will discuss the details of our two exploits cause and use bit flips, and how the rowhammer problem can be mitigated. We will explore whether it is possible to cause row hammering using normal cached memory accesses.",
    "plaintextTitle": "Exploiting the DRAM Rowhammer Bug to Gain Kernel Privileges",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Seaborn-Exploiting-The-DRAM-Rowhammer-Bug-To-Gain-Kernel-Privileges.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Seaborn-Exploiting-The-DRAM-Rowhammer-Bug-To-Gain-Kernel-Privileges-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=0U7511Fb4to"
      }
    ],
    "youtubeDescription": "by Mark Seaborn, Halvar Flake\n\n\"Rowhammer\" is a problem with DRAM in which repeatedly accessing a row of memory can cause bit flips in adjacent rows. While the industry has known about the problem for a while and has started mitigating the problem in newer hardware, it was rarely mentioned in public until the publication of Yoongu Kim et al's paper in the summer of 2014 which included hard data about the prevalence of the problem. In spite of the paper's speculations about the exploitability of the issue, most people still classified rowhammer as only a reliability issue - the probabilistic aspect of the problem seems to have made people think exploitability would be impractical.\n\nWe have shown that rowhammer is practically exploitable in real-world scenarios - both in-browser through NaCl, and outside of the browser to escalate to kernel privileges. The probabilistic aspect can be effectively tamed so that the problem can be reliably exploited.\n\nRowhammer, to our knowledge, represents the first public discussion of turning a widespread, real-world, physics-level hardware problem into a security issue.\n\nWe will discuss the details of our two exploits cause and use bit flips, and how the rowhammer problem can be mitigated. We will explore whether it is possible to cause row hammering using normal cached memory accesses."
  },
  "exploiting-xxe-vulnerabilities-in-file-parsing-functionality": {
    "author": "willis-vandevanter",
    "description": "In this 25-minute briefing, we will discuss techniques for exploiting XXE vulnerabilities in File Parsing/Upload functionality. Specifically, XML Entity Attacks are well known, but their exploitation inside XML supported file formats such as docx, xlsx, pptx, and others are not. Discussing the technically relevant points step by step, we will use real world examples from products and recent bug bounties. Finally, in our experience, creating 'XXE backdoored' files can be a very slow process. We will introduce our battle tested tool for infecting the file formats discussed.",
    "plaintextTitle": "Exploiting XXE Vulnerabilities in File Parsing Functionality",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Vandevanter-Exploiting-XXE-Vulnerabilities-In-File-Parsing-Functionality.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Vandevanter-Exploiting-XXE-Vulnerabilities-In-File-Parsing-Functionality-tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=LZUlw8hHp44"
      }
    ],
    "youtubeDescription": "by Willis Vandevanter\n\nIn this 25-minute briefing, we will discuss techniques for exploiting XXE vulnerabilities in File Parsing/Upload functionality. Specifically, XML Entity Attacks are well known, but their exploitation inside XML supported file formats such as docx, xlsx, pptx, and others are not. Discussing the technically relevant points step by step, we will use real world examples from products and recent bug bounties. Finally, in our experience, creating 'XXE backdoored' files can be a very slow process. We will introduce our battle tested tool for infecting the file formats discussed."
  },
  "faux-disk-encryption-realities-of-secure-storage-on-mobile-devices": {
    "author": "daniel-mayer",
    "description": "The number of mobile users has recently surpassed the number of desktop users, emphasizing the importance of mobile device security. In traditional browser-server applications, data tends to be stored on the server side where tight controls can be enforced. In contrast, many mobile applications cache data locally on the device thus exposing it to a number of new attack vectors. Moreover, locally stored data often includes authentication tokens that are, compared to browser applications, typically long-lived. One main concern is the loss or theft of a device which grants an attacker physical access which may be used to bypass security controls in order to gain access to application data. Depending on the application's data, this can result in a loss of privacy (e.g., healthcare data, personal pictures and messages) or loss of intellectual property in the case of sensitive corporate data.  In this talk, we discuss the challenges mobile app developers face in securing data stored on devices including mobility, accessibility, and usability requirements. Given these challenges we first debunk common misconceptions about full-disk encryption and show why it is not sufficient for most attack scenarios. We then systematically introduce the more sophisticated secure storage techniques that are available for iOS and Android respectively. For each platform, we discuss in-depth which mechanisms are available, how they technically operate, and whether they fulfill the practical security and usability requirements. We conclude the talk with an analysis of what still can go wrong even when current best-practices are followed and what the security and mobile device community can do to address these shortcomings.  At the end of our talk, attendees will understand the significant challenges involved in storing data on an always-on and portable device, how to securely store data for different use cases, and how to uncover secure storage flaws in real-world applications.",
    "plaintextTitle": "Faux Disk Encryption: Realities of Secure Storage on Mobile Devices",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Mayer-Faux-Disk-Encryption-Realities-Of-Secure-Storage-On-Mobile-Devices.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Mayer-Faux-Disk-Encryption-Realities-Of-Secure-Storage-On-Mobile-Devices-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=rJbDRvfqc1I"
      }
    ],
    "youtubeDescription": "The number of mobile users has recently surpassed the number of desktop users, emphasizing the importance of mobile device security. In traditional browser-server applications, data tends to be stored on the server side where tight controls can be enforced. In contrast, many mobile applications cache data locally on the device thus exposing it to a number of new attack vectors. Moreover, locally stored data often includes authentication tokens that are, compared to browser applications, typically long-lived. One main concern is the loss of theft of a device which grants an attacker physical access which may be used by bypass security controls in order to gain access to application data. Depending on the application’s data, this can result in a loss of privacy (e.g., healthcare data, personal pictures and messages) or loss of intellectual property in the case of sensitive corporate data.\n\nIn this talk, we discuss the challenges mobile app developers face in securing data stored on devices including mobility, accessibility, and usability requirements. Given these challenges we first debunk common misconceptions about full-disk encryption and show why it is not sufficient for many attack scenarios. We then systematically introduce the more sophisticated secure storage techniques that are available for iOS and Androids respectively. For each platform, we discuss in-depth which mechanisms are available, how they technically operate, and whether they fulfill the practical security and usability requirements. We conclude the talk with a demonstration of a kernel root-kit exploit called Rosie (the evil Android maid) we created that illustrates what still can go wrong even when current best-practices are followed and what the security and mobile device community can do to address these shortcomings. Rosie was designed to siphon any file off the device and send its payload via UDP to a cloud hosted server for inspection. Because Rosie runs completely within the kernel, there is no need to modify the core system partition on the device and it has full privileges on the target system. Modifying the system partition is entirely possible on devices without strong chains of trust in their boot configurations, but it has the potential to be more complicated due to various OEM and Google-provided security measures."
  },
  "filecry-the-new-age-of-xxe": {
    "author": "xiaoran-wang",
    "description": "Xml eXternal Entities (XXE) is one of the most deadly vulnerabilities on the Internet, and we will demonstrate how critical enterprise software packages are still vulnerable to these attacks today. In this action-packed presentation, we will demonstrate two 0-day vulnerabilities we identified in both popular server (Java) and client-side (Internet Explorer) technologies. The first vulnerability can be exploited with an attacker-controlled XML leading to arbitrary file ex-filtration on a target server even with all the Java protections enabled. The second vulnerability, allows an attacker to steal both arbitrary files on the local hard drive and secret information across origins with a malicious webpage. Therefore, effectively bypassing the Same Origin Policy and breaching the web-local separation. Both exploits are reliable and do not depend on memory corruptions.Join us as we take you through an exciting journey of finding, exploiting these vulnerabilities, and preventing this class of attacks in the future.",
    "plaintextTitle": "FileCry - The New Age of XXE",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Wang-FileCry-The-New-Age-Of-XXE.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Wang-FileCry-The-New-Age-Of-XXE-ie-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Wang-FileCry-The-New-Age-Of-XXE-java-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=-gUkNAHR0jY"
      }
    ],
    "youtubeDescription": "by Xiaoran Wang  &  Sergey Gorbaty\n\nXml eXternal Entities (XXE) is one of the most deadly vulnerabilities on the Internet, and we will demonstrate how critical enterprise software packages are still vulnerable to these attacks today. In this action-packed presentation, we will demonstrate two 0-day vulnerabilities we identified in both popular server (Java) and client-side (Internet Explorer) technologies. The first vulnerability can be exploited with an attacker-controlled XML leading to arbitrary file ex-filtration on a target server even with all the Java protections enabled. The second vulnerability, allows an attacker to steal both arbitrary files on the local hard drive and secret information across origins with a malicious webpage. Therefore, effectively bypassing the Same Origin Policy and breaching the web-local separation. Both exploits are reliable and do not depend on memory corruptions.\n\nJoin us as we take you through an exciting journey of finding, exploiting these vulnerabilities, and preventing this class of attacks in the future."
  },
  "fingerprints-on-mobile-devices-abusing-and-leaking": {
    "author": "yulong-zhang",
    "description": "Unlike passwords, fingerprints last a lifetime and are usually associated with critical identities. Thus, the leakage of fingerprints is irredeemable. It will be even a disaster if the attackers can remotely harvest fingerprints in a large scale.In this talk, we will reveal some severe issues with the current Android fingerprint frameworks that have long been neglected by vendors and users. We will provide in-depth security analysis of the popular mobile fingerprint authentication/authorization frameworks, and discuss the security problems of existing designs, including (1) the confused authorization attack that enables malware to bypass pay authorizations protected by fingerprints, (2) TrustZone design flaws and fingerprint sensor spying attack to harvest fingerprints, (3) pre-embedded fingerprint backdoors, etc. We will show live demos, such as hijacking mobile payment protected by fingerprints, and collecting fingerprints from popular mobile devices. We will also provide suggestions for vendors and users to better secure the fingerprints.",
    "plaintextTitle": "Fingerprints on Mobile Devices: Abusing and Leaking",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Zhang-Fingerprints-On-Mobile-Devices-Abusing-And-Leaking.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Zhang-Fingerprints-On-Mobile-Devices-Abusing-And-Leaking-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7NkojB9gLXM"
      }
    ],
    "youtubeDescription": "by Yulong Zhang  &  Tao Wei\n\nUnlike passwords, fingerprints last a lifetime and are usually associated with critical identities. Thus, the leakage of fingerprints is irredeemable. It will be even a disaster if the attackers can remotely harvest fingerprints in a large scale.\n\nIn this talk, we will reveal some severe issues with the current Android fingerprint frameworks that have long been neglected by vendors and users. We will provide in-depth security analysis of the popular mobile fingerprint authentication/authorization frameworks, and discuss the security problems of existing designs, including (1) the confused authorization attack that enables malware to bypass pay authorizations protected by fingerprints, (2) TrustZone design flaws and fingerprint sensor spying attack to harvest fingerprints, (3) pre-embedded fingerprint backdoors, etc. We will show live demos, such as hijacking mobile payment protected by fingerprints, and collecting fingerprints from popular mobile devices. We will also provide suggestions for vendors and users to better secure the fingerprints."
  },
  "forging-the-usb-armory-an-open-source-secure-flash-drive-sized-computer": {
    "author": "andrea-barisani",
    "description": "",
    "plaintextTitle": "Forging the USB Armory an Open Source Secure Flash-Drive-Sized Computer",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=lL6ZO7NL4YM"
      }
    ],
    "youtubeDescription": "by Andrea Barisani  &  Daniele Bianco"
  },
  "from-false-positives-to-actionable-analysis-behavioral-intrusion-detection-machine-learning-and-the-soc": {
    "author": "joseph-zadeh",
    "description": "This talk outlines an approach to modeling human behavior in network traffic with the goal of automatically labeling events that have security context. Large-scale defensive programs now have the opportunity to invest resources in next generation distributed architectures and software stacks to build custom security solutions to augment existing SIEM and point solution driven escalations. We describe ways to create such a scalable framework of distributed forensic artificial intelligences to hunt for evil and to minimize time spent on repeatable remediation and evidence collection processes. This type of next-gen cybersecurity analytics engine can add immediate value through alarm reduction and attribution of attacks to threat actors and campaigns over time.The goal of building such a framework is to reduce time to detection and to provide automated ways to help incident response and daily reporting and escalations. The amount of data present in corporate SIEM's and IT warehouses allows for security teams to build the central nervous system of the Security Operations Center (SOC). One of the more complex tasks in designing such a next generation defensive system to is leverage machine learning to build models that are dynamic and intelligent enough to adapt to changing threats (labels suffer from concept drift) and to catch threats that have never been observed before (no ground truth). We describe ways to roadmap such cybersecurity analytics and ways to calculate the best return on investment given existing coverage and needs mapped to the threat surface.",
    "plaintextTitle": "From False Positives to Actionable Analysis: Behavioral Intrusion Detection Machine Learning and the SOC",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Zadeh-From-False-Positives-To-Actionable-Analysis-Behavioral-Intrusion-Detection-Machine-Learning-And-The-SOC.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Zadeh-From-False-Positives-To-Actionable-Analysis-Behavioral-Intrusion-Detection-Machine-Learning-And-The-SOC-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=pZhAhZS0uVY"
      }
    ],
    "youtubeDescription": "by Joseph Zadeh\n\nThis talk outlines an approach to modeling human behavior in network traffic with the goal of automatically labeling events that have security context. Large-scale defensive programs now have the opportunity to invest resources in next generation distributed architectures and software stacks to build custom security solutions to augment existing SIEM and point solution driven escalations. We describe ways to create such a scalable framework of distributed forensic artificial intelligences to hunt for evil and to minimize time spent on repeatable remediation and evidence collection processes. This type of next-gen cybersecurity analytics engine can add immediate value through alarm reduction and attribution of attacks to threat actors and campaigns over time.\n\nThe goal of building such a framework is to reduce time to detection and to provide automated ways to help incident response and daily reporting and escalations. The amount of data present in corporate SIEM's and IT warehouses allows for security teams to build the central nervous system of the Security Operations Center (SOC). One of the more complex tasks in designing such a next generation defensive system to is leverage machine learning to build models that are dynamic and intelligent enough to adapt to changing threats (labels suffer from concept drift) and to catch threats that have never been observed before (no ground truth). We describe ways to roadmap such cybersecurity analytics and ways to calculate the best return on investment given existing coverage and needs mapped to the threat surface."
  },
  "fuzzing-android-system-services-by-binder-call-to-escalate-privilege": {
    "author": "guang-gong",
    "description": "Binder is the IPC Mechanism in Android. It's used in Communication not only between processes with the same privilege but also between low privileged Apps and high privileged system services. The system services is a juicy attack surface to escalate privileges because parameters passed to it through binder call lack sanitization, but until now there are little disclosed vulnerabilities of this type.In this presentation, I'll first introduce this attack surface and then demonstrate the first fuzzing tools to find this kind of vulnerabilities. The tool take the binder interfaces exported from system services as attacked targets. This tool is simple but efficient. Through this tool I've found 8 vulnerabilities with CVE-IDs got from Android Security Team and dozens of crashes of system services. At last, I'll detail how to exploit this type of vulnerability to get Android's system_server permission by an unpublicized vulnerability.",
    "plaintextTitle": "Fuzzing Android System Services by Binder Call to Escalate Privilege",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Gong-Fuzzing-Android-System-Services-By-Binder-Call-To-Escalate-Privilege.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Gong-Fuzzing-Android-System-Services-By-Binder-Call-To-Escalate-Privilege-wp.pdf",
        "type": "White Paper"
      }
    ]
  },
  "gameover-zeus-badguys-and-backends": {
    "author": "elliott-peterson",
    "description": "This presentation will detail many of the individuals responsible for GameOver Zeus and Cryptolocker, summarize the law enforcement investigation, and highlight the novel legal processes used to wrest control of the botnet from its operators.GameOver Zeus represents one of the most complex, and successful, law enforcement operations against cyber crime to date. The talk will highlight extensive industry and government partnerships, the many international agencies that played a part, and discuss some of the methods used by private industry and law enforcement personnel to track and identify those responsible for the malware. The investigation resulted in the highest ever reward offered for a cyber criminal: $3,000,000 for Evgeniy Bogachev.",
    "plaintextTitle": "GameOver Zeus: Badguys and Backends",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Peterson-GameOver-Zeus-Badguys-And-Backends.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Peterson-GameOver-Zeus-Badguys-And-Backends-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KkEVwswqIBs"
      }
    ],
    "youtubeDescription": "by Elliott Peterson  &  Michael Sandee  &  Tillmann Werner\n\nThis presentation will detail many of the individuals responsible for GameOver Zeus and Cryptolocker, summarize the law enforcement investigation, and highlight the novel legal processes used to wrest control of the botnet from its operators.\n\nGameOver Zeus represents one of the most complex, and successful, law enforcement operations against cyber crime to date. The talk will highlight extensive industry and government partnerships, the many international agencies that played a part, and discuss some of the methods used by private industry and law enforcement personnel to track and identify those responsible for the malware. The investigation resulted in the highest ever reward offered for a cyber criminal: $3,000,000 for Evgeniy Bogachev."
  },
  "graphic-content-ahead-towards-automated-scalable-analysis-of-graphical-images-embedded-in-malware": {
    "author": "alex-long",
    "description": "While automated approaches to static and dynamic malware analysis are key pieces of todays malware analysis pipeline, little attention has been focused on the automated analysis of the images commonly embedded in malware files, such as desktop icons and GUI button skins. This leaves a blind spot in current malware triage approaches because automated image analysis could help to quickly reveal how new malware tricks users and could inform the question of whether malware samples came from known adversaries (samples with near-duplicate rare images may have come from the same attacker). Therefore, to further the application of image analysis techniques to the automated analysis of malware images, in our presentation we will describe our efforts to solve two related problems: the problem of identifying malware samples with visually similar image sets in a scalable fashion, and the problem of quickly classifying malware images into topical categories (e.g. \"video game related\", \"fake anti-virus\", installer icon\", etc.).The first component of our research focuses on identifying malware samples with similar image sets. To identify these relationships we have taken inspiration from natural image scene comparison approaches: first we reduce images statically extracted from malware to low-dimensional binary vectors using a scale and contrast invariant approach. Then we index malware images from the target malware dataset using a randomized index designed to quickly approximate Hamming distance between stored vectors. Finally, we compute pairwise distances between malware samples image sets to identify malware samples that share visually similar images (even if these images contrasts, scales, or color schemes are different). Additionally, we have built a force-directed graph based visualization to display our results to end-users, which colleagues within our organization have found useful in practice. In our presentation, we will provide a detailed account of our approach and describe an evaluation we performed which demonstrates that our approach operates at deployable levels of speed and accuracy.The second component of our research focuses on classifying malware images into topical categories. To perform classification in a scalable and automated fashion, the approach we have developed dynamically obtains labeled training examples using the Google Image Search API based on user defined queries (for example, a query for retrieving examples of anti-virus icons could be anti-virus desktop icon). Using the resulting labeled image data, we have trained and compared a number of image classifiers. To evaluate these classifiers we hand-labeled malware images with their correct class and computed confusion matrices for more than a dozen classes of malware images (for example, \"fake anti-virus\", \"fake web browser\", etc.), revealing that our classification techniques varied in accuracy, with some image category detectors (such as \"fake word processor\") providing deployable levels of accuracy and others generating misclassifications at an unacceptable rate. In conclusion, by presenting what we believe to be compelling early results vis-a-vis both malware image set similarity and malware image classification, we hope to inspire the malware research community to both adopt image analysis in practice and further research into this understudied research area.",
    "plaintextTitle": "Graphic Content Ahead: Towards Automated Scalable Analysis of Graphical Images Embedded in Malware",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Long-Graphic-Content-Ahead-Towards-Automated-Scalable-Analysis-Of-Graphical-Images-Embedded-In-Malware.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=D6VoDkIGl_I"
      }
    ],
    "youtubeDescription": "by Alex Long\n\nWhile automated approaches to static and dynamic malware analysis are key pieces of todays malware analysis pipeline, little attention has been focused on the automated analysis of the images commonly embedded in malware files, such as desktop icons and GUI button skins. This leaves a blind spot in current malware triage approaches because automated image analysis could help to quickly reveal how new malware tricks users and could inform the question of whether malware samples came from known adversaries (samples with near-duplicate rare images may have come from the same attacker). Therefore, to further the application of image analysis techniques to the automated analysis of malware images, in our presentation we will describe our efforts to solve two related problems: the problem of identifying malware samples with visually similar image sets in a scalable fashion, and the problem of quickly classifying malware images into topical categories (e.g. \"video game related\", \"fake anti-virus\", installer icon\", etc.).\n\nThe first component of our research focuses on identifying malware samples with similar image sets. To identify these relationships we have taken inspiration from natural image scene comparison approaches: first we reduce images statically extracted from malware to low-dimensional binary vectors using a scale and contrast invariant approach. Then we index malware images from the target malware dataset using a randomized index designed to quickly approximate Hamming distance between stored vectors. Finally, we compute pairwise distances between malware samples image sets to identify malware samples that share visually similar images (even if these images contrasts, scales, or color schemes are different). Additionally, we have built a force-directed graph based visualization to display our results to end-users, which colleagues within our organization have found useful in practice. In our presentation, we will provide a detailed account of our approach and describe an evaluation we performed which demonstrates that our approach operates at deployable levels of speed and accuracy.\n\nThe second component of our research focuses on classifying malware images into topical categories. To perform classification in a scalable and automated fashion, the approach we have developed dynamically obtains labeled training examples using the Google Image Search API based on user defined queries (for example, a query for retrieving examples of anti-virus icons could be anti-virus desktop icon). Using the resulting labeled image data, we have trained and compared a number of image classifiers. To evaluate these classifiers we hand-labeled malware images with their correct class and computed confusion matrices for more than a dozen classes of malware images (for example, \"fake anti-virus\", \"fake web browser\", etc.), revealing that our classification techniques varied in accuracy, with some image category detectors (such as \"fake word processor\") providing deployable levels of accuracy and others generating misclassifications at an unacceptable rate. In conclusion, by presenting what we believe to be compelling early results vis-a-vis both malware image set similarity and malware image classification, we hope to inspire the malware research community to both adopt image analysis in practice and further research into this understudied research area."
  },
  "harnessing-intelligence-from-malware-repositories": {
    "author": "arun-lakhotia",
    "description": "The number of unique malware has been doubling every year for over two decades. The majority of effort in malware analysis has focused on methods for preventing malware infection. We view the exponential growth of malware as an underutilized source of intelligence. Given that the number of malware authors are not doubling each year, the large volume of malware must contain evidence that connects them. The challenge is how to extract the connections.Since a malware is a complex software, it's development necessarily follows software engineering principles, such as modular programming, using third-party libraries, etc. Thus, sharing of code between malware are viable indicators of connection between their creators. However, identifying such shared code is not straightforward. The task is made complicated since to survive in an environment hostile (to it) a malware uses a variety of deceptions, such as polymorphic packing, for the explicit purpose of making it difficult to infer such connections.By using a combination of two orthogonal approaches - formal program analysis and data mining - we have developed a scalable method to search large scale malware repositories for forensic evidence. Program analyses aid in peeking through the deceptions employed by malware to extract fragments of evidence. Data mining aids in organizing this mass of fragments into a web of connections which can then be used to make a variety of queries, such as to determine whether two apparently disparate cyber attacks are related; to transfer knowledge gained in countering one malware to counter other similar malware; to get a holistic view of cyber threats and to understand and track trends, etc.This talk will summarize our method, describe VirusBattle - a web service for cloud-based malware analysis - developed at UL Lafayette, and present empirical evidence of viability of mining large scale malware repositories to draw meaningful inferences.",
    "plaintextTitle": "Harnessing Intelligence from Malware Repositories",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Lakhotia-Harnessing-Intelligence-From-Malware-Repositories.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=yJN42eEG5g4"
      }
    ],
    "youtubeDescription": "by Arun Lakhotia  &  Vivek Notani\n\nThe number of unique malware has been doubling every year for over two decades. The majority of effort in malware analysis has focused on methods for preventing malware infection. We view the exponential growth of malware as an underutilized source of intelligence. Given that the number of malware authors are not doubling each year, the large volume of malware must contain evidence that connects them. The challenge is how to extract the connections.\n\nSince a malware is a complex software, it's development necessarily follows software engineering principles, such as modular programming, using third-party libraries, etc. Thus, sharing of code between malware are viable indicators of connection between their creators. However, identifying such shared code is not straightforward. The task is made complicated since to survive in an environment hostile (to it) a malware uses a variety of deceptions, such as polymorphic packing, for the explicit purpose of making it difficult to infer such connections.\n\nBy using a combination of two orthogonal approaches - formal program analysis and data mining - we have developed a scalable method to search large scale malware repositories for forensic evidence. Program analyses aid in peeking through the deceptions employed by malware to extract fragments of evidence. Data mining aids in organizing this mass of fragments into a web of connections which can then be used to make a variety of queries, such as to determine whether two apparently disparate cyber attacks are related; to transfer knowledge gained in countering one malware to counter other similar malware; to get a holistic view of cyber threats and to understand and track trends, etc.\n\nThis talk will summarize our method, describe VirusBattle - a web service for cloud-based malware analysis - developed at UL Lafayette, and present empirical evidence of viability of mining large scale malware repositories to draw meaningful inferences."
  },
  "hi-this-is-urgent-plz-fix-asap-critical-vulnerabilities-and-bug-bounty-programs": {
    "author": "kymberlee-price",
    "description": "No More Free Bugs led to Bug Bounties, but some people believe that bug bounty hunters are low quality script kiddies and the most talented researchers aren't participating. The emergence of bug bounty programs is increasing the volume of vulnerability submissions, but how many of those can be found by running an automated scanning tool? Are any really critical bugs being found in the sea of clickjacking and weak password policy reports? How do you separate the signal from the noise, and more importantly, how do you shift the balance of bug reports to greater signal/less noise overall? In this presentation we will discuss several highly critical vulnerabilities that have been uncovered through a variety of bug bounty programs and their impact on the customers. With participation from researchers and vendors, attendees will not only see some sweet vulnerabilities broken down, but also why wading through another submission from @CluelessSec might be worth it.",
    "plaintextTitle": "HI THIS IS URGENT PLZ FIX ASAP: Critical Vulnerabilities and Bug Bounty Programs",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Price-Hi-This-Is-Urgent-Plz-Fix-ASAP-Critical-Vulnerabilities-And-Bug-Bounty-Programs.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=SuDxYLWfGPo"
      }
    ],
    "youtubeDescription": "by Kymberlee Price\n\nNo More Free Bugs led to Bug Bounties, but some people believe that bug bounty hunters are low quality script kiddies and the most talented researchers aren't participating. The emergence of bug bounty programs is increasing the volume of vulnerability submissions, but how many of those can be found by running an automated scanning tool? Are any really critical bugs being found in the sea of clickjacking and weak password policy reports? How do you separate the signal from the noise, and more importantly, how do you shift the balance of bug reports to greater signal/less noise overall? In this presentation we will discuss several highly critical vulnerabilities that have been uncovered through a variety of bug bounty programs and their impact on the customers. With participation from researchers and vendors, attendees will not only see some sweet vulnerabilities broken down, but also why wading through another submission from @CluelessSec might be worth it."
  },
  "hidden-risks-of-biometric-identifiers-and-how-to-avoid-them": {
    "author": "thomas-keenan",
    "description": "Technology that identifies you by something you are is showing up in e-passports, laptop login screens, smart firearms and even consumer products, like the iPhone. Current generation systems generally use static biometric features, such as fingerprints, iris scans and facial recognition, either measured directly or mediated through a device, such as a smartphone.We are on the cusp of a revolution that will usher in dynamic (e.g. gestural, heart rhythm, gait analysis) and chemical (e.g. DNA, body odor, perspiration) biometrics. There will also be hybrid technologies, such as the Nokias vibrating magnetic ink tattoos (US Patent 8, 766, 784) and the password pill from Proteus Digital Health. Biometrics will also play an increasingly significant role as one of the factors in multi-factor authentication. The author created one of the first typing rhythm recognition algorithms and one of the earliest DNA sequencing machines in the 1980s and has a long term perspective on this subject.Like all new technologies, advances in biometrics will bring new advantages and also new risks. This presentation surveys cutting edge biometric technologies and provides a framework for evaluating them from the perspectives of security, reliability, privacy, potential for abuse and perceived creepiness. Learn what is coming down the biometrics road now, so you'll be ready to intelligently choose and implement these technologies as they come on the market in the near future.",
    "plaintextTitle": "Hidden Risks of Biometric Identifiers and How to Avoid Them",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Keenan-Hidden-Risks-Of-Biometric-Identifiers-And-How-To-Avoid-Them.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Keenan-Hidden-Risks-Of-Biometric-Identifiers-And-How-To-Avoid-Them-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=cfQCOICIliQ"
      }
    ],
    "youtubeDescription": "by Thomas Keenan\n\nTechnology that identifies you by something you are is showing up in e-passports, laptop login screens, smart firearms and even consumer products, like the iPhone. Current generation systems generally use static biometric features, such as fingerprints, iris scans and facial recognition, either measured directly or mediated through a device, such as a smartphone.\n\nWe are on the cusp of a revolution that will usher in dynamic (e.g. gestural, heart rhythm, gait analysis) and chemical (e.g. DNA, body odor, perspiration) biometrics. There will also be hybrid technologies, such as the Nokias vibrating magnetic ink tattoos (US Patent 8, 766, 784) and the password pill from Proteus Digital Health. Biometrics will also play an increasingly significant role as one of the factors in multi-factor authentication. The author created one of the first typing rhythm recognition algorithms and one of the earliest DNA sequencing machines in the 1980s and has a long term perspective on this subject.\n\nLike all new technologies, advances in biometrics will bring new advantages and also new risks. This presentation surveys cutting edge biometric technologies and provides a framework for evaluating them from the perspectives of security, reliability, privacy, potential for abuse and perceived creepiness. Learn what is coming down the biometrics road now, so you'll be ready to intelligently choose and implement these technologies as they come on the market in the near future."
  },
  "how-to-hack-government-technologists-as-policy-makers": {
    "author": "ashkan-soltani",
    "description": "As the leading federal agency responsible for protecting your privacy rights online, technology is at the core of the Federal Trade Commissions work. You may be familiar with the agency's enforcement actions against some of the worlds biggest tech companies for privacy/data security violations, but you may not know how your research skills can inform its investigations and policy. Come hear about some of the Commissions recent tech-related actions, research and reports, plus how its work impacts both consumers and businesses. You'll also learn how you can directly or indirectly help the agency protect consumers, guide businesses to develop better/strong data security, and much more.",
    "plaintextTitle": "How to Hack Government: Technologists as Policy Makers",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=yj18lz1dwEc"
      }
    ],
    "youtubeDescription": "As the leading federal agency responsible for protecting your privacy rights online, technology is at the core of the Federal Trade Commission's work. You may be familiar with the agency's enforcement actions against some of the world's biggest tech companies for privacy/data security violations - but you may not know how your research skills can inform its investigations and policy. Come hear about some of the Commission's recent tech-related actions, research and reports, plus how its work impacts both consumers and businesses. You'll also learn how you can directly or indirectly help the agency protect consumers, guide businesses to develop better/strong data security, and much more.\n\nSpeaker Bios:\nTerrell McSweeny serves as a Commissioner of the Federal Trade Commission - sometimes referred to as the Federal Technology Commission. This year marks her second DEF CON adventure. When it comes to tech issues, Commissioner McSweeny wants companies to implement security by design, to be transparent about their data collection practices, and to give consumers as much control as possible.\n\nTwitter: @TMcSweenyFTC\n\nAshkan Soltani serves as the FTC's fourth Chief Technologist. He is a privacy and security researcher whose work draws attention to privacy problems online, demystifies technology for the non-technically inclined, and provides data-driven insights to help inform policy. Ashkan was recognized as part of the 2014 Pulitzer winning team at the Washington Post and was the primary technical consultant on the Wall Street Journal's \"What They Know\" investigative series on online privacy.\n\nTwitter: @TechFTC"
  },
  "how-to-implement-it-security-after-a-cyber-meltdown": {
    "author": "christina-kubecka",
    "description": "The 2012 cyber attacks against Saudi Aramco and the Aramco family of affiliates was a major game changer in IT & ICS Security. The energy sector, relevant markets, and governments world wide shuddered. Although oil production wasn't directly affected, business operations were greatly interrupted and remain so.This presentation is the story how I implemented the first IT Security unit for Aramco Overseas Company, a Saudi Aramco affiliate which provides all IT services for Saudi Aramco in South America and the EMEA region outside of Saudi Arabia.",
    "plaintextTitle": "How to Implement IT Security After a Cyber Meltdown",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Kubecka-How-To-Implement-IT-Security-After-A-Cyber-Meltdown.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=WyMobr_TDSI"
      }
    ],
    "youtubeDescription": "by Christina Kubecka\n\nThe 2012 cyber attacks against Saudi Aramco and the Aramco family of affiliates was a major game changer in IT & ICS Security. The energy sector, relevant markets, and governments world wide shuddered. Although oil production wasn't directly affected, business operations were greatly interrupted and remain so.\n\nThis presentation is the story how I implemented the first IT Security unit for Aramco Overseas Company, a Saudi Aramco affiliate which provides all IT services for Saudi Aramco in South America and the EMEA region outside of Saudi Arabia."
  },
  "how-vulnerable-are-we-to-scams": {
    "author": "markus-jakobsson",
    "description": "The number of Internet scams has increased in recent years. According to a survey by the Federal Trade Commission, more than one out of every ten adult Americans fall victim to scams every year, where a third of these scams originated on the Internet. However, it is well understood that surveys of victimization and losses severely underestimate the problem, since victims are unwilling to come forward due to embarrassment or resignation. This paper attempts to gain a better understanding of the problem by directly quantifying the extent to which users are vulnerable to scams.We design and carry out experiments to estimate the fraction of scam messages that bypass commercial spam lters (i.e., messages that land in the user's inbox); and to assess the probability that a delivered message will be considered harmless by its recipient. The latter experiment provides evidence that recent scams - many of which are targeted  are substantially more credible to typical users than \"traditional\" scam.",
    "plaintextTitle": "How Vulnerable are We to Scams?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Jakobsson-How-Vulnerable-Are-We-To-Scams.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Jakobsson-How-Vulnerable-Are-We-To-Scams-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=73Huxw0qU0s"
      }
    ],
    "youtubeDescription": "by Markus Jakobsson  &  Ting-Fang Yen\n\nThe number of Internet scams has increased in recent years. According to a survey by the Federal Trade Commission, more than one out of every ten adult Americans fall victim to scams every year, where a third of these scams originated on the Internet. However, it is well understood that surveys of victimization and losses severely underestimate the problem, since victims are unwilling to come forward due to embarrassment or resignation. This paper attempts to gain a better understanding of the problem by directly quantifying the extent to which users are vulnerable to scams.\n\nWe design and carry out experiments to estimate the fraction of scam messages that bypass commercial spam lters (i.e., messages that land in the user's inbox); and to assess the probability that a delivered message will be considered harmless by its recipient. The latter experiment provides evidence that recent scams - many of which are targeted are substantially more credible to typical users than \"traditional\" scam."
  },
  "information-access-and-information-sharing-where-we-are-and-where-we-are-going": {
    "author": "alejandro-mayorkas",
    "description": "Deputy Secretary of the Department of Homeland Security, Alejandro Mayorkas, will discuss the challenges of information access in today's world. He will also describe the information sharing vision of DHS: is a future where cybersecurity information, such as indicators of specific cyber threats, is shared widely across the public and private sectors at machine-speed and in formats that can be immediately used for network defense. To achieve this goal, cyber threat indicators must be a public good, rather than a market differentiator between companies. When cyber threat indicators are a unique commodity, they are only shared among discrete communities - and we are all less secure. But when cyber threat indicators are not a profit driver for security firms and have zero marginal cost for network defenders, we can achieve information sharing that moves more quickly than our adversaries.",
    "plaintextTitle": "Information Access and Information Sharing: Where We are and Where We are Going",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=4aUSuWEpAC0"
      }
    ],
    "youtubeDescription": "by Alejandro Mayorkas\n\nDeputy Secretary of the Department of Homeland Security, Alejandro Mayorkas, will discuss the challenges of information access in today's world. He will also describe the information sharing vision of DHS: is a future where cybersecurity information, such as indicators of specific cyber threats, is shared widely across the public and private sectors at machine-speed and in formats that can be immediately used for network defense. To achieve this goal, cyber threat indicators must be a public good, rather than a market differentiator between companies. When cyber threat indicators are a unique commodity, they are only shared among discrete communities - and we are all less secure. But when cyber threat indicators are not a profit driver for security firms and have zero marginal cost for network defenders, we can achieve information sharing that moves more quickly than our adversaries."
  },
  "internet-plumbing-for-security-professionals-the-state-of-bgp-security": {
    "author": "wim-remes",
    "description": "The underbelly of the Internet has been in a precarious condition for a while now. Even with all the knowledge about it's weaknesses, we only make slow progress in implementing technology to secure it. We see BGP routing leaks on a regular basis. It almost feels like we take it for granted but at the same time it undermines our trust in the Internet. In this talk, we'll review the current situation for BGP, a foundational piece of the network we all rely on, and focus on the practical implementation of available countermeasures through live demos and examples. In and of itself, we launch a call to action for private organizations, government entities, and academia alike to roll up the sleeves and get cracking at fixing our Internet. If we want to keep trust in \"The Internet of Things,\" we first have to build trust in the network that powers it.",
    "plaintextTitle": "Internet Plumbing for Security Professionals: The State of BGP Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Remes-Internet-Plumbing-For-Security-Professionals-The-State-Of-BGP-Security.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Remes-Internet-Plumbing-For-Security-Professionals-The-State-Of-BGP-Security-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=po_9p6XxK2E"
      }
    ],
    "youtubeDescription": "by Wim Remes\n\nThe underbelly of the Internet has been in a precarious condition for a while now. Even with all the knowledge about it's weaknesses, we only make slow progress in implementing technology to secure it. We see BGP routing leaks on a regular basis. It almost feels like we take it for granted but at the same time it undermines our trust in the Internet. In this talk, we'll review the current situation for BGP, a foundational piece of the network we all rely on, and focus on the practical implementation of available countermeasures through live demos and examples. In and of itself, we launch a call to action for private organizations, government entities, and academia alike to roll up the sleeves and get cracking at fixing our Internet. If we want to keep trust in \"The Internet of Things,\" we first have to build trust in the network that powers it."
  },
  "internet-facing-plcs-a-new-back-orifice": {
    "author": "johannes-klick",
    "description": "Pretty much everyone should have realized by now that our modern societies critically depend on industrial control systems (ICS) and that these systems are beginning to move into the focus of hacking attacks. A recent example that received comparatively little attention is a 2014 attack on a German steel production facility. The attack led to an uncontrolled shutdown of a blast furnace and caused damages in the millions. Reportedly, the attackers compromised the business IT first and worked their way to the actual control systems from there. Much simpler attack vectors frequently exist for those knowledgeable enough to use them. SHODAN is a case in point that a plethora of industrial control systems can be attacked directly.In our talk, we will showcase novel tools and techniques to leverage one Internet-facing PLC, in order to explore and gain control over entire production networks. We use Siemens PLCs as our example. Our tools differ from what has been made public before in that we implement and run them directly on PLCs in their native STL language. Specifically, we explain and demonstrate in detail the following attack process. We automatically locate PLCs and automatically instrument the STL code of a running PLC, so that it provides additional functions in parallel to its original ones. One function we implemented is that of a UDP/SNMP scanner. Another one is that of a SOCKS5 proxy. Using these functions, adversaries can easily map, instrument and control any remaining PLCs on the network using existing tools. We demonstrate attacks on Siemens PLCs through our proxy connection using an existing Metasploit S7-300 Stop module and an exploit for CVE-2015-2177 that we disclosed to Siemens. As part of our demonstration, we explain why implementing a TCP scanner is impractical on Siemens PLCs.",
    "plaintextTitle": "Internet-Facing PLCs - A New Back Orifice",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Klick-Internet-Facing-PLCs-A-New-Back-Orifice.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Klick-Internet-Facing-PLCs-A-New-Back-Orifice-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://github.com/SCADACS/PLCinject",
        "type": "Source"
      }
    ]
  },
  "internet-scale-file-analysis": {
    "author": "zachary-hanif",
    "description": "Malicious file analysis is well beyond the days when the humble PE32 file was all researchers needed to contend with. The use of malicious PDF, Office, and other files present a far more diverse threat than our defensive tools were originally designed to handle. To make matters worse, the sheer volume of files over time to analyze presents a meaningful logistical problem which becomes increasingly complex as analytical methods move from static to dynamic analysis. When the point in time problem is considered (the fact that historical discoveries can be viewed differently in the light of new analytical techniques or information), the problem seems all but intractable.To this end, we have developed TOTEM, a system which is capable of coordinating, orchestrating, and scaling malware analytics across multiple cloud providers and thousands of running instances. It is easy to add new capabilities to and can intelligently segregate work based on features, such as filetype, analytic duration, and computational complexity. TOTEM supports dynamic analysis through DRAKVUF, a novel open-source dynamic malware analysis system which was designed specifically to achieve unparalleled scalability, while maintaining a high level of stealth and visibility into the executing sample. Building on the latest hardware virtualization extensions found in Intel processors and the Xen hypervisor, DRAKVUF remains completely hidden from the executing sample and requires no special software to be installed within the sandbox. Further addressing the problem of monitoring kernel-mode rootkits as well as user-space applications, DRAKVUF significantly raises the bar for evasive malware to remain undetected.This talk will discuss the design, implementation, and practical deployment of TOTEM and DRAKVUF to analyze tremendous numbers of binary files.",
    "plaintextTitle": "Internet-Scale File Analysis",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Hanif-Internet-Scale-File-Analysis.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Hanif-Internet-Scale-File-Analysis-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=mB1roKTY0CY"
      }
    ],
    "youtubeDescription": "by Zachary Hanif  &  Tamas Lengyel  &  George Webster\n\nMalicious file analysis is well beyond the days when the humble PE32 file was all researchers needed to contend with. The use of malicious PDF, Office, and other files present a far more diverse threat than our defensive tools were originally designed to handle. To make matters worse, the sheer volume of files over time to analyze presents a meaningful logistical problem which becomes increasingly complex as analytical methods move from static to dynamic analysis. When the point in time problem is considered (the fact that historical discoveries can be viewed differently in the light of new analytical techniques or information), the problem seems all but intractable.\n\nTo this end, we have developed TOTEM, a system which is capable of coordinating, orchestrating, and scaling malware analytics across multiple cloud providers and thousands of running instances. It is easy to add new capabilities to and can intelligently segregate work based on features, such as filetype, analytic duration, and computational complexity. TOTEM supports dynamic analysis through DRAKVUF, a novel open-source dynamic malware analysis system which was designed specifically to achieve unparalleled scalability, while maintaining a high level of stealth and visibility into the executing sample. Building on the latest hardware virtualization extensions found in Intel processors and the Xen hypervisor, DRAKVUF remains completely hidden from the executing sample and requires no special software to be installed within the sandbox. Further addressing the problem of monitoring kernel-mode rootkits as well as user-space applications, DRAKVUF significantly raises the bar for evasive malware to remain undetected.\n\nThis talk will discuss the design, implementation, and practical deployment of TOTEM and DRAKVUF to analyze tremendous numbers of binary files."
  },
  "is-the-nsa-still-listening-to-your-phone-calls-a-surveillance-debate-congressional-success-or-epic-fail": {
    "author": "mark-jaycox",
    "description": "At BlackHat 2014, we debated the NSA's collection of Americans' phone calls, emails, address books, buddy lists, calling records, online video game chats, financial documents, browsing history, video chats, text messages, IP addresses, and calendar data. One section that's being used to collect calling records and other business records - Section 215 of the Patriot Act - expired in June. Within days, Congress passed a law to narrow the scope of the section and introduce much needed transparency. It was the first time since the 1970's that Congress reined in the NSA's surveillance practices.This year we'll discuss Section 215 of the Patriot Act and debate what Congress did to reform the section. Did it fix the program? Did it do nothing? Does Congress ever do anything? Join us by hearing former Senior Counsel of the House Intelligence Committee Jamil Jaffer debate these issues with Mark Jaycox of the Electronic Frontier Foundation.",
    "plaintextTitle": "Is the NSA Still Listening to Your Phone Calls? A Surveillance Debate: Congressional Success or Epic Fail",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=iJ8mc15NesE"
      }
    ],
    "youtubeDescription": "by Mark Jaycox  &  Jamil Jaffer\n\nAt BlackHat 2014, we debated the NSA's collection of Americans' phone calls, emails, address books, buddy lists, calling records, online video game chats, financial documents, browsing history, video chats, text messages, IP addresses, and calendar data. One section that's being used to collect calling records and other business records - Section 215 of the Patriot Act - expired in June. Within days, Congress passed a law to narrow the scope of the section and introduce much needed transparency. It was the first time since the 1970's that Congress reined in the NSA's surveillance practices.\n\nThis year we'll discuss Section 215 of the Patriot Act and debate what Congress did to reform the section. Did it fix the program? Did it do nothing? Does Congress ever do anything? Join us by hearing former Senior Counsel of the House Intelligence Committee Jamil Jaffer debate these issues with Mark Jaycox of the Electronic Frontier Foundation."
  },
  "mobile-point-of-scam-attacking-the-square-reader": {
    "author": "alexandrea-mellen",
    "description": "We consider the security of Square, Inc.'s mobile card-reading device, the Square Reader, across multiple models, as well as the associated Square Register app where relevant. In doing so, we identify a number of vulnerabilities in the device that allow both malicious merchants and third parties to initiate fraudulent transactions and, with minor device modification, skim credit card information of unsuspecting customers. We highlight that since mobile card-reading devices like the Square Reader are necessarily compact, cheap, and compatible with a broad range of commodity smartphones, they pose new security challenges over traditional payment-processing hardware. In turn, these challenges expose an attack surface that is relatively new and unexplored given the infancy of mobile point-of-sale systems compared to their non-mobile counterparts. We investigate this attack surface and find a number of vulnerabilities that confirm that even current secure mobile point-of-sale systems suffer from software and hardware design flaws, leaving them vulnerable to both third parties and malicious merchants.",
    "plaintextTitle": "Mobile Point of Scam: Attacking the Square Reader",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Mellen-Mobile-Point-Of-Scam-Attacking-The-Square-Reader.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Mellen-Mobile-Point-Of-Scam-Attacking-The-Square-Reader-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Q69MV-w_OHk"
      }
    ],
    "youtubeDescription": "by Alexandrea Mellen  &  John Moore  &  Artem Losev\n\nWe consider the security of Square, Inc.'s mobile card-reading device, the Square Reader, across multiple models, as well as the associated Square Register app where relevant. In doing so, we identify a number of vulnerabilities in the device that allow both malicious merchants and third parties to initiate fraudulent transactions and, with minor device modification, skim credit card information of unsuspecting customers. We highlight that since mobile card-reading devices like the Square Reader are necessarily compact, cheap, and compatible with a broad range of commodity smartphones, they pose new security challenges over traditional payment-processing hardware. In turn, these challenges expose an attack surface that is relatively new and unexplored given the infancy of mobile point-of-sale systems compared to their non-mobile counterparts. We investigate this attack surface and find a number of vulnerabilities that confirm that even current secure mobile point-of-sale systems suffer from software and hardware design flaws, leaving them vulnerable to both third parties and malicious merchants."
  },
  "most-ransomware-isnt-as-complex-as-you-might-think": {
    "author": "engin-kirda",
    "description": "In this presentation, hear the findings of new academic research into ransomware in which we analyzed more than 1,300 samples captured in the wild from 2006 and 2014 from 15 malware families - including Calelk, Cryptolocker, CryptoWall, Gpcode, Filecoder, Kevtor, Reveton, Seftad, Urausy and Winlock. Our results indicate that (while ransomware authors have made some advancements in encryption, deletion and communication techniques over those eight years) the real impact on victims who don't pay is typically still both nondestructive and preventable. Even the very small set of truly destructive zero-day ransomware samples with sophisticated encryption capabilities we identified can be detected and stopped.First, learn how ransomware appears to have changed - and stayed the same - from 2006 and 2014, including constants, commonalities and advancements across 15 ransomware families in that timeframe. For example, we verified the widely held belief that ransomware attacks have been increasing in volume in recent years. In fact, they grew by more than 500% from 2012-13. However, the majority have not been sufficiently increasing in sophistication in that timeframe to truly take victims data or hardware hostage. Discover previously undocumented aspects of ransomware attacks with a focus on distinctive and common behaviors among different families.Second, see a comparison of the threatened impacts vs. the real impacts of the studied ransomware, demonstrating that the vast majority is essentially bluffing its own destructive capabilities in order to extract funds from the victim who is afraid of losing personal and/or valuable data or equipment. More than 94% of ransomware in our multi-year study simply attempted to lock the victims desktop and demand ransom, or used very similar and superficial approaches to encrypt or delete the victims files.Third, delve into the inner workings of rare destructive ransomware to ascertain key attributes in the code and execution of its instructions that make it both effective and detectible. Hear about the API calls, file system activity and decoy files that consistently surface from different malware families in the wild. Take a look at the various charging methods adopted by different ransomware families including Bitcoin, Moneypak, Paysafecar and Ukash cards. More than 88% of ransomware samples used prepaid online payment systems.Finally, understand why detecting and stopping advanced ransomware attacks is not as difficult as others have reported. In fact, by scanning for unusual behavior in file system activities, such as I/O requests you can detect even relatively sophisticated ransomware. By protecting the Master File Table (MFT) in the New Technology File System (NTFS) file system on Windows machines, you can prevent most zero-day ransomware attacks. These findings contradict some security community discussions that suggest the impossibility of detecting or stopping these types of attacks due to the use of sophisticated, destructive techniques.",
    "plaintextTitle": "Most Ransomware Isnt as Complex as You Might Think",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Kirda-Most-Ransomware-Isn’t-As-Complex-As-You-Might-Think.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Kirda-Most-Ransomware-Isn’t-As-Complex-As-You-Might-Think-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=3pH13DxClag"
      }
    ],
    "youtubeDescription": "by Engin Kirda\n\nIn this presentation, hear the findings of new academic research into ransomware in which we analyzed more than 1,300 samples captured in the wild from 2006 and 2014 from 15 malware families - including Calelk, Cryptolocker, CryptoWall, Gpcode, Filecoder, Kevtor, Reveton, Seftad, Urausy and Winlock. Our results indicate that (while ransomware authors have made some advancements in encryption, deletion and communication techniques over those eight years) the real impact on victims who don't pay is typically still both nondestructive and preventable. Even the very small set of truly destructive zero-day ransomware samples with sophisticated encryption capabilities we identified can be detected and stopped.\n\nFirst, learn how ransomware appears to have changed - and stayed the same - from 2006 and 2014, including constants, commonalities and advancements across 15 ransomware families in that timeframe. For example, we verified the widely held belief that ransomware attacks have been increasing in volume in recent years. In fact, they grew by more than 500% from 2012-13. However, the majority have not been sufficiently increasing in sophistication in that timeframe to truly take victims data or hardware hostage. Discover previously undocumented aspects of ransomware attacks with a focus on distinctive and common behaviors among different families.\n\nSecond, see a comparison of the threatened impacts vs. the real impacts of the studied ransomware, demonstrating that the vast majority is essentially bluffing its own destructive capabilities in order to extract funds from the victim who is afraid of losing personal and/or valuable data or equipment. More than 94% of ransomware in our multi-year study simply attempted to lock the victims desktop and demand ransom, or used very similar and superficial approaches to encrypt or delete the victims files.\n\nThird, delve into the inner workings of rare destructive ransomware to ascertain key attributes in the code and execution of its instructions that make it both effective and detectible. Hear about the API calls, file system activity and decoy files that consistently surface from different malware families in the wild. Take a look at the various charging methods adopted by different ransomware families including Bitcoin, Moneypak, Paysafecar and Ukash cards. More than 88% of ransomware samples used prepaid online payment systems.\n\nFinally, understand why detecting and stopping advanced ransomware attacks is not as difficult as others have reported. In fact, by scanning for unusual behavior in file system activities, such as I/O requests you can detect even relatively sophisticated ransomware. By protecting the Master File Table (MFT) in the New Technology File System (NTFS) file system on Windows machines, you can prevent most zero-day ransomware attacks. These findings contradict some security community discussions that suggest the impossibility of detecting or stopping these types of attacks due to the use of sophisticated, destructive techniques."
  },
  "my-bro-the-elk-obtaining-context-from-security-events": {
    "author": "travis-smith",
    "description": "There are a number of powerful open source tools that empower us to collect, store and visualize data in our environments, as well as provide rich context using external threat intelligence. However, given the amount of data to sift through it can make us complacent and miss important indicators. Instead of having to sift through this data to identify important pieces of information, what if we could automate and orchestrate integrations across the various systems to help us identify and act on real threats?At Black Hat, we will be releasing a tool that integrates several popular open source and commercial security frameworks to do just that. In this presentation we will highlight the use of ELK (ElasticSearch, Kibana, and LogStash), Bro IDS, and community threat intelligence feeds. By combining these frameworks with threat intelligence providers, security professionals can obtain the business and security context to the events flowing through their environment. We will also be releasing the open source framework that will automate the collection of evidence for incident response for quicker response times by security teams.",
    "plaintextTitle": "My Bro the ELK: Obtaining Context from Security Events",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Smith-My-Bro-The-ELK-Obtaining-Context-From-Security-Events.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Smith-My-Bro-The-ELK-Obtaining-Context-From-Security-Events-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=R4QeuO1EX5o"
      }
    ],
    "youtubeDescription": "by Travis Smith \n\nThere are a number of powerful open source tools that empower us to collect, store and visualize data in our environments, as well as provide rich context using external threat intelligence. However, given the amount of data to sift through it can make us complacent and miss important indicators. Instead of having to sift through this data to identify important pieces of information, what if we could automate and orchestrate integrations across the various systems to help us identify and act on real threats?\n\nAt Black Hat, we will be releasing a tool that integrates several popular open source and commercial security frameworks to do just that. In this presentation we will highlight the use of ELK (ElasticSearch, Kibana, and LogStash), Bro IDS, and community threat intelligence feeds. By combining these frameworks with threat intelligence providers, security professionals can obtain the business and security context to the events flowing through their environment. We will also be releasing the open source framework that will automate the collection of evidence for incident response for quicker response times by security teams."
  },
  "optimized-fuzzing-iokit-in-ios": {
    "author": "lei-long",
    "description": "Fuzzing is the most common way of exploiting vulnerabilities, and IOKit is an ideal target in kernel extensions for fuzzing. The interfaces in IOKit use specific structures, such as IOExternalMethod, IOExternalMethodDispatch, to check the input parameters in various ways. Purely random inputs when fuzzing IOKit can hardly pass the interfaces' parameter checking, so that most of fuzzing data cannot reach the kernel IOUserClient subclass at all. Thus, such kind of blindly fuzzing is inefficient. One way to improve it is to use the static information exported by sMethod symbols, which can be dumped by a static analysis tools such as IDA. However, it is not available since iOS 7 because of symbols hiding.In this presentation, we will introduce an approach to resolve the symbols and parameter information dynamically based on a kernel patch to read and write memories. In this approach we can exploit quite a lot of useful information, including not only the standard parameters of IOKit interfaces, but also other supplementary data. We have also built a fuzzing framework, which uses the resolved information and generates the random inputs, which can pass the basic parameter checking by IOKit interfaces. Therefore, the fuzzing can be done efficiently. Finally, we also present the information of IOKit interfaces exported by our approach, and several typical vulnerabilities found by our fuzzing framework.",
    "plaintextTitle": "Optimized Fuzzing IOKit in iOS",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Lei-Optimized-Fuzzing-IOKit-In-iOS.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Lei-Optimized-Fuzzing-IOKit-In-iOS-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=XDT9Cn8GjJU"
      }
    ],
    "youtubeDescription": "by Lei Long  &  Peng Xiao  &  Aimin Pan\n\nFuzzing is the most common way of exploiting vulnerabilities, and IOKit is an ideal target in kernel extensions for fuzzing. The interfaces in IOKit use specific structures, such as IOExternalMethod, IOExternalMethodDispatch, to check the input parameters in various ways. Purely random inputs when fuzzing IOKit can hardly pass the interfaces' parameter checking, so that most of fuzzing data cannot reach the kernel IOUserClient subclass at all. Thus, such kind of blindly fuzzing is inefficient. One way to improve it is to use the static information exported by sMethod symbols, which can be dumped by a static analysis tools such as IDA. However, it is not available since iOS 7 because of symbols hiding.\n\nIn this presentation, we will introduce an approach to resolve the symbols and parameter information dynamically based on a kernel patch to read and write memories. In this approach we can exploit quite a lot of useful information, including not only the standard parameters of IOKit interfaces, but also other supplementary data. We have also built a fuzzing framework, which uses the resolved information and generates the random inputs, which can pass the basic parameter checking by IOKit interfaces. Therefore, the fuzzing can be done efficiently. Finally, we also present the information of IOKit interfaces exported by our approach, and several typical vulnerabilities found by our fuzzing framework."
  },
  "panel-getting-it-right-straight-talk-on-threat-and-information-sharing": {
    "author": "trey-ford",
    "description": "Sharing information isn't hard - getting past backroom deals, NDAs and approval from general counsel is *very hard*. This topic is not two-dimensional, even if we are quick to weigh data sharing in the face of data breaches, and the US has several pieces of legislation in play on this *right now*. Conservatively there are over 300,00 open jobs available in information security- efficiency, prioritization and alignment with IT has never been more important. Information sharing and threat intelligence offers hope that we can better inform priorities to align with real threats, however these solutions come with a new set of questions:Clearly, we need to talk. If you've got thoughts, we want to hear them. Sharing isn't only the theme of this session, it is also the format. Attendees and panelists will discuss: ",
    "plaintextTitle": "Panel: Getting It Right: Straight Talk on Threat & Information Sharing",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=1w8n0L3uUCE"
      }
    ],
    "youtubeDescription": "Tom Brady investigates a theft... and other things that didn't happen\n\nLike on Facebook! http://www.facebook.com/badlipreading\nFollow on Twitter! http://twitter.com/badlipreading\nFollow on Instagram! http://www.instagram.com/badlipreading"
  },
  "panel-how-the-wassenaar-arrangements-export-control-of-intrusion-software-affects-the-security-industry": {
    "author": "kim-zetter",
    "description": "In 2013, the group of countries that make up the Wassenaar Arrangement added \"intrusion software\" to the list of dual use controlled items. This rule has been implemented and enforced in different ways among participating countries since last year. The United States Government is currently working on how it will implement these rules. Much like the crypto wars of the 1990's, the ruling in its current form threatens to make some legitimate security work more difficult. This has the potential to raise the cost for defenders and lower the cost for attackers. Join us for a panel that brings together different members of our community to discuss their perspectives on these export regulations. The panel will include those involved in security research, bug bounty programs, and privacy.",
    "plaintextTitle": "Panel: How the Wassenaar Arrangements Export Control of Intrusion Software Affects the Security Industry",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=J2jz2OK0V1E"
      }
    ],
    "youtubeDescription": "by Kim Zetter  &  Collin Anderson  &  Nate Cardozo  &  Katie Moussouris  &  Dino Dai Zovi  &  Adriel Desautels\n\nIn 2013, the group of countries that make up the Wassenaar Arrangement added \"intrusion software\" to the list of dual use controlled items. This rule has been implemented and enforced in different ways among participating countries since last year. The United States Government is currently working on how it will implement these rules. Much like the crypto wars of the 1990's, the ruling in its current form threatens to make some legitimate security work more difficult. This has the potential to raise the cost for defenders and lower the cost for attackers. Join us for a panel that brings together different members of our community to discuss their perspectives on these export regulations. The panel will include those involved in security research, bug bounty programs, and privacy."
  },
  "pen-testing-a-city": {
    "author": "greg-conti",
    "description": "How would you take down a city? How would you prepare for and defend against such an attack? The information security community does a great job of identifying security vulnerabilities in individual technologies and penetration testing teams help secure companies. At the next level of scale, however, things tend to fall apart. The information security of cities, the backbone of modern civilization, often receives little to no holistic attention, unless you count the constant probing of nation state aggressors. The information technology infrastructure of cities is different from other entities. Cities feature complex interdependencies between agencies and infrastructure that is a combination of federal, state and local government organizations and private industry, all working closely together in an attempt to keep the city as a whole functioning properly. Preparedness varies widely. Some cities have their act together, but others are a snarl of individual fiefdoms built upon homegrown technological houses of cards. If you can untangle the policy and politics and overcome the bureaucratic infighting to create workable leadership, authorities, and funding, you are still faced with an astronomically complex system and an attack surface the size of, well, a city. Our talk identifies these necessary precursor steps and provide a broadly applicable set of tools to start taming and securing, such an attack surface.In this talk, we first explore a notional city, deconstruct it layer by layer, and use these insights to suggest a comprehensive methodology for reverse engineering any city and deriving its attack surface. We complement these insights with a broad analysis of proven capabilities demonstrated by hacker and information security researchers as well as known capabilities of criminal and nation-state actors applicable to city-level attacks. Next, we develop a coherent strategy for penetration testing as an approach to highlight and then mitigate city-level vulnerabilities. Finally, we conclude with a wide-ranging set of approaches to complement pen testing efforts, including exercises and collective training, metrics and a maturity model for measuring progress, and specialized city-level attack/defend ranges. You'll leave this talk fearing for the survival of your respective country, but also possessing a toolkit of techniques to help improve the situation. By better securing cities we have a glimmer of hope in securing nations.",
    "plaintextTitle": "Pen Testing a City",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Conti-Pen-Testing-A-City.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Conti-Pen-Testing-A-City-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=qPt0tHJUR4U"
      }
    ],
    "youtubeDescription": "by Greg Conti  &  Tom Cross  &  David Raymond\n\nHow would you take down a city? How would you prepare for and defend against such an attack? The information security community does a great job of identifying security vulnerabilities in individual technologies and penetration testing teams help secure companies. At the next level of scale, however, things tend to fall apart. The information security of cities, the backbone of modern civilization, often receives little to no holistic attention, unless you count the constant probing of nation state aggressors. The information technology infrastructure of cities is different from other entities. Cities feature complex interdependencies between agencies and infrastructure that is a combination of federal, state and local government organizations and private industry, all working closely together in an attempt to keep the city as a whole functioning properly. Preparedness varies widely. Some cities have their act together, but others are a snarl of individual fiefdoms built upon homegrown technological houses of cards. If you can untangle the policy and politics and overcome the bureaucratic infighting to create workable leadership, authorities, and funding, you are still faced with an astronomically complex system and an attack surface the size of, well, a city. Our talk identifies these necessary precursor steps and provide a broadly applicable set of tools to start taming and securing, such an attack surface.\n\nIn this talk, we first explore a notional city, deconstruct it layer by layer, and use these insights to suggest a comprehensive methodology for reverse engineering any city and deriving its attack surface. We complement these insights with a broad analysis of proven capabilities demonstrated by hacker and information security researchers as well as known capabilities of criminal and nation-state actors applicable to city-level attacks. Next, we develop a coherent strategy for penetration testing as an approach to highlight and then mitigate city-level vulnerabilities. Finally, we conclude with a wide-ranging set of approaches to complement pen testing efforts, including exercises and collective training, metrics and a maturity model for measuring progress, and specialized city-level attack/defend ranges. You'll leave this talk fearing for the survival of your respective country, but also possessing a toolkit of techniques to help improve the situation. By better securing cities we have a glimmer of hope in securing nations."
  },
  "red-vs-blue-modern-active-directory-attacks-detection-and-protection": {
    "author": "sean-metcalf",
    "description": "Kerberos \"Golden Tickets\" were unveiled by Alva \"Skip\" Duckwall & Benjamin Delpy in 2014 during their Black Hat USA presentation. Around this time, Active Directory (AD) admins all over the world felt a great disturbance in the Force. Golden Tickets are the ultimate method for persistent, forever AD admin rights to a network since they are valid Kerberos tickets and can't be detected, right?The news is filled with reports of breached companies and government agencies with little detail on the attack vectors and mitigation. This briefing discusses in detail the latest attack methods for gaining and maintaining administrative access in Active Directory. Also covered are traditional defensive security measures that work (and ones that don't) as well as the mitigation strategies that can keep your company's name off the front page. Prepare to go beyond \"Pass-the-Hash\" and down the rabbit hole.This talk explores the latest Active Directory attack vectors and describes how Golden Ticket usage can be detected. When forged Kerberos tickets are used in AD, there are some interesting artifacts that can be identified. Yes, despite what you may have read on the internet, there are ways to detect Golden & Silver Ticket usage!Some of the topics covered:Kerberos expertise is not required since the presentation covers how Active Directory leverages Kerberos for authentication identifying the areas useful for attack. Information presented is useful for both Red Team & Blue Team members.",
    "plaintextTitle": "Red vs Blue: Modern Active Directory Attacks Detection and Protection",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Metcalf-Red-Vs-Blue-Modern-Active-Directory-Attacks-Detection-And-Protection.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Metcalf-Red-Vs-Blue-Modern-Active-Directory-Attacks-Detection-And-Protection-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=b6GUXerE9Ac"
      }
    ],
    "youtubeDescription": "by Sean Metcalf\n\nKerberos \"Golden Tickets\" were unveiled by Alva \"Skip\" Duckwall & Benjamin Delpy in 2014 during their Black Hat USA presentation. Around this time, Active Directory (AD) admins all over the world felt a great disturbance in the Force. Golden Tickets are the ultimate method for persistent, forever AD admin rights to a network since they are valid Kerberos tickets and can't be detected, right?\n\nThe news is filled with reports of breached companies and government agencies with little detail on the attack vectors and mitigation. This briefing discusses in detail the latest attack methods for gaining and maintaining administrative access in Active Directory. Also covered are traditional defensive security measures that work (and ones that don't) as well as the mitigation strategies that can keep your company's name off the front page. Prepare to go beyond \"Pass-the-Hash\" and down the rabbit hole.\n\nThis talk explores the latest Active Directory attack vectors and describes how Golden Ticket usage can be detected. When forged Kerberos tickets are used in AD, there are some interesting artifacts that can be identified. Yes, despite what you may have read on the internet, there are ways to detect Golden & Silver Ticket usage!\n\nSome of the topics covered:\n\n    How attackers go from zero to (Domain) Admin\n    MS14-068: the vulnerability, the exploit, and the danger.\n    \"SPN Scanning\" with PowerShell to identify potential targets without network scans (SQL, Exchange, FIM, webservers, etc.).\n    Exploiting weak service account passwords as a regular AD user.\n    Mimikatz, the attacker's multi-tool.\n    Using Silver Tickets for stealthy persistence that won't be detected (until now).\n    Identifying forged Kerberos tickets (Golden & Silver Tickets) on your network.\n    Detecting offensive PowerShell tools like Invoke-Mimikatz.\n    PowerShell v5 security enhancements\n    Active Directory attack mitigation.\n\n\nKerberos expertise is not required since the presentation covers how Active Directory leverages Kerberos for authentication identifying the areas useful for attack. Information presented is useful for both Red Team & Blue Team members."
  },
  "remote-exploitation-of-an-unaltered-passenger-vehicle": {
    "author": "charlie-miller",
    "description": "Although the hacking of automobiles is a topic often discussed, details regarding successful attacks, if ever made public, are non-comprehensive at best. The ambiguous nature of automotive security leads to narratives that are polar opposites: either we're all going to die or our cars are perfectly safe. In this talk, we will show the reality of car hacking by demonstrating exactly how a remote attack works against an unaltered, factory vehicle. Starting with remote exploitation, we will show how to pivot through different pieces of the vehicle's hardware in order to be able to send messages on the CAN bus to critical electronic control units. We will conclude by showing several CAN messages that affect physical systems of the vehicle. By chaining these elements together, we will demonstrate the reality and limitations of remote car attacks.",
    "plaintextTitle": "Remote Exploitation of an Unaltered Passenger Vehicle",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=OobLb1McxnI"
      }
    ],
    "youtubeDescription": "Although the hacking of automobiles is a topic often discussed, details regarding successful attacks, if ever made public, are non-comprehensive at best. The ambiguous nature of automotive security leads to narratives that are polar opposites: either we’re all going to die or our cars are perfectly safe. In this talk, we will show the reality of car hacking by demonstrating exactly how a remote attack works against an unaltered, factory vehicle. Starting with remote exploitation, we will show how to pivot through different pieces of the vehicle’s hardware in order to be able to send messages on the CAN bus to critical electronic control units. We will conclude by showing several CAN messages that affect physical systems of the vehicle. By chaining these elements together, we will demonstrate the reality and limitations of remote car attacks.\n\nCharlie Miller is a security engineer at Twitter, a hacker, and a gentleman. Back when he still had time to research, he was the first with a public remote exploit for both the iPhone and the G1 Android phone. He is a four time winner of the CanSecWest Pwn2Own competition. He has authored three information security books and holds a PhD from the University of Notre Dame. He has hacked browsers, phones, cars, and batteries. Charlie spends his free time trying to get back together with Apple, but sadly they still list their relationship status as \"It's complicated\".\n\nTwitter: @0xcharlie\n\nChristopher Valasek is the Director of Vehicle Security Research at IOActive, an industry leader in comprehensive computer security services. Valasek specializes in offensive research methodologies with a focus in reverse engineering and exploitation. Valasek is known for his extensive research in the automotive field and his exploitation and reverse engineering of Windows. Valasek is also the Chairman of SummerCon, the nation's oldest hacker conference. He holds a B.S. in Computer Science from the University of Pittsburgh.\n\nTwitter: @nudehaberdasher"
  },
  "remote-physical-damage-101-bread-and-butter-attacks": {
    "author": "jason-larsen",
    "description": "It is possible to physically damage equipment through purely cyber means. Most of the time the attacker takes advantage of something specific to the CyberPhysical System (CPS) thats being targeted. As an example mixing in a cleaning agent during a production cycle can cause an unwanted chemical reaction. Attacking software has been described as \"unexpected computation\". Attacking a process is all about \"unexpected physics.\"Finding and exploiting process-specific flaws generally takes subject matter expertise in the victim process. However, there are some generic attacks that can be applied in a wide range of scenarios. I call these bread and butter attacks. They take advantage of common configurations of valves, pumps, pipe, etc. to achieve damage to the process. These scenarios can be used as a basis for a first look in a process audit. During a full audit, a subject matter expert will still need to be consulted.Nearly the entire budget for security processes from cyber attack is spent attempting to keep an attacker from gaining code execution in the process control network. This is roughly equivalent to the early 2000s where the industry attempted to find every possible buffer overflow in code. In 2015 were still finding them regularly. It wasn't until ALSR and DEP were introduced that defenders started making attacker work harder. In process control networks, defending the network is still key, but adding a few physical controls can greatly reduce the effectiveness of an attacker. It is hoped that this presentation can help stimulate discussion on how attacker can be mitigated after code execution is already achieved.",
    "plaintextTitle": "Remote Physical Damage 101 - Bread and Butter Attacks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Larsen-Remote-Physical-Damage-101-Bread-And-Butter-Attacks.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Z592ygoJxSk"
      }
    ],
    "youtubeDescription": "by Jason Larsen\n\nIt is possible to physically damage equipment through purely cyber means. Most of the time the attacker takes advantage of something specific to the CyberPhysical System (CPS) thats being targeted. As an example mixing in a cleaning agent during a production cycle can cause an unwanted chemical reaction. Attacking software has been described as \"unexpected computation\". Attacking a process is all about \"unexpected physics.\"\n\nFinding and exploiting process-specific flaws generally takes subject matter expertise in the victim process. However, there are some generic attacks that can be applied in a wide range of scenarios. I call these bread and butter attacks. They take advantage of common configurations of valves, pumps, pipe, etc. to achieve damage to the process. These scenarios can be used as a basis for a first look in a process audit. During a full audit, a subject matter expert will still need to be consulted.\n\nNearly the entire budget for security processes from cyber attack is spent attempting to keep an attacker from gaining code execution in the process control network. This is roughly equivalent to the early 2000s where the industry attempted to find every possible buffer overflow in code. In 2015 were still finding them regularly. It wasn't until ALSR and DEP were introduced that defenders started making attacker work harder. In process control networks, defending the network is still key, but adding a few physical controls can greatly reduce the effectiveness of an attacker. It is hoped that this presentation can help stimulate discussion on how attacker can be mitigated after code execution is already achieved."
  },
  "repurposing-onionduke-a-single-case-study-around-reusing-nation-state-malware": {
    "author": "joshua-pitts",
    "description": "The news media is awash with nation-states and criminals reusing malware. Why should they have all the fun? This is a case study about reversing the suspected Russian government made OnionDuke MitM patching system, discovered by the speaker in October 2014. During this talk we will seek to understand its inner workings, selecting desirable features, and repurposing it for use in other tools. This is pure malware plagiarism.",
    "plaintextTitle": "Repurposing OnionDuke: A Single Case Study Around Reusing Nation State Malware",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Pitts-Repurposing-OnionDuke-A-Single-Case-Study-Around-Reusing-Nation-State-Malware.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Pitts-Repurposing-OnionDuke-A-Single-Case-Study-Around-Reusing-Nation-State-Malware-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=OuyLzkG16Uk"
      }
    ],
    "youtubeDescription": "by Joshua Pitts\n\nThe news media is awash with nation-states and criminals reusing malware. Why should they have all the fun? This is a case study about reversing the suspected Russian government made OnionDuke MitM patching system, discovered by the speaker in October 2014. During this talk we will seek to understand its inner workings, selecting desirable features, and repurposing it for use in other tools. This is pure malware plagiarism."
  },
  "return-to-where-you-cant-exploit-what-you-cant-find": {
    "author": "christopher-liebchen",
    "description": "Detecting and preventing exploitation of memory corruption vulnerabilities is highly challenging. Until now, no countermeasure has been able to fully prevent sophisticated exploitation techniques, such as return-oriented programming (ROP). Recent control-flow integrity (CFI) defenses from Google and Microsoft can be bypassed by constructing a ROP payload that adheres to the control-flow constraints or by exploiting implementation flaws. Microsoft's EMET has less overhead than full CFI, but offers less protection in return, and can be bypassed. Probabilistic countermeasures based on memory layout randomization (such as ASLR) are already in widespread use. However, the Pwn2own competitions have repeatedly demonstrated that attackers can bypass code randomization using memory leaks in browsers.To reduce the impact of memory disclosure, recent defenses utilize execute-only memory. In this work we show that execute-only memory is insufficient and that these solutions can still be bypassed. In particular, we show how to determine the code layout by analyzing pointers in the heap and on the stack without ever reading the code.On the defensive side, we build a comprehensive yet practical defense called Readactor that counters both direct reading of code and indirect layout disclosure through analysis of code pointers. We employ a thin hypervisor and a kernel patch to utilize true hardware execute-only memory, and prevent direct reading of code in Linux processes. We hide all code pointers in readable memory using a patched version of the LLVM compiler. We deploy a number of techniques to break ROP gadget chains and disorient the adversary. Specifically, we hide code pointers by converting them into direct jumps stored in execute-only memory to prevent indirect layout disclosure.Our solution is efficient, because it activates previously unused hardware capabilities in modern x86 processors and is often faster than industry CFI implementations. Our solution is also highly practical; we were able to automatically apply our defense to the Chromium web browser. Finally, our solution is comprehensive; we also protect the dynamically generated code emitted by the V8 JavaScript JIT compiler.",
    "plaintextTitle": "Return to Where? You Cant Exploit What You Cant Find",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KVk1ANkzjGI"
      }
    ],
    "youtubeDescription": "by Christopher Liebchen  &  Ahmad-Reza Sadeghi  &  Andrei Homescu  &  Stephen Crane\n\nDetecting and preventing exploitation of memory corruption vulnerabilities is highly challenging. Until now, no countermeasure has been able to fully prevent sophisticated exploitation techniques, such as return-oriented programming (ROP). Recent control-flow integrity (CFI) defenses from Google and Microsoft can be bypassed by constructing a ROP payload that adheres to the control-flow constraints or by exploiting implementation flaws. Microsoft's EMET has less overhead than full CFI, but offers less protection in return, and can be bypassed. Probabilistic countermeasures based on memory layout randomization (such as ASLR) are already in widespread use. However, the Pwn2own competitions have repeatedly demonstrated that attackers can bypass code randomization using memory leaks in browsers.\n\nTo reduce the impact of memory disclosure, recent defenses utilize execute-only memory. In this work we show that execute-only memory is insufficient and that these solutions can still be bypassed. In particular, we show how to determine the code layout by analyzing pointers in the heap and on the stack without ever reading the code.\n\nOn the defensive side, we build a comprehensive yet practical defense called Readactor that counters both direct reading of code and indirect layout disclosure through analysis of code pointers. We employ a thin hypervisor and a kernel patch to utilize true hardware execute-only memory, and prevent direct reading of code in Linux processes. We hide all code pointers in readable memory using a patched version of the LLVM compiler. We deploy a number of techniques to break ROP gadget chains and disorient the adversary. Specifically, we hide code pointers by converting them into direct jumps stored in execute-only memory to prevent indirect layout disclosure.\n\nOur solution is efficient, because it activates previously unused hardware capabilities in modern x86 processors and is often faster than industry CFI implementations. Our solution is also highly practical; we were able to automatically apply our defense to the Chromium web browser. Finally, our solution is comprehensive; we also protect the dynamically generated code emitted by the V8 JavaScript JIT compiler."
  },
  "review-and-exploit-neglected-attack-surfaces-in-ios-8": {
    "author": "tielei-wang",
    "description": "The security design of iOS significantly reduces the attack surfaces for iOS. Since iOS has gained increasing attention due to its rising popularity, most major attack surfaces in iOS such as mobile safari and IOKit kernel extensions have been well studied and tested. This talk will first review some previously known attacks against these surfaces, and then focus on analyzing and pointing out those neglected attack surfaces. Furthermore, this talk will explore how to apply fuzzing testing and whitebox code auditing to the neglected attack surfaces and share interesting findings. In particular, this talk will disclose POCs for a number of crashes and memory corruption errors in system daemons, which are even triggerable through XPC (a lightweight inter-process communication mechanism) by any app running in the container sandbox, and analyze and share the POC for an out-of-boundary memory access 0day in the latest iOS kernel.",
    "plaintextTitle": "Review and Exploit Neglected Attack Surfaces in iOS 8",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Wang-Review-And-Exploit-Neglected-Attack-Surface-In-iOS-8.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=E-1k3n0KjNI"
      }
    ],
    "youtubeDescription": "by Tielei Wang  &  Hao Xu  &  Xiaobo Chen\n\nThe security design of iOS significantly reduces the attack surfaces for iOS. Since iOS has gained increasing attention due to its rising popularity, most major attack surfaces in iOS such as mobile safari and IOKit kernel extensions have been well studied and tested. This talk will first review some previously known attacks against these surfaces, and then focus on analyzing and pointing out those neglected attack surfaces. Furthermore, this talk will explore how to apply fuzzing testing and whitebox code auditing to the neglected attack surfaces and share interesting findings. In particular, this talk will disclose POCs for a number of crashes and memory corruption errors in system daemons, which are even triggerable through XPC (a lightweight inter-process communication mechanism) by any app running in the container sandbox, and analyze and share the POC for an out-of-boundary memory access 0day in the latest iOS kernel."
  },
  "rocking-the-pocket-book-hacking-chemical-plant-for-competition-and-extortion": {
    "author": "marina-krotofil",
    "description": "The appeal of hacking a physical process is dreaming about physical damage attacks lighting up the sky in a shower of goodness. Lets face it, after such elite hacking action nobody is going to let you present it at a conference like Black Hat. As a poor substitute, this presentation will get as close as using a simulated plant for Vinyl Acetate production for demonstrating a complete attack, from start to end, directed at persistent economic damage to a production site while avoiding attribution of production loss to a cyber-event. Such an attack scenario could be useful to a manufacturer aiming at putting competitors out of business or as a strong argument in an extortion attack.Picking up a paper these days its easy to find an article on all the SCADA insecurity out there associated with an unstoppable attacker with unsophisticated goal of kicking up another apocalypse. Sorry to disappoint excited crowd but formula Your wish is my command does not work for control systems. The target plant may not have been designed in a hacker friendly way. Hopefully by the end of the presentation, the audience will understand the difference between breaking into the system and breaking the system, obtaining control and being in control. An attacker targeting a remote process is not immediately gifted with complete knowledge of the process and the means to manipulate it. In general, an attacker follows a series of stages before getting to the final attack. Designing an attack scenario is a matter of art as much as economic consideration. The cost of attack can quickly exceed damage worth. Also, the attacker has to find the way to compare between competing attack scenarios.In traditional IT hacking, a goal is to go undetected. In OT (operational technologies) hacking this is not an option. An attack will change things in the real world that cannot be removed by simply erasing the log files. If a piece of equipment is damaged or if a plant suddenly becomes less profitable, it will be investigated. The attacker has to create forensic footprint for investigators by manipulating the process and the logs in such a way that the analysts draw the wrong conclusions.Exploiting physical process is an exotic and hard to develop skill which have so far kept a high barrier to entry. Therefore, real-world control system exploitation has remained in the hands of a few. To help the community mastering new skills we have developed 'Damn Vulnerable Chemical Process\" - first open source framework for cyber-physical experimentation based on two realistic models of chemical plants. Come to the session and take your first master class on complex physical hacking.",
    "plaintextTitle": "Rocking the Pocket Book: Hacking Chemical Plant for Competition and Extortion",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Krotofil-Rocking-The-Pocket-Book-Hacking-Chemical-Plant-For-Competition-And-Extortion.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Krotofil-Rocking-The-Pocket-Book-Hacking-Chemical-Plant-For-Competition-And-Extortion-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=apFImQ_ObR8"
      }
    ],
    "youtubeDescription": "https://www.hacktivity.com\n\nFear of cyber-attacks with catastrophic physical consequences easily capture public imagination. The appeal of hacking a physical process is dreaming about physical damage attacks lighting up the sky in a shower of goodness. Let’s face it, after such elite hacking action nobody is going to let one present it at a public conference. As a poor substitute, this presentation will use a simulated plant for Vinyl Acetate production for demonstrating a complete attack, from start to end, directed at persistent economic damage to a production site while avoiding attribution of production loss to a cyber-event.\n \nSuch an attack scenario could be useful to a manufacturer aiming at putting competitors out of business or as a strong argument in an extortion attack.\n \nDesigning an attack scenario is a matter of art as much as economic consideration: the cost of an attack can quickly exceed damage worth. The talk will elaborate on multiple factors which constitute attack costs and how to optimize them."
  },
  "ropinjector-using-return-oriented-programming-for-polymorphism-and-antivirus-evasion": {
    "author": "giorgos-poulios",
    "description": "The downside of current polymorphism techniques lies to the fact that they require a writeable code section, either marked as such in the corresponding Portable Executable (PE) section header, or by changing permissions during runtime. Both approaches are identified by AV software as alarming characteristics and/or behavior, since they are rarely found in benign PEs unless they are packed. In this paper we propose the use of Return-Oriented Programming (ROP) as a new way to achieve polymorphism and evade AV software. To this end, we have developed a tool named ROPInjector which, given any piece of shellcode and any non-packed 32-bit Portable Executable (PE) file, it transforms the shellcode to its ROP equivalent and patches it into (i.e. infects) the PE file. After trying various combinations of evasion techniques, the results show that ROPInjector can evade nearly and completely all antivirus software employed in the online VirusTotal service. The main outcome of this research is: A) the developed algorithms for analysis and manipulation of assembly code on the x86 instruction set, and B) the release and demonstration of the ROPInjector tool.",
    "plaintextTitle": "ROPInjector: Using Return Oriented Programming for Polymorphism and Antivirus Evasion",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Xenakis-ROPInjector-Using-Return-Oriented-Programming-For-Polymorphism-And-Antivirus-Evasion.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Xenakis-ROPInjector-Using-Return-Oriented-Programming-For-Polymorphism-And-Antivirus-Evasion-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=YYbI8hbhrSY"
      }
    ],
    "youtubeDescription": "by Giorgos Poulios  &  Christoforos Ntantogian  &  Christos Xenakis\n\nThe downside of current polymorphism techniques lies to the fact that they require a writeable code section, either marked as such in the corresponding Portable Executable (PE) section header, or by changing permissions during runtime. Both approaches are identified by AV software as alarming characteristics and/or behavior, since they are rarely found in benign PEs unless they are packed. In this paper we propose the use of Return-Oriented Programming (ROP) as a new way to achieve polymorphism and evade AV software. To this end, we have developed a tool named ROPInjector which, given any piece of shellcode and any non-packed 32-bit Portable Executable (PE) file, it transforms the shellcode to its ROP equivalent and patches it into (i.e. infects) the PE file. After trying various combinations of evasion techniques, the results show that ROPInjector can evade nearly and completely all antivirus software employed in the online VirusTotal service. The main outcome of this research is: A) the developed algorithms for analysis and manipulation of assembly code on the x86 instruction set, and B) the release and demonstration of the ROPInjector tool."
  },
  "securing-your-big-data-environment": {
    "author": "ajit-gaddam",
    "description": "Hadoop and big data are no longer buzz words in large enterprises. Whether for the correct reasons or not, enterprise data warehouses are moving to Hadoop and along with it come petabytes of data. How do you ensure big data in Hadoop does not become a big problem or a big target. Vendors pitch their technologies as the magical silver bullet. However, did you realize that some controls are dependent on how many maps are available in the production cluster. What about the structure of the data being loaded? How much overhead does decryption operation add? If tokenizing data, how do you distinguish between in and original production data? However, in certain ways, Hadoop and big data represent a greenfield opportunity for security practitioners. It provides a chance to get ahead of the curve, test and deploy your tools, processes, patterns, and techniques before big data becomes a big problem.Come join this session, where we walk through control frameworks we built and what we discovered, reinvented, polished, and developed to support data security, compliance, cryptographic protection, and effective risk management for sensitive data.",
    "plaintextTitle": "Securing Your Big Data Environment",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Gaddam-Securing-Your-Big-Data-Environment.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Gaddam-Securing-Your-Big-Data-Environment-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Ez1PjvVmRGg"
      }
    ],
    "youtubeDescription": "by Ajit Gaddam\n\nHadoop and big data are no longer buzz words in large enterprises. Whether for the correct reasons or not, enterprise data warehouses are moving to Hadoop and along with it come petabytes of data. How do you ensure big data in Hadoop does not become a big problem or a big target. Vendors pitch their technologies as the magical silver bullet. However, did you realize that some controls are dependent on how many maps are available in the production cluster. What about the structure of the data being loaded? How much overhead does decryption operation add? If tokenizing data, how do you distinguish between in and original production data? However, in certain ways, Hadoop and big data represent a greenfield opportunity for security practitioners. It provides a chance to get ahead of the curve, test and deploy your tools, processes, patterns, and techniques before big data becomes a big problem.\n\nCome join this session, where we walk through control frameworks we built and what we discovered, reinvented, polished, and developed to support data security, compliance, cryptographic protection, and effective risk management for sensitive data."
  },
  "server-side-template-injection-rce-for-the-modern-web-app": {
    "author": "james-kettle",
    "description": "Simple inputs can conceal an {expansive} attack surface. Feature-rich web applications often embed user input in web templates in an attempt to offer flexible functionality and developer shortcuts, creating a vulnerability easily mistaken for XSS. In this presentation, I'll discuss techniques to recognize template injection, then show how to take template engines on a journey deeply orthogonal to their intended purpose and ultimately gain arbitrary code execution. I'll show this technique being applied to craft exploits that hijack four popular template engines, then demonstrate RCE zero-days on two corporate web applications.This presentation will also cover techniques for automated detection of template injection, and exploiting subtle, application-specific vulnerabilities that can arise in otherwise secure template systems.",
    "plaintextTitle": "Server-Side Template Injection: RCE for the Modern Web App",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Kettle-Server-Side-Template-Injection-RCE-For-The-Modern-Web-App-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=3cT0uE7Y87s"
      }
    ],
    "youtubeDescription": "by James Kettle\n\nSimple inputs can conceal an {expansive} attack surface. Feature-rich web applications often embed user input in web templates in an attempt to offer flexible functionality and developer shortcuts, creating a vulnerability easily mistaken for XSS. In this presentation, I'll discuss techniques to recognize template injection, then show how to take template engines on a journey deeply orthogonal to their intended purpose and ultimately gain arbitrary code execution. I'll show this technique being applied to craft exploits that hijack four popular template engines, then demonstrate RCE zero-days on two corporate web applications.\n\nThis presentation will also cover techniques for automated detection of template injection, and exploiting subtle, application-specific vulnerabilities that can arise in otherwise secure template systems."
  },
  "smbv2-sharing-more-than-just-your-files": {
    "author": "jonathan-brossard",
    "description": "In this presentation, we detail a new attack vector against SMBv2, affecting all versions of IE, including the Spartan version shipped with Windows10. While attacks involving SMB have long time been common in LANs, our attack allows complete user compromise from the internet. By leveraging a series of bugs and malfunctions, we'll see how remote credentials theft or user impersonation can be performed without user interaction, extremely reliably, and from the Internet.",
    "plaintextTitle": "SMBv2: Sharing More than Just Your Files",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Brossard-SMBv2-Sharing-More-Than-Just-Your-Files.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Brossard-SMBv2-Sharing-More-Than-Just-Your-Files-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=a1dgOO9bALA"
      }
    ],
    "youtubeDescription": "by Jonathan Brossard  &  Hormazd Billimoria\n\nIn this presentation, we detail a new attack vector against SMBv2, affecting all versions of IE, including the Spartan version shipped with Windows10. While attacks involving SMB have long time been common in LANs, our attack allows complete user compromise from the internet. By leveraging a series of bugs and malfunctions, we'll see how remote credentials theft or user impersonation can be performed without user interaction, extremely reliably, and from the Internet."
  },
  "social-engineering-the-windows-kernel-finding-and-exploiting-token-handling-vulnerabilities": {
    "author": "james-forshaw",
    "description": "One successful technique in social engineering is pretending to be someone or something you're not and hoping the security guard who's forgotten their reading glasses doesn't look too closely at your fake ID. Of course there's no hyperopic guard in the Windows OS, but we do have an ID card, the Access Token which proves our identity to the system and let's us access secured resources. The Windows kernel provides simple capabilities to identify fake Access Tokens, but sometimes the kernel or other kernel-mode drivers are too busy to use them correctly. If a fake token isn't spotted during a privileged operation local elevation of privilege or information disclosure vulnerabilities can be the result. This could allow an attacker to break out of an application sandbox, elevate to administrator privileges, or even compromise the kernel itself. This presentation is about finding and then exploiting the incorrect handling of tokens in the Windows kernel as well as first and third party drivers. Examples of serious vulnerabilities, such as CVE-2015-0002 and CVE-2015-0062 will be presented. It will provide clear exploitable patterns so that you can do your own security reviews for these issues. Finally, I'll discuss some of the ways of exploiting these types of vulnerabilities to elevate local privileges.",
    "plaintextTitle": "Social Engineering the Windows Kernel: Finding and Exploiting Token Handling Vulnerabilities",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=QRpfvmMbDMg"
      }
    ],
    "youtubeDescription": "by James Forshaw\n\nOne successful technique in social engineering is pretending to be someone or something you're not and hoping the security guard who's forgotten their reading glasses doesn't look too closely at your fake ID. Of course there's no hyperopic guard in the Windows OS, but we do have an ID card, the Access Token which proves our identity to the system and let's us access secured resources. The Windows kernel provides simple capabilities to identify fake Access Tokens, but sometimes the kernel or other kernel-mode drivers are too busy to use them correctly. If a fake token isn't spotted during a privileged operation local elevation of privilege or information disclosure vulnerabilities can be the result. This could allow an attacker to break out of an application sandbox, elevate to administrator privileges, or even compromise the kernel itself. This presentation is about finding and then exploiting the incorrect handling of tokens in the Windows kernel as well as first and third party drivers. Examples of serious vulnerabilities, such as CVE-2015-0002 and CVE-2015-0062 will be presented. It will provide clear exploitable patterns so that you can do your own security reviews for these issues. Finally, I'll discuss some of the ways of exploiting these types of vulnerabilities to elevate local privileges."
  },
  "spread-spectrum-satcom-hacking-attacking-the-globalstar-simplex-data-service": {
    "author": "colby-moore",
    "description": "Recently, there have been several highly publicized talks about satellite hacking. However, most only touch on the theoretical rather than demonstrate actual vulnerabilities and real world attack scenarios. This talk will demystify some of the technologies behind satellite communications and do what no one has done before - take the audience step-by-step from reverse engineering to exploitation of the GlobalStar simplex satcom protocol and demonstrate a full blown signals intelligence collection and spoofing capability. I will also demonstrate how an attacker might simulate critical conditions in satellite connected SCADA systems.In recent years, Globalstar has gained popularity with the introduction of its consumer focused SPOT asset-tracking solutions. During the session, I'll deconstruct the transmitters used in these (and commercial) solutions and reveal design and implementation flaws that result in the ability to intercept, spoof, falsify, and intelligently jam communications. Due to design tradeoffs these vulnerabilities are realistically unpatchable and put millions of devices, critical infrastructure, emergency services, and high value assets at risk.",
    "plaintextTitle": "Spread Spectrum Satcom Hacking: Attacking the GlobalStar Simplex Data Service",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Moore-Spread-Spectrum-Satcom-Hacking-Attacking-The-GlobalStar-Simplex-Data-Service.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Moore-Spread-Spectrum-Satcom-Hacking-Attacking-The-GlobalStar-Simplex-Data-Service-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=1VbmHmzofmc"
      }
    ],
    "youtubeDescription": "by Colby Moore\n\nRecently, there have been several highly publicized talks about satellite hacking. However, most only touch on the theoretical rather than demonstrate actual vulnerabilities and real world attack scenarios. This talk will demystify some of the technologies behind satellite communications and do what no one has done before - take the audience step-by-step from reverse engineering to exploitation of the GlobalStar simplex satcom protocol and demonstrate a full blown signals intelligence collection and spoofing capability. I will also demonstrate how an attacker might simulate critical conditions in satellite connected SCADA systems.\n\nIn recent years, Globalstar has gained popularity with the introduction of its consumer focused SPOT asset-tracking solutions. During the session, I'll deconstruct the transmitters used in these (and commercial) solutions and reveal design and implementation flaws that result in the ability to intercept, spoof, falsify, and intelligently jam communications. Due to design tradeoffs these vulnerabilities are realistically unpatchable and put millions of devices, critical infrastructure, emergency services, and high value assets at risk."
  },
  "stagefright-scary-code-in-the-heart-of-android": {
    "author": "joshua-drake",
    "description": "With over a billion activated devices, Android holds strong as the market leading smartphone operating system. Underneath the hood, it is primarily built on the tens of gigabytes of source code from the Android Open Source Project (AOSP). Thoroughly reviewing a code base of this size is arduous at best - arguably impossible. Several approaches exist to combat this problem. One such approach is identifying and focusing on a particularly dangerous area of code.This presentation centers around the speaker's experience researching a particularly scary area of Android, the Stagefright multimedia framework. By limiting his focus to a relatively small area of code that's critically exposed on 95% of devices, Joshua discovered a multitude of implementation issues with impacts ranging from unassisted remote code execution down to simple denial of service. Apart from a full explanation of these vulnerabilities, this presentation also discusses; techniques used for discovery, Android OS internals, and the disclosure process. Finally, proof-of-concept code will be demonstrated.After attending this presentation, you will understand how to discover vulnerabilities in Android more effectively. Joshua will show you why this particular code is so scary, what has been done to help improve the overall security of the Android operating system, and what challenges lie ahead.",
    "plaintextTitle": "Stagefright: Scary Code in the Heart of Android",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Drake-Stagefright-Scary-Code-In-The-Heart-Of-Android.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=71YP65UANP0"
      }
    ],
    "youtubeDescription": "by Joshua Drake\n\nWith over a billion activated devices, Android holds strong as the market leading smartphone operating system. Underneath the hood, it is primarily built on the tens of gigabytes of source code from the Android Open Source Project (AOSP). Thoroughly reviewing a code base of this size is arduous at best - arguably impossible. Several approaches exist to combat this problem. One such approach is identifying and focusing on a particularly dangerous area of code.\n\nThis presentation centers around the speaker's experience researching a particularly scary area of Android, the Stagefright multimedia framework. By limiting his focus to a relatively small area of code that's critically exposed on 95% of devices, Joshua discovered a multitude of implementation issues with impacts ranging from unassisted remote code execution down to simple denial of service. Apart from a full explanation of these vulnerabilities, this presentation also discusses; techniques used for discovery, Android OS internals, and the disclosure process. Finally, proof-of-concept code will be demonstrated.\n\nAfter attending this presentation, you will understand how to discover vulnerabilities in Android more effectively. Joshua will show you why this particular code is so scary, what has been done to help improve the overall security of the Android operating system, and what challenges lie ahead."
  },
  "staying-persistent-in-software-defined-networks": {
    "author": "gregory-pickett",
    "description": "The Open Network Install Environment, or ONIE, makes commodity or WhiteBox Ethernet possible. By placing a common, Linux-based, install environment onto the firmware of the switch, customers can deploy the Network Operating Systems of their choice onto the switch and do so whenever they like without replacing the hardware. The problem is, if this gets compromised, it also makes it possible for hackers to install malware onto the switch. Malware that can manipulate it and your network, and keep doing it long after a Network Operating System reinstall.With no secure boot, no encryption, no authentication, predictable HTTP/TFTP waterfalls, and exposed post-installation partition, ONIE is very susceptible to compromise. And with Network Operating Systems such as Switch Light, Cumulus Linux, and Mellanox-OS via their agents Indigo and eSwitchd not exactly putting up a fight with problems like no authentication, no encryption, poor encryption, and insufficient isolation, this is a real possibility.In this session, we'll cover the weaknesses in ONIE, ways to reach the platform through these Network Operating Systems, and what can happen if we don't properly protect the Control Plane these switches run on. I'll even demonstrate with a drive-by web-attack that is able to pivot through a Windows management station to reach the isolated control plane network, and infect one of these ONIE-based switches with malware, malware that's there even after a refresh. You'll even get the source code to take home with you to see how easily it's done. Finally, we'll talk about how to compensate for these issues so that your network doesn't become infected with and manipulated by this sort of persistent firmware-level malware.",
    "plaintextTitle": "Staying Persistent in Software Defined Networks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Pickett-Staying-Persistent-In-Software-Defined-Networks.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Pickett-Staying-Persistent-In-Software-Defined-Networks-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Pickett-Staying-Persistent-In-Software-Defined-Networks-tool.py",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=zHDAg8UVTLc"
      }
    ],
    "youtubeDescription": "The Open Network Install Environment, or ONIE, makes commodity or WhiteBox Ethernet possible. By placing a common, Linux-based, install environment onto the firmware of the switch, customers can deploy the Network Operating Systems of their choice onto the switch and do so whenever they like without replacing the hardware. The problem is, if this gets compromised, it also makes it possible for hackers to install malware onto the switch. Malware that can manipulate it and your network, and keep doing it long after a Network Operating System reinstall.\n\nWith no secure boot, no encryption, no authentication, predictable HTTP/TFTP waterfalls, and exposed post-installation partition, ONIE is very susceptible to compromise. And with Network Operating Systems such as Switch Light, Cumulus Linux, and Mellanox-OS via their agents Indigo and eSwitchd not exactly putting up a fight with problems like no authentication, no encryption, poor encryption, and insufficient isolation, this is a real possibility.\n\nIn this session, we'll cover the weaknesses in ONIE, ways to reach the platform through these Network Operating Systems, and what can happen if we don't properly protect the Control Plane these switches run on. I'll even demonstrate with a drive-by web-attack that is able to pivot through a Windows management station to reach the isolated control plane network, and infect one of these ONIE-based switches with malware, malware that's there even after a refresh. You'll even get the source code to take home with you to see how easily it's done. Finally, we'll talk about how to compensate for these issues so that your network doesn't become infected with and manipulated by this sort of persistent firmware-level malware.\n\nSpeaker Bio:\nGregory Pickett CISSP, GCIA, GPEN has a background in intrusion analysis for Fortune 100 companies but now heads up Hellfire Security’s Managed Security Services efforts and participates in their assessment practice as a network security subject matter expert. As a security professional, his primary area of focus and occasional research is networks with an interest in using network traffic to better understand, to better defend, and sometimes to better exploit the hosts that live on them. He holds a B.S. in Psychology which is completely unrelated but interesting to know. While it does nothing to contribute to how he makes a living, it does demonstrate how screwed up he actually is.\n\nTwitter: @Shogun7273"
  },
  "stranger-danger-what-is-the-risk-from-3rd-party-libraries": {
    "author": "jake-kouns",
    "description": "Since Heartbleed, the (in)security of third party libraries has taken center stage in infosec thanks to the follow up releases of Shellshock, POODLE, and FREAK, each causing vendors to scramble to investigate and remediate flaws in third party libraries. Clearly, vulnerability counts and patch frequency are just the beginning of evaluating product and library security. Days of Risk (DoR) analysis starts at public disclosure of a vulnerability, but doesn't account for the time from initial discovery through fix availability which could be months. We analyze the risks that are created by the extended Time of Exposure that DoR does not address. Learn how metrics can assist in the evaluation of vendors and products, and provide a scorecard for organizations to understand their effectiveness in managing vulnerabilities.This presentation will will also share case studies of companies who took action in 2014 to get ahead of 3rd party patch whack-a-mole, and provide concrete actions security practitioners can take to mitigate risk in their environments.",
    "plaintextTitle": "Stranger Danger! What is the Risk from 3rd Party Libraries?",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Qi_kyj8xnH0"
      }
    ],
    "youtubeDescription": "by Jake Kouns\n\nSince Heartbleed, the (in)security of third party libraries has taken center stage in infosec thanks to the follow up releases of Shellshock, POODLE, and FREAK, each causing vendors to scramble to investigate and remediate flaws in third party libraries. Clearly, vulnerability counts and patch frequency are just the beginning of evaluating product and library security. Days of Risk (DoR) analysis starts at public disclosure of a vulnerability, but doesn't account for the time from initial discovery through fix availability which could be months. We analyze the risks that are created by the extended Time of Exposure that DoR does not address. Learn how metrics can assist in the evaluation of vendors and products, and provide a scorecard for organizations to understand their effectiveness in managing vulnerabilities.\n\nThis presentation will will also share case studies of companies who took action in 2014 to get ahead of 3rd party patch whack-a-mole, and provide concrete actions security practitioners can take to mitigate risk in their environments."
  },
  "subverting-satellite-receivers-for-botnet-and-profit": {
    "author": "sofiane-talmat",
    "description": "New generation Set Top Boxes (Satellite receivers) are embedded linux boxes offering all the features of any linux based machine, including wireless and network connectivities, this allowed hackers to crack most satellite DVB-CA encryption schemes promoting the apparition of a parallel black market for pay tv subscription at very low cost.In this engaging session, we will present a practical attack that will exploit human weakness, Satellite receivers design, used protocols and subscription mechanisms that mainly relay on custom plugins on satellite receivers for channel decryption.We will also describe technically a similar attack that was already conducted some years ago using a backdoor within CCCAM protocol provider.This attack could be exploited to build a massive botnet of linux based satellite receivers or even computers used for satellite decryption and accessing end users local area networks that will be used as an edge for any other kind of attacks. There are millions of unaware end users downloading and installing any kind of plugins seeking cheap or even free satellite television, then the attack could be difficult to mitigate, and could easily lead to a hacker controlling millions of devices on the internet.",
    "plaintextTitle": "Subverting Satellite Receivers for Botnet and Profit",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Talmat-Subverting-Satellite-Receivers-For-Botnet-And-Profit.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Talmat-Subverting-Satellite-Receivers-For-Botnet-And-Profit-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=CgxR8AP1hR0"
      }
    ],
    "youtubeDescription": "by Sofiane Talmat\n\nNew generation Set Top Boxes (Satellite receivers) are embedded linux boxes offering all the features of any linux based machine, including wireless and network connectivities, this allowed hackers to crack most satellite DVB-CA encryption schemes promoting the apparition of a parallel black market for pay tv subscription at very low cost.\n\nIn this engaging session, we will present a practical attack that will exploit human weakness, Satellite receivers design, used protocols and subscription mechanisms that mainly relay on custom plugins on satellite receivers for channel decryption.\n\nWe will also describe technically a similar attack that was already conducted some years ago using a backdoor within CCCAM protocol provider.\n\nThis attack could be exploited to build a massive botnet of linux based satellite receivers or even computers used for satellite decryption and accessing end users local area networks that will be used as an edge for any other kind of attacks. There are millions of unaware end users downloading and installing any kind of plugins seeking cheap or even free satellite television, then the attack could be difficult to mitigate, and could easily lead to a hacker controlling millions of devices on the internet."
  },
  "switches-get-stitches": {
    "author": "colin-cassidy",
    "description": "This talk will introduce you to Industrial Ethernet Switches and their vulnerabilities. These are switches used in industrial environments, like substations, factories, refineries, ports, or other homes of industrial automation. In other words: DCS, PCS, ICS & SCADA switches. The researchers focus on attacking the management plane of these switches, because we all know that industrial system protocols lack authentication or cryptographic integrity. Thus, compromising any switch allows the creation of malicious firmwares for further MITM manipulation of a live process. Such MITM manipulation can lead to the plant or process shutting down (think: nuclear reactor SCRAM) or getting into a unknown and hazardous state (think: damaging a blast furnace at a steel mill). Not only will vulnerabilities be disclosed for the first time (exclusively at Black Hat), but the methods of finding those vulnerabilities will be shared. All vulnerabilities disclosed will be in the default configuration state of the devices. While these vulnerabilities have been responsibly disclosed to the vendors, SCADA/ICS patching in live environments tends to take 1-3 years. Because of this patching lag, the researchers will also be providing live mitigations that owner/operators can use immediately to protect themselves. At least four vendors switches will be examined: Siemens, GE, Garrettcom, and Opengear.",
    "plaintextTitle": "Switches Get Stitches",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Cassidy-Switches-Get-Stitches.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=yaY3rtA37Uc"
      }
    ],
    "youtubeDescription": "This talk will introduce you to Industrial Ethernet Switches and their vulnerabilities. These are switches used in industrial environments, like substations, factories, refineries, ports, or other homes of industrial automation. In other words: DCS, PCS, ICS & SCADA switches.\n\nThe researchers focus on attacking the management plane of these switches, because we all know that industrial system protocols lack authentication or cryptographic integrity. Thus, compromising any switch allows the creation of malicious firmwares for further MITM manipulation of a live process. Such MITM manipulation can lead to the plant or process shutting down (think: nuclear reactor SCRAM) or getting into a unknown and hazardous state (think: damaging a blast furnace at a steel mill)\n\nNot only will vulnerabilities be disclosed for the first time, but the methods of finding those vulnerabilities will be shared. All vulnerabilities disclosed will be in the default configuration state of the devices. While these vulnerabilities have been responsibly disclosed to the vendors, SCADA/ICS patching in live environments tends to take 1-3 years. Because of this patching lag, the researchers will also be providing live mitigations that owner/operators can use immediately to protect themselves. At least four vendors switches will be examined: Siemens, GE, Garrettcom and Opengear.\n\nColin Cassidy is a security consultant for IOActive where he focuses on Industrial Control Systems. He has a strong development and software engineering background. He is also a seasoned leader in the areas of security and software engineering. Before joining IOActive, Cassidy served for a number of years as Technical Manager and Security Technical Lead for IGE Energy Services, Ltd, part of GE Energy. He has hands-on experience with PowerOn Fusion, a leading Outage Management System/Distribution Management System (OMS/DMS) solution for electricity distribution management. He also led a team of developers in producing new functionality within the core product and worked with customers to understand their requirements. Colin Cassidy has a BSc (Hons) in Computing Science from the University of Glasgow.\n\nTwitter: @parttimesecguy\n\nÉireann Leverett hates writing bios in the third person. He once placed second in an Eireann Leverett impersonation contest. He likes teaching the basics, and learning the obscure. He is sometimes jealous of his own moustache for being more famous than he is. If he could sum up his life in one sentence; he wouldn't. That would be a life-sentence! He is primarily known for smashing the myth of the air-gap in industrial systems with his master's thesis, finding authentication bypasses for industrial ethernet switches, and working with incident response teams to improve their understanding of industrial control systems security. He believes security takes an awful lot more than penetration-testing and speaks often about the wider effects of embedded system insecurity.\n\nTwitter: @blackswanburst\n\nRobert M. Lee is a co-founder of Dragos Security LLC where he has a passion for control system protocol analysis, digital forensics, and threat intelligence research. He is also an active-duty U.S. Air Force Cyber Warfare Operations Officer where he has been a member of multiple computer network defense teams including his establishing and leading of a first-of-its-kind ICS/SCADA threat intelligence and intrusion analysis mission. Robert received his BS from the United States Air Force Academy and his MS in Cybersecurity Digital Forensics from Utica College. He is a passionate educator and teaches in the ICS and Forensics programs at SANS and is an Adjunct Lecturer at Utica College where he teaches in their MS Cybersecurity program. Robert is also the author of 'SCADA and Me' and is currently pursuing his PhD at Kings College London with research in control system cyber security. He routinely publishes academic and industry focused works in a wide variety of journals and publications; additionally he has presented at conferences around the world.\n\nTwitter: @RobertMLee"
  },
  "take-a-hacker-to-work-day-how-federal-prosecutors-use-the-cfaa": {
    "author": "leonard-bailey",
    "description": "What would happen if Black Hat invited the Department of Justice (DOJ) to give us a better understanding of the Computer Fraud and Abuse Act (or \"CFAA\") and explain how federal prosecutors use it  and the DOJ actually showed up?Attendees will hear directly from a Department of Justice's Computer Crime & Intellectual Property Section Prosecutor explaining the CFAA in plain English and breaking down the process for deciding whether to bring charges in federal hacking cases.This session will cover data about how the CFAA has been used and pointers on how practitioners and researchers can stay out of hot water. You'll also gain insight into how prosecutors think about the intersection between their mission to protect computer networks and data from criminals, and the efforts of the computer security community to ferret out critical system vulnerabilities.Seating will be limited for this rare briefing to our community. Bring your most thoughtful and meaningful questions, and be on your best behavior- our communities must work closely together to make security research safer while enabling law enforcement to pursue truly criminal behavior.",
    "plaintextTitle": "Take a Hacker to Work Day - How Federal Prosecutors Use the CFAA",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Bailey-Take-A-Hacker-To-Work Day-How-Federal-Prosecutors-Use-The-CFAA.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=IHm4KZsMtsU"
      }
    ],
    "youtubeDescription": "by Leonard Bailey\n\nWhat would happen if Black Hat invited the Department of Justice (DOJ) to give us a better understanding of the Computer Fraud and Abuse Act (or \"CFAA\") and explain how federal prosecutors use it and the DOJ actually showed up?\n\nAttendees will hear directly from a Department of Justice's Computer Crime & Intellectual Property Section Prosecutor explaining the CFAA in plain English and breaking down the process for deciding whether to bring charges in federal hacking cases.\n\nThis session will cover data about how the CFAA has been used and pointers on how practitioners and researchers can stay out of hot water. You'll also gain insight into how prosecutors think about the intersection between their mission to protect computer networks and data from criminals, and the efforts of the computer security community to ferret out critical system vulnerabilities.\n\nSeating will be limited for this rare briefing to our community. Bring your most thoughtful and meaningful questions, and be on your best behavior- our communities must work closely together to make security research safer while enabling law enforcement to pursue truly criminal behavior."
  },
  "taking-event-correlation-with-you": {
    "author": "rob-king",
    "description": "Event correlation problems appear everywhere in information security and forensics: log analysis (\"I'm seeing a lot of 404 errors from one range of IP addresses\"), behavior detection (\"That account may be compromised, he logged in twice from two different locations\"), record linkage (\"Is Jones, Robert the same as Bob Jones?\"), and expert systems (\"I have a system running Windows 7 Japanese Locale, with these hotfixes, what's my biggest security risk?\", or from the other side, \"What attacks should I try first?\").Despite the usefulness of event correlation, many security practitioners either ignore it or use ad hoc tools. This talk presents Giles, a compiler that creates event correlation engines. Its most interesting feature is that the output of Giles is a schema for a normal SQL database, and databases created using this schema are fully-fledged event correlation engines. This allows users to put an event correlation engine anywhere they could put a database (which is everywhere), and access it using any programming language that can access databases (which is all of them).",
    "plaintextTitle": "Taking Event Correlation with You",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-King-Taking-Event-Correlation-With-You.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-King-Taking-Event-Correlation-With-You-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-King-Taking-Event-Correlation-With-You-tool.tgz",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=J2Lw0cDsLkI"
      }
    ],
    "youtubeDescription": "by Rob King \n\nEvent correlation problems appear everywhere in information security and forensics: log analysis (\"I'm seeing a lot of 404 errors from one range of IP addresses\"), behavior detection (\"That account may be compromised, he logged in twice from two different locations\"), record linkage (\"Is Jones, Robert the same as Bob Jones?\"), and expert systems (\"I have a system running Windows 7 Japanese Locale, with these hotfixes, what's my biggest security risk?\", or from the other side, \"What attacks should I try first?\").\n\nDespite the usefulness of event correlation, many security practitioners either ignore it or use ad hoc tools. This talk presents Giles, a compiler that creates event correlation engines. Its most interesting feature is that the output of Giles is a schema for a normal SQL database, and databases created using this schema are fully-fledged event correlation engines. This allows users to put an event correlation engine anywhere they could put a database (which is everywhere), and access it using any programming language that can access databases (which is all of them)."
  },
  "targeted-takedowns-minimizing-collateral-damage-using-passive-dns": {
    "author": "paul-vixie",
    "description": "When civil investigators and law enforcement officers aggressively pursue and takedown cyber criminal enterprises, that undertaking should be subject to an important limitation: their online operations must be narrowly and precisely targeted so as to avoid harming innocent third parties.For example, when evaluating an abused domain name for seizure, investigators need to ensure that innocent third parties are not also using that domain.In his presentation, I will provide an overview of Passive DNS and how it can help investigators to reduce or eliminate collateral damage during takedowns, thereby avoiding negative publicity and potentially costly settlements.",
    "plaintextTitle": "Targeted Takedowns:  Minimizing Collateral Damage Using Passive DNS",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Vixie-Targeted-Takedowns-Minimizing-Collateral-Damage-Using-Passive-DNS.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=yLeS2br3zY8"
      }
    ],
    "youtubeDescription": "by Paul Vixie\n\nWhen civil investigators and law enforcement officers aggressively pursue and takedown cyber criminal enterprises, that undertaking should be subject to an important limitation: their online operations must be narrowly and precisely targeted so as to avoid harming innocent third parties.\n\nFor example, when evaluating an abused domain name for seizure, investigators need to ensure that innocent third parties are not also using that domain.\n\nIn his presentation, I will provide an overview of Passive DNS and how it can help investigators to reduce or eliminate collateral damage during takedowns, thereby avoiding negative publicity and potentially costly settlements."
  },
  "taxonomic-modeling-of-security-threats-in-software-defined-networking": {
    "author": "jennia-hizver",
    "description": "Recent advances in software defined networking (SDN) provide an opportunity to create flexible and secure next-generation networks. Many companies have expressed the interest in SDN utilization. Much has been said about the ability of SDN to solve persistent network security problems. By contrast, our current knowledge on SDN vulnerabilities, threats, and attacks is very limited.This study seeks to fill the knowledge gap through development of a novel taxonomic model of SDN threats. To better characterize the SDN threats, I classify them using the following three dimensions: the source triggering a vulnerability, the SDN component where the vulnerability arises, and the threat event by which a SDN attack is carried out. The model accounts for many-to-many relationships between the threat sources and threat events as well as threat events and vulnerability sources. From these relationships, various paths attackers could pursue to exploit SDN networks may be derived. Some of the paths are merely conceptual and are unlikely to materialize into actual attacks whereas some paths may represent real-life attack scenarios posing realistic dangers. I demonstrate the applications of the abstract taxonomic model by constructing concrete SDN attack examples to achieve unauthorized access, unauthorized disclosure of information, unauthorized modification, misuse, and disruption of service.By exposing potential attack paths on SDN, the proposed taxonomic model will help companies to better understand SDN threat scenarios and to narrow down a set of threats most relevant for their environments. Based on the analysis of the attacks, I also provide a set of security recommendations to help security practitioners to choose the appropriate controls and countermeasures to combat the attacks.",
    "plaintextTitle": "Taxonomic Modeling of Security Threats in Software Defined Networking",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Hizver-Taxonomic-Modeling-Of-Security-Threats-In-Software-Defined-Networking.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Hizver-Taxonomic-Modeling-Of-Security-Threats-In-Software-Defined-Networking-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=gkupAFLMBz4"
      }
    ],
    "youtubeDescription": "by Jennia Hizver\n\nRecent advances in software defined networking (SDN) provide an opportunity to create flexible and secure next-generation networks. Many companies have expressed the interest in SDN utilization. Much has been said about the ability of SDN to solve persistent network security problems. By contrast, our current knowledge on SDN vulnerabilities, threats, and attacks is very limited.\n\nThis study seeks to fill the knowledge gap through development of a novel taxonomic model of SDN threats. To better characterize the SDN threats, I classify them using the following three dimensions: the source triggering a vulnerability, the SDN component where the vulnerability arises, and the threat event by which a SDN attack is carried out. The model accounts for many-to-many relationships between the threat sources and threat events as well as threat events and vulnerability sources. From these relationships, various paths attackers could pursue to exploit SDN networks may be derived. Some of the paths are merely conceptual and are unlikely to materialize into actual attacks whereas some paths may represent real-life attack scenarios posing realistic dangers. I demonstrate the applications of the abstract taxonomic model by constructing concrete SDN attack examples to achieve unauthorized access, unauthorized disclosure of information, unauthorized modification, misuse, and disruption of service.\n\nBy exposing potential attack paths on SDN, the proposed taxonomic model will help companies to better understand SDN threat scenarios and to narrow down a set of threats most relevant for their environments. Based on the analysis of the attacks, I also provide a set of security recommendations to help security practitioners to choose the appropriate controls and countermeasures to combat the attacks."
  },
  "the-applications-of-deep-learning-on-traffic-identification": {
    "author": "zhanyi-wang",
    "description": "Generally speaking, most systems of network traffic identification are based on features. The features may be port numbers, static signatures, statistic characteristics, and so on. The difficulty of the traffic identification is to find the features in the flow data. The process is very time-consuming. Also, these approaches are invalid to unknown protocol. To solve these problems, we propose a method that is based on neural network and deep learning a hotspot of research in machine learning. The results show that our approach works very well on the applications of feature learning, protocol identification, and anomalous protocol detection.",
    "plaintextTitle": "The Applications of Deep Learning on Traffic Identification",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Wang-The-Applications-Of-Deep-Learning-On-Traffic-Identification.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Wang-The-Applications-Of-Deep-Learning-On-Traffic-Identification-wp.pdf",
        "type": "White Paper"
      }
    ]
  },
  "the-battle-for-free-speech-on-the-internet": {
    "author": "matthew-prince",
    "description": "Google, Facebook, and Twitter all started out with admirable, lofty goals about preserving freedom of speech online saying that they wouldn't arbitrarily remove \"distasteful\" content. Yet one-by-one they all changed their position. Now countries, like Turkey are holding YouTube for ransom and bullying them to remove anything that they consider offensive or even inconvenient.By protecting lawful content, no matter the source or how distasteful, you're protecting freedom of speech. So what does this mean for these companies on the front-line of the Internet? Matthew Prince, co-founder and CEO of CloudFlare, will explain what the cost of mob rule trumping the rule of law will be in the fight to keep the Internet free and open. He will share the real world impact that censorship has had on the Internet and the hidden cost born by the enterprises ultimately forced to censor themselves.Protecting a free Internet can be a difficult and lonely road with pitfalls and traps that, once triggered, leads to a dead end of total censorship. Matthew will conclude with strategies for managing high-risk content, and suggested strategies for the future. We, as an industry, can work together to ensure that illegal content is effectively targeted and lawful content is protected.",
    "plaintextTitle": "The Battle for Free Speech on the Internet",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=SWFX-zEYwN0"
      }
    ],
    "youtubeDescription": "by Matthew Prince\n\nGoogle, Facebook, and Twitter all started out with admirable, lofty goals about preserving freedom of speech online saying that they wouldn't arbitrarily remove \"distasteful\" content. Yet one-by-one they all changed their position. Now countries, like Turkey are holding YouTube for ransom and bullying them to remove anything that they consider offensive or even inconvenient.\n\nBy protecting lawful content, no matter the source or how distasteful, you're protecting freedom of speech. So what does this mean for these companies on the front-line of the Internet? Matthew Prince, co-founder and CEO of CloudFlare, will explain what the cost of mob rule trumping the rule of law will be in the fight to keep the Internet free and open. He will share the real world impact that censorship has had on the Internet and the hidden cost born by the enterprises ultimately forced to censor themselves.\n\nProtecting a free Internet can be a difficult and lonely road with pitfalls and traps that, once triggered, leads to a dead end of total censorship. Matthew will conclude with strategies for managing high-risk content, and suggested strategies for the future. We, as an industry, can work together to ensure that illegal content is effectively targeted and lawful content is protected."
  },
  "the-kali-linux-dojo-workshop-#1-rolling-your-own-generating-custom-kali-linux-20-isos": {
    "author": "mati-aharoni",
    "description": "Pre-Registration Required:  This workshop is completely full.  There are no more seats available.",
    "plaintextTitle": "The Kali Linux Dojo Workshop #1: Rolling Your Own - Generating Custom Kali Linux 20 ISOs",
    "material": []
  },
  "the-kali-linux-dojo-workshop-#2-kali-usb-setups-with-persistent-stores-and-luks-nuke-support": {
    "author": "",
    "description": "Pre-Registration Required:  This workshop is completely full.  There are no more seats available.",
    "plaintextTitle": "The Kali Linux Dojo Workshop #2: Kali USB Setups with Persistent Stores and LUKS Nuke Support",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=0KU_JlZEH0Q"
      }
    ],
    "youtubeDescription": "by Mati Aharoni"
  },
  "the-little-pump-gauge-that-could-attacks-against-gas-pump-monitoring-systems": {
    "author": "kyle-wilhoit",
    "description": "Over a period of months, several Guardian AST gas pump monitoring systems were attacked. These attacks occurred on real pump monitoring systems, but also on systems that we controlled, created, and deployed. We watched these attackers, what they did, and performed intelligence gathering on the nefarious actors.Details and intelligence on whom the attackers were, possible motivations behind the attacks, and detailed indicators of compromise will be shared in this. At the end of the talk, a script- named Gaspot will be released, allowing for anyone to deploy these virtual monitoring systems themselves.",
    "plaintextTitle": "The Little Pump Gauge that Could: Attacks Against Gas Pump Monitoring Systems",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Wilhoit-The-Little-Pump-Gauge-That-Could-Attacks-Against-Gas-Pump-Monitoring-Systems.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Wilhoit-The-Little-Pump-Gauge-That-Could-Attacks-Against-Gas-Pump-Monitoring-Systems-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=gorNee0MaoU"
      }
    ],
    "youtubeDescription": "by Kyle Wilhoit  &  Stephen Hilt\n\nOver a period of months, several Guardian AST gas pump monitoring systems were attacked. These attacks occurred on real pump monitoring systems, but also on systems that we controlled, created, and deployed. We watched these attackers, what they did, and performed intelligence gathering on the nefarious actors.\n\nDetails and intelligence on whom the attackers were, possible motivations behind the attacks, and detailed indicators of compromise will be shared in this. At the end of the talk, a script- named Gaspot will be released, allowing for anyone to deploy these virtual monitoring systems themselves."
  },
  "the-memory-sinkhole-unleashing-an-x86-design-flaw-allowing-universal-privilege-escalation": {
    "author": "christopher-domas",
    "description": "In x86, beyond ring 0 lie the more privileged realms of execution, where our code is invisible to AV, we have unfettered access to hardware, and can trivially preempt and modify the OS. The architecture has heaped layers upon layers of protections on these negative rings, but 40 years of x86 evolution have left a labyrinth of forgotten backdoors into the ultra-privileged modes. Lost in this byzantine maze of decades-old architecture improvements and patches, there lies a design flaw that's gone unnoticed for 20 years. In one of the most bizarre and complex vulnerabilities we've ever seen, we'll release proof-of-concept code exploiting the vast, unexplored wasteland of forgotten x86 features, to demonstrate how to jump malicious code from the paltry ring 0 into the deepest, darkest realms of the processor. Best of all, we'll do it with an architectural 0-day built into the silicon itself, directed against a uniquely vulnerable string of code running on every single system.",
    "plaintextTitle": "The Memory Sinkhole - Unleashing an x86 Design Flaw Allowing Universal Privilege Escalation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Domas-The-Memory-Sinkhole-Unleashing-An-x86-Design-Flaw-Allowing-Universal-Privilege-Escalation.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Domas-The-Memory-Sinkhole-Unleashing-An-x86-Design-Flaw-Allowing-Universal-Privilege-Escalation-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=lR0nh-TdpVg"
      }
    ],
    "youtubeDescription": "by Christopher Domas\n\nIn x86, beyond ring 0 lie the more privileged realms of execution, where our code is invisible to AV, we have unfettered access to hardware, and can trivially preempt and modify the OS. The architecture has heaped layers upon layers of protections on these negative rings, but 40 years of x86 evolution have left a labyrinth of forgotten backdoors into the ultra-privileged modes. Lost in this byzantine maze of decades-old architecture improvements and patches, there lies a design flaw that's gone unnoticed for 20 years. In one of the most bizarre and complex vulnerabilities we've ever seen, we'll release proof-of-concept code exploiting the vast, unexplored wasteland of forgotten x86 features, to demonstrate how to jump malicious code from the paltry ring 0 into the deepest, darkest realms of the processor. Best of all, we'll do it with an architectural 0-day built into the silicon itself, directed against a uniquely vulnerable string of code running on every single system."
  },
  "the-nodejs-highway-attacks-are-at-full-throttle": {
    "author": "maty-siman",
    "description": "The popularity of the Node.js coding language is soaring. Just five years after its debut, the language's framework now boasts more 2 million downloads a month. It's easy to understand why. This event-driven language kept the simplicity of existing Web concepts and trashed the complexities; applications built on Node.js do not require a dedicated Web server to run; and Google is even pushing the language with its enhanced V8 engine for the Google Chrome Web browser. In fact, just consider Node.js as the drive-and-go language.But before accelerating too quickly, it is important to understand the power and corresponding mishaps of this language. This talk is not intended to put the brakes on Node.js. On the contrary, this talk aims to raise awareness to its security issues during application development.As such, our talk ends with effective security measures that enterprises can adopt in order to drive their business forward and securely.",
    "plaintextTitle": "The Nodejs Highway: Attacks are at Full Throttle",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Siman-The-Node-Js-Highway-Attacks-Are-At-Full-Throttle.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=DsJm404Nrvg"
      }
    ],
    "youtubeDescription": "From AppSecEU 2015 in Amsterdam \nhttps://2015.appsec.eu/\n\nMaty Siman \nThe Node.js Highway:  Attacks Are At Full Throttle \n\nYou can download all Videos at\nhttps://www.its.fh-muenster.de/owasp-appseceu/2015/ ⇩\n\n-\n\nManaged by the official OWASP Media Project https://www.owasp.org/index.php/OWASP_Media_Project"
  },
  "the-nsa-playset-a-year-of-toys-and-tools": {
    "author": "michael-ossmann",
    "description": "Inspired by the contents of the leaked NSA ANT catalog, the NSA Playset project has produced an array of gadgets with capabilities similar to those employed by the spooks. I will review the entire collection since the start of the project. This includes new tools for USB, PCI Express, I2C, GSM, Bluetooth, and a family of RF retroreflectors for eavesdropping on a wide variety of electronic devices. Now you can play along with the NSA!",
    "plaintextTitle": "The NSA Playset: A Year of Toys and Tools",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Ossmann-The-NSA-Playset-A-Year-Of-Toys-And-Tools.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=AdeMX6l9qNc"
      }
    ],
    "youtubeDescription": "by Michael Ossmann\n\nInspired by the contents of the leaked NSA ANT catalog, the NSA Playset project has produced an array of gadgets with capabilities similar to those employed by the spooks. I will review the entire collection since the start of the project. This includes new tools for USB, PCI Express, I2C, GSM, Bluetooth, and a family of RF retroreflectors for eavesdropping on a wide variety of electronic devices. Now you can play along with the NSA!"
  },
  "the-tactical-application-security-program-getting-stuff-done": {
    "author": "cory-scott",
    "description": "How many times have we heard the following pieces of wisdom from CISOs or other security talking heads? Be strategic, not tactical. Build security in - forget about break-fix.\n\nLike a siren song, these words have caused a great many professionals to crash upon the rocks, and the strategy-first camp is simply doing a disservice to your users. Maybe that is why the average CISO only lasts a couple of years.\n\nIn our talk, we're going to tackle this conventional wisdom in the name of Getting Shit Done and propose a new path: The Tactical Security Program. We've established a lightweight, heavy hitting team thats performed over 400 assessments, handled over 900 bugs, and established a private bug bounty program all in one year, and we'd like to share some of our practices. If you are managing a program, you will come out of our talk with some actionable advice. If you are a worker bee, we will teach you how to subvert the system from within.\n\nAnd while we're at it, we will tell you why following some of the newer trends of security wisdom, including embracing public bug bounty programs, is also a bad idea. Yeah, we said it.",
    "plaintextTitle": "The Tactical Application Security Program: Getting Stuff Done",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Scott-Tactical-Application-Security-Program-Getting-Stuff-Done.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=4S0mT9QFWeo"
      }
    ],
    "youtubeDescription": "by Cory Scott & David Cintz\n\nHow many times have we heard the following pieces of wisdom from CISOs or other security talking heads? Be strategic, not tactical. Build security in - forget about break-fix.\n\nLike a siren song, these words have caused a great many professionals to crash upon the rocks, and the strategy-first camp is simply doing a disservice to your users. Maybe that is why the average CISO only lasts a couple of years.\n\nIn our talk, we're going to tackle this conventional wisdom in the name of Getting Shit Done and propose a new path: The Tactical Security Program. We've established a lightweight, heavy hitting team thats performed over 400 assessments, handled over 900 bugs, and established a private bug bounty program all in one year, and we'd like to share some of our practices. If you are managing a program, you will come out of our talk with some actionable advice. If you are a worker bee, we will teach you how to subvert the system from within.\n\nAnd while we're at it, we will tell you why following some of the newer trends of security wisdom, including embracing public bug bounty programs, is also a bad idea. Yeah, we said it."
  },
  "these-are-not-your-grand-daddys-cpu-performance-counters-cpu-hardware-performance-counters-for-security": {
    "author": "nishad-herath",
    "description": "CPU hardware performance counters allow us to do low latency performance measuring, without special runtime or compile time software instrumentation. It is said \"advanced users often rely on those counters to conduct low-level performance analysis or tuning\" according to Wikipedia. But is this all we can do? Maybe it is all that they were meant for, faster debugging and profiling. But these days, the performance counters you find in your CPUs are not exactly your grand daddy's CPU performance counters! They can do bigger and better things - even defending against RowHammer! Yes, they can be used to to make platforms more secure!Okay, so on Intel x86/x64 compatible CPUs, the MSR_DEBUGCTLA MSR (Model Specific Register) can be used for LBR (Last Branch Recording). BTF CPU flag can facilitate \"single stepping\" on branching rather than just single stepping on every instruction. Clearly many uses. Some of it security related, like the potential for ROP mitigation. These are reasonably well explored. Perhaps not widely discussed though.Anyway, in this talk, we will be talking about very interesting features that we find today on Intel x86/x64 compatible CPUs that can be leveraged to achieve platform security relevant outcomes that were simply impractical using software only means, or your grandaddy's CPU performance counters. Some of the use cases might surprise you! We will be demonstrating these techniques against real world exploit code, with performance impact numbers to boot!We might even share our code with those who ask us nicely.",
    "plaintextTitle": "These are Not Your Grand Daddys CPU Performance Counters - CPU Hardware Performance Counters for Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Herath-These-Are-Not-Your-Grand-Daddys-CPU-Performance-Counters-CPU-Hardware-Performance-Counters-For-Security.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=dfIoKgw65I0"
      }
    ],
    "youtubeDescription": "These Are Not Your Grand Daddy's CPU Performance Counters - CPU Hardware Performance Counters For Security\n\nby Nishad Herath  &  Anders Fogh\n\nCPU hardware performance counters allow us to do low latency performance measuring, without special runtime or compile time software instrumentation. It is said \"advanced users often rely on those counters to conduct low-level performance analysis or tuning\" according to Wikipedia. But is this all we can do? Maybe it is all that they were meant for, faster debugging and profiling. But these days, the performance counters you find in your CPUs are not exactly your grand daddy's CPU performance counters! They can do bigger and better things - even defending against RowHammer! Yes, they can be used to to make platforms more secure!\n\nOkay, so on Intel x86/x64 compatible CPUs, the MSR_DEBUGCTLA MSR (Model Specific Register) can be used for LBR (Last Branch Recording). BTF CPU flag can facilitate \"single stepping\" on branching rather than just single stepping on every instruction. Clearly many uses. Some of it security related, like the potential for ROP mitigation. These are reasonably well explored. Perhaps not widely discussed though.\n\nAnyway, in this talk, we will be talking about very interesting features that we find today on Intel x86/x64 compatible CPUs that can be leveraged to achieve platform security relevant outcomes that were simply impractical using software only means, or your grandaddy's CPU performance counters. Some of the use cases might surprise you! We will be demonstrating these techniques against real world exploit code, with performance impact numbers to boot!\n\nWe might even share our code with those who ask us nicely."
  },
  "this-is-deeperent-tracking-app-behaviors-with-nothing-changed-phone-for-evasive-android-malware": {
    "author": "yeongung-park",
    "description": "Malwares on Android platform are increasing every year by explosive growth over the years and it is a serious threat on Android platform. Many tools have been released in order to quickly analyze these malicious code. Depending on the appearance of analysis tools, Android Malwares have been applied to the anti-analysis techniques, such as packing, environment detection, cryptography, and anti-debugging. These technique can hide the malicious behaviors, as well as prevent the analysis. Various obfuscation techniques is also applied to Android applications and malwares. For this reason, we take a long time to analyze the app. In addition, it makes difficult to find a vulnerability and to carck through analysis of the app in attacker's perspective.To analyze the Android application and evasive malware, we need to overcome following challenges:  Fast code analysis (It's always challenge)  Environment detection (Emulator detection, Device detection and Rooting detection)  Obfuscation  Dynamic code loading(in file/on memory)  Anti-analysis techniques (anti-ptrace, anti-disassembly, self-modification check, etc)  Behaviors in native level In this talk, we will introduce new powerful tool tracking method to monitor behaviors of evasive Android malware without OS modification. We used a different concept to analyze the Android application fast and deeply. The tools can track all methods you want to monitor, such as User-defined classes/methods, 3rd-Party libraries, and Java/Android APIs. Furthermore, the tool can monitor functions in native level like JNI(Java Natvie Interface), Functions in libc and Binder on nothing-changed phone. We are going to present base techniques for implementation and demonstrate on how to analyze very complicated evasive and advanced Android malware.",
    "plaintextTitle": "THIS IS DeepERENT: Tracking App Behaviors with (Nothing Changed) Phone for Evasive Android Malware",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Park-This-Is-DeepERENT-Tracking-App-Behaviors-With-Nothing-Changed-Phone-For-EvasiveAAndroid-Malware.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=QqBjE4BCxAI"
      }
    ],
    "youtubeDescription": "THIS IS DeepERENT: Tracking App Behaviors With (Nothing Changed) Phone For Evasive Android Malware\n\nby Yeongung Park  &  Jun Young Choi\n\nMalwares on Android platform are increasing every year by explosive growth over the years and it is a serious threat on Android platform. Many tools have been released in order to quickly analyze these malicious code. Depending on the appearance of analysis tools, Android Malwares have been applied to the anti-analysis techniques, such as packing, environment detection, cryptography, and anti-debugging. These technique can hide the malicious behaviors, as well as prevent the analysis. Various obfuscation techniques is also applied to Android applications and malwares. For this reason, we take a long time to analyze the app. In addition, it makes difficult to find a vulnerability and to carck through analysis of the app in attacker's perspective.\n\nTo analyze the Android application and evasive malware, we need to overcome following challenges:\n\n    Fast code analysis (It's always challenge)\n    Environment detection (Emulator detection, Device detection and Rooting detection)\n    Obfuscation\n    Dynamic code loading(in file/on memory)\n    Anti-analysis techniques (anti-ptrace, anti-disassembly, self-modification check, etc)\n    Behaviors in native level\n\nIn this talk, we will introduce new powerful tool tracking method to monitor behaviors of evasive Android malware without OS modification. We used a different concept to analyze the Android application fast and deeply. The tools can track all methods you want to monitor, such as User-defined classes/methods, 3rd-Party libraries, and Java/Android APIs. Furthermore, the tool can monitor functions in native level like JNI(Java Natvie Interface), Functions in libc and Binder on nothing-changed phone. We are going to present base techniques for implementation and demonstrate on how to analyze very complicated evasive and advanced Android malware."
  },
  "thunderstrike-2-sith-strike": {
    "author": "trammell-hudson",
    "description": "The number of vulnerabilities in firmware disclosed as affecting Wintel PC vendors has been rising over the past few years. Although several attacks have been presented against Mac firmware, unlike their PC counterparts, all of them required physical presence to perform. Interestingly, when contacted with the details of previously disclosed PC firmware attacks, Apple systematically declared themselves not vulnerable.This talk will provide conclusive evidence that Mac's are in fact vulnerable to many of the software only firmware attacks that also affect PC systems. In addition, to emphasize the consequences of successful exploitation of these attack vectors, we will demonstrate the power of the dark side by showing what Mac firmware malware is capable of.",
    "plaintextTitle": "ThunderStrike 2: Sith Strike",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Hudson-Thunderstrike-2-Sith-Strike.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=CtEdfMP6rJo"
      }
    ],
    "youtubeDescription": "by Trammell Hudson  &  Xeno Kovah  &  Corey Kallenberg\n\nThe number of vulnerabilities in firmware disclosed as affecting Wintel PC vendors has been rising over the past few years. Although several attacks have been presented against Mac firmware, unlike their PC counterparts, all of them required physical presence to perform. Interestingly, when contacted with the details of previously disclosed PC firmware attacks, Apple systematically declared themselves not vulnerable.\n\nThis talk will provide conclusive evidence that Mac's are in fact vulnerable to many of the software only firmware attacks that also affect PC systems. In addition, to emphasize the consequences of successful exploitation of these attack vectors, we will demonstrate the power of the dark side by showing what Mac firmware malware is capable of."
  },
  "trustkit-code-injection-on-ios-8-for-the-greater-good": {
    "author": "alban-diquet",
    "description": "With the release of iOS 8, Apple has relaxed the rules regarding how code can be packaged within an iOS App when submitting to the App Store. While in the pre-iOS 8 world, all code had to be statically linked into the Apps binary, Apple is now allowing third-party frameworks and libraries to be embedded in an Apps package and be dynamically loaded at runtime, as needed by the App.We will describe what has changed exactly and why, and the new opportunities it provides to mobile and security engineers. While doing so, we will also provide a quick overview of the library loading mechanism on iOS as well as how to perform function hooking in a non-jailbroken environment, and how developers can take advantage of this functionality.We will then present a new open-source library for iOS that leverages these mechanisms: TrustKit.TrustKit provides universal SSL public key pinning (NSURLSession, NSURLConnection, UIWebView, Cordova, etc.) and can be deployed within an App in a matter of minutes, without having to modify the Apps source code. This work is a collaboration between Data Theorem and Yahoo's mobile engineers, and offers a novel and easy-to-use implementation; we call it drag & drop SSL pinning.Throughout the presentation, attendees will have the opportunity to understand how the rules regarding dynamic linking have changed in iOS 8 and how this change can be leveraged to solve security issues in a novel way. Additionally, as TrustKit will be released as an open-source library, attendees will also be able to discover and deploy this library in their own iOS Apps.",
    "plaintextTitle": "TrustKit: Code Injection on iOS 8 for the Greater Good",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Diquet-TrustKit-Code-Injection-On-iOS-8-For-The-Greater-Good.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=jc81KrICVC4"
      }
    ],
    "youtubeDescription": "by Alban Diquet, Eric Castro, Angela On-kit Chow\n\nWith the release of iOS 8, Apple has relaxed the rules regarding how code can be packaged within an iOS App when submitting to the App Store. While in the pre-iOS 8 world, all code had to be statically linked into the Apps binary, Apple is now allowing third-party frameworks and libraries to be embedded in an Apps package and be dynamically loaded at runtime, as needed by the App.\n\nWe will describe what has changed exactly and why, and the new opportunities it provides to mobile and security engineers. While doing so, we will also provide a quick overview of the library loading mechanism on iOS as well as how to perform function hooking in a non-jailbroken environment, and how developers can take advantage of this functionality.\n\nWe will then present a new open-source library for iOS that leverages these mechanisms: TrustKit.\n\nTrustKit provides universal SSL public key pinning (NSURLSession, NSURLConnection, UIWebView, Cordova, etc.) and can be deployed within an App in a matter of minutes, without having to modify the Apps source code. This work is a collaboration between Data Theorem and Yahoo's mobile engineers, and offers a novel and easy-to-use implementation; we call it drag & drop SSL pinning.\n\nThroughout the presentation, attendees will have the opportunity to understand how the rules regarding dynamic linking have changed in iOS 8 and how this change can be leveraged to solve security issues in a novel way. Additionally, as TrustKit will be released as an open-source library, attendees will also be able to discover and deploy this library in their own iOS Apps."
  },
  "understanding-and-managing-entropy-usage": {
    "author": "bruce-potter",
    "description": "As security and privacy concerns become an above the fold concern for the public at large and enterprises continue to grapple with targeted intrusions, cryptography is becoming a ubiquitous and necessary characteristic of modern IT systems. While the primitives and core algorithms are well understood, there are still numerous concerns regarding properly encrypting data that transcend decisions such as public vs. private key or key length. Underlying nearly every modern cryptosystem is the need to have cryptographically strong random numbers. Key generation and inclusion of nonces to prevent replay are two areas where lack of quality random numbers can completely destroy the security provided by the underlying cryptosystem.For decades, we have used Pseudo Random Number Generators (PRNGs) as a surrogate for truly random numbers. While these PRNGs have been generally sufficient for historic cryptographic usage, they are only as good as their underlying entropy source. With advances, such as Perfect Forward Secrecy in TLS (and its wide scale deployment), entropy usage has skyrocketed. Unfortunately, enterprises dont have any understanding of their entropy requirements and entropy usage in the systems we use every day. How much entropy does an OpenSSL PFS transaction actually use? What are the sources of entropy used in your front line webservers? How does entropy creation vary in different versions of Linux? These are all important questions with no clear answer.This talk aims to shine light on the core concerns of entropy creation and entropy utilization. We have analyzed a wide variety of systems, including different versions of the Linux and FreeBSD kernel, OpenSSL, OpenSSH, OpenVPN, and other crypto systems and documented their requirements for random numbers and required amount of entropy to function correctly. The team will also present findings entropy consumption for a variety of TLS modes including the impact of PFS. We will also present analysis of the quality and quantity of entropy sources available on common desktop, laptop, server, and mobile hardware. Finally, the team will also release the first version of our open source software, libentropy, that provides a unified interface for OpenSSL to manage sources of entropy and report status of entropy creation and utilization.",
    "plaintextTitle": "Understanding and Managing Entropy Usage",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Potter-Understanding-And-Managing-Entropy-Usage.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Potter-Understanding-And-Managing-Entropy-Usage-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=rP1Igb6ZJ-w"
      }
    ],
    "youtubeDescription": "by Bruce Potter  &  Sasha Wood\n\nAs security and privacy concerns become an above the fold concern for the public at large and enterprises continue to grapple with targeted intrusions, cryptography is becoming a ubiquitous and necessary characteristic of modern IT systems. While the primitives and core algorithms are well understood, there are still numerous concerns regarding properly encrypting data that transcend decisions such as public vs. private key or key length. Underlying nearly every modern cryptosystem is the need to have cryptographically strong random numbers. Key generation and inclusion of nonces to prevent replay are two areas where lack of quality random numbers can completely destroy the security provided by the underlying cryptosystem.\n\nFor decades, we have used Pseudo Random Number Generators (PRNGs) as a surrogate for truly random numbers. While these PRNGs have been generally sufficient for historic cryptographic usage, they are only as good as their underlying entropy source. With advances, such as Perfect Forward Secrecy in TLS (and its wide scale deployment), entropy usage has skyrocketed. Unfortunately, enterprises dont have any understanding of their entropy requirements and entropy usage in the systems we use every day. How much entropy does an OpenSSL PFS transaction actually use? What are the sources of entropy used in your front line webservers? How does entropy creation vary in different versions of Linux? These are all important questions with no clear answer.\n\nThis talk aims to shine light on the core concerns of entropy creation and entropy utilization. We have analyzed a wide variety of systems, including different versions of the Linux and FreeBSD kernel, OpenSSL, OpenSSH, OpenVPN, and other crypto systems and documented their requirements for random numbers and required amount of entropy to function correctly. The team will also present findings entropy consumption for a variety of TLS modes including the impact of PFS. We will also present analysis of the quality and quantity of entropy sources available on common desktop, laptop, server, and mobile hardware. Finally, the team will also release the first version of our open source software, libentropy, that provides a unified interface for OpenSSL to manage sources of entropy and report status of entropy creation and utilization."
  },
  "understanding-the-attack-surface-and-attack-resilience-of-project-spartans-new-edgehtml-rendering-engine": {
    "author": "mark-vincent-yason",
    "description": "EdgeHTML is the new rendering engine that will power the next generation web browser (codenamed Spartan) to be introduced in Windows 10. Because EdgeHTML will be widely deployed - from Windows 10 mobile devices to PCs, it is important that we have understanding of its attack surface and its stance against exploitation.In this presentation, I'll discuss EdgeHTML's attack surface and the different methods for enumerating it. Then, I'll describe the process of comparing EdgeHTML and MSHTML to identify and understand what had changed from the forking process, and more importantly identify new features and added internal functionalities that can contribute to its attack surface. Finally, I'll discuss the exploit mitigations in place, how they help against certain classes of vulnerabilities, and discuss known bypass techniques that are still applicable.",
    "plaintextTitle": "Understanding the Attack Surface and Attack Resilience of Project Spartans New EdgeHTML Rendering Engine",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Yason-Understanding-The-Attack-Surface-And-Attack-Resilience-Of-Project-Spartans-New-EdgeHTML-Rendering-Engine.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Yason-Understanding-The-Attack-Surface-And-Attack-Resilience-Of-Project-Spartans-New-EdgeHTML-Rendering-Engine-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Ot9IdCx54Lw"
      }
    ],
    "youtubeDescription": "Understanding The Attack Surface And Attack Resilience Of Project Spartan's New EdgeHTML Rendering Engine\n\nby Mark Vincent Yason\n\nEdgeHTML is the new rendering engine that will power the next generation web browser (codenamed Spartan) to be introduced in Windows 10. Because EdgeHTML will be widely deployed - from Windows 10 mobile devices to PCs, it is important that we have understanding of its attack surface and its stance against exploitation.\n\nIn this presentation, I'll discuss EdgeHTML's attack surface and the different methods for enumerating it. Then, I'll describe the process of comparing EdgeHTML and MSHTML to identify and understand what had changed from the forking process, and more importantly identify new features and added internal functionalities that can contribute to its attack surface. Finally, I'll discuss the exploit mitigations in place, how they help against certain classes of vulnerabilities, and discuss known bypass techniques that are still applicable."
  },
  "unicorn-next-generation-cpu-emulator-framework": {
    "author": "nguyen-anh-quynh",
    "description": "CPU emulator is a program emulating the internal operation of a physical CPU in software. CPU emulator plays a vital role and has a lot of applications in computer security area, such as reversing obfuscated malware or verifying code semantics.Unfortunately, such a fundamental component does not get the attention it absolutely deserves. At the moment, all the existing CPU emulators suffer from some major issues:Do not get updated with latest hardware. Example: PyEmu for X86 was released in 2009, but no longer developed since then.Mostly available only for Python, but support for other programming languages is not existent.Often restricted to some environments, thus cannot be used to build independent tools. Example: IDA-x86emu is for IDA Pro only.No single tool supports Intel X86_64, which is the dominant architecture at the moment.Solely focus on X86, but support for other important architectures are horribly missing: Arm, Arm64, Mips, PPC, Sparc, etc.It is unbelievable that the lack of such a fundamental component as CPU emulator has happened forever without a proper fix. We decided to step up and took the problem in our own hands to solve it once and for all. As a result, Unicorn emulator was born and succesfully handles all the outstanding problems.Unicorn offers some unparalleled features, as highlighted below: Provide an independent framework to develop independent security tools on top of it. Building plugins for other environment, such as IDA is also well supported.Multi-architectures: Unicorn can emulate all the popular architectures, such as X86 (including X86_64), ARM, ARMv8, M68K, Mips, PowerPC, and Sparc, etc.Multi-platforms: Natively available for Windows, Mac OSX, Linux & *BSD.Implemented in pure C, with bindings for Python available. Support for other languages are also in pipeline.Clean/simple/lightweight/intuitive architecture-neutral API.Thread-safe by design.Open source. This talk introduces some existing emulators, then goes into details of their design/implementation and explains their current issues. Next, we will present the architecture of Unicorn and the challenges of designing and implementing it. The audience will understand the advantages of our framework and see why the future is assured, so that Unicorn will keep getting better, stronger and become the emulator engine of choice for the security community.Unicorn aims to lay the ground for innovative works. To conclude the talk, some new advanced tools built on top of Unicorn will be introduced to demonstrate its power, so the audience can see how our framework can open up many opportunities for future of security research & development.",
    "plaintextTitle": "Unicorn: Next Generation CPU Emulator Framework",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Nguyen-Unicorn-Next-Generation-CPU-Emulator-Framework.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=U8zIToF8wmE"
      }
    ],
    "youtubeDescription": "by Nguyen Anh Quynh  &  Hoang-Vu Dang\n\nCPU emulator is a program emulating the internal operation of a physical CPU in software. CPU emulator plays a vital role and has a lot of applications in computer security area, such as reversing obfuscated malware or verifying code semantics.\n\nUnfortunately, such a fundamental component does not get the attention it absolutely deserves. At the moment, all the existing CPU emulators suffer from some major issues:\n\n    Do not get updated with latest hardware. Example: PyEmu for X86 was released in 2009, but no longer developed since then.\n    Mostly available only for Python, but support for other programming languages is not existent.\n    Often restricted to some environments, thus cannot be used to build independent tools. Example: IDA-x86emu is for IDA Pro only.\n    No single tool supports Intel X86_64, which is the dominant architecture at the moment.\n    Solely focus on X86, but support for other important architectures are horribly missing: Arm, Arm64, Mips, PPC, Sparc, etc.\n\nIt is unbelievable that the lack of such a fundamental component as CPU emulator has happened forever without a proper fix. We decided to step up and took the problem in our own hands to solve it once and for all. As a result, Unicorn emulator was born and succesfully handles all the outstanding problems.\n\nUnicorn offers some unparalleled features, as highlighted below:\n\n    Provide an independent framework to develop independent security tools on top of it. Building plugins for other environment, such as IDA is also well supported.\n    Multi-architectures: Unicorn can emulate all the popular architectures, such as X86 (including X86_64), ARM, ARMv8, M68K, Mips, PowerPC, and Sparc, etc.\n    Multi-platforms: Natively available for Windows, Mac OSX, Linux & *BSD.\n    Implemented in pure C, with bindings for Python available. Support for other languages are also in pipeline.\n    Clean/simple/lightweight/intuitive architecture-neutral API.\n    Thread-safe by design.\n    Open source.\n\n\nThis talk introduces some existing emulators, then goes into details of their design/implementation and explains their current issues. Next, we will present the architecture of Unicorn and the challenges of designing and implementing it. The audience will understand the advantages of our framework and see why the future is assured, so that Unicorn will keep getting better, stronger and become the emulator engine of choice for the security community.\n\nUnicorn aims to lay the ground for innovative works. To conclude the talk, some new advanced tools built on top of Unicorn will be introduced to demonstrate its power, so the audience can see how our framework can open up many opportunities for future of security research & development."
  },
  "using-static-binary-analysis-to-find-vulnerabilities-and-backdoors-in-firmware": {
    "author": "christopher-kruegel",
    "description": "Over the last few years, as the world has moved closer to realizing the idea of the Internet of Things, an increasing amount of the things with which we interact every day have been replaced with embedded devices. These include previously non-electronic devices, such as locks, light switches, and utility meters (such as electric meters and water meters), as well as increasingly more complex and ubiquitous devices, such as network routers and printers. Other devices are becoming increasingly intelligent as well. Modern printers and cameras include complex social media functionality, smart televisions are increasingly including Internet-based entertainment options, and even previously-simple devices, such as watches and glasses are being augmented with complex embedded components.The increasingly-complex systems that drive these devices have one thing in common: they must all communicate to carry out their intended functionality. Smart TVs communicate with (and accept communication from) online media services, smart locks allow themselves to be unlocked by phones or keypads, digital cameras contact social media services, and smart meters communicate with the users utility company. Such communication, along with other functionalities of the device, is handled by software (termed firmware) embedded in the device. Because these devices often receive privacy-sensitive information from their sensors (such as what a user is watching, or how much electricity they are using), or carry out a safety-critical function (such as actuators that lock the front door), errors in the devices firmware, whether present due to an accidental mistake or purposeful malice, can have serious and varying implications in both the digital and physical world.Firmware, like any piece of software, is susceptible to a wide range of software errors. These include memory corruption flaws, command injection vulnerabilities and application logic flaws. Another common error seen in firmware is a logic flaw called an authentication bypass or less formally, a backdoor. An authentication bypass occurs when an error in the authentication routine of a device allows a user to perform actions for which they would otherwise need to know a set of credentials. In other cases, backdoors are deliberately inserted by the manufacturer to get access to deployed devices for maintenance and upgrade. Detecting vulnerabilities and backdoors in firmware is challenging for several reasons. To begin with, the devices in question are usually proprietary, and therefore the source code of the firmware is not available. While this is a problem common to analyzing binary software in general, firmware takes it one step further: firmware often takes the form of a single binary image that runs directly on the hardware of the device, without an underlying operating system. Because of this, OS and library abstractions do not exist in some cases, and are non-standard or undocumented in others, and it is frequently unknown how to properly initialize the runtime environment of the firmware sample (or even, at what offset to load the binary and at what address to begin execution). We term such firmware as binary blob firmware. These blobs can be very large, and therefore any analysis tool must be able to handle such complex firmware. Additionally, embedded devices frequently require their firmware to be cryptographically signed by the manufacturer, making modification of the firmware on the device for analysis purposes infeasible.In this presentation, we will talk about the challenges of performing automated vulnerability analysis and backdoor finding in firmware. Then, we report on a binary static analysis system, called Angr, that automates most of the process of searching firmware binaries for the presence of flaws. To the best of our knowledge, Angr is the first firmware analysis system working at the binary level, in a scalable manner, and with no requirement to instrument code on the original device. To this end, Angr utilizes advanced program analysis techniques to analyze binary code in complex firmware of diverse hardware platforms, and it automates much of the process of identifying occurrences of buffer overflow and authentication bypass vulnerabilities. The tool uses novel techniques to improve the scalability of the analysis, which we will explain during the presentation. This includes a combination of more traditional static program analysis, value set analysis (VSA), and symbolic execution. The presentation will conclude with a few examples of vulnerabilities that our tool has discovered in firmware samples. We also plan to run a live demo that highlights the capabilities of our system.",
    "plaintextTitle": "Using Static Binary Analysis to Find Vulnerabilities and Backdoors in Firmware",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Kruegel-Using-Static-Binary-Analysis-To-Find-Vulnerabilities-And-Backdoors-In-Firmware.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Fi_S2F7ud_g"
      }
    ],
    "youtubeDescription": "by Christopher Kruegel  &  Yan Shoshitaishvili\n\nOver the last few years, as the world has moved closer to realizing the idea of the Internet of Things, an increasing amount of the things with which we interact every day have been replaced with embedded devices. These include previously non-electronic devices, such as locks, light switches, and utility meters (such as electric meters and water meters), as well as increasingly more complex and ubiquitous devices, such as network routers and printers. Other devices are becoming increasingly intelligent as well. Modern printers and cameras include complex social media functionality, smart televisions are increasingly including Internet-based entertainment options, and even previously-simple devices, such as watches and glasses are being augmented with complex embedded components.\n\nThe increasingly-complex systems that drive these devices have one thing in common: they must all communicate to carry out their intended functionality. Smart TVs communicate with (and accept communication from) online media services, smart locks allow themselves to be unlocked by phones or keypads, digital cameras contact social media services, and smart meters communicate with the users utility company. Such communication, along with other functionalities of the device, is handled by software (termed firmware) embedded in the device. Because these devices often receive privacy-sensitive information from their sensors (such as what a user is watching, or how much electricity they are using), or carry out a safety-critical function (such as actuators that lock the front door), errors in the devices firmware, whether present due to an accidental mistake or purposeful malice, can have serious and varying implications in both the digital and physical world.\n\nFirmware, like any piece of software, is susceptible to a wide range of software errors. These include memory corruption flaws, command injection vulnerabilities and application logic flaws. Another common error seen in firmware is a logic flaw called an authentication bypass or less formally, a backdoor. An authentication bypass occurs when an error in the authentication routine of a device allows a user to perform actions for which they would otherwise need to know a set of credentials. In other cases, backdoors are deliberately inserted by the manufacturer to get access to deployed devices for maintenance and upgrade.\n\nDetecting vulnerabilities and backdoors in firmware is challenging for several reasons. To begin with, the devices in question are usually proprietary, and therefore the source code of the firmware is not available. While this is a problem common to analyzing binary software in general, firmware takes it one step further: firmware often takes the form of a single binary image that runs directly on the hardware of the device, without an underlying operating system. Because of this, OS and library abstractions do not exist in some cases, and are non-standard or undocumented in others, and it is frequently unknown how to properly initialize the runtime environment of the firmware sample (or even, at what offset to load the binary and at what address to begin execution). We term such firmware as binary blob firmware. These blobs can be very large, and therefore any analysis tool must be able to handle such complex firmware. Additionally, embedded devices frequently require their firmware to be cryptographically signed by the manufacturer, making modification of the firmware on the device for analysis purposes infeasible.\n\nIn this presentation, we will talk about the challenges of performing automated vulnerability analysis and backdoor finding in firmware. Then, we report on a binary static analysis system, called Angr, that automates most of the process of searching firmware binaries for the presence of flaws. To the best of our knowledge, Angr is the first firmware analysis system working at the binary level, in a scalable manner, and with no requirement to instrument code on the original device. To this end, Angr utilizes advanced program analysis techniques to analyze binary code in complex firmware of diverse hardware platforms, and it automates much of the process of identifying occurrences of buffer overflow and authentication bypass vulnerabilities. The tool uses novel techniques to improve the scalability of the analysis, which we will explain during the presentation. This includes a combination of more traditional static program analysis, value set analysis (VSA), and symbolic execution. The presentation will conclude with a few examples of vulnerabilities that our tool has discovered in firmware samples. We also plan to run a live demo that highlights the capabilities of our system."
  },
  "web-timing-attacks-made-practical": {
    "author": "timothy-morgan",
    "description": "Timing side-channel attacks are a well-known class of flaw in cryptographic systems and applications in general. While these issues have been researched for decades, the complexities involved in obtaining accurate timing measurements and performing accurate statistical analysis has prevented the average pentester from identifying and exploiting these issues on a day-to-day basis.In this paper, we build on past research to make remote timing attacks practical against modern web applications. We scrutinize both methods of data collection and statistical analysis used by previous researchers, significantly improving results in both areas. We implement an adaptive Kalman filter, which provides greater accuracy in classifying timing differences, making timing attacks more practical in congested networks and speeding up attacks in ideal conditions. As part of this research, a new open source timing attack tool suite is being released to the community.",
    "plaintextTitle": "Web Timing Attacks Made Practical",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Morgan-Web-Timing-Attacks-Made-Practical.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Morgan-Web-Timing-Attacks-Made-Practical-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KirTCSAvt9M"
      }
    ],
    "youtubeDescription": "by Timothy Morgan  &  Jason Morgan\n\nTiming side-channel attacks are a well-known class of flaw in cryptographic systems and applications in general. While these issues have been researched for decades, the complexities involved in obtaining accurate timing measurements and performing accurate statistical analysis has prevented the average pentester from identifying and exploiting these issues on a day-to-day basis.\n\nIn this paper, we build on past research to make remote timing attacks practical against modern web applications. We scrutinize both methods of data collection and statistical analysis used by previous researchers, significantly improving results in both areas. We implement an adaptive Kalman filter, which provides greater accuracy in classifying timing differences, making timing attacks more practical in congested networks and speeding up attacks in ideal conditions. As part of this research, a new open source timing attack tool suite is being released to the community."
  },
  "when-iot-attacks-hacking-a-linux-powered-rifle": {
    "author": "runa-a-sandvik",
    "description": "TrackingPoint is an Austin startup known for making precision-guided firearms. These firearms ship with a tightly integrated system coupling a rifle, an ARM-powered scope running a modified version of Linux, and a linked trigger mechanism. The scope can follow targets, calculate ballistics and drastically increase its user's first shot accuracy. The scope can also record video and audio, as well as stream video to other devices using its own wireless network and mobile applications.In this talk, we will demonstrate how the TrackingPoint long range tactical rifle works. We will discuss how we reverse engineered the scope, the firmware, and three of TrackingPoint's mobile applications. We will discuss different use cases and attack surfaces. We will also discuss the security and privacy implications of network-connected firearms.",
    "plaintextTitle": "When IoT Attacks: Hacking a Linux-Powered Rifle",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Sandvik-When-IoT-Attacks-Hacking-A-Linux-Powered-Rifle.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ZcukSF7ruZY"
      }
    ],
    "youtubeDescription": "by Runa A. Sandvik  &  Michael Auger\n\nTrackingPoint is an Austin startup known for making precision-guided firearms. These firearms ship with a tightly integrated system coupling a rifle, an ARM-powered scope running a modified version of Linux, and a linked trigger mechanism. The scope can follow targets, calculate ballistics and drastically increase its user's first shot accuracy. The scope can also record video and audio, as well as stream video to other devices using its own wireless network and mobile applications.\n\nIn this talk, we will demonstrate how the TrackingPoint long range tactical rifle works. We will discuss how we reverse engineered the scope, the firmware, and three of TrackingPoint's mobile applications. We will discuss different use cases and attack surfaces. We will also discuss the security and privacy implications of network-connected firearms."
  },
  "why-security-data-science-matters-and-how-its-different-pitfalls-and-promises-of-data-science-based-breach-detection-and-threat-intelligence": {
    "author": "joshua-saxe",
    "description": "As our networks generate an ever-larger deluge of security-relevant data, data science (machine learning, data visualization, and scalable storage technologies) has become necessary if we are to succeed in both stopping advanced attackers and gaining intelligence about their tactics. Unfortunately, there is still a gap between the security and data science communities: security professionals often have limited knowledge of data science, and security data scientists often come from non-security backgrounds and may not understand why security data science is different than the solutions taught in traditional machine learning and visualization programs.In my talk, I will bridge this gap, speaking to both audiences, discussing the challenges and opportunities posed by applying data science to security, demonstrating exciting results achieved by my research group, and empowering attendees to apply security data science in new and powerful ways. The first part of the talk will provide a non-mathematical overview of security data science, introducing state of the art data visualization and the big three machine learning tasks (classification, clustering and regression). For each of the topics, I will give examples of how my colleagues and I have successfully applied the topic to problems like attack detection, threat intelligence, malware analysis and scalable malware analytics.The second part of the talk will cover both major security-specific data science challenges and solutions to these challenges. One challenge is that malicious activity exists as a needle in the haystack of terabytes of benign data, causing textbook data science methods, which are often not designed for such scenarios, to generate reams of false positives. Another challenge is the inevitable lack of access to 0-day attack data with which to train machine-learning approaches. I will go over multiple mitigations for both of these problems, including statistical methods designed to generalize to new attacks and minimize false positives, and will show how these methods have performed impressively in detecting 0-day malware in my groups work.The third part of my talk will address security data visualization, discussing my groups ongoing and past log visualization, malware analysis visualization, and threat intelligence visualization work [4][5]. In discussing this work I will describe how we use machine-learning approaches to address a challenge unique to security data visualization: the semantic gap between low-level security data and the high-level activity we actually care about. In summary, my talk will explore the emerging and exciting world of security data science, discussing opportunities, challenges and effective approaches. My goal is that attendees leave the talk excited about the possibilities of applying data science to their own security related work, newly aware of the pitfalls of this area, and more knowledgeable about solutions to these pitfalls.",
    "plaintextTitle": "Why Security Data Science Matters and How Its Different: Pitfalls and Promises of Data Science Based Breach Detection and Threat Intelligence",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Saxe-Why-Security-Data-Science-Matters-And-How-Its-Different.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=PQSuIfcu-So"
      }
    ],
    "youtubeDescription": "by Joshua Saxe\n\nAs our networks generate an ever-larger deluge of security-relevant data, data science (machine learning, data visualization, and scalable storage technologies) has become necessary if we are to succeed in both stopping advanced attackers and gaining intelligence about their tactics. Unfortunately, there is still a gap between the security and data science communities: security professionals often have limited knowledge of data science, and security data scientists often come from non-security backgrounds and may not understand why security data science is different than the solutions taught in traditional machine learning and visualization programs.\n\nIn my talk, I will bridge this gap, speaking to both audiences, discussing the challenges and opportunities posed by applying data science to security, demonstrating exciting results achieved by my research group, and empowering attendees to apply security data science in new and powerful ways. The first part of the talk will provide a non-mathematical overview of security data science, introducing state of the art data visualization and the big three machine learning tasks (classification, clustering and regression). For each of the topics, I will give examples of how my colleagues and I have successfully applied the topic to problems like attack detection, threat intelligence, malware analysis and scalable malware analytics.\n\nThe second part of the talk will cover both major security-specific data science challenges and solutions to these challenges. One challenge is that malicious activity exists as a needle in the haystack of terabytes of benign data, causing textbook data science methods, which are often not designed for such scenarios, to generate reams of false positives. Another challenge is the inevitable lack of access to 0-day attack data with which to train machine-learning approaches. I will go over multiple mitigations for both of these problems, including statistical methods designed to generalize to new attacks and minimize false positives, and will show how these methods have performed impressively in detecting 0-day malware in my groups work.\n\nThe third part of my talk will address security data visualization, discussing my groups ongoing and past log visualization, malware analysis visualization, and threat intelligence visualization work [4][5]. In discussing this work I will describe how we use machine-learning approaches to address a challenge unique to security data visualization: the semantic gap between low-level security data and the high-level activity we actually care about. In summary, my talk will explore the emerging and exciting world of security data science, discussing opportunities, challenges and effective approaches. My goal is that attendees leave the talk excited about the possibilities of applying data science to their own security related work, newly aware of the pitfalls of this area, and more knowledgeable about solutions to these pitfalls."
  },
  "winning-the-online-banking-war": {
    "author": "sean-park",
    "description": "Currently, most security products and financial institutions defending against banking malware rely on online banking page integrity check to detect the presence of financial malware. This technique works due to the inherent mechanics of financial malware injecting into the browser's DOM space. However, this purely web-based page integrity check can be subverted in many ways. This presentation will talk about evasion techniques such as replay attack, polymorphism, inject randomisation, and DOM stealth rootkit as well as countermeasures for those in clientless way.The presentation also includes a novel method derived from Zero Knowledge Protocol that prevents banking malware from reverse engineering secrets transmitted between an online banking client and its server by eaves dropping HTTPS traffic.",
    "plaintextTitle": "Winning the Online Banking War",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Park-Winning-The-Online-Banking-War.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Park-Winning-The-Online-Banking-War-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7y3K83sOnG8"
      }
    ],
    "youtubeDescription": "by Sean Park\n\nCurrently, most security products and financial institutions defending against banking malware rely on online banking page integrity check to detect the presence of financial malware. This technique works due to the inherent mechanics of financial malware injecting into the browser's DOM space. However, this purely web-based page integrity check can be subverted in many ways. This presentation will talk about evasion techniques such as replay attack, polymorphism, inject randomisation, and DOM stealth rootkit as well as countermeasures for those in clientless way.\n\nThe presentation also includes a novel method derived from Zero Knowledge Protocol that prevents banking malware from reverse engineering secrets transmitted between an online banking client and its server by eaves dropping HTTPS traffic."
  },
  "writing-bad-at$$-malware-for-os-x": {
    "author": "patrick-wardle",
    "description": "In comparison to Windows malware, known OS X threats are really quite lame. As an Apple user that has drank the 'Apple Juice,' I didn't think that was fair!From novel persistence techniques, to native OS X components that can be abused to thwart analysis, this talk will detail exactly how to create elegant, bad@ss OS X malware. And since detection is often a death knell for malware, the talk will also show how OS X's native malware mitigations and 3rd-party security tools were bypassed. For example I'll detail how Gatekeeper was remotely bypassed to allow unsigned download code to be executed, how Apple's 'rootpipe' patch was side-stepped to gain root on a fully patched system, and how all popular 3rd-party AV and personal firewall products were generically bypassed by my simple proof-of-concept malware.However, don't throw out your Macs just yet! The talk will conclude by presenting several free security tools that can generically detect or even prevent advanced OS X threats. Armed with such tools, we'll ensure that our computers are better protected against both current and future OS X malware.So unless you work for Apple, come learn how to take your OS X malware skills to the next level and better secure your Mac at the same time!",
    "plaintextTitle": "Writing Bad @$$ Malware for OS X",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=fv4l9yAL2sU"
      }
    ],
    "youtubeDescription": "by Patrick Wardle\n\nIn comparison to Windows malware, known OS X threats are really quite lame. As an Apple user that has drank the 'Apple Juice,' I didn't think that was fair!\n\nFrom novel persistence techniques, to native OS X components that can be abused to thwart analysis, this talk will detail exactly how to create elegant, bad@ss OS X malware. And since detection is often a death knell for malware, the talk will also show how OS X's native malware mitigations and 3rd-party security tools were bypassed. For example I'll detail how Gatekeeper was remotely bypassed to allow unsigned download code to be executed, how Apple's 'rootpipe' patch was side-stepped to gain root on a fully patched system, and how all popular 3rd-party AV and personal firewall products were generically bypassed by my simple proof-of-concept malware.\n\nHowever, don't throw out your Macs just yet! The talk will conclude by presenting several free security tools that can generically detect or even prevent advanced OS X threats. Armed with such tools, we'll ensure that our computers are better protected against both current and future OS X malware.\n\nSo unless you work for Apple, come learn how to take your OS X malware skills to the next level and better secure your Mac at the same time!"
  },
  "wsuspect-compromising-the-windows-enterprise-via-windows-update": {
    "author": "paul-stone",
    "description": "Ever wondered what really happens when you plug in a USB device and Windows begins 'searching for Drivers'? Who doesn't have that Windows Update reboot dialog sitting in the corner of their desktop? Our talk will take an exciting look at one of the dullest corners of the Windows OS.WSUS (Windows Server Update Services) allows admins to co-ordinate software updates to servers and desktops throughout their organisation. Whilst all updates must be signed by Microsoft, we find other routes to deliver malicious updates to Windows systems using WSUS. We will demonstrate how a default WSUS deployment can be leveraged to gain SYSTEM level access to machines on the local network.We also take a look at exactly what happens when you plug in a new USB device into a Windows desktop. There are thousands Microsoft-signed updates for 3rd party drivers available through Windows Update. We show how driver installs can be triggered by low privileged users and look at the insecurities that can be introduced by these Microsoft-blessed drivers.In addition to some exciting demos we will also describe how to lock down enterprise WSUS configurations to avoid these \"on by default\" vulnerabilities.You have 1 malicious update ready to install...",
    "plaintextTitle": "WSUSpect - Compromising the Windows Enterprise via Windows Update",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Stone-WSUSpect-Compromising-Windows-Enterprise-Via-Windows-Update.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Stone-WSUSpect-Compromising-Windows-Enterprise-Via-Windows-Update-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=mU8vw4gRaGs"
      }
    ],
    "youtubeDescription": "by Paul Stone  &  Alex Chapman\n\nEver wondered what really happens when you plug in a USB device and Windows begins 'searching for Drivers'? Who doesn't have that Windows Update reboot dialog sitting in the corner of their desktop? Our talk will take an exciting look at one of the dullest corners of the Windows OS.\n\nWSUS (Windows Server Update Services) allows admins to co-ordinate software updates to servers and desktops throughout their organisation. Whilst all updates must be signed by Microsoft, we find other routes to deliver malicious updates to Windows systems using WSUS. We will demonstrate how a default WSUS deployment can be leveraged to gain SYSTEM level access to machines on the local network.\n\nWe also take a look at exactly what happens when you plug in a new USB device into a Windows desktop. There are thousands Microsoft-signed updates for 3rd party drivers available through Windows Update. We show how driver installs can be triggered by low privileged users and look at the insecurities that can be introduced by these Microsoft-blessed drivers.\n\nIn addition to some exciting demos we will also describe how to lock down enterprise WSUS configurations to avoid these \"on by default\" vulnerabilities.\n\nYou have 1 malicious update ready to install..."
  },
  "zigbee-exploited-the-good-the-bad-and-the-ugly": {
    "author": "tobias-zillner",
    "description": "ZigBee is one of the most widespread communication standards used in the Internet of Things and especially in the area of smart homes. If you have, for example, a smart light bulb at home, the chance is very high that you are actually using ZigBee. Popular lighting applications, such as Philips Hue or Osram Lightify are based on this standard. Usually, IoT devices have very limited processing and energy resources, and therefore not capable of implementing well-known communication standards, such as Wifi. ZigBee is, however, an open, publicly available alternative that enables wireless communication for such devices.ZigBee also provides security services for key establishment, key transport, frame protection, and device management that are based on established cryptographic algorithms.So, is a ZigBee home automation network with applied security and smart home communication protected? No, absolutely not. Due to interoperability and compatibility requirements, as well as the application of legacy security concepts, it is possible to compromise ZigBee networks and take over control of all connected devices. For example, it is entirely possible for an external party to gain control over every smart light bulb that supports the ZigBee Light Link profile. This is made possible because the initial key transport is done in an unsecured way, and support of this weak key transport is, in fact, even required by the standard itself.Due to these shortfalls and limitations created by the manufacturers themselves, the security risk in this last tier communication standard can be considered as very high.This talk will provide an overview of the actual applied security measures in ZigBee, highlight the included weaknesses, and show practical exploitations of actual product vulnerabilities, as well as our recently developed ZigBee security-testing framework tool.",
    "plaintextTitle": "ZigBee Exploited  the Good the Bad and the Ugly",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Zillner-ZigBee-Exploited-The-Good-The-Bad-And-The-Ugly.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-15/materials/us-15-Zillner-ZigBee-Exploited-The-Good-The-Bad-And-The-Ugly-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=9xzXp-zPkjU"
      }
    ],
    "youtubeDescription": "by Tobias Zillner  &  Sebastian Strobl\n\nZigBee is one of the most widespread communication standards used in the Internet of Things and especially in the area of smart homes. If you have, for example, a smart light bulb at home, the chance is very high that you are actually using ZigBee. Popular lighting applications, such as Philips Hue or Osram Lightify are based on this standard. Usually, IoT devices have very limited processing and energy resources, and therefore not capable of implementing well-known communication standards, such as Wifi. ZigBee is, however, an open, publicly available alternative that enables wireless communication for such devices.\n\nZigBee also provides security services for key establishment, key transport, frame protection, and device management that are based on established cryptographic algorithms.\n\nSo, is a ZigBee home automation network with applied security and smart home communication protected? No, absolutely not. Due to interoperability and compatibility requirements, as well as the application of legacy security concepts, it is possible to compromise ZigBee networks and take over control of all connected devices. For example, it is entirely possible for an external party to gain control over every smart light bulb that supports the ZigBee Light Link profile. This is made possible because the initial key transport is done in an unsecured way, and support of this weak key transport is, in fact, even required by the standard itself.\n\nDue to these shortfalls and limitations created by the manufacturers themselves, the security risk in this last tier communication standard can be considered as very high.\n\nThis talk will provide an overview of the actual applied security measures in ZigBee, highlight the included weaknesses, and show practical exploitations of actual product vulnerabilities, as well as our recently developed ZigBee security-testing framework tool."
  },
  "the-hidden-architecture-of-our-time-why-this-internet-worked-how-we-could-lose-it-and-the-role-hackers-play": {
    "author": "dan-kaminsky",
    "description": "What we call the Internet, was not our first attempt at making a global data network that spanned the globe. It was just the first one that worked.Why?In this talk, I'll lay out what I see as how the Internet actually works. It's increasingly likely that there will be attempts to *change* the principles of the net, and the reality is that widespread hacking is the exact sort of force that brought us this working-ish system in the first place.We need to talk about the values of cryptography, of open software and networks, of hackers being a force for measurable good. We need to talk about how infrastructure like DNS -- it was there 25 years ago, we can imagine it will be there 25 years from now -- acts as foundation for future development in a way that the API of the hour doesn't.Things do need to be better, and we need to talk about the role of Government in that. The things that need to be better are technical in nature, and guide research priorities that are outright not being addressed at present.Essentially, I'd like to provide a model for comprehending the Internet as it stands, that prevents harm to it (how much could we have used EC2 if SSH was illegal) while providing the useful resources to promote its continued operation.We can't keep screwing this up forever. NTIA has noted half (!) of the population warily backing away. Let's talk about how it really works, so we can discuss how we can do it better.",
    "plaintextTitle": "The Hidden Architecture of our Time: Why This Internet Worked How We Could Lose It and the Role Hackers Play",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=RAGwol-keXM"
      }
    ],
    "youtubeDescription": "by Dan Kaminsky\n\nWhat we call the Internet, was not our first attempt at making a global data network that spanned the globe. It was just the first one that worked.\n\nWhy?\n\nIn this talk, I'll lay out what I see as how the Internet actually works. It's increasingly likely that there will be attempts to *change* the principles of the net, and the reality is that widespread hacking is the exact sort of force that brought us this working-ish system in the first place.\n\nWe need to talk about the values of cryptography, of open software and networks, of hackers being a force for measurable good. We need to talk about how infrastructure like DNS -- it was there 25 years ago, we can imagine it will be there 25 years from now -- acts as foundation for future development in a way that the API of the hour doesn't.\n\nThings do need to be better, and we need to talk about the role of Government in that. The things that need to be better are technical in nature, and guide research priorities that are outright not being addressed at present.\n\nEssentially, I'd like to provide a model for comprehending the Internet as it stands, that prevents harm to it (how much could we have used EC2 if SSH was illegal) while providing the useful resources to promote its continued operation.\n\nWe can't keep screwing this up forever. NTIA has noted half (!) of the population warily backing away. Let's talk about how it really works, so we can discuss how we can do it better."
  },
  "welcome-and-introduction-to-black-hat-usa-2016": {
    "author": "jeff-moss",
    "description": "",
    "plaintextTitle": "Welcome & Introduction to Black Hat USA 2016",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Bvm0rJ_Mlak"
      }
    ],
    "youtubeDescription": "by Jeff Moss"
  },
  "$hell-on-earth-from-browser-to-system-compromise": {
    "author": "matt-molinyawe",
    "description": "The winning submissions to Pwn2Own 2016 provided unprecedented insight into the state of the art in software exploitation. Every successful submission provided remote code execution as the super user (SYSTEM/root) via the browser or a default browser plugin. In most cases, these privileges were attained by exploiting the Microsoft Windows or Apple OS X kernel. Kernel exploitation using the browser as an initial vector was a rare sight in previous contests.  This presentation will detail the eight winning browser to super user exploitation chains (21 total vulnerabilities) demonstrated at this year's Pwn2Own contest. We will cover topics such as modern browser exploitation, the complexity of kernel Use-After-Free exploitation, and the simplicity of exploiting logic errors and directory traversals in the kernel. We will analyze all attack vectors, root causes, exploitation techniques, and possible remediations for the vulnerabilities presented.  Reducing attack surfaces with application sandboxing is a step in the right direction, but the attack surface remains expansive and sandboxes are clearly still just a speed bump on the road to complete compromise. Kernel exploitation is clearly a problem which has not disappeared and is possibly on the rise. If you're like us, you can't get enough of it; it's shell on earth.",
    "plaintextTitle": "$hell on Earth: From Browser to System Compromise",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Molinyawe-Shell-On-Earth-From-Browser-To-System-Compromise.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Molinyawe-Shell-On-Earth-From-Browser-To-System-Compromise-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7wIiqqgDWdQ"
      }
    ],
    "youtubeDescription": "by Matt Molinyawe  &  Jasiel Spelman  &  Abdul-Aziz Hariri  &  Joshua Smith\n\nThe winning submissions to Pwn2Own 2016 provided unprecedented insight into the state of the art in software exploitation. Every successful submission provided remote code execution as the super user (SYSTEM/root) via the browser or a default browser plugin. In most cases, these privileges were attained by exploiting the Microsoft Windows or Apple OS X kernel. Kernel exploitation using the browser as an initial vector was a rare sight in previous contests.\n\nThis presentation will detail the eight winning browser to super user exploitation chains (21 total vulnerabilities) demonstrated at this year's Pwn2Own contest. We will cover topics such as modern browser exploitation, the complexity of kernel Use-After-Free exploitation, and the simplicity of exploiting logic errors and directory traversals in the kernel. We will analyze all attack vectors, root causes, exploitation techniques, and possible remediations for the vulnerabilities presented.\n\nReducing attack surfaces with application sandboxing is a step in the right direction, but the attack surface remains expansive and sandboxes are clearly still just a speed bump on the road to complete compromise. Kernel exploitation is clearly a problem which has not disappeared and is possibly on the rise. If you're like us, you can't get enough of it; it's shell on earth."
  },
  "1000-ways-to-die-in-mobile-oauth": {
    "author": "yuan-tian",
    "description": "OAuth has become a highly influential protocol due to its swift and wide adoption in the industry. The initial objective of the protocol was specific: it serves the authorization needs for websites. However, the protocol has been significantly repurposed and re-targeted over the years: (1) all major identity providers, e.g., Facebook, Google and Microsoft, have re-purposed OAuth for user authentication; (2) developers have re-targeted OAuth to the mobile platforms, in addition to the traditional web platform. Therefore, we believe that it is necessary and timely to conduct an in-depth study to demystify OAuth for mobile application developers. Our work consists of two pillars: (1) an in-house study of the OAuth protocol documentation that aims to identify what might be ambiguous or unspecified for mobile developers; (2) a field-study of over 600 popular mobile applications that highlights how well developers fulfill the authentication and authorization goals in practice. The result is really worrisome: among the 149 applications that use OAuth, 89 of them (59.7%) were incorrectly implemented and thus vulnerable. In the paper, we pinpoint the key portions in each OAuth protocol flow that are security critical, but are confusing or unspecified for mobile application developers. We then show several representative cases to concretely explain how real implementations fell into these pitfalls. Our findings have been communicated to vendors of the vulnerable applications. Most vendors positively confirmed the issues, and some have applied fixes. We summarize lessons learned from the study, hoping to provoke further thoughts about clear guidelines for OAuth usage in mobile applications",
    "plaintextTitle": "1000 Ways to Die in Mobile OAuth",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Tian-1000-Ways-To-Die-In-Mobile-OAuth.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Tian-1000-Ways-To-Die-In-Mobile-OAuth-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=h7m0JScYwss"
      }
    ],
    "youtubeDescription": "by Yuan Tian  &  Eric Chen  &  Shuo Chen  &  Yutong Pei  &  Robert Kotcher  &  Patrick Tague\n\nOAuth has become a highly influential protocol due to its swift and wide adoption in the industry. The initial objective of the protocol was specific: it serves the authorization needs for websites. However, the protocol has been significantly repurposed and re-targeted over the years: (1) all major identity providers, e.g., Facebook, Google and Microsoft, have re-purposed OAuth for user authentication; (2) developers have re-targeted OAuth to the mobile platforms, in addition to the traditional web platform. Therefore, we believe that it is necessary and timely to conduct an in-depth study to demystify OAuth for mobile application developers.\n\nOur work consists of two pillars: (1) an in-house study of the OAuth protocol documentation that aims to identify what might be ambiguous or unspecified for mobile developers; (2) a field-study of over 600 popular mobile applications that highlights how well developers fulfill the authentication and authorization goals in practice. The result is really worrisome: among the 149 applications that use OAuth, 89 of them (59.7%) were incorrectly implemented and thus vulnerable. In the paper, we pinpoint the key portions in each OAuth protocol flow that are security critical, but are confusing or unspecified for mobile application developers. We then show several representative cases to concretely explain how real implementations fell into these pitfalls. Our findings have been communicated to vendors of the vulnerable applications. Most vendors positively confirmed the issues, and some have applied fixes. We summarize lessons learned from the study, hoping to provoke further thoughts about clear guidelines for OAuth usage in mobile applications."
  },
  "a-journey-from-jndi-ldap-manipulation-to-remote-code-execution-dream-land": {
    "author": "alvaro-munoz",
    "description": "JNDI (Java Naming and Directory Interface) is a Java API that allows clients to discover and look up data and objects via a name. These objects can be stored in different naming or directory services such as RMI, CORBA, LDAP, or DNS.\r\n                \r\n                This talk will present a new type of vulnerability named \"JNDI Reference Injection\" found on malware samples attacking Java Applets (CVE-2015-4902). The same principles can be applied to attack web applications running JNDI lookups on names controlled by attackers. As we will demo during the talk, attackers will be able to use different techniques to run arbitrary code on the server performing JNDI lookups. \r\n                \r\n                The talk will first present the basics of this new vulnerability including the underlying technology, and will then explain in depth the different ways an attacker can exploit it using different vectors and services. We will focus on exploiting RMI, LDAP and CORBA services as these are present in almost every Enterprise application.\r\n                \r\n                LDAP offers an alternative attack vector where attackers not able to influence the address of an LDAP lookup operation may still be able to modify the LDAP directory in order to store objects that will execute arbitrary code upon retrieval by the application lookup operation. This may be exploited through LDAP manipulation or simply by modifying LDAP entries as some Enterprise directories allow.",
    "plaintextTitle": "A Journey from JNDI/LDAP Manipulation to Remote Code Execution Dream Land",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Y8a5nB-vy78"
      }
    ],
    "youtubeDescription": "by Alvaro Munoz  &  Oleksandr Mirosh\n\nJNDI (Java Naming and Directory Interface) is a Java API that allows clients to discover and look up data and objects via a name. These objects can be stored in different naming or directory services such as RMI, CORBA, LDAP, or DNS.\n\nThis talk will present a new type of vulnerability named \"JNDI Reference Injection\" found on malware samples attacking Java Applets (CVE-2015-4902). The same principles can be applied to attack web applications running JNDI lookups on names controlled by attackers. As we will demo during the talk, attackers will be able to use different techniques to run arbitrary code on the server performing JNDI lookups.\n\nThe talk will first present the basics of this new vulnerability including the underlying technology, and will then explain in depth the different ways an attacker can exploit it using different vectors and services. We will focus on exploiting RMI, LDAP and CORBA services as these are present in almost every Enterprise application.\n\nLDAP offers an alternative attack vector where attackers not able to influence the address of an LDAP lookup operation may still be able to modify the LDAP directory in order to store objects that will execute arbitrary code upon retrieval by the application lookup operation. This may be exploited through LDAP manipulation or simply by modifying LDAP entries as some Enterprise directories allow."
  },
  "a-lightbulb-worm": {
    "author": "colin-oflynn",
    "description": "Could a worm spread through a smart light network? This talk explores the idea, and in particular dives into the internals of the Philips Hue smart light system, and details what security has been deployed to prevent this.\r\n                \r\n                Examples of hacking various aspects of the system are presented, including how to bypass encrypted bootloaders to read sensitive information. Details on the firmware in multiple versions of the Philips Hue smart lamps and bridges are discussed. This talk concentrates on examples of advanced techniques used in attacking IoT/embedded hardware devices.",
    "plaintextTitle": "A Lightbulb Worm?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-OFlynn-A-Lightbulb-Worm.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-OFlynn-A-Lightbulb-Worm-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=R3ZVeBWNSIY"
      }
    ],
    "youtubeDescription": "by Colin O'Flynn\n\nCould a worm spread through a smart light network? This talk explores the idea, and in particular dives into the internals of the Philips Hue smart light system, and details what security has been deployed to prevent this.\n\nExamples of hacking various aspects of the system are presented, including how to bypass encrypted bootloaders to read sensitive information. Details on the firmware in multiple versions of the Philips Hue smart lamps and bridges are discussed. This talk concentrates on examples of advanced techniques used in attacking IoT/embedded hardware devices."
  },
  "a-retrospective-on-the-use-of-export-cryptography": {
    "author": "david-adrian",
    "description": "TLS has experienced three major vulnerabilities stemming from \"export-grade\" cryptography in the last year---FREAK, Logajm, and Drown. Although regulations limiting the strength of cryptography that could be exported from the United States were lifted in 1999, and export ciphers were subsequently deprecated in TLS 1.1, Internet-wide scanning showed that support for various forms of export cryptography remained widespread, and that attacks exploiting export-grade cryptography to attack non-export connections affected up to 37% of browser-trusted HTTPS servers in 2015. In this talk, I'll examine the technical details and historical background for all three export-related vulnerabilities, and provide recent vulnerability measurement data gathered from over a year Internet-wide scans, finding that 2% of browser-trusted IPv4 servers remain vulnerable to FREAK, 1% to Logjam, and 16% to Drown. I'll examine why these vulnerabilities happened, how the inclusion of weakened cryptography in a protocol impacts security, and how to better design and implement cryptographic protocols in the future. Having been involved in the discovery of all three export vulnerabilities, I'll distill some lessons learned from measuring and analyzing export cryptography into recommendations for technologists and policymakers alike, and provide a historical context for the current \"going dark'' and Apple vs. FBI debate.",
    "plaintextTitle": "A Retrospective on the Use of Export Cryptography",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Adrian-A-Retrospective-On-The-Use-of-Export-Cryptography.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_i_M1v7Ql3I"
      }
    ],
    "youtubeDescription": "by David Adrian\n\nTLS has experienced three major vulnerabilities stemming from \"export-grade\" cryptography in the last year---FREAK, Logajm, and Drown. Although regulations limiting the strength of cryptography that could be exported from the United States were lifted in 1999, and export ciphers were subsequently deprecated in TLS 1.1, Internet-wide scanning showed that support for various forms of export cryptography remained widespread, and that attacks exploiting export-grade cryptography to attack non-export connections affected up to 37% of browser-trusted HTTPS servers in 2015. In this talk, I'll examine the technical details and historical background for all three export-related vulnerabilities, and provide recent vulnerability measurement data gathered from over a year Internet-wide scans, finding that 2% of browser-trusted IPv4 servers remain vulnerable to FREAK, 1% to Logjam, and 16% to Drown. I'll examine why these vulnerabilities happened, how the inclusion of weakened cryptography in a protocol impacts security, and how to better design and implement cryptographic protocols in the future. Having been involved in the discovery of all three export vulnerabilities, I'll distill some lessons learned from measuring and analyzing export cryptography into recommendations for technologists and policymakers alike, and provide a historical context for the current \"going dark'' and Apple vs. FBI debate."
  },
  "abusing-bleeding-edge-web-standards-for-appsec-glory": {
    "author": "bryant-zadegan",
    "description": "Through cooperation between browser vendors and standards bodies in the recent past, numerous standards have been created to enforce stronger client-side control for web applications. As web appsec practitioners continue to shift from mitigating vulnerabilities to implementing proactive controls, each new standard adds another layer of defense for attack patterns previously accepted as risks. With the most basic controls complete, attention is shifting toward mitigating more complex threats. As a result of the drive to control for these threats client-side, standards such as SubResource Integrity (SRI), Content Security Policy (CSP), and HTTP Public Key Pinning (HPKP) carry larger implementation risks than others such as HTTP Strict Transport Security (HSTS). Builders supporting legacy applications actively make trade-offs between implementing the latest standards versus accepting risks simply because of the increased risks newer web standards pose. In this talk, we'll strictly explore the risks posed by SRI, CSP, and HPKP; demonstrate effective mitigation strategies and compromises which may make these standards more accessible to builders and defenders supporting legacy applications; as well as examine emergent properties of standards such as HPKP to cover previously unforeseen scenarios. As a bonus for the breakers, we'll explore and demonstrate exploitations of the emergent risks in these more volatile standards, to include multiple vulnerabilities uncovered quite literally during our research for this talk (which will hopefully be mitigated by d-day).",
    "plaintextTitle": "Abusing Bleeding Edge Web Standards for AppSec Glory",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Zadegan-Abusing-Bleeding-Edge-Web-Standards-For-AppSec-Glory.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KK41OLrbY5o"
      }
    ],
    "youtubeDescription": "by Bryant Zadegan  &  Ryan Lester\n\nThrough cooperation between browser vendors and standards bodies in the recent past, numerous standards have been created to enforce stronger client-side control for web applications. As web appsec practitioners continue to shift from mitigating vulnerabilities to implementing proactive controls, each new standard adds another layer of defense for attack patterns previously accepted as risks. With the most basic controls complete, attention is shifting toward mitigating more complex threats. As a result of the drive to control for these threats client-side, standards such as SubResource Integrity (SRI), Content Security Policy (CSP), and HTTP Public Key Pinning (HPKP) carry larger implementation risks than others such as HTTP Strict Transport Security (HSTS). Builders supporting legacy applications actively make trade-offs between implementing the latest standards versus accepting risks simply because of the increased risks newer web standards pose.\n\nIn this talk, we'll strictly explore the risks posed by SRI, CSP, and HPKP; demonstrate effective mitigation strategies and compromises which may make these standards more accessible to builders and defenders supporting legacy applications; as well as examine emergent properties of standards such as HPKP to cover previously unforeseen scenarios. As a bonus for the breakers, we'll explore and demonstrate exploitations of the emergent risks in these more volatile standards, to include multiple vulnerabilities uncovered quite literally during our research for this talk (which will hopefully be mitigated by d-day)."
  },
  "access-keys-will-kill-you-before-you-kill-the-password": {
    "author": "loic-simon",
    "description": "AWS users, whether they are devops in a startup or system administrators tasked with migrating an enterprise service into the cloud, interact on a daily basis with the AWS APIs, using either the web console or tools such as the AWS CLI to manage their infrastructure. When working with the latter, authentication is done using long-lived access keys that are often stored in plaintext files, shared between developers, and sometimes publicly exposed. This creates a significant security risk as possession of such credentials provides unconditional and permanent access to the AWS API, which may yield catastrophic events in case of credentials compromise. This talk will detail how MFA may be consistently required for all users, regardless of the authentication method. Furthermore, this talk will introduce several open-source tools, including the release of one new tool, that may be used to allow painless work when MFA-protected API access is enforced in an AWS account.",
    "plaintextTitle": "Access Keys Will Kill You Before You Kill the Password",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Simon-Access-Keys-Will-Kill-You-Before-You-Kill-The-Password.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=OROpVPCi_1A"
      }
    ],
    "youtubeDescription": "by Loic Simon\n\nAWS users, whether they are devops in a startup or system administrators tasked with migrating an enterprise service into the cloud, interact on a daily basis with the AWS APIs, using either the web console or tools such as the AWS CLI to manage their infrastructure. When working with the latter, authentication is done using long-lived access keys that are often stored in plaintext files, shared between developers, and sometimes publicly exposed. This creates a significant security risk as possession of such credentials provides unconditional and permanent access to the AWS API, which may yield catastrophic events in case of credentials compromise. This talk will detail how MFA may be consistently required for all users, regardless of the authentication method. Furthermore, this talk will introduce several open-source tools, including the release of one new tool, that may be used to allow painless work when MFA-protected API access is enforced in an AWS account."
  },
  "account-jumping-post-infection-persistency-and-lateral-movement-in-aws": {
    "author": "dan-amiga",
    "description": "The widespread adoption of AWS as an enterprise platform for storage, computing and services makes it a lucrative opportunity for the development of AWS focused APTs. We will cover pre-infection, post-infection and advanced persistency techniques on AWS that allows an attacker to access staging and production environments, as well as read and write data and even reverse its way from the cloud to the the corporate datacenter.This session will cover several methods of infection including a new concept - \"account jumping\" for taking over both PaaS (e.g. ElasticBeans) and IaaS (EC2, EC2 Containers) resources, discussing poisoned AMIs, dirty account transfer, as well as leveraging S3 and CloudFront for performing AWS specific credentials thefts that can easily lead to full account access. We will then discuss the post-infection phase and how attackers can manipulate AWS resources (public endpoints like EC2 IPS, Elastic IPS, load balancers and more) for complete MITM attacks on services. We will demonstrate how attackers code can be well hidden via Lambda functions, some cross zone replication configuration and the problem with storage affinity to a specific account. We'll examine hybrid deployments from the cloud and compromising the on premise datacenter by leveraging and modifying connectivity methods (HW/SW VPN, Direct connect or cloud hub). Finally, we'll end with a discussion on best practices that can be used to protect from such attacks such as bastion SSH/RDP gateways, understanding the value of CASB based solutions and where they fit, leverage audit and HSM capabilities in AWS as well as looking at different Isolation approaches to create isolation between administrators and the cloud while still providing access to critical services.",
    "plaintextTitle": "Account Jumping Post Infection Persistency & Lateral Movement in AWS",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Amiga-Account-Jumping-Post-Infection-Persistency-And-Lateral-Movement-In-AWS.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Amiga-Account-Jumping-Post-Infection-Persistency-And-Lateral-Movement-In-AWS-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=V54lRz3YgBY"
      }
    ],
    "youtubeDescription": "by Dan Amiga  &  Dor Knafo\n\nThe widespread adoption of AWS as an enterprise platform for storage, computing and services makes it a lucrative opportunity for the development of AWS focused APTs. We will cover pre-infection, post-infection and advanced persistency techniques on AWS that allows an attacker to access staging and production environments, as well as read and write data and even reverse its way from the cloud to the the corporate datacenter.\n\nThis session will cover several methods of infection including a new concept - \"account jumping\" for taking over both PaaS (e.g. ElasticBeans) and IaaS (EC2, EC2 Containers) resources, discussing poisoned AMIs, dirty account transfer, as well as leveraging S3 and CloudFront for performing AWS specific credentials thefts that can easily lead to full account access. We will then discuss the post-infection phase and how attackers can manipulate AWS resources (public endpoints like EC2 IPS, Elastic IPS, load balancers and more) for complete MITM attacks on services. We will demonstrate how attackers code can be well hidden via Lambda functions, some cross zone replication configuration and the problem with storage affinity to a specific account. We'll examine hybrid deployments from the cloud and compromising the on premise datacenter by leveraging and modifying connectivity methods (HW/SW VPN, Direct connect or cloud hub). Finally, we'll end with a discussion on best practices that can be used to protect from such attacks such as bastion SSH/RDP gateways, understanding the value of CASB based solutions and where they fit, leverage audit and HSM capabilities in AWS as well as looking at different Isolation approaches to create isolation between administrators and the cloud while still providing access to critical services."
  },
  "adaptive-kernel-live-patching-an-open-collaborative-effort-to-ameliorate-android-n-day-root-exploits": {
    "author": "yulong-zhang",
    "description": "Although 0-day exploits are dangerous, we have to admit that the largest threat for Android users are kernel vulnerabilities that have been disclosed but remain unfixed. Having been in the spotlight for weeks or even months, these kernel vulnerabilities usually have clear and stable exploits; therefore, underground businesses commonly utilize them in malware and APTs. The reason for the long periods of remaining unfixed is complex, partly due to the time-consuming patching and verification procedures, or possibly because the vendors care more about innovating new products than securing existing devices. As such, there are still a lot devices all over the world subject to root attacks. The different patching status of various vendors causes fragmentation, and vendors usually don't provide the exact up-to-date kernel source code for all devices, so it is extremely difficult to patch vulnerable devices in scale. We will provide stats of the current Android kernel vulnerability landscape, including the device model population and the corresponding vulnerability rates. Some vulnerabilities with great impact but slow fixing progress will be discussed. The whole community strives to solve this problem, but obviously this cannot be done discretely with limited hands. In this talk, we present an adaptive Android kernel live patching framework, which enables open and live patching for kernels. It has the following advantages: (1) It enables online hotpatching without interrupting user-experience. Unlike existing Linux kernel hotpatching solutions, it works directly on binaries and can automatically adjust to different device models with different Android kernel versions. (2) It enables third party vendors, who may not access the exact source code of the device kernel and drivers, to perform live patching. (3) Except for the binary patching scheme, it also provides a Lua based patching scheme, which makes patch generation and delivery even easier. It also has stronger confinement. This framework saves developers from repeating the tedious and error-prone patch porting work, and patches can be provided from various vendors, thus the patch deployment period can be greatly shortened. Only offering the power to perform adaptive live patching is not enough -- we need to regulate it just in case the hotpatches introduce further vulnerabilities and backdoors. So, a special alliance with membership qualification is formed. Only those selected vendors can provide patches and audit patches submitted from other alliance members. Furthermore, we will build a reputation ranking system for the patch providers, a mechanism similar to app stores. The Lua based patching scheme can provide even more restrictive regulations upon the operations of patches. Finally, this framework can be easily extended and applied to general Linux platforms. We believe that improving the security of the whole ecosystem is not a dream of our own. We call for more and more parties to join in this effort to fight the evils together.",
    "plaintextTitle": "Adaptive Kernel Live Patching: An Open Collaborative Effort to Ameliorate Android N-Day Root Exploits",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Zhang-Adaptive-Kernel-Live-Patching-An-Open-Collaborative-Effort-To-Ameliorate-Android-N-Day-Root-Exploits.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Zhang-Adaptive-Kernel-Live-Patching-An-Open-Collaborative-Effort-To-Ameliorate-Android-N-Day-Root-Exploits-wp.pdf",
        "type": "White Paper"
      }
    ]
  },
  "advanced-can-injection-techniques-for-vehicle-networks": {
    "author": "charlie-miller",
    "description": "The end goal of a remote attack against a vehicle is physical control, usually by injecting CAN messages onto the vehicle's network.  However, there are often many limitations on what actions the vehicle can be forced to perform when injecting CAN messages.  While an attacker may be able to easily change the speedometer while the car is driving, she may not be able to disable the brakes or turn the steering wheel unless the car she is driving meets certain prerequisites, such as traveling below a certain speed.  In this talk, we discuss how physical, safety critical systems react to injected CAN messages and how these systems are often resilient to this type of manipulation.  We will outline new methods of CAN message injection which can bypass many of these restrictions and demonstrate the results on the braking, steering, and acceleration systems of an automobile.  We end by suggesting ways these systems could be made even more robust in future vehicles.",
    "plaintextTitle": "Advanced CAN Injection Techniques for Vehicle Networks",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=4wgEmNlu20c"
      }
    ],
    "youtubeDescription": "by Charlie Miller  &  Chris Valasek\n\nThe end goal of a remote attack against a vehicle is physical control, usually by injecting CAN messages onto the vehicle's network. However, there are often many limitations on what actions the vehicle can be forced to perform when injecting CAN messages. While an attacker may be able to easily change the speedometer while the car is driving, she may not be able to disable the brakes or turn the steering wheel unless the car she is driving meets certain prerequisites, such as traveling below a certain speed. In this talk, we discuss how physical, safety critical systems react to injected CAN messages and how these systems are often resilient to this type of manipulation. We will outline new methods of CAN message injection which can bypass many of these restrictions and demonstrate the results on the braking, steering, and acceleration systems of an automobile. We end by suggesting ways these systems could be made even more robust in future vehicles."
  },
  "airbnbeware-short-term-rentals-long-term-pwnage": {
    "author": "jeremy-galloway",
    "description": "What's scarier, letting HD Moore rent your house and use your home network for day or being the very next renter that uses that network? With the colossal growth of the vacation rental market over the last five years (AirBnb, HomeAway), travellers are now more vulnerable than ever to network based attacks targeted at stealing personal information or outright pwnage. In 2006, the security industry desperately warned of the dangers of using public Wi-Fi at coffee shops. In 2010, we reshaped the conversation around the frightful security of Internet provided at hotels. And now, in 2016, we will start a new battle cry against the abysmal state of network security enabled by short term rentals. Both renters and property owners have a serious stake in this game. Whether you're renting a room in a foreign city to attend a conference or you're profiting off of your own empty domicile, serious risks abound: MitM traffic hi-jacking, accessing illegal content, device exploitation, and more. Common attacks and their corresponding defenses (conventional or otherwise) will be discussed, with a strong emphasis on practicality and simplicity. This talk will contain demos of attacks, introduce atypical hardware for defense, and encourage audience participation.",
    "plaintextTitle": "AirBnBeware: Short Term Rentals Long Term Pwnage",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Galloway-AirBnBeware-Short-Term-Rentals-Long-Term-Pwnage.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=9fAnRkJ6N3s"
      }
    ],
    "youtubeDescription": "by Jeremy Galloway\n\nWhat's scarier, letting HD Moore rent your house and use your home network for day or being the very next renter that uses that network? With the colossal growth of the vacation rental market over the last five years (AirBnb, HomeAway), travellers are now more vulnerable than ever to network based attacks targeted at stealing personal information or outright pwnage. In 2006, the security industry desperately warned of the dangers of using public Wi-Fi at coffee shops. In 2010, we reshaped the conversation around the frightful security of Internet provided at hotels. And now, in 2016, we will start a new battle cry against the abysmal state of network security enabled by short term rentals. Both renters and property owners have a serious stake in this game. Whether you're renting a room in a foreign city to attend a conference or you're profiting off of your own empty domicile, serious risks abound: MitM traffic hi-jacking, accessing illegal content, device exploitation, and more. Common attacks and their corresponding defenses (conventional or otherwise) will be discussed, with a strong emphasis on practicality and simplicity. This talk will contain demos of attacks, introduce atypical hardware for defense, and encourage audience participation."
  },
  "amsi-how-windows-10-plans-to-stop-script-based-attacks-and-how-well-it-does-it": {
    "author": "nikhil-mittal",
    "description": "In Windows 10, Microsoft introduced the AntiMalware Scan Interface (AMSI) which is designed to target script-based attacks and malware. Script-based attacks have been lethal for enterprise security and with advent of PowerShell, such attacks have become increasingly common. AMSI targets malicious scripts written in PowerShell, VBScript, JScript etc. and drastically improves detection and blocking rate of malicious scripts. When a piece of code is submitted for execution to the scripting host, AMSI steps in and the code is scanned for malicious content. What makes AMSI effective is, no matter how obfuscated the code is, it needs to be presented to the script host in clear text and unobfuscated. Moreover, since the code is submitted to AMSI just before execution, it doesn't matter if the code came from disk, memory or was entered interactively. AMSI is an open interface and MS says any application will be able to call its APIs. Currently, Windows Defender uses it on Windows 10. Has Microsoft finally killed script-based attacks? What are the ways out? The talk will be full of live demonstrations.",
    "plaintextTitle": "AMSI: How Windows 10 Plans to Stop Script-Based Attacks and How Well It Does It",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Mittal-AMSI-How-Windows-10-Plans-To-Stop-Script-Based-Attacks-And-How-Well-It-Does-It.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7A_rgu3kbvw"
      }
    ],
    "youtubeDescription": "by Nikhil Mittal\n\nIn Windows 10, Microsoft introduced the AntiMalware Scan Interface (AMSI) which is designed to target script-based attacks and malware. Script-based attacks have been lethal for enterprise security and with advent of PowerShell, such attacks have become increasingly common. AMSI targets malicious scripts written in PowerShell, VBScript, JScript etc. and drastically improves detection and blocking rate of malicious scripts. When a piece of code is submitted for execution to the scripting host, AMSI steps in and the code is scanned for malicious content. What makes AMSI effective is, no matter how obfuscated the code is, it needs to be presented to the script host in clear text and unobfuscated. Moreover, since the code is submitted to AMSI just before execution, it doesn't matter if the code came from disk, memory or was entered interactively. AMSI is an open interface and MS says any application will be able to call its APIs. Currently, Windows Defender uses it on Windows 10. Has Microsoft finally killed script-based attacks? What are the ways out? The talk will be full of live demonstrations."
  },
  "an-ai-approach-to-malware-similarity-analysis-mapping-the-malware-genome-with-a-deep-neural-network": {
    "author": "konstantin-berlin",
    "description": "In recent years, cyber defenders protecting enterprise networks have started incorporating malware code sharing identification tools into their workflows. These tools compare new malware samples to a large databases of known malware samples, in order to identify samples with shared code relationships. When unknown malware binaries are found to share code \"fingerprints\" with malware from known adversaries, they provides a key clue into which adversary is generating these new binaries, thus helping develop a general mitigation strategy against that family of threats. The efficacy of code sharing identification systems is demonstrated every day, as new family of threats are discovered, and countermeasures are rapidly developed for them. Unfortunately, these systems are hard to maintain, deploy, and adapt to evolving threats. First and foremost, these systems do not learn to adapt to new malware obfuscation strategies, meaning they will continuously fall out of date with adversary tradecraft, requiring, periodically, a manually intensive tuning in order to adjust the formulae used for similarity between malware. In addition, these systems require an up to date, well maintained database of recent threats in order to provide relevant results. Such a database is difficult to deploy, and hard and expensive to maintain for smaller organizations. In order to address these issues we developed a new malware similarity detection approach. This approach, not only significantly reduces the need for manual tuning of the similarity formulate, but also allows for significantly smaller deployment footprint and provides significant increase in accuracy. Our family/similarity detection system is the first to use deep neural networks for code sharing identification, automatically learning to see through adversary tradecraft, thereby staying up to date with adversary evolution. Using traditional string similarity features our approach increased accuracy by 10%, from 65% to 75%. Using an advanced set of features that we specifically designed for malware classification, our approach has 98% accuracy. In this presentation we describe how our method works, why it is able to significantly improve upon current approaches, and how this approach can be easily adapted and tuned to individual/organization needs of the attendees.",
    "plaintextTitle": "An AI Approach to Malware Similarity Analysis: Mapping the Malware Genome With a Deep Neural Network",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Berlin-An-AI-Approach-To-Malware-Similarity-Analysis-Mapping-The-Malware-Genome-With-A-Deep-Neural-Network.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_msntOyAGvI"
      }
    ],
    "youtubeDescription": "by Konstantin Berlin\n\nIn recent years, cyber defenders protecting enterprise networks have started incorporating malware code sharing identification tools into their workflows. These tools compare new malware samples to a large databases of known malware samples, in order to identify samples with shared code relationships. When unknown malware binaries are found to share code \"fingerprints\" with malware from known adversaries, they provides a key clue into which adversary is generating these new binaries, thus helping develop a general mitigation strategy against that family of threats. The efficacy of code sharing identification systems is demonstrated every day, as new family of threats are discovered, and countermeasures are rapidly developed for them.\n\nUnfortunately, these systems are hard to maintain, deploy, and adapt to evolving threats. First and foremost, these systems do not learn to adapt to new malware obfuscation strategies, meaning they will continuously fall out of date with adversary tradecraft, requiring, periodically, a manually intensive tuning in order to adjust the formulae used for similarity between malware. In addition, these systems require an up to date, well maintained database of recent threats in order to provide relevant results. Such a database is difficult to deploy, and hard and expensive to maintain for smaller organizations. In order to address these issues we developed a new malware similarity detection approach. This approach, not only significantly reduces the need for manual tuning of the similarity formulate, but also allows for significantly smaller deployment footprint and provides significant increase in accuracy. Our family/similarity detection system is the first to use deep neural networks for code sharing identification, automatically learning to see through adversary tradecraft, thereby staying up to date with adversary evolution. Using traditional string similarity features our approach increased accuracy by 10%, from 65% to 75%. Using an advanced set of features that we specifically designed for malware classification, our approach has 98% accuracy. In this presentation we describe how our method works, why it is able to significantly improve upon current approaches, and how this approach can be easily adapted and tuned to individual/organization needs of the attendees."
  },
  "an-inconvenient-trust-user-attitudes-toward-security-and-usability-tradeoffs-for-key-directory-encryption-systems": {
    "author": "patrick-gage-kelley",
    "description": "Many critical communications now take place digitally, but recent revelations demonstrate that these communications can often be intercepted. To achieve true message privacy, users need end-to-end message encryption, in which the communications service provider is not able to decrypt the content. Historically, end-to-end encryption has proven extremely difficult for people to use correctly, but recently tools like Apple's iMessage and Google's End-to-End have made it more broadly accessible by using key-directory services. These tools (and others like them) sacrifice some security properties for convenience, which alarms some security experts, but little is known about how average users evaluate these tradeoffs. In a 52-person interview study, we asked participants to complete encryption tasks using both a traditional key-exchange model and a key-directory-based registration model. We also described the security properties of each (varying the order of presentation) and asked participants for their opinions. We found that participants understood the two models well and made coherent assessments about when different tradeoffs might be appropriate. Our participants recognized that the less-convenient exchange model was more secure overall, but found the security of the registration model to be \"good enough\" for many everyday purposes.",
    "plaintextTitle": "An Inconvenient Trust: User Attitudes Toward Security and Usability Tradeoffs for Key-Directory Encryption Systems",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kelley-An-Inconvenient-Trust-User-Attitudes-Toward-Security-And-Usability-Tradeoffs-For-Key-Directory-Encryption-Systems.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kelley-An-Inconvenient-Trust-User-Attitudes-Toward-Security-And-Usability-Tradeoffs-For-Key-Directory-Encryption-Systems-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=MbDHHEk7MQk"
      }
    ],
    "youtubeDescription": "by Patrick Gage Kelley\n\nMany critical communications now take place digitally, but recent revelations demonstrate that these communications can often be intercepted. To achieve true message privacy, users need end-to-end message encryption, in which the communications service provider is not able to decrypt the content. Historically, end-to-end encryption has proven extremely difficult for people to use correctly, but recently tools like Apple's iMessage and Google's End-to-End have made it more broadly accessible by using key-directory services. These tools (and others like them) sacrifice some security properties for convenience, which alarms some security experts, but little is known about how average users evaluate these tradeoffs. In a 52-person interview study, we asked participants to complete encryption tasks using both a traditional key-exchange model and a key-directory-based registration model. We also described the security properties of each (varying the order of presentation) and asked participants for their opinions. We found that participants understood the two models well and made coherent assessments about when different tradeoffs might be appropriate. Our participants recognized that the less-convenient exchange model was more secure overall, but found the security of the registration model to be \"good enough\" for many everyday purposes."
  },
  "an-insiders-guide-to-cyber-insurance-and-security-guarantees": {
    "author": "jeremiah-grossman",
    "description": "$75 billion. That's the amount of money businesses, governments, and individuals pay every year to security companies. While some security companies provide good value, the reality is the number of incidents are still getting worse and more frequent. Hundreds of millions of people have had their personal information stolen, businesses all over the world are losing intellectual property, and financial fraud is in the billions of dollars. These stories are constant, seemingly never-ending, and customers are tired of it. They are even apathetic to the degree that customers are turning to cyber-insurance as an alternative to breach prevention. We know this because cyber-insurance is a thing. In fact, cyber-insurance is a skyrocketing business that is already influencing every area of the information security industry. This rise of cyber-insurance has also provided a new way for security vendors to help their customers. A way for them to make a real positive impact, differentiate themselves, and align their incentives to that of their own customers - I'm talking about security guarantees.Security guarantees or guaranteeing security is almost a taboo subject in the industry. As skeptics are quick to point out, nothing is 100% secure. Everything can be hacked. They're technically right, of course, but they're also missing the bigger picture. Just like we all buy electronics, cars, tools, or toys for the kids, all of these items sometimes break - yet, every manufacturer still provides some kind of guarantee. Most often, at least a replacement, a manufacture can do this because they know how often their product breaks. If every other major industry in the world can do it, the security industry can too! And while many InfoSec practitioners are not yet aware of this, a few security vendors are already offering security guarantees. From private conversations, at least a half dozen or more are actively working with cyber-insurers and creating security guarantee programs of their own. Many of our peers are investing their time in this space as well. In not too long, security guarantees will become common.InfoSec practitioners who want to get a head start, or even a leg up, in cyber-insurance and security guarantees - this presentation is just for you. Also, one does not simply launch a security guarantee program. A great many things must be discussed, analyzed, and accounted for first. The business model of the program must be carefully designed, product efficacy must be measured, risk calculated, lawyers consulted, impact on financial accounting rules understood, liability reinsured, and more. Security vendors, if you're interested in how to go about creating a security guarantee program of your own, I'll be providing several helpful tools and a process. And business managers who would like to understand the landscape and how security guarantees are a great help in the purchase process, this talk is also for you.",
    "plaintextTitle": "An Insider's Guide to Cyber-Insurance and Security Guarantees",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Grossman-An-Insiders-Guide-To-Cyber-Insurance-And-Security-Guarantees.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=nFtchKxtGmc"
      }
    ],
    "youtubeDescription": "by Jeremiah Grossman\n\n$75 billion. That's the amount of money businesses, governments, and individuals pay every year to security companies. While some security companies provide good value, the reality is the number of incidents are still getting worse and more frequent. Hundreds of millions of people have had their personal information stolen, businesses all over the world are losing intellectual property, and financial fraud is in the billions of dollars. These stories are constant, seemingly never-ending, and customers are tired of it. They are even apathetic to the degree that customers are turning to cyber-insurance as an alternative to breach prevention. We know this because cyber-insurance is a thing. In fact, cyber-insurance is a skyrocketing business that is already influencing every area of the information security industry. This rise of cyber-insurance has also provided a new way for security vendors to help their customers. A way for them to make a real positive impact, differentiate themselves, and align their incentives to that of their own customers - I'm talking about security guarantees.\n\nSecurity guarantees or guaranteeing security is almost a taboo subject in the industry. As skeptics are quick to point out, nothing is 100% secure. Everything can be hacked. They're technically right, of course, but they're also missing the bigger picture. Just like we all buy electronics, cars, tools, or toys for the kids, all of these items sometimes break - yet, every manufacturer still provides some kind of guarantee. Most often, at least a replacement, a manufacture can do this because they know how often their product breaks. If every other major industry in the world can do it, the security industry can too! And while many InfoSec practitioners are not yet aware of this, a few security vendors are already offering security guarantees. From private conversations, at least a half dozen or more are actively working with cyber-insurers and creating security guarantee programs of their own. Many of our peers are investing their time in this space as well. In not too long, security guarantees will become common.\n\nInfoSec practitioners who want to get a head start, or even a leg up, in cyber-insurance and security guarantees - this presentation is just for you. Also, one does not simply launch a security guarantee program. A great many things must be discussed, analyzed, and accounted for first. The business model of the program must be carefully designed, product efficacy must be measured, risk calculated, lawyers consulted, impact on financial accounting rules understood, liability reinsured, and more. Security vendors, if you're interested in how to go about creating a security guarantee program of your own, I'll be providing several helpful tools and a process. And business managers who would like to understand the landscape and how security guarantees are a great help in the purchase process, this talk is also for you."
  },
  "analysis-of-the-attack-surface-of-windows-10-virtualization-based-security": {
    "author": "rafal-wojtczuk",
    "description": "In Windows 10, Microsoft introduced virtualization-based security (VBS), the set of security solutions based on a hypervisor. In this presentation, we will talk about details of VBS implementation and assess the attack surface - it is very different from other virtualization solutions. We will focus on the potential issues resulting from the underlying platform complexity (UEFI firmware being a primary example).   Besides a lot of theory, we will also demonstrate actual exploits: one against VBS itself and one against vulnerable firmware. The former is non-critical (provides bypass of one of VBS features), the latter is critical.  Before attending, one is encouraged to review the two related talks from Black Hat USA 2015: \"Battle of the SKM and IUM: How Windows 10 Rewrites OS Architecture\" and \"Defeating Pass-the-Hash: Separation of Powers.\"",
    "plaintextTitle": "Analysis of the Attack Surface of Windows 10 Virtualization-Based Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Wojtczuk-Analysis-Of-The-Attack-Surface-Of-Windows-10-Virtualization-Based-Security.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Wojtczuk-Analysis-Of-The-Attack-Surface-Of-Windows-10-Virtualization-Based-Security-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=j854COj7r_k"
      }
    ],
    "youtubeDescription": "This is our presentation from Black Hat 2016 on the Win 10 vulnerabilities. Watch our researcher Rafal Wojtczuk describe what he found and then get the whitepaper: http://bit.ly/Win10AttackSurface."
  },
  "applied-machine-learning-for-data-exfil-and-other-fun-topics": {
    "author": "matt-wolff",
    "description": "Machine learning techniques have been gaining significant traction in a variety of industries in recent years, and the security industry is no exception to it's influence. These techniques, when applied correctly, can help assist in many data driven tasks to provide interesting insights and decision recommendations to analyst. While these techniques can be powerful, for the researchers and analyst who are not well versed in machine learning, there can exist a gap in understanding that may prevent them from looking at and applying these tools to problems machine learning techniques could assist with. The goal of this presentation is to help researchers, analyst, and security enthusiast get their hands dirty applying machine learning to security problems. We will walk the entire pipeline from idea to functioning tool on several diverse security related problems, including offensive and defensive use cases for machine learning. Through these examples and demonstrations, we will be able to explain in a very concrete fashion every step involved to tie in machine learning to the specified problem. In addition, we will be releasing every tool built, along with source code and related datasets, to enable those in attendance to reproduce the research and examples on their own. Machine learning based tools that will be released with this talk include an advanced obfuscation tool for data exfiltration, a network mapper, and command and control panel identification module.",
    "plaintextTitle": "Applied Machine Learning for Data Exfil and Other Fun Topics",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Wolff-Applied-Machine-Learning-For-Data-Exfil-And-Other-Fun-Topics.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=dGwH7m4N8DE"
      }
    ],
    "youtubeDescription": "by Matt Wolff  &  Brian Wallace  &  Xuan Zhao\n\nMachine learning techniques have been gaining significant traction in a variety of industries in recent years, and the security industry is no exception to it's influence. These techniques, when applied correctly, can help assist in many data driven tasks to provide interesting insights and decision recommendations to analyst. While these techniques can be powerful, for the researchers and analyst who are not well versed in machine learning, there can exist a gap in understanding that may prevent them from looking at and applying these tools to problems machine learning techniques could assist with.\n\nThe goal of this presentation is to help researchers, analyst, and security enthusiast get their hands dirty applying machine learning to security problems. We will walk the entire pipeline from idea to functioning tool on several diverse security related problems, including offensive and defensive use cases for machine learning. Through these examples and demonstrations, we will be able to explain in a very concrete fashion every step involved to tie in machine learning to the specified problem. In addition, we will be releasing every tool built, along with source code and related datasets, to enable those in attendance to reproduce the research and examples on their own. Machine learning based tools that will be released with this talk include an advanced obfuscation tool for data exfiltration, a network mapper, and command and control panel identification module."
  },
  "attacking-sdn-infrastructure-are-we-ready-for-the-next-gen-networking": {
    "author": "changhoon-yoon",
    "description": "Software-Defined Networking (SDN), by decoupling the control logic from the closed and proprietary implementations of traditional network devices, allows researchers and practitioners to design new innovative network functions/protocols in a much easier, more flexible, and powerful way. This technology has gained significant attentions from both industry and academia, and it is now at its adoption stage. When considering the adoption of SDN, the security vulnerability assessment is an important process that must be conducted against any system before the deployment and arguably the starting point toward making it more secure. In this briefing, we explore the attack surface of SDN by actually attacking each layer of SDN stack. The SDN stack is generally composed of control plane, control channel and data plane: The control plane implementations, which are commonly known as SDN controllers or Network OS, implementations are commonly developed and distributed as an open-source project. Of those various Network OS implementations, we attack the most prevalent ones, OpenDaylight (ODL) [1] and Open Network Operating System (ONOS) [2]. These Network OS projects are both actively led by major telecommunication and networking companies, and some of the companies have already deployed them to their private cloud or network [3, 4]. For the control channel, we also attack a well-known SDN protocol [5], OpenFlow. In the case of the data plane, we test some OpenFlow-enabled switch device products from major vendors, such as HP and Pica8.Of the attacks that we disclose in this briefing, we demonstrate some of the most critical attacks that directly affect the network (service) availability or confidentiality. For example, one of the attack arbitrarily uninstalls crucial SDN applications running on an ODL(or ONOS) cluster, such as routing, forwarding, or even security service applications. Another attack directly manipulates logical network topology maintained by an ODL(or ONOS) cluster to cause network failures. In addition, we also introduce some of the SDN security projects. We briefly go over the design and implementation of Project Delta, which is an official open-source SDN penetration testing tool pushed forward by Open Networking Foundation Security group, and Security-Mode ONOS, a security extension that protects the core of ONOS from the possible threats of untrusted third-party applications. References [1] Medved, Jan, et al. \"Opendaylight: Towards a model-driven sdn controller architecture.\" 2014 IEEE 15th International Symposium on. IEEE, 2014. [2] Berde, Pankaj, et al. \"ONOS: towards an open, distributed SDN OS.\"Proceedings of the third workshop on Hot topics in software defined networking. ACM, 2014. [3] Jain, Sushant, et al. \"B4: Experience with a globally-deployed software defined WAN.\" ACM SIGCOMM Computer Communication Review. Vol. 43. No. 4. ACM, 2013. [4] CORD: Re\u00adinventing Central Offices for Efficiency and Agility. http://opencord.org (2016). [5] OpenFlow. OpenFlow Switch Specification version 1.1.0. Tech. rep., 2011. http://www.openflow.org/documents/openflow-spec-v1.1.0.pdf.",
    "plaintextTitle": "Attacking SDN Infrastructure: Are We Ready for the Next-Gen Networking?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Yoon-Attacking-SDN-Infrastructure-Are-We-Ready-For-The-Next-Gen-Networking.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_9wzGFtjQc0"
      }
    ],
    "youtubeDescription": "by Changhoon Yoon  &  Seungsoo Lee\n\nSoftware-Defined Networking (SDN), by decoupling the control logic from the closed and proprietary implementations of traditional network devices, allows researchers and practitioners to design new innovative network functions/protocols in a much easier, more flexible, and powerful way. This technology has gained significant attentions from both industry and academia, and it is now at its adoption stage. When considering the adoption of SDN, the security vulnerability assessment is an important process that must be conducted against any system before the deployment and arguably the starting point toward making it more secure.\n\nIn this briefing, we explore the attack surface of SDN by actually attacking each layer of SDN stack. The SDN stack is generally composed of control plane, control channel and data plane: The control plane implementations, which are commonly known as SDN controllers or Network OS, implementations are commonly developed and distributed as an open-source project. Of those various Network OS implementations, we attack the most prevalent ones, OpenDaylight (ODL) [1] and Open Network Operating System (ONOS) [2]. These Network OS projects are both actively led by major telecommunication and networking companies, and some of the companies have already deployed them to their private cloud or network [3, 4]. For the control channel, we also attack a well-known SDN protocol [5], OpenFlow. In the case of the data plane, we test some OpenFlow-enabled switch device products from major vendors, such as HP and Pica8.\n\nOf the attacks that we disclose in this briefing, we demonstrate some of the most critical attacks that directly affect the network (service) availability or confidentiality. For example, one of the attack arbitrarily uninstalls crucial SDN applications running on an ODL(or ONOS) cluster, such as routing, forwarding, or even security service applications. Another attack directly manipulates logical network topology maintained by an ODL(or ONOS) cluster to cause network failures. In addition, we also introduce some of the SDN security projects. We briefly go over the design and implementation of Project Delta, which is an official open-source SDN penetration testing tool pushed forward by Open Networking Foundation Security group, and Security-Mode ONOS, a security extension that protects the core of ONOS from the possible threats of untrusted third-party applications.\n\nReferences [1] Medved, Jan, et al. \"Opendaylight: Towards a model-driven sdn controller architecture.\" 2014 IEEE 15th International Symposium on. IEEE, 2014. [2] Berde, Pankaj, et al. \"ONOS: towards an open, distributed SDN OS.\"Proceedings of the third workshop on Hot topics in software defined networking. ACM, 2014. [3] Jain, Sushant, et al. \"B4: Experience with a globally-deployed software defined WAN.\" ACM SIGCOMM Computer Communication Review. Vol. 43. No. 4. ACM, 2013. [4] CORD: Re\u00adinventing Central Offices for Efficiency and Agility. http://opencord.org (2016). [5] OpenFlow. OpenFlow Switch Specification version 1.1.0. Tech. rep., 2011. http://www.openflow.org/documents/openflow-spec-v1.1.0.pdf."
  },
  "augmenting-static-analysis-using-pintool-ablation": {
    "author": "paul-mehta",
    "description": "Ablation is a tool built to extract information from a process as it executes. This information is then imported into the disassembly environment where it used to resolve virtual calls, highlight regions of code executed, or visually diff samples. The goal of Ablation is to augment static analysis with minimal overhead or user interaction.\r\n                \r\n                C++ binaries can be a real pain to audit sometimes due to virtual calls. Instead of having to reverse class, object, and inheritance relationships, Ablation can resolve any observed virtual calls, and create fully interactive x-refs in IDA; Disassembled C++ reads like C!\r\n                \r\n                When augmenting analysis by importing runtime data, much of the information is displayed using a color scheme. This allows the info to be passively absorbed making it useful, rather than obtrusive. \r\n                \r\n                Ablation makes it simple to diff samples by and highlight where the samples diverge. This is achieved by comparing the code executed rather than just comparing data. Consider comparing a heavily mutated crash sample, and the source sample. The root cause of the crash is normally tedious and unrewarding. Using Ablation, the root cause can often be determined simply by running each sample, and using the appropriate color scheme. This also means that visualizing the code coverage of a sample set becomes as simple as running each.\r\n                \r\n                Recent findings have indicated that highly traversed code is not particularly interesting, and code infrequently executed or adjacent is more interesting. Ablation could be used to identify undocumented features in a product given a sample set. \r\n                \r\n                Vulnerability research is all about the details. Having this information passively displayed could be the difference between confusion and discovery. Ablation will be made open source at BH2016.",
    "plaintextTitle": "Augmenting Static Analysis Using Pintool: Ablation",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=wHIlNRK_HiQ"
      }
    ],
    "youtubeDescription": "by Paul Mehta\n\nAblation is a tool built to extract information from a process as it executes. This information is then imported into the disassembly environment where it used to resolve virtual calls, highlight regions of code executed, or visually diff samples. The goal of Ablation is to augment static analysis with minimal overhead or user interaction.\n\nC++ binaries can be a real pain to audit sometimes due to virtual calls. Instead of having to reverse class, object, and inheritance relationships, Ablation can resolve any observed virtual calls, and create fully interactive x-refs in IDA; Disassembled C++ reads like C!\n\nWhen augmenting analysis by importing runtime data, much of the information is displayed using a color scheme. This allows the info to be passively absorbed making it useful, rather than obtrusive.\n\nAblation makes it simple to diff samples by and highlight where the samples diverge. This is achieved by comparing the code executed rather than just comparing data. Consider comparing a heavily mutated crash sample, and the source sample. The root cause of the crash is normally tedious and unrewarding. Using Ablation, the root cause can often be determined simply by running each sample, and using the appropriate color scheme. This also means that visualizing the code coverage of a sample set becomes as simple as running each.\n\nRecent findings have indicated that highly traversed code is not particularly interesting, and code infrequently executed or adjacent is more interesting. Ablation could be used to identify undocumented features in a product given a sample set.\n\nVulnerability research is all about the details. Having this information passively displayed could be the difference between confusion and discovery. Ablation will be made open source at BH2016."
  },
  "avleak-fingerprinting-antivirus-emulators-for-advanced-malware-evasion": {
    "author": "alexei-bulazel",
    "description": "AVLeak is a tool for fingerprinting consumer antivirus emulators through automated black box testing. AVLeak can be used to extract fingerprints from AV emulators that may be used by malware to detect that it is being analyzed and subsequently evade detection, including environmental artifacts, OS API behavioral inconsistencies, emulation of network connectivity, timing inconsistencies, process introspection, and CPU emulator \"red pills.\"Emulator fingerprints may be discovered through painstaking binary reverse engineering, or with time consuming black box testing using binaries that conditionally choose to behave benignly or drop malware based on the emulated environment. AVLeak significantly advances upon prior approaches to black box testing, allowing researchers to extract emulator fingerprints in just a few seconds, and to script out testing using powerful APIs.AVLeak will be demoed live, showing real world fingerprints discovered using the tool that can be used to detect and evade popular consumer AVs including Kaspersky, Bitdefender engine (licensed out to 20+ other AV products), AVG, and VBA. This survey of emulation detection methods is the most comprehensive examination of the topic ever presented in one place.",
    "plaintextTitle": "AVLeak: Fingerprinting Antivirus Emulators for Advanced Malware Evasion",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Bulazel-AVLeak-Fingerprinting-Antivirus-Emulators-For-Advanced-Malware-Evasion.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=a6yOwvFds78"
      }
    ],
    "youtubeDescription": "by Alexei Bulazel\n\nAVLeak is a tool for fingerprinting consumer antivirus emulators through automated black box testing. AVLeak can be used to extract fingerprints from AV emulators that may be used by malware to detect that it is being analyzed and subsequently evade detection, including environmental artifacts, OS API behavioral inconsistencies, emulation of network connectivity, timing inconsistencies, process introspection, and CPU emulator \"red pills.\"\n\nEmulator fingerprints may be discovered through painstaking binary reverse engineering, or with time consuming black box testing using binaries that conditionally choose to behave benignly or drop malware based on the emulated environment. AVLeak significantly advances upon prior approaches to black box testing, allowing researchers to extract emulator fingerprints in just a few seconds, and to script out testing using powerful APIs.\n\nAVLeak will be demoed live, showing real world fingerprints discovered using the tool that can be used to detect and evade popular consumer AVs including Kaspersky, Bitdefender engine (licensed out to 20+ other AV products), AVG, and VBA. This survey of emulation detection methods is the most comprehensive examination of the topic ever presented in one place."
  },
  "bad-for-enterprise-attacking-byod-enterprise-mobile-security-solutions": {
    "author": "vincent-tan",
    "description": "The global market for Bring Your Own Device (BYOD) and enterprise mobility is expected to quadruple in size over the next four years, hitting $284 billion by 2019. BYOD software is used by some of the largest organizations and governments around the world. Barclays, Walmart, AT&T, Vodafone, United States Department of Homeland Security, United States Army, Australian Department of Environment and numerous other organizations, big and small, all over the world. Enterprise Mobile Security (EMS) is a component of BYOD solutions that promises data, device and communications security for enterprises. Amongst others, it aims to solve Data Loss, Network Privacy and jailbreaking/rooting of devices. Using the Good Technology EMS suite as an example, my talk will show that EMS solutions are largely ineffective and in some cases can even expose an organization to unexpected risks. I will show attacks against EMS protected apps on jailbroken and non-jailbroken devices, putting to rest the rebuttal that CxOs and solution vendors often give penetration testers, \"We do not support jailbroken devices.\" I will also introduce a groundbreaking tool, Swizzler, to help penetration testers confronted with apps wrapped into EMS protections. The tool conveniently automates a large amount of attacks that allows pen-testers to bypass each of the protections that Good and similar solutions implement. In a live demonstration of Swizzler I will show how to disable tampering detection mechanisms and application locks, intercept & decrypt encrypted data, and route \"secure\" HTTP requests through BURP into established Good VPN tunnels to attack servers on an organization's internal network. Swizzler will be released to the world along with my talk at Blackhat USA. Whether you are a CxO, administrator or user, you can't afford not to understand the risks associated with BYOD.",
    "plaintextTitle": "Bad for Enterprise: Attacking BYOD Enterprise Mobile Security Solutions",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Tan-Bad-For-Enterprise-Attacking-BYOD-Enterprise-Mobile-Security-Solutions.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Tan-Bad-For-Enterprise-Attacking-BYOD-Enterprise-Mobile-Security-Solutions-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Tan-Bad-For-Enterprise-Attacking-BYOD-Enterprise-Mobile-Security-Solutions-tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=vwgXBK2rsjA"
      }
    ],
    "youtubeDescription": "by Vincent Tan\n\nThe global market for Bring Your Own Device (BYOD) and enterprise mobility is expected to quadruple in size over the next four years, hitting $284 billion by 2019. BYOD software is used by some of the largest organizations and governments around the world. Barclays, Walmart, AT&T, Vodafone, United States Department of Homeland Security, United States Army, Australian Department of Environment and numerous other organizations, big and small, all over the world. Enterprise Mobile Security (EMS) is a component of BYOD solutions that promises data, device and communications security for enterprises. Amongst others, it aims to solve Data Loss, Network Privacy and jailbreaking/rooting of devices.\n\nUsing the Good Technology EMS suite as an example, my talk will show that EMS solutions are largely ineffective and in some cases can even expose an organization to unexpected risks. I will show attacks against EMS protected apps on jailbroken and non-jailbroken devices, putting to rest the rebuttal that CxOs and solution vendors often give penetration testers, \"We do not support jailbroken devices.\" I will also introduce a groundbreaking tool, Swizzler, to help penetration testers confronted with apps wrapped into EMS protections. The tool conveniently automates a large amount of attacks that allows pen-testers to bypass each of the protections that Good and similar solutions implement. In a live demonstration of Swizzler I will show how to disable tampering detection mechanisms and application locks, intercept & decrypt encrypted data, and route \"secure\" HTTP requests through BURP into established Good VPN tunnels to attack servers on an organization's internal network. Swizzler will be released to the world along with my talk at Blackhat USA. Whether you are a CxO, administrator or user, you can't afford not to understand the risks associated with BYOD."
  },
  "badtunnel-how-do-i-get-big-brother-power": {
    "author": "yang-yu",
    "description": "This presentation will introduce a new threat model. Based on this threat model, we found a flaw in the Windows system. It affects all Windows released in the last two decades, including Windows 10. It also has a very wide range of attacks surface. The attack can be performed on all versions of Internet Explorer, Edge, Microsoft Office, many third-party software, USB flash drives, and even Web server. When this flaw is triggered, YOU ARE BEING WATCHED.\r\n                \r\n                We will also show you how to defend against this threat, particularly on those systems are no longer supported by Microsoft.",
    "plaintextTitle": "BadTunnel: How Do I Get Big Brother Power?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Yu-BadTunnel-How-Do-I-Get-Big-Brother-Power.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Yu-BadTunnel-How-Do-I-Get-Big-Brother-Power-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=-wkskO8jovk"
      }
    ],
    "youtubeDescription": "by Yang Yu\n\nThis presentation will introduce a new threat model. Based on this threat model, we found a flaw in the Windows system. It affects all Windows released in the last two decades, including Windows 10. It also has a very wide range of attacks surface. The attack can be performed on all versions of Internet Explorer, Edge, Microsoft Office, many third-party software, USB flash drives, and even Web server. When this flaw is triggered, YOU ARE BEING WATCHED.\n\nWe will also show you how to defend against this threat, particularly on those systems are no longer supported by Microsoft."
  },
  "badwpad": {
    "author": "maxim-goncharov",
    "description": "WPAD (Web Proxy Auto Discovery) is a protocol that allows computers to automatically discover Web proxy configurations. It is primarily used in networks where clients are only allowed to communicate to the outside through a proxy. The WPAD protocol has been around for almost 20 years (RFC draft 1999-07-28), but has well-known risks to it that have been largely ignored by the security community. This session will present the results of several experiments highlighting the flaws inherent to this badly designed protocol (WPAD), and bring attention to the many ways in which they can be easily exploited. Our research expands on these known flaws and proves a surprisingly broad applicability of \"badWPAD\" for possible malicious use today by testing it in different environments. The speaker will share how his team initially deployed a WPAD experiment to test whether WPAD was still problematic or had been fixed by most software and OS vendors. This experiment included attacks in 1) Intranets and open-access networks (e.g. Free-WIFI spots and corporate networks) and 2) DNS attacks on clients leaking HTTP requests to the internet.Attendees will hear the rather surprising results that this experiment yielded: The DNS portion of the experiment revealed more than 38 million requests to the WPAD honeypot domain names from oblivious customers - while the intranet Free-WIFI experiment proved that almost every second Wifi spot can be utilized as attack surface. This test included Wifi at airport lounges, conferences, hotel and on board of aircrafts, and were amazed that apparently nobody realized what their laptop was secretly requesting. It seems that this neglected WPAD flaw is growing, while it's commonly assumed to be fixed. The paper will be backed up by statistics and reveal why badWPAD remains to be a major security concern and what should be done to protect against this serious risk.",
    "plaintextTitle": "badWPAD",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Goncharov-BadWpad.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Goncharov-BadWpad-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=IDG2_QfNEzQ"
      }
    ],
    "youtubeDescription": "by Maxim Goncharov\n\nWPAD (Web Proxy Auto Discovery) is a protocol that allows computers to automatically discover Web proxy configurations. It is primarily used in networks where clients are only allowed to communicate to the outside through a proxy. The WPAD protocol has been around for almost 20 years (RFC draft 1999-07-28), but has well-known risks to it that have been largely ignored by the security community. This session will present the results of several experiments highlighting the flaws inherent to this badly designed protocol (WPAD), and bring attention to the many ways in which they can be easily exploited. Our research expands on these known flaws and proves a surprisingly broad applicability of \"badWPAD\" for possible malicious use today by testing it in different environments. The speaker will share how his team initially deployed a WPAD experiment to test whether WPAD was still problematic or had been fixed by most software and OS vendors. This experiment included attacks in 1) Intranets and open-access networks (e.g. Free-WIFI spots and corporate networks) and 2) DNS attacks on clients leaking HTTP requests to the internet.\n\nAttendees will hear the rather surprising results that this experiment yielded: The DNS portion of the experiment revealed more than 38 million requests to the WPAD honeypot domain names from oblivious customers - while the intranet Free-WIFI experiment proved that almost every second Wifi spot can be utilized as attack surface. This test included Wifi at airport lounges, conferences, hotel and on board of aircrafts, and were amazed that apparently nobody realized what their laptop was secretly requesting. It seems that this neglected WPAD flaw is growing, while it's commonly assumed to be fixed. The paper will be backed up by statistics and reveal why badWPAD remains to be a major security concern and what should be done to protect against this serious risk."
  },
  "behind-the-scenes-of-ios-security": {
    "author": "ivan-krstic",
    "description": "With over a billion active devices and in-depth security protections spanning every layer from silicon to software, Apple works to advance the state of the art in mobile security with every release of iOS. We will discuss three iOS security mechanisms in unprecedented technical detail, offering the first public discussion of one of them new to iOS 10.HomeKit, Auto Unlock and iCloud Keychain are three Apple technologies that handle exceptionally sensitive user data – controlling devices (including locks) in the user's home, the ability to unlock a user's Mac from an Apple Watch, and the user's passwords and credit card information, respectively. We will discuss the cryptographic design and implementation of our novel secure synchronization fabric which moves confidential data between devices without exposing it to Apple, while affording the user the ability to recover data in case of device loss.Data Protection is the cryptographic system protecting user data on all iOS devices. We will discuss the Secure Enclave Processor present in iPhone 5S and later devices and explain how it enabled a new approach to Data Protection key derivation and brute force rate limiting within a small TCB, making no intermediate or derived keys available to the normal Application Processor.Traditional browser-based vulnerabilities are becoming harder to exploit due to increasingly sophisticated mitigation techniques. We will discuss a unique JIT hardening mechanism in iOS 10 that makes the iOS Safari JIT a more difficult target.",
    "plaintextTitle": "Behind the Scenes of iOS Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Krstic.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=BLGFriOKz6U"
      }
    ],
    "youtubeDescription": "by Ivan Krstic\n\nWith over a billion active devices and in-depth security protections spanning every layer from silicon to software, Apple works to advance the state of the art in mobile security with every release of iOS. We will discuss three iOS security mechanisms in unprecedented technical detail, offering the first public discussion of one of them new to iOS 10.\n\nHomeKit, Auto Unlock and iCloud Keychain are three Apple technologies that handle exceptionally sensitive user data – controlling devices (including locks) in the user's home, the ability to unlock a user's Mac from an Apple Watch, and the user's passwords and credit card information, respectively. We will discuss the cryptographic design and implementation of our novel secure synchronization fabric which moves confidential data between devices without exposing it to Apple, while affording the user the ability to recover data in case of device loss.\n\nData Protection is the cryptographic system protecting user data on all iOS devices. We will discuss the Secure Enclave Processor present in iPhone 5S and later devices and explain how it enabled a new approach to Data Protection key derivation and brute force rate limiting within a small TCB, making no intermediate or derived keys available to the normal Application Processor.\n\nTraditional browser-based vulnerabilities are becoming harder to exploit due to increasingly sophisticated mitigation techniques. We will discuss a unique JIT hardening mechanism in iOS 10 that makes the iOS Safari JIT a more difficult target."
  },
  "beyond-the-mcse-active-directory-for-the-security-professional": {
    "author": "sean-metcalf",
    "description": "Active Directory (AD) is leveraged by 95% of the Fortune 1000 companies for its directory, authentication, and management capabilities. This means that both Red and Blue teams need to have a better understanding of Active Directory, it's security, how it's attacked, and how best to align defenses. This presentation covers key Active Directory components which are critical for security professionals to know in order to defend AD. Properly securing the enterprise means identifying and leveraging appropriate defensive technologies. The provided information is immediately useful and actionable in order to help organizations better secure their enterprise resources against attackers. Highlighted are areas attackers go after including some recently patched vulnerabilities and the exploited weaknesses. This includes the critical Kerberos vulnerability (MS14-068), Group Policy Man-in-the-Middle (MS15-011 & MS15-014) and how they take advantages of AD communication.Some of the content covered:Let's go beyond the standard MCSE material and dive into how Active Directory works focusing on the key components and how they relate to enterprise security.",
    "plaintextTitle": "Beyond the MCSE: Active Directory for the Security Professional",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Metcalf-Beyond-The-MCSE-Active-Directory-For-The-Security-Professional.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Metcalf-Beyond-The-MCSE-Active-Directory-For-The-Security-Professional-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=2w1cesS7pGY"
      }
    ],
    "youtubeDescription": "by Sean Metcalf\n\nActive Directory (AD) is leveraged by 95% of the Fortune 1000 companies for its directory, authentication, and management capabilities. This means that both Red and Blue teams need to have a better understanding of Active Directory, it's security, how it's attacked, and how best to align defenses. This presentation covers key Active Directory components which are critical for security professionals to know in order to defend AD. Properly securing the enterprise means identifying and leveraging appropriate defensive technologies. The provided information is immediately useful and actionable in order to help organizations better secure their enterprise resources against attackers. Highlighted are areas attackers go after including some recently patched vulnerabilities and the exploited weaknesses. This includes the critical Kerberos vulnerability (MS14-068), Group Policy Man-in-the-Middle (MS15-011 & MS15-014) and how they take advantages of AD communication.\n\nSome of the content covered:\n\n    Differing views of Active Directory: admin, attacker, and infosec.\n    The differences between forests and domains, including how multi-domain AD forests affect the security of the forest.\n    Dig into trust relationships and the available security features describing how attack techniques are impacted by implementing these trust security features.\n    AD database format, files, and object storage (including password data).\n    Read-Only Domain Controllers (RODCs), security impact, and potential issues with RODC implementation.\n    Key Domain Controller information and how attackers take advantage.\n    Windows authentication protocols over the years and their weaknesses, including Microsoft's next-generation credential system, Microsoft Passport, and what it means for credential protection.\n    Security posture differences between AD on-premises and in the cloud (Microsoft Azure AD vs Office 365).\n    Key Active Directory security features in the latest Windows OS versions - the benefits and implementation challenges.\n\n\nLet's go beyond the standard MCSE material and dive into how Active Directory works focusing on the key components and how they relate to enterprise security."
  },
  "blunting-the-phishers-spear-a-risk-based-approach-for-defining-user-training-and-awarding-administrative-privileges": {
    "author": "arun-vishwanath",
    "description": "Solving the \"people problem\" of cyber security requires us to understand why people fall victim to spear phishing. Unfortunately, the only proactive solution being used against spear phishing is user training and education. But, judging from the number of continued breaches, training appears to be limited in its effectiveness. Today's leading cybersecurity training programs focus on hooking people in repeated simulated spear phishing attacks and then showing them the nuances in the emails they missed. This \"gotcha game\" presumes that users merely lack knowledge, and if they are told often enough and repeatedly shown what they lack, they would become better at spear phishing detection. This is akin to trying to teach people to drive by constantly causing accidents and then pointing out why they had an accident each time. We propose a radical change to this \"one-size-fits all\" approach. Recent human factors researchthe Suspicion, Cognition, Automaticity Model (SCAM) [1]identifies a small set of factors that lead to individual phishing victimization. Using the SCAM, we propose the development of an employee Cyber Risk Index (CRI). Similar to how financial credit scores work, the CRI will provide security analysts the ability to pinpoint the weak-links in organizations and identify who is likely to fall victim, who needs training, how much training, and also what the training should focus on. The CRI will also allow security analysts to identify which users get administrative access, replacing the current mostly binary, role-based apportioning method, where individuals are given access based on their organizational role and responsibilities, with a system that is based on individuals' quantified cyber risk propensity. The CRI based approach we present will lead to individualized, cognitive-behavioral training and an evidence-based approach to awarding users' admin privileges. These are paradigm-changing solutions that will altogether improve individual cyber resilience and blunt the effectiveness of spear phishing.",
    "plaintextTitle": "Blunting the Phisher's Spear: A Risk-Based Approach for Defining User Training and Awarding Administrative Privileges",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Vishwanath-Blunting-The-Phishers-Spear-A-Risk-Based-Approach-For-Defining-User-Training-And-Awarding-Administrative-Privileges.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Vishwanath-Blunting-The-Phishers-Spear-A-Risk-Based-Approach-For-Defining-User-Training-And-Awarding-Administrative-Privileges-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5j6iSDBmCP4"
      }
    ],
    "youtubeDescription": "by Arun Vishwanath\n\nSolving the \"people problem\" of cyber security requires us to understand why people fall victim to spear phishing. Unfortunately, the only proactive solution being used against spear phishing is user training and education. But, judging from the number of continued breaches, training appears to be limited in its effectiveness. Today's leading cybersecurity training programs focus on hooking people in repeated simulated spear phishing attacks and then showing them the nuances in the emails they missed. This \"gotcha game\" presumes that users merely lack knowledge, and if they are told often enough and repeatedly shown what they lack, they would become better at spear phishing detection. This is akin to trying to teach people to drive by constantly causing accidents and then pointing out why they had an accident each time.\n\nWe propose a radical change to this \"one-size-fits all\" approach. Recent human factors researchthe Suspicion, Cognition, Automaticity Model (SCAM) [1]identifies a small set of factors that lead to individual phishing victimization. Using the SCAM, we propose the development of an employee Cyber Risk Index (CRI). Similar to how financial credit scores work, the CRI will provide security analysts the ability to pinpoint the weak-links in organizations and identify who is likely to fall victim, who needs training, how much training, and also what the training should focus on. The CRI will also allow security analysts to identify which users get administrative access, replacing the current mostly binary, role-based apportioning method, where individuals are given access based on their organizational role and responsibilities, with a system that is based on individuals' quantified cyber risk propensity. The CRI based approach we present will lead to individualized, cognitive-behavioral training and an evidence-based approach to awarding users' admin privileges. These are paradigm-changing solutions that will altogether improve individual cyber resilience and blunt the effectiveness of spear phishing."
  },
  "breaking-fido-are-exploits-in-there": {
    "author": "jerrod-chong",
    "description": "The state of authentication is in such disarray today that a black hat is no longer needed to wreak havoc. One avenue to authentication improvement is offered by the FIDO Alliance's open specifications built around public key cryptography. Does FIDO present a better mousetrap? Are there security soft spots for potential exploitation, such as man-in-the-middle attacks, exploits aimed at supporting architecture, or compromises targeting physical hardware? We will pinpoint where vulnerabilities are hidden in FIDO deployments, how difficult they are to exploit, and how enterprises and organizations can protect themselves.",
    "plaintextTitle": "Breaking FIDO: Are Exploits in There?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Chong-Breaking-FIDO-Are-Exploits-In-There.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=J53Ya7E5HGQ"
      }
    ],
    "youtubeDescription": "by Jerrod Chong\n\nThe state of authentication is in such disarray today that a black hat is no longer needed to wreak havoc. One avenue to authentication improvement is offered by the FIDO Alliance's open specifications built around public key cryptography. Does FIDO present a better mousetrap? Are there security soft spots for potential exploitation, such as man-in-the-middle attacks, exploits aimed at supporting architecture, or compromises targeting physical hardware? We will pinpoint where vulnerabilities are hidden in FIDO deployments, how difficult they are to exploit, and how enterprises and organizations can protect themselves."
  },
  "breaking-hardware-enforced-security-with-hypervisors": {
    "author": "joseph-sharkey",
    "description": "Hardware-Enforced Security is touted as the panacea solution to many modern computer security challenges. While certainly adding robust options to the defenders toolset, they are not without their own weaknesses. In this talk we will demonstrate how low-level technologies such as hypervisors can be used to subvert the claims of security made by these mechanisms. Specifically, we will show how a hypervisor rootkit can bypass Intel's Trusted Execution Environment (TXT) DRTM (dynamic root of trust measurement) and capture keys from Intel's AES-NI instructions. These attacks against TXT and AES-NI have never been published before. Trusted computing has had a varied history, to include technologies such as Trusted Execution Technology (TXT), ARM TrustZone, and now Microsoft Isolated User Mode and Intel SGX. All of these technologies attempt to protect user data from privileged processes snooping or controlling execution. These technologies claim that no elevated process, whether kernel based, System Management Mode (SMM) based, or hypervisor based will be able to compromise the user's data and execution. This presentation will highlight the age-old problem of misconfiguration of Intel TXT by exploiting a machine through the use of another Intel technology, the Type-1 hypervisor (VT-x). Problems with these technologies have surfaced not as design issues but during implementation. Whether there remains a hardware weakness where attestation keys can be compromised, or a software and hardware combination, such as exposed DMA that permits exfiltration, and sometimes modification, of user process memory. This presentation will highlight one of these implementation flaws as exhibited by the open source tBoot project and the underlying Intel TXT technology. Summation will offer defenses against all too often pitfalls when deploying these systems, including proper deployment design using sealed storage, remote attestation, and hardware hardening.",
    "plaintextTitle": "Breaking Hardware-Enforced Security with Hypervisors",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Sharkey-Breaking-Hardware-Enforced-Security-With-Hypervisors.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=s3UfzxY1z40"
      }
    ],
    "youtubeDescription": "by Joseph Sharkey\n\nHardware-Enforced Security is touted as the panacea solution to many modern computer security challenges. While certainly adding robust options to the defenders toolset, they are not without their own weaknesses. In this talk we will demonstrate how low-level technologies such as hypervisors can be used to subvert the claims of security made by these mechanisms. Specifically, we will show how a hypervisor rootkit can bypass Intel's Trusted Execution Environment (TXT) DRTM (dynamic root of trust measurement) and capture keys from Intel's AES-NI instructions. These attacks against TXT and AES-NI have never been published before. Trusted computing has had a varied history, to include technologies such as Trusted Execution Technology (TXT), ARM TrustZone, and now Microsoft Isolated User Mode and Intel SGX. All of these technologies attempt to protect user data from privileged processes snooping or controlling execution. These technologies claim that no elevated process, whether kernel based, System Management Mode (SMM) based, or hypervisor based will be able to compromise the user's data and execution.\n\nThis presentation will highlight the age-old problem of misconfiguration of Intel TXT by exploiting a machine through the use of another Intel technology, the Type-1 hypervisor (VT-x). Problems with these technologies have surfaced not as design issues but during implementation. Whether there remains a hardware weakness where attestation keys can be compromised, or a software and hardware combination, such as exposed DMA that permits exfiltration, and sometimes modification, of user process memory. This presentation will highlight one of these implementation flaws as exhibited by the open source tBoot project and the underlying Intel TXT technology. Summation will offer defenses against all too often pitfalls when deploying these systems, including proper deployment design using sealed storage, remote attestation, and hardware hardening."
  },
  "breaking-kernel-address-space-layout-randomization-kaslr-with-intel-tsx": {
    "author": "yeongjin-jang",
    "description": "Kernel hardening has been an important topic, as many applications and security mechanisms often consider the kernel their Trusted Computing Base (TCB). Among various hardening techniques, kernel address space layout randomization (KASLR) is the most effective and widely adopted technique that can practically mitigate various memory corruption vulnerabilities, such as buffer overflow and use-after-free. In principle, KASLR is secure as long as no memory disclosure vulnerability exists and high randomness is ensured. In this talk, we present a novel timing side-channel attack against KASLR, called DrK (De-randomizing Kernel address space), which can accurately, silently, and rapidly de-randomize the kernel memory layout by identifying page properties: unmapped, executable, or non-executable pages. DrK is based on a new hardware feature, Intel Transactional Synchronization Extension (TSX), which allows us to execute a transaction without interrupting the underlying operating system even when the transaction is aborted due to errors, such as access violation and page faults. In DrK, we turned this property into a timing channel that can accurately distinguish the mapping status (i.e., mapped versus unmapped) and execution status (i.e., executable versus non-executable) of the privileged address space. In addition to its surprising accuracy and precision, the DrK attack is not only universally applicable to all OSes, even under a virtualized environment, but also has no visible footprint, making it nearly impossible to be detected in practice. We demonstrate that DrK breaks the KASLR of all major OSes, including Windows, Linux, and OS X with near-perfect accuracy in a few seconds. Finally, we propose potential hardware modifications that can prevent or mitigate the DrK attack.",
    "plaintextTitle": "Breaking Kernel Address Space Layout Randomization (KASLR) with Intel TSX",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Jang-Breaking-Kernel-Address-Space-Layout-Randomization-KASLR-With-Intel-TSX.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Jang-Breaking-Kernel-Address-Space-Layout-Randomization-KASLR-With-Intel-TSX-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=rtuXG28g0CU"
      }
    ],
    "youtubeDescription": "by Yeongjin Jang  &  Sangho Lee  &  Taesoo Kim\n\nKernel hardening has been an important topic, as many applications and security mechanisms often consider the kernel their Trusted Computing Base (TCB). Among various hardening techniques, kernel address space layout randomization (KASLR) is the most effective and widely adopted technique that can practically mitigate various memory corruption vulnerabilities, such as buffer overflow and use-after-free. In principle, KASLR is secure as long as no memory disclosure vulnerability exists and high randomness is ensured. In this talk, we present a novel timing side-channel attack against KASLR, called DrK (De-randomizing Kernel address space), which can accurately, silently, and rapidly de-randomize the kernel memory layout by identifying page properties: unmapped, executable, or non-executable pages. DrK is based on a new hardware feature, Intel Transactional Synchronization Extension (TSX), which allows us to execute a transaction without interrupting the underlying operating system even when the transaction is aborted due to errors, such as access violation and page faults. In DrK, we turned this property into a timing channel that can accurately distinguish the mapping status (i.e., mapped versus unmapped) and execution status (i.e., executable versus non-executable) of the privileged address space. In addition to its surprising accuracy and precision, the DrK attack is not only universally applicable to all OSes, even under a virtualized environment, but also has no visible footprint, making it nearly impossible to be detected in practice. We demonstrate that DrK breaks the KASLR of all major OSes, including Windows, Linux, and OS X with near-perfect accuracy in a few seconds. Finally, we propose potential hardware modifications that can prevent or mitigate the DrK attack."
  },
  "breaking-payment-points-of-interaction-poi": {
    "author": "nir-valtman",
    "description": "The payment industry is becoming more driven by security standards. However, the corner stones are still broken even with the latest implementations of these payments systems, mainly due to focusing on the standards rather than security. The best example for that is the ability to bypass protections put in place by points of interaction (POI) devices, by simple modifying several files on the point of sale or manipulating the communication protocols. In this presentation, we will explain the main flaws and provide live demonstrations of several weaknesses on a widely used pinpad. We will not exploit the operating system of the pinpad, but actually bypass the application layer and the business logic protections, i.e. the crypto algorithm is secure, but everything around it is broken. As part of our demos, we will include EMV bypassing, avoiding PIN protections and scraping PANs from various channels.",
    "plaintextTitle": "Breaking Payment Points of Interaction (POI)",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Valtman-Breaking-Payment-Points-of-Interaction.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=B3CUWh_Q-h4"
      }
    ],
    "youtubeDescription": "by Nir Valtman  &  Patrick Watson\n\nThe payment industry is becoming more driven by security standards. However, the corner stones are still broken even with the latest implementations of these payments systems, mainly due to focusing on the standards rather than security. The best example for that is the ability to bypass protections put in place by points of interaction (POI) devices, by simple modifying several files on the point of sale or manipulating the communication protocols. In this presentation, we will explain the main flaws and provide live demonstrations of several weaknesses on a widely used pinpad. We will not exploit the operating system of the pinpad, but actually bypass the application layer and the business logic protections, i.e. the crypto algorithm is secure, but everything around it is broken. As part of our demos, we will include EMV bypassing, avoiding PIN protections and scraping PANs from various channels."
  },
  "brute-forcing-lockdown-harddrive-pin-codes": {
    "author": "colin-oflynn",
    "description": "This presentation demonstrates a method of brute-forcing an AES-256 encrypted hard drive by spoofing the front-panel keyboard. In addition to tears into the internal design of the hard drive, and extends the work by J. Czarny & R. Rigo to validate the (in)security of any encrypted drive based on the MB86C311 chipset.",
    "plaintextTitle": "Brute-Forcing Lockdown Harddrive PIN Codes",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-OFlynn-Brute-Forcing-Lockdown-Harddrive-PIN-Codes.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=FAwtXBXQ460"
      }
    ],
    "youtubeDescription": "by Colin O'Flynn\n\nThis presentation demonstrates a method of brute-forcing an AES-256 encrypted hard drive by spoofing the front-panel keyboard. In addition to tears into the internal design of the hard drive, and extends the work by J. Czarny & R. Rigo to validate the (in)security of any encrypted drive based on the MB86C311 chipset."
  },
  "building-a-product-security-incident-response-team-learnings-from-the-hivemind": {
    "author": "kymberlee-price",
    "description": "You've received vulnerability reports in your application or product, now what? As a positive, there is an abundance of incident response guidance for network security and a number of companies that have published their Product Security Incident Response Team (PSIRT) process for customers at a high level. Yet there is a dearth of detailed resources on how to implement PSIRT processes for organizations that have realized that Stage 7 of the SDL process (Response). To not only build but maintain secure products, organizations need to create mechanisms enabling their incident response teams to receive and respond to product incident reports, effectively partnering with development teams, customer support, and communications teams. \r\n                \r\n                This session will be targeted at small to medium companies that have small or overstretched security teams, and will share content and best practices to support these teams' product incident response programs.  Attendees will be provided with templates and actionable recommendations based on successful best practices from multiple mature security response organizations.",
    "plaintextTitle": "Building a Product Security Incident Response Team: Learnings from the Hivemind",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Price-Building-A-Product-Security-Incident-Response-Team-Learnings-From-The-Hivemind.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=x5IbbLPiv-M"
      }
    ],
    "youtubeDescription": "by Kymberlee Price\n\nYou've received vulnerability reports in your application or product, now what? As a positive, there is an abundance of incident response guidance for network security and a number of companies that have published their Product Security Incident Response Team (PSIRT) process for customers at a high level. Yet there is a dearth of detailed resources on how to implement PSIRT processes for organizations that have realized that Stage 7 of the SDL process (Response). To not only build but maintain secure products, organizations need to create mechanisms enabling their incident response teams to receive and respond to product incident reports, effectively partnering with development teams, customer support, and communications teams.\n\nThis session will be targeted at small to medium companies that have small or overstretched security teams, and will share content and best practices to support these teams' product incident response programs. Attendees will be provided with templates and actionable recommendations based on successful best practices from multiple mature security response organizations."
  },
  "building-trust-and-enabling-innovation-for-voice-enabled-iot": {
    "author": "lynn-terwoerds",
    "description": "Voice enabled technology provides developers with great innovation opportunities as well as risks. The Voice Privacy Alliance created a set of 39 Agile security stories specifically for voice enabled IoT products as part of the Voice Privacy Innovation Toolkit. These security stories help product owners and security developer focals bake security into their voice enabled products to save time, money and decrease incidents and reputation damage. This is a very practical, hands-on tool for developers that the Voice Privacy Alliance believes is needed to secure voice enabled technologies and promote innovation.",
    "plaintextTitle": "Building Trust & Enabling Innovation for Voice Enabled IoT",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Terwoerds-Building-Trust-&-Enabling-Innovation-For-Voice-Enabled-IoT.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=IoQabUcmsm4"
      }
    ],
    "youtubeDescription": "by Lynn Terwoerds\n\nVoice enabled technology provides developers with great innovation opportunities as well as risks. The Voice Privacy Alliance created a set of 39 Agile security stories specifically for voice enabled IoT products as part of the Voice Privacy Innovation Toolkit. These security stories help product owners and security developer focals bake security into their voice enabled products to save time, money and decrease incidents and reputation damage. This is a very practical, hands-on tool for developers that the Voice Privacy Alliance believes is needed to secure voice enabled technologies and promote innovation."
  },
  "call-me-gathering-threat-intelligence-on-telephony-scams-to-detect-fraud": {
    "author": "aude-marzuoli",
    "description": "Robocalling, voice phishing and caller ID spoofing are common cybercrime techniques used to launch scam campaigns through the telephony channel that many people have long trusted. More than 660,000 online complaints regarding unwanted phone calls were recorded on the top six phone complaints websites in 2015.  More reliable than online complaints, a telephony honeypot provides complete, accurate and timely information about unwanted phone calls across the United States. By tracking calling patterns in a large telephony honeypot receiving over 600,000 calls per month from more than 90,000 unique source phone numbers, we gathered threat intelligence in the telephony channel.  Leveraging this data we developed a methodology to uniquely \"fingerprint\" bad actors hiding behind multiple phone numbers and detect them within the first few seconds of a call.  Over several months, more than 100,000 calls were recorded and several millions call records analyzed to validate our methodology.  Our results show that only a few bad actors are responsible for the majority of the spam and scam calls and that they can be quickly identified with high accuracy using features extracted from the audio.  This discovery has major implications for law enforcement and businesses that are presently engaged in combatting the rise of telephony fraud.",
    "plaintextTitle": "Call Me: Gathering Threat Intelligence on Telephony Scams to Detect Fraud",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Marzuoli-Call-Me-Gathering-Threat-Intelligence-On-Telephony-Scams-To-Detect-Fraud.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Marzuoli-Call-Me-Gathering-Threat-Intelligence-On-Telephony-Scams-To-Detect-Fraud-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=HLYh1Mkd7mg"
      }
    ],
    "youtubeDescription": "by Aude Marzuoli\n\nRobocalling, voice phishing and caller ID spoofing are common cybercrime techniques used to launch scam campaigns through the telephony channel that many people have long trusted. More than 660,000 online complaints regarding unwanted phone calls were recorded on the top six phone complaints websites in 2015. More reliable than online complaints, a telephony honeypot provides complete, accurate and timely information about unwanted phone calls across the United States. By tracking calling patterns in a large telephony honeypot receiving over 600,000 calls per month from more than 90,000 unique source phone numbers, we gathered threat intelligence in the telephony channel. Leveraging this data we developed a methodology to uniquely \"fingerprint\" bad actors hiding behind multiple phone numbers and detect them within the first few seconds of a call. Over several months, more than 100,000 calls were recorded and several millions call records analyzed to validate our methodology. Our results show that only a few bad actors are responsible for the majority of the spam and scam calls and that they can be quickly identified with high accuracy using features extracted from the audio. This discovery has major implications for law enforcement and businesses that are presently engaged in combatting the rise of telephony fraud."
  },
  "can-you-trust-me-now-an-exploration-into-the-mobile-threat-landscape": {
    "author": "josh-thomas",
    "description": "Before we dive into specific mobile vulnerabilities and talk as if the end times are upon us, let us pop the stack and talk about how the mobile environment works as a whole. We will explore the assumptions and design paradigms of each player in the overall mobile space, along with the requirements and inheritance problems they face. The value of this approach is that it allows us to understand and couch the impacts and implications of all mobile vulnerabilities, be it bugs existing today or theoretical future vulnerabilities. The approach also allows us to catalogue all the design assumptions made and search for any generalized logical flaws that could serve as a lynchpin to undermine the entirety of mobile security and trust. This talk focuses on the entirety of the mobile ecosystem, from the hardware components to the operating systems to the networks they connect to. We will explore the core components across mobile vendors and operating systems, focusing on bugs, logic, and root problems that potentially effect all mobile devices. We will discuss the limitations of mobile trusted computing and what can be done to protect both your data and the devices your data reside on. From the specific perspectives of trusted computing and hardware integrity, there are a handful of smartphone hardware platforms on the market. OEMs are constrained to release devices based on selecting and trusting one of these platforms. If a skilled attacker can break trust at the hardware level, the entire device becomes compromised at a very basic (and largely undetectable) level. This talk is about how to break that trust.",
    "plaintextTitle": "Can You Trust Me Now?  An Exploration into the Mobile Threat Landscape",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Thomas-Can-You-Trust-Me-Now.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ztS7qDDB7FY"
      }
    ],
    "youtubeDescription": "by Josh Thomas  &  Shawn Moyer\n\nBefore we dive into specific mobile vulnerabilities and talk as if the end times are upon us, let us pop the stack and talk about how the mobile environment works as a whole. We will explore the assumptions and design paradigms of each player in the overall mobile space, along with the requirements and inheritance problems they face. The value of this approach is that it allows us to understand and couch the impacts and implications of all mobile vulnerabilities, be it bugs existing today or theoretical future vulnerabilities. The approach also allows us to catalogue all the design assumptions made and search for any generalized logical flaws that could serve as a lynchpin to undermine the entirety of mobile security and trust.\n\nThis talk focuses on the entirety of the mobile ecosystem, from the hardware components to the operating systems to the networks they connect to. We will explore the core components across mobile vendors and operating systems, focusing on bugs, logic, and root problems that potentially effect all mobile devices. We will discuss the limitations of mobile trusted computing and what can be done to protect both your data and the devices your data reside on. From the specific perspectives of trusted computing and hardware integrity, there are a handful of smartphone hardware platforms on the market. OEMs are constrained to release devices based on selecting and trusting one of these platforms. If a skilled attacker can break trust at the hardware level, the entire device becomes compromised at a very basic (and largely undetectable) level. This talk is about how to break that trust."
  },
  "canspy-a-platform-for-auditing-can-devices": {
    "author": "jonathan-christofer-demay",
    "description": "In the past few years, several tools have been released allowing hobbyists to connect to CAN buses found in cars. This is welcomed as the CAN protocol is becoming the backbone for embedded computers found in smartcars. Its use is now even spreading outside the car through the OBD-II connector: usage-based policies from insurance companies, air-pollution control from law enforcement or engine diagnostics from smartphones for instance. Nonetheless, these tools will do no more than what professional tools from automobile manufacturers can do. In fact, they will do less as they do not have knowledge of upper-layer protocols.\r\n                \r\n                Security auditors are used to dealing with this kind of situation: they reverse-engineer protocols before implementing them on top of their tool of choice. However, to be efficient at this, they need more than just being able to listen to or interact with what they are auditing. Precisely, they need to be able to intercept communications and block them, forward them or modify them on the fly. This is why, for example, a platform such as Burp Suite is popular when it comes to auditing web applications.\r\n                \r\n                In this talk, we present CANSPY, a platform giving security auditors such capabilities when auditing CAN devices. Not only can it block, forward or modify CAN frames on the fly, it can do so autonomously with a set of rules or interactively using Ethernet and a packet manipulation framework such as Scapy. It is also worth noting that it was designed to be cheap and easy to build as it is mostly made of inexpensive COTS. Last but not least, we demonstrate its versatility by turning around a security issue usually considered when it comes to cars: instead of auditing an electronic control unit (ECU) through the OBD-II connector, we are going to partially emulate ECUs in order to audit a device that connects to this very connector.",
    "plaintextTitle": "CANSPY: A Platform for Auditing CAN Devices",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Demay-CANSPY-A-Platorm-For-Auditing-CAN-Devices.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Demay-CANSPY-A-Platorm-For-Auditing-CAN-Devices-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=vTsdxNGS_xc"
      }
    ],
    "youtubeDescription": "In the past few years, several tools have been released allowing hobbyists to connect to CAN buses found in cars. This is welcomed as the CAN protocol is becoming the backbone for embedded computers found in smart cars. Its use is now even spreading outside the car through the OBD-II connector: usage-based policies from insurance companies, air-pollution control from law enforcement or engine diagnostics from smartphones for instance. Nonetheless, these tools will do no more than what professional tools from automobile manufacturers can do. In fact, they will do less as they do not have knowledge of upper-layer protocols. Security auditors are used to deal with this kind of situation: they reverse-engineer protocols before implementing them on top of their tool of choice. However, to be efficient at this, they need more than just being able to listen to or interact with what they are auditing. Precisely, they need to be able to intercept communications and block them, forward them or modify them on the fly. This is why, for example, a framework such as Burp Suite is popular when it comes to auditing web applications. In this paper, we present CANSPY, a framework giving security auditors such capabilities when auditing CAN devices. Not only can it block, forward or modify CAN frames on the fly, it can do so autonomously with a set of rules or interactively using Ethernet and a packet manipulation framework such as Scapy.\n\nIt is also worth noting that it was designed to be cheap and easy to build as it is mostly made of inexpensive COTS. Last but not least, we demonstrate its versatility by turning around a security issue usually considered when it comes to cars: instead of auditing an electronic control unit (ECU) through the OBD-II connector, we are going to partially emulate ECUs in order to audit a device that connects to this very connector.\n\nBio:\nJonathan-Christofer Demay, PhD is the current penetration testing team leader at AIRBUS Defense and Space. As a former academic researcher, he has been working on IDS bypassing, intrusion detection and general network security. Now a consultant for various key industries and government bodies, he is working on incident response, penetration testing and social engineering. \n\nArnold Lebrun is a command and control engineer currently working at AIRBUS Defense and Space. He is focusing on security issues for several projects in the aerospace industry and related areas such as radioactive waste disposal facilities or large telescopes. He also supports the penetration testing team for perimeters that include ICS infrastructures or embedded electronics."
  },
  "captain-hook-pirating-avs-to-bypass-exploit-mitigations": {
    "author": "udi-yavo",
    "description": "Put a low-level security researcher in front of hooking mechanisms and you get industry-wide vulnerability notifications, affecting security tools such as Anti-Virus, Anti-Exploitations and DLP, as well as non-security applications such as gaming and productivity tools. In this talk we reveal six(!) different security issues that we uncovered in various hooking engines. The vulnerabilities we found enable a threat actor to bypass the security measures of the underlying operating system. As we uncovered the vulnerabilities one-by-one we found them to impact commercial engines, such as Microsoft's Detours, open source engines such as EasyHook and proprietary engines such as those belonging to TrendMicro, Symantec, Kaspersky and about twenty others. In this talk we'll survey the different vulnerabilities, and deep dive into a couple of those. In particular, we'll take a close look at a vulnerability appearing in the most popular commercial hooking engine of a large vendor. This vulnerability affects the most widespread productivity applications and forced the vendor to not only fix their engine, but also that their customers fix their applications prior to releasing the patch to the public. Finally, we'll demonstrate how security tools can be used as an intrusion channel for threat actors, ironically defeating security measures.",
    "plaintextTitle": "Captain Hook: Pirating AVs to Bypass Exploit Mitigations",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Yavo-Captain-Hook-Pirating-AVs-To-Bypass-Exploit-Mitigations.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Yavo-Captain-Hook-Pirating-AVs-To-Bypass-Exploit-Mitigations-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=jakv68viVYc"
      }
    ],
    "youtubeDescription": "by Udi Yavo  &  Tomer Bitton\n\nPut a low-level security researcher in front of hooking mechanisms and you get industry-wide vulnerability notifications, affecting security tools such as Anti-Virus, Anti-Exploitations and DLP, as well as non-security applications such as gaming and productivity tools. In this talk we reveal six(!) different security issues that we uncovered in various hooking engines. The vulnerabilities we found enable a threat actor to bypass the security measures of the underlying operating system. As we uncovered the vulnerabilities one-by-one we found them to impact commercial engines, such as Microsoft's Detours, open source engines such as EasyHook and proprietary engines such as those belonging to TrendMicro, Symantec, Kaspersky and about twenty others.\n\nIn this talk we'll survey the different vulnerabilities, and deep dive into a couple of those. In particular, we'll take a close look at a vulnerability appearing in the most popular commercial hooking engine of a large vendor. This vulnerability affects the most widespread productivity applications and forced the vendor to not only fix their engine, but also that their customers fix their applications prior to releasing the patch to the public. Finally, we'll demonstrate how security tools can be used as an intrusion channel for threat actors, ironically defeating security measures."
  },
  "capturing-0day-exploits-with-perfectly-placed-hardware-traps": {
    "author": "cody-pierce",
    "description": "The security industry has gone to great lengths to make exploitation more difficult. Yet we continue to see weaponized exploits used in malware campaigns and targeted attacks capable of bypassing OS and vendor exploit mitigation strategies. Many of these newly deployed mitigations target code-reuse attacks like return-oriented-programming. Unfortunately, the reality is that once attackers have control over code execution it's only a matter of time before they can circumvent these defenses, as the recent rise of EMET bypasses illustrates. We propose a new strategy to raise the bar significantly. Our approach blocks exploits before they gain execution, preventing the opportunity to bypass mitigations. This presentation introduces a new cross-platform, hardware-assisted Control-Flow Integrity (CFI) approach to mitigate control-flow hijack attacks on the Intel architecture. Prior research has demonstrated the effectiveness of leveraging processor-provided features such as the Performance Monitoring Unit (PMU) in order to trap various events for detecting ROP behaviors. We extend and generalize this approach by fine-tuning low-level processor features that enable us to insert a CFI policy to detect and prevent abnormal branches in real-time. Our promising results have shown this approach capable of protecting COTS binaries from control-flow hijack attempts stemming from use-after-free and memory corruption vulnerabilities with acceptable overhead on modern Windows and Linux systems. In this talk, we will cover our research methodology, results, and limitations. We will highlight novel solutions to major obstacles we faced, including: proper tracking of Windows thread context swapping; configuration of PMU interrupt delivery without tripping Microsoft's PatchGuard; efficient algorithms for discovery of valid branch destinations in PE and ELF files at run-time; and the impact of operating in virtualized environments. The effectiveness of our approach using hardware-assisted traps to monitor program execution and enforce CFI policies on mispredicted branches will be demonstrated in real-time. We will prevent weaponized exploits targeting Windows and Linux x86-64 operating systems that nominally bypass anti-exploit technologies like Microsoft's EMET tool. We will also present collected metrics on performance impact and the real-world applications of this technology.",
    "plaintextTitle": "Capturing 0day Exploits with PERFectly Placed Hardware Traps",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Pierce-Capturing-0days-With-PERFectly-Placed-Hardware-Traps.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Pierce-Capturing-0days-With-PERFectly-Placed-Hardware-Traps-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=0gjaM1UYK8o"
      }
    ],
    "youtubeDescription": "by Cody Pierce  &  Matt Spisak  &  Kenneth Fitch\n\nThe security industry has gone to great lengths to make exploitation more difficult. Yet we continue to see weaponized exploits used in malware campaigns and targeted attacks capable of bypassing OS and vendor exploit mitigation strategies. Many of these newly deployed mitigations target code-reuse attacks like return-oriented-programming. Unfortunately, the reality is that once attackers have control over code execution it's only a matter of time before they can circumvent these defenses, as the recent rise of EMET bypasses illustrates. We propose a new strategy to raise the bar significantly. Our approach blocks exploits before they gain execution, preventing the opportunity to bypass mitigations.\n\nThis presentation introduces a new cross-platform, hardware-assisted Control-Flow Integrity (CFI) approach to mitigate control-flow hijack attacks on the Intel architecture. Prior research has demonstrated the effectiveness of leveraging processor-provided features such as the Performance Monitoring Unit (PMU) in order to trap various events for detecting ROP behaviors. We extend and generalize this approach by fine-tuning low-level processor features that enable us to insert a CFI policy to detect and prevent abnormal branches in real-time. Our promising results have shown this approach capable of protecting COTS binaries from control-flow hijack attempts stemming from use-after-free and memory corruption vulnerabilities with acceptable overhead on modern Windows and Linux systems.\n\nIn this talk, we will cover our research methodology, results, and limitations. We will highlight novel solutions to major obstacles we faced, including: proper tracking of Windows thread context swapping; configuration of PMU interrupt delivery without tripping Microsoft's PatchGuard; efficient algorithms for discovery of valid branch destinations in PE and ELF files at run-time; and the impact of operating in virtualized environments. The effectiveness of our approach using hardware-assisted traps to monitor program execution and enforce CFI policies on mispredicted branches will be demonstrated in real-time. We will prevent weaponized exploits targeting Windows and Linux x86-64 operating systems that nominally bypass anti-exploit technologies like Microsoft's EMET tool. We will also present collected metrics on performance impact and the real-world applications of this technology."
  },
  "certificate-bypass-hiding-and-executing-malware-from-a-digitally-signed-executable": {
    "author": "tom-nipravsky",
    "description": "Malware developers are constantly looking for new ways to evade the detection and prevention capabilities of security solutions. In recent years, we have seen many different tools, such as packers and new encryption techniques, help malware reach this goal of hiding the malicious code. If the security solution cannot unpack the compressed or encrypted malicious content (or at least unpack it dynamically), then the security solution will not be able to identify that it is facing malware. To further complicate the matter, we present a new technique for hiding malware (encrypted and unencrypted) inside a digitally signed file (while still keeping the file with a valid certificate) and executing it from the memory, using a benign executable (which acts as a reflective EXE loader, written from scratch). Our research demonstrates our Certificate Bypass tool and the Reflective EXE Loader. During the presentation, we will focus on the research we conducted on the PE file structure. We will take a closer look at the certificate table and how we can inject data to the table without damaging the certificate itself (the file will still look and be treated as a valid digitally signed file). We will examine the tool we wrote to execute PE files from memory (without writing them to the disk). We will cover the relevant fields in the PE structure, as well as the steps required to run a PE file directly from the memory without requiring any files on disk. Last, we will conclude the demonstration with a live example and show how we bypass security solutions based on the way they look at the certificate table.",
    "plaintextTitle": "Certificate Bypass: Hiding and Executing Malware from a Digitally Signed Executable",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Nipravsky-Certificate-Bypass-Hiding-And-Executing-Malware-From-A-Digitally-Signed-Executable-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=yG4wj_0iVkQ"
      }
    ],
    "youtubeDescription": "by Tom Nipravsky\n\nMalware developers are constantly looking for new ways to evade the detection and prevention capabilities of security solutions. In recent years, we have seen many different tools, such as packers and new encryption techniques, help malware reach this goal of hiding the malicious code. If the security solution cannot unpack the compressed or encrypted malicious content (or at least unpack it dynamically), then the security solution will not be able to identify that it is facing malware. To further complicate the matter, we present a new technique for hiding malware (encrypted and unencrypted) inside a digitally signed file (while still keeping the file with a valid certificate) and executing it from the memory, using a benign executable (which acts as a reflective EXE loader, written from scratch). Our research demonstrates our Certificate Bypass tool and the Reflective EXE Loader. During the presentation, we will focus on the research we conducted on the PE file structure. We will take a closer look at the certificate table and how we can inject data to the table without damaging the certificate itself (the file will still look and be treated as a valid digitally signed file). We will examine the tool we wrote to execute PE files from memory (without writing them to the disk). We will cover the relevant fields in the PE structure, as well as the steps required to run a PE file directly from the memory without requiring any files on disk. Last, we will conclude the demonstration with a live example and show how we bypass security solutions based on the way they look at the certificate table."
  },
  "crippling-https-with-unholy-pac": {
    "author": "itzik-kotler",
    "description": "You're in a potentially malicious network (free WiFi, guest network, or maybe your own corporate LAN). You're a security conscious netizen so you restrict yourself to HTTPS (browsing to HSTS sites and/or using a \"Force TLS/SSL\" browser extension). All your traffic is protected from the first byte. Or is it?  We will demonstrate that, by forcing your browser/system to use a malicious PAC (Proxy AutoConfiguration) resource, it is possible to leak HTTPS URLs. We will explain how this affects the privacy of the user and how credentials/sessions can be stolen. We will present the concept of \"PAC Malware\" (a malware which is implemented only as Javascript logic in a PAC resource) that features: a 2-way communication channel between the PAC malware and an external server, contextual phishing via messages, denial-of-service options, and sensitive data extraction from URI's. We present a comprehensive browser PAC feature matrix and elaborate more about this cross-platform (Linux, Windows, Mac) and cross-browser (IE, Chrome, Safari) threat.",
    "plaintextTitle": "Crippling HTTPS with Unholy PAC",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kotler-Crippling-HTTPS-With-Unholy-PAC.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7q40RLilXKw"
      }
    ],
    "youtubeDescription": "by Itzik Kotler  &  Amit Klein\n\nYou're in a potentially malicious network (free WiFi, guest network, or maybe your own corporate LAN). You're a security conscious netizen so you restrict yourself to HTTPS (browsing to HSTS sites and/or using a \"Force TLS/SSL\" browser extension). All your traffic is protected from the first byte. Or is it?\n\nWe will demonstrate that, by forcing your browser/system to use a malicious PAC (Proxy AutoConfiguration) resource, it is possible to leak HTTPS URLs. We will explain how this affects the privacy of the user and how credentials/sessions can be stolen. We will present the concept of \"PAC Malware\" (a malware which is implemented only as Javascript logic in a PAC resource) that features: a 2-way communication channel between the PAC malware and an external server, contextual phishing via messages, denial-of-service options, and sensitive data extraction from URI's. We present a comprehensive browser PAC feature matrix and elaborate more about this cross-platform (Linux, Windows, Mac) and cross-browser (IE, Chrome, Safari) threat."
  },
  "crumbling-the-supercookie-and-other-ways-the-fcc-protects-your-internet-traffic": {
    "author": "travis-leblanc",
    "description": "You've probably heard of network neutrality. In 2015, the Federal Communications Commission enacted transformative rules that prohibit Internet service providers from blocking, throttling, or creating \"fast lanes\" for online content. The Open Internet Order protects your right to enjoy the lawful content, applications, services, and devices of your choosing. But it also empowers the FCC to protect the security and privacy of your Internet traffic. This talk will give an overview of the FCC's security and privacy authorities, which now cover broadband Internet service, as well as telephone, cable, and satellite connectivity. We will explain how the FCC investigates violations of federal communications law, and how it brings enforcement actions against offenders. In just the past two years, the FCC's Enforcement Bureau has initiated several high-profile law enforcement actions related to security and privacy. We required Verizon to stop injecting a unique identifier \"supercookie\" into third-party web requests, unless a customer consents. We also required AT&T and Cox to improve their customer information safeguards, after their security failures led to information on hundreds of thousands of customers getting unacceptably and unnecessarily exposed.*  Most recently, the FCC formally proposed new Internet security and privacy rules. The Commission recommended that, if your Internet service provider wants to share information from or about you, it should first obtain your affirmative, opt-in consent. We will explain how the rulemaking process functions, and how you can file comments on FCC proceedings. We will also leave time for a Q & A session. Whether you'd like to ask about net neutrality, robocalls, wifi router firmware (we know many of you have thoughts about that mixup!), or anything else communications related, this is your opportunity. In fact, you can even ask about your cable appointment we bet you didn't know the FCC has rules about that, too!",
    "plaintextTitle": "Crumbling the Supercookie and Other Ways the FCC Protects Your Internet Traffic",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=VtPvn1ov6eY"
      }
    ],
    "youtubeDescription": "by Travis LeBlanc  &  Jonathan Mayer\n\nYou've probably heard of network neutrality. In 2015, the Federal Communications Commission enacted transformative rules that prohibit Internet service providers from blocking, throttling, or creating \"fast lanes\" for online content. The Open Internet Order protects your right to enjoy the lawful content, applications, services, and devices of your choosing. But it also empowers the FCC to protect the security and privacy of your Internet traffic. This talk will give an overview of the FCC's security and privacy authorities, which now cover broadband Internet service, as well as telephone, cable, and satellite connectivity. We will explain how the FCC investigates violations of federal communications law, and how it brings enforcement actions against offenders. In just the past two years, the FCC's Enforcement Bureau has initiated several high-profile law enforcement actions related to security and privacy. We required Verizon to stop injecting a unique identifier \"supercookie\" into third-party web requests, unless a customer consents. We also required AT&T and Cox to improve their customer information safeguards, after their security failures led to information on hundreds of thousands of customers getting unacceptably and unnecessarily exposed.*\n\nMost recently, the FCC formally proposed new Internet security and privacy rules. The Commission recommended that, if your Internet service provider wants to share information from or about you, it should first obtain your affirmative, opt-in consent. We will explain how the rulemaking process functions, and how you can file comments on FCC proceedings. We will also leave time for a Q & A session. Whether you'd like to ask about net neutrality, robocalls, wifi router firmware (we know many of you have thoughts about that mixup!), or anything else communications related, this is your opportunity. In fact, you can even ask about your cable appointment we bet you didn't know the FCC has rules about that, too!"
  },
  "cunning-with-cng-soliciting-secrets-from-schannel": {
    "author": "jake-kambic",
    "description": "Secure Channel (Schannel) is Microsoft's standard SSL/TLS Library underpinning services like RDP, Outlook, Internet Explorer, Windows Update, SQL Server, LDAPS, Skype and many third party applications. Schannel has been the subject of scrutiny in the past several years from an external perspective due to reported vulnerabilities, including an RCE. What about the internals? How does Schannel guard its secrets?This talk looks at how Schannel leverages Microsoft's CryptoAPI-NG (CNG) to cache the master keys, session keys, private and ephemeral keys, and session tickets used in TLS/SSL connections. It discusses the underlying data structures, and how to extract both the keys and other useful information that provides forensic context about connection. This information is then leveraged to decrypt a session that uses ephemeral key exchanges. Information in the cache lives for at least 10 hours by default on modern configurations, storing up to 20,000 entries for client and server each. This makes it forensically relevant in cases where other evidence of the connection may have dissipated.",
    "plaintextTitle": "Cunning with CNG: Soliciting Secrets from Schannel",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kambic-Cunning-With-CNG-Soliciting-Secrets-From-SChannel.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kambic-Cunning-With-CNG-Soliciting-Secrets-From-SChannel-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KGmJMHyHJjE"
      }
    ],
    "youtubeDescription": "Secure Channel (Schannel) is Microsoft's standard SSL/TLS Library underpinning services like RDP, Outlook, Internet Explorer, Windows Update, SQL Server, LDAPS, Skype and many third party applications. Schannel has been the subject of scrutiny in the past several years from an external perspective due to reported vulnerabilities, including a RCE. \n\nWhat about the internals? How does Schannel guard its secrets? This talk looks at how Schannel leverages Microsoft's CryptoAPI-NG (CNG) to cache the master keys, session keys, private and ephemeral keys, and session tickets used in TLS/SSL connections. It discusses the underlying data structures, and how to extract both the keys and other useful information that provides forensic context about connection. This information is then leveraged to decrypt session that use ephemeral cipher suites, which don't rely on the private key for decryption. Information in the cache lives for at least 10 hours by default on modern configurations, storing up to 20,000 entries for client and server each. This makes it forensically relevant in cases where other evidence of connection may have dissipated.\n\nBio:\nJake Kambic is a DFIR researcher and network penetration tester"
  },
  "cyber-war-in-perspective-analysis-from-the-crisis-in-ukraine": {
    "author": "kenneth-geers",
    "description": "The conflict between Russia and Ukraine appears to have all the ingredients for \"cyber war\". Moscow and Kyiv are playing for the highest geopolitical stakes, and both countries have expertise in information technology and computer hacking. However, there are still many skeptics of cyber war, and more questions than answers. Malicious code is great for espionage and crime, but how much does it help soldiers on the battlefield? Does computer hacking have strategic effects? What are the political and military limits to digital operations in peacetime and war? This NATO-funded research project, undertaken by 20 leading authorities on national security and network security, is a benchmark for world leaders and system administrators alike, and sheds light on whether \"cyber war\" is now reality -- or still science fiction. Further, it helps decision makers to understand that national security choices today have ramifications for democracy and human rights tomorrow.",
    "plaintextTitle": "Cyber War in Perspective: Analysis from the Crisis in Ukraine",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Geers-Cyber-War-In-Perspective-Analysis-From-The-Crisis-In-Ukraine.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Geers-Cyber-War-In-Perspective-Analysis-From-The-Crisis-In-Ukraine-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5wQgmOZN5ZQ"
      }
    ],
    "youtubeDescription": "by Kenneth Geers\n\nThe conflict between Russia and Ukraine appears to have all the ingredients for \"cyber war\". Moscow and Kyiv are playing for the highest geopolitical stakes, and both countries have expertise in information technology and computer hacking. However, there are still many skeptics of cyber war, and more questions than answers. Malicious code is great for espionage and crime, but how much does it help soldiers on the battlefield? Does computer hacking have strategic effects? What are the political and military limits to digital operations in peacetime and war? This NATO-funded research project, undertaken by 20 leading authorities on national security and network security, is a benchmark for world leaders and system administrators alike, and sheds light on whether \"cyber war\" is now reality -- or still science fiction. Further, it helps decision makers to understand that national security choices today have ramifications for democracy and human rights tomorrow."
  },
  "dangerous-hare-hanging-attribute-references-hazards-due-to-vendor-customization": {
    "author": "nan-zhang",
    "description": "For the purposes of tailoring the Android to different hardware platforms, countries/regions and other needs, hardware manufacturers (e.g. Qualcomm), device manufacturers, carriers and others have aggressively customized Android into thousands of system images. This practice has led to a highly fragmented ecosystem where the complicated relations among its components and apps though which one party interacts with the other have been seriously compromised. This leads to the pervasiveness of Hare (hanging attribute references e.g. package, activity, service action names, authorities and permissions), a type of vulnerabilities never investigated before. In this talk, we will show that such flaws could have serious security implications, that is, a malicious app can acquire critical system capabilities by pretending to be the owner of an attribute who has been used on a device while the party defining it does not exist due to vendor customizations. On the factory image of 97 most popular Android devices, we discovered 21557 likely Hare flaws, demonstrating the significant impacts of the problem from stealing user's voice notes, controlling the screen unlock process, replacing Google Email's account settings to injecting messages into Facebook app and Skype. We will also show a set of new techniques we developed for automatically detecting Hare flaws within different Android versions, which can be utilized by the device manufacturers and other parties to secure their custom OSes. And we will provide the guidance for avoiding this pitfall when building future systems.",
    "plaintextTitle": "Dangerous Hare: Hanging Attribute References Hazards Due to Vendor Customization",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Zhang-Dangerous-Hare-Hanging-Attribute-References-Hazards-Due-To-Vendor-Customization.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=hCAaOjHlz0o"
      }
    ],
    "youtubeDescription": "by Nan Zhang\n\nFor the purposes of tailoring the Android to different hardware platforms, countries/regions and other needs, hardware manufacturers (e.g. Qualcomm), device manufacturers, carriers and others have aggressively customized Android into thousands of system images. This practice has led to a highly fragmented ecosystem where the complicated relations among its components and apps though which one party interacts with the other have been seriously compromised. This leads to the pervasiveness of Hare (hanging attribute references e.g. package, activity, service action names, authorities and permissions), a type of vulnerabilities never investigated before.\n\nIn this talk, we will show that such flaws could have serious security implications, that is, a malicious app can acquire critical system capabilities by pretending to be the owner of an attribute who has been used on a device while the party defining it does not exist due to vendor customizations. On the factory image of 97 most popular Android devices, we discovered 21557 likely Hare flaws, demonstrating the significant impacts of the problem from stealing user's voice notes, controlling the screen unlock process, replacing Google Email's account settings to injecting messages into Facebook app and Skype. We will also show a set of new techniques we developed for automatically detecting Hare flaws within different Android versions, which can be utilized by the device manufacturers and other parties to secure their custom OSes. And we will provide the guidance for avoiding this pitfall when building future systems."
  },
  "dark-side-of-the-dns-force": {
    "author": "erik-wu",
    "description": "DNS is an essential substrate of the Internet, responsible for translating user-friendly Internet names into machine-friendly IP addresses. Without DNS, it would be an impossible mission for us to navigate through the Internet. As we have seen in recent years, DNS-based attacks launched by adversaries remain a constant lethal threat in various forms. The record-breaking 300gbps DNS amplification DDoS attack against Spamhaus presented by Cloudflare at Black Hat 2013 is still vivid in our minds. Since then (in the last 3 years), thanks to the dark force's continuous innovations, the dark side of the DNS force is getting much more pernicious. Today, the dark side is capable of assembling an unprecedented massive attacking force of an unimaginable scale and magnitude. As an example, leveraging up to 10X of the Internet domain names, a modern DNS-based attack can easily take down any powerful online service, disrupt well-guarded critical infrastructure, and cripple the Internet, despite all the existing security postures and hardening techniques we have developed and deployed. In this talk, we will present and discuss an array of new secret weapons behind the emerging DNS-based attacks from the dark side. We will analyze the root causes for the recent surges of the Internet domain counts from 300-million a year ago to over 2-billion. Some real use cases will be shown to illustrate the domain surges' impact on the Internet's availability and stability, especially with spikes up to 5-billion domains. We will focus on the evolution of random subdomain weapon which can generate a large number of queries to nonexistent fully qualified domain names such as 01mp5u89.arkhamnetwork.org and 01k5jj4u.arkhamnetwork.org to overload and knock down both authoritative name servers and cache servers along the query paths. Starting as a simple primitive tool used to disrupt competitors' gaming sites in order to win more users among the Chinese online gaming community about five years ago, random subdomain has become one of the most powerful disruptive weapons nowadays. As the attack targets move towards more high-profile and top level domains, the random subdomain weapon also becomes much sophisticated by blending attacking traffic with legitimate operations. It is a challenge for the cyber security community to distinguish bad traffic from benign ones in a cost-effective manner. We will address this challenge by dissecting the core techniques and mechanisms used to boost attack strength and to evade detection. We will discuss techniques such as multiple level of random domains, mix use of constant names and random strings, innovative use of timestamps as unique domain names, as well as local and global escalations. We will demonstrate and compare different solutions for the accurate detection and effective mitigation of random subdomain and other active ongoing DNS-based attacks including DNS tunneling of data exfiltration on some most restricted networks due to the pervasiveness of DNS.",
    "plaintextTitle": "Dark Side of the DNS Force",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Wu-Dark-Side-Of-The-DNS-Force.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=8tXE6s5ZE74"
      }
    ],
    "youtubeDescription": "by Erik Wu\n\nDNS is an essential substrate of the Internet, responsible for translating user-friendly Internet names into machine-friendly IP addresses. Without DNS, it would be an impossible mission for us to navigate through the Internet. As we have seen in recent years, DNS-based attacks launched by adversaries remain a constant lethal threat in various forms. The record-breaking 300gbps DNS amplification DDoS attack against Spamhaus presented by Cloudflare at Black Hat 2013 is still vivid in our minds. Since then (in the last 3 years), thanks to the dark force's continuous innovations, the dark side of the DNS force is getting much more pernicious. Today, the dark side is capable of assembling an unprecedented massive attacking force of an unimaginable scale and magnitude. As an example, leveraging up to 10X of the Internet domain names, a modern DNS-based attack can easily take down any powerful online service, disrupt well-guarded critical infrastructure, and cripple the Internet, despite all the existing security postures and hardening techniques we have developed and deployed.\n\nIn this talk, we will present and discuss an array of new secret weapons behind the emerging DNS-based attacks from the dark side. We will analyze the root causes for the recent surges of the Internet domain counts from 300-million a year ago to over 2-billion. Some real use cases will be shown to illustrate the domain surges' impact on the Internet's availability and stability, especially with spikes up to 5-billion domains. We will focus on the evolution of random subdomain weapon which can generate a large number of queries to nonexistent fully qualified domain names such as 01mp5u89.arkhamnetwork.org and 01k5jj4u.arkhamnetwork.org to overload and knock down both authoritative name servers and cache servers along the query paths. Starting as a simple primitive tool used to disrupt competitors' gaming sites in order to win more users among the Chinese online gaming community about five years ago, random subdomain has become one of the most powerful disruptive weapons nowadays. As the attack targets move towards more high-profile and top level domains, the random subdomain weapon also becomes much sophisticated by blending attacking traffic with legitimate operations. It is a challenge for the cyber security community to distinguish bad traffic from benign ones in a cost-effective manner.\n\nWe will address this challenge by dissecting the core techniques and mechanisms used to boost attack strength and to evade detection. We will discuss techniques such as multiple level of random domains, mix use of constant names and random strings, innovative use of timestamps as unique domain names, as well as local and global escalations. We will demonstrate and compare different solutions for the accurate detection and effective mitigation of random subdomain and other active ongoing DNS-based attacks including DNS tunneling of data exfiltration on some most restricted networks due to the pervasiveness of DNS."
  },
  "defense-at-hyperscale-technologies-and-policies-for-a-defensible-cyberspace": {
    "author": "jason-healey",
    "description": "Cyber attackers have had the advantage for decades over defenders but we can and must change this with a more defensible cyberspace.\r\n                \r\n                This talk describes the results of a recent task force to identify the top technologies, operational innovations and public policies which have delivered security at scale for the defense to catch up with attackers.  All of these innovations have one thing in common: a dollar of defense buys far more than a dollar of offense.  Now that we've recognized what has been most effective, the community has to repeat these successes at hyperscale, and the talk gives recommendations.",
    "plaintextTitle": "Defense at Hyperscale: Technologies and Policies for a Defensible Cyberspace",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Healey-Defense-At-Hyperscale-Technologies-And-Policies-For-A-Defensible-Cyberspace.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Healey-Defense-At-Hyperscale-Technologies-And-Policies-For-A-Defensible-Cyberspace-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=90kxsEOSZQ8"
      }
    ],
    "youtubeDescription": "by Jason Healey\n\nCyber attackers have had the advantage for decades over defenders but we can and must change this with a more defensible cyberspace.\n\nThis talk describes the results of a recent task force to identify the top technologies, operational innovations and public policies which have delivered security at scale for the defense to catch up with attackers. All of these innovations have one thing in common: a dollar of defense buys far more than a dollar of offense. Now that we've recognized what has been most effective, the community has to repeat these successes at hyperscale, and the talk gives recommendations."
  },
  "demystifying-the-secure-enclave-processor": {
    "author": "tarjei-mandt",
    "description": "The secure enclave processor (SEP) was introduced by Apple as part of the A7 SOC with the release of the iPhone 5S, most notably to support their fingerprint technology, Touch ID. SEP is designed as a security circuit configured to perform secure services for the rest of the SOC, with with no direct access from the main processor. In fact, the secure enclave processor runs it own fully functional operating system - dubbed SEPOS - with its own kernel, drivers, services, and applications. This isolated hardware design prevents an attacker from easily recovering sensitive data (such as fingerprint information and cryptographic keys) from an otherwise fully compromised device.  Despite almost three years have passed since its inception, little is still known about the inner workings of the SEP and its applications. The lack of public scrutiny in this space has consequently led to a number of misconceptions and false claims about the SEP.  In this presentation, we aim to shed some light on the secure enclave processor and SEPOS. In particular, we look at the hardware design and boot process of the secure enclave processor, as well as the SEPOS architecture itself. We also detail how the iOS kernel and the SEP exchange data using an elaborate mailbox mechanism, and how this data is handled by SEPOS and relayed to its services and applications. Last, but not least, we evaluate the SEP attack surface and highlight some of the findings of our research, including potential attack vectors.",
    "plaintextTitle": "Demystifying the Secure Enclave Processor",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Mandt-Demystifying-The-Secure-Enclave-Processor.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7UNeUT_sRos"
      }
    ],
    "youtubeDescription": "by Tarjei Mandt  &  Mathew Solnik  &  David Wang\n\nThe secure enclave processor (SEP) was introduced by Apple as part of the A7 SOC with the release of the iPhone 5S, most notably to support their fingerprint technology, Touch ID. SEP is designed as a security circuit configured to perform secure services for the rest of the SOC, with with no direct access from the main processor. In fact, the secure enclave processor runs it own fully functional operating system - dubbed SEPOS - with its own kernel, drivers, services, and applications. This isolated hardware design prevents an attacker from easily recovering sensitive data (such as fingerprint information and cryptographic keys) from an otherwise fully compromised device.\n\nDespite almost three years have passed since its inception, little is still known about the inner workings of the SEP and its applications. The lack of public scrutiny in this space has consequently led to a number of misconceptions and false claims about the SEP.\n\nIn this presentation, we aim to shed some light on the secure enclave processor and SEPOS. In particular, we look at the hardware design and boot process of the secure enclave processor, as well as the SEPOS architecture itself. We also detail how the iOS kernel and the SEP exchange data using an elaborate mailbox mechanism, and how this data is handled by SEPOS and relayed to its services and applications. Last, but not least, we evaluate the SEP attack surface and highlight some of the findings of our research, including potential attack vectors."
  },
  "design-approaches-for-security-automation": {
    "author": "peleus-uhley",
    "description": "Organizations often scale at a faster pace than their security teams. Therefore, security teams need to deploy automation that can scale their processes. When it comes to your organization, what criteria should decide the best approach for security automation? Are there simpler alternatives to building a complex, custom built, automation environment? Where do you deploy? Which tools do you need? How do you ensure that your implementation will effectively enable teams versus just creating false positives at scale? This presentation will discuss criteria for designing and evaluating security automation tools for your organization. The goal is provide audience members with effective small scale and large scale automation techniques for securing their environments.",
    "plaintextTitle": "Design Approaches for Security Automation",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_IushM9Ng7A"
      }
    ],
    "youtubeDescription": "Many of the talks at security conferences these days involve the launch of a new security automation framework. Each of these tools have different goals and technologies that met their organizations needs. When it comes to your organization, how will you decide whether to build, buy, or borrow? Are there better criteria than just technology stack compatibility? What qualities make a good design for your environment? Where do you deploy? Which open-source tools work best? How do you ensure that your implementation will effectively enable teams versus creating more noise? This presentation will discuss criteria for designing and evaluating security automation tools for your organization.\n\nPeleus Uhley\nLead Security Strategist, Adobe Systems, Inc.\nPeleus Uhley has been a part of the security industry for more than 15 years. As the Lead Security Strategist at Adobe, he assists the company with proactive and reactive security. Prior to joining Adobe, Peleus was a senior developer at Anonymizer, and a security consultant for @stake and Symantec.\n-\n\nManaged by the official OWASP Media Project https://www.owasp.org/index.php/OWASP_Media_Project"
  },
  "discovering-and-exploiting-novel-security-vulnerabilities-in-apple-zeroconf": {
    "author": "luyi-xing",
    "description": "With the proliferation of portable computing systems such as tablet, smartphone, Internet of Things (IoT), etc., ordinary users are facing the increasing burden to properly configure those devices, enabling them to work together. In response to this utility challenge, major device manufacturers and software vendors (e.g., Apple, Microsoft, Hewlett-Packard) tend to build their systems in a \"plug-and-play\" fashion, using techniques dubbed zero-configuration (ZeroConf). Such ZeroConf services are characterized by automatic IP selection, host name resolving and target service discovery. As the major proponent of ZeroConf techniques, Apple has adopted ZeroConf techniques in various frameworks and system services on iOS and OS X to minimize user involvements in system setup. However, when the design pendulum swings towards usability, concerns may arise whether the system has been adequately protected. In this presentation, we will report the first systematic study on the security implications of these ZeroConf techniques on Apple systems. Our research brings to light a disturbing lack of security consideration in these systems' designs: major ZeroConf frameworks on the Apple platforms, including the Multipeer Connectivity and Bonjour, are mostly unprotected and system services, such as printer discovery and AirDrop, turn out to be completely vulnerable to an impersonation or Man-in-the-Middle (MitM) attack, even though attempts have been made to protect them against such threats. The consequences are serious, allowing a malicious device to steal documents to be printed out by other devices or files transferred between other devices. Most importantly, our study highlights the fundamental security challenges underlying ZeroConf techniques. Some of the vulnerabilities have not been fixed until this submission though we reported to Apple over half a year ago. We will introduce ZeroConf techniques and publish technical details of our attacks to Apple ZeroConf techniques. We will take Airdrop, Bonjour and Multipeer Connectivity as examples to show the vulnerabilities in their design and implementation and how we hacked these ZeroConf frameworks and system services to perform MitM attacks. We will also show that some of vulnerabilities are due to TLS' incompetence to secure device-to-device communication in the ZeroConf scenario, which is novel discovery and contributes to the state of the art.",
    "plaintextTitle": "Discovering and Exploiting Novel Security Vulnerabilities in Apple ZeroConf",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Bai-Discovering-And-Exploiting-Novel-Security-Vulnerabilities-In-Apple-Zeroconf.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=chLA7SNRj2Q"
      }
    ],
    "youtubeDescription": "by Luyi Xing  &  Xiaolong Bai\n\nWith the proliferation of portable computing systems such as tablet, smartphone, Internet of Things (IoT), etc., ordinary users are facing the increasing burden to properly configure those devices, enabling them to work together. In response to this utility challenge, major device manufacturers and software vendors (e.g., Apple, Microsoft, Hewlett-Packard) tend to build their systems in a \"plug-and-play\" fashion, using techniques dubbed zero-configuration (ZeroConf). Such ZeroConf services are characterized by automatic IP selection, host name resolving and target service discovery. As the major proponent of ZeroConf techniques, Apple has adopted ZeroConf techniques in various frameworks and system services on iOS and OS X to minimize user involvements in system setup. However, when the design pendulum swings towards usability, concerns may arise whether the system has been adequately protected. In this presentation, we will report the first systematic study on the security implications of these ZeroConf techniques on Apple systems.\n\nOur research brings to light a disturbing lack of security consideration in these systems' designs: major ZeroConf frameworks on the Apple platforms, including the Multipeer Connectivity and Bonjour, are mostly unprotected and system services, such as printer discovery and AirDrop, turn out to be completely vulnerable to an impersonation or Man-in-the-Middle (MitM) attack, even though attempts have been made to protect them against such threats. The consequences are serious, allowing a malicious device to steal documents to be printed out by other devices or files transferred between other devices. Most importantly, our study highlights the fundamental security challenges underlying ZeroConf techniques. Some of the vulnerabilities have not been fixed until this submission though we reported to Apple over half a year ago. We will introduce ZeroConf techniques and publish technical details of our attacks to Apple ZeroConf techniques. We will take Airdrop, Bonjour and Multipeer Connectivity as examples to show the vulnerabilities in their design and implementation and how we hacked these ZeroConf frameworks and system services to perform MitM attacks. We will also show that some of vulnerabilities are due to TLS' incompetence to secure device-to-device communication in the ZeroConf scenario, which is novel discovery and contributes to the state of the art."
  },
  "does-dropping-usb-drives-in-parking-lots-and-other-places-really-work": {
    "author": "elie-bursztein",
    "description": "At every Black Hat you will inevitably hear hackers boasting that they can break into any company by dropping a malicious USB drive in the company's parking lot. This anecdote has even entered mainstream culture and was prominently featured in the Mr. Robot TV series. However despite its popularity, there has been no rigorous study of whether the attack works or is merely an urban legend. To answer this burning question and assess the actual threat posed by malicious USB drives, we dropped nearly 300 USB sticks on the University of Illinois Urbana-Champaign campus and measured who plugged in the drives. And oh boy how effective that was! Of the drives we dropped, 98% were picked up and for 48% of the drives, someone not only plugged in the drive but also clicked on files. Join us for this talk if you are interested in physical security and want to learn more about the effectiveness of arguably the most well known anecdote of our community. We will provide an in-depth analysis of which factors influence users to pick up a drive, why users plug them in, and demo a new tool that can help mitigate USB attacks.",
    "plaintextTitle": "Does Dropping USB Drives in Parking Lots and Other Places Really Work?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Bursztein-Does-Dropping-USB-Drives-In-Parking-Lots-And-Other-Places-Really-Work.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=XJCQBqTmGUU"
      }
    ],
    "youtubeDescription": "by Elie Bursztein\n\nAt every Black Hat you will inevitably hear hackers boasting that they can break into any company by dropping a malicious USB drive in the company's parking lot. This anecdote has even entered mainstream culture and was prominently featured in the Mr. Robot TV series. However despite its popularity, there has been no rigorous study of whether the attack works or is merely an urban legend. To answer this burning question and assess the actual threat posed by malicious USB drives, we dropped nearly 300 USB sticks on the University of Illinois Urbana-Champaign campus and measured who plugged in the drives. And oh boy how effective that was! Of the drives we dropped, 98% were picked up and for 48% of the drives, someone not only plugged in the drive but also clicked on files. Join us for this talk if you are interested in physical security and want to learn more about the effectiveness of arguably the most well known anecdote of our community. We will provide an in-depth analysis of which factors influence users to pick up a drive, why users plug them in, and demo a new tool that can help mitigate USB attacks."
  },
  "dptrace-dual-purpose-trace-for-exploitability-analysis-of-program-crashes": {
    "author": "rodrigo-rubira-branco",
    "description": "This research focuses on determining the practical exploitability of software issues by means of crash analysis. The target was not to automatically generate exploits, and not even to fully automate the entire process of crash analysis; but to provide a holistic feedback-oriented approach that augments a researcher's efforts in triaging the exploitability and impact of a program crash (or fault). The result is a semi-automated crash analysis framework that can speed-up the work of an exploit writer (analyst). Fuzzing, a powerful method for vulnerability discovery keeps getting more popular in all segments across the industry - from developers to bug hunters. With fuzzing frameworks becoming more sophisticated (and intelligent), the task of product security teams and exploit analysts to triage the constant influx of bug reports and associated crashes received from external researchers has increased dramatically. Exploit writers are also facing new challenges: with the advance of modern protection mechanisms, bug bounties and high-prices in vulnerabilities, their time to analyze a potential issue found and write a working exploits is shrinking. Given the need to improve the existing tools and methodologies in the field of program crash analysis, our research speeds-up dealing with a vast corpus of crashes. We discuss existing problems, ideas and present our approach that is in essence a combination of backward and forward taint propagation systems. The idea here is to leverage both these approaches and to integrate them into one single framework that provides, at the moment of a crash, the mapping of the input areas that influence the crash situation and from the crash on, an analysis of the potential capabilities for achieving code execution. We discuss the concepts and the implementation of two functional tools developed by the authors (one of which was previously released) and go about the benefits of integrating them. Finally, we demonstrate the use of the integrated tool (DPTrace to be released as open-source at Black Hat) with public vulnerabilities (zero-days at the time of the released in the past), including a few that the authors themselves discovered, analyzed/exploited and reported.",
    "plaintextTitle": "DPTrace:  Dual Purpose Trace for Exploitability Analysis of Program Crashes",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Branco-DPTrace-Dual-Purpose-Trace-For-Exploitability-Analysis-Of-Program-Crashes.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Branco-DPTrace-Dual-Purpose-Trace-For-Exploitability-Analysis-Of-Program-Crashes-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=nRryGVqiQ0o"
      }
    ],
    "youtubeDescription": "by Rodrigo Rubira Branco  &  Rohit Mothe\n\nThis research focuses on determining the practical exploitability of software issues by means of crash analysis. The target was not to automatically generate exploits, and not even to fully automate the entire process of crash analysis; but to provide a holistic feedback-oriented approach that augments a researcher's efforts in triaging the exploitability and impact of a program crash (or fault). The result is a semi-automated crash analysis framework that can speed-up the work of an exploit writer (analyst). Fuzzing, a powerful method for vulnerability discovery keeps getting more popular in all segments across the industry - from developers to bug hunters. With fuzzing frameworks becoming more sophisticated (and intelligent), the task of product security teams and exploit analysts to triage the constant influx of bug reports and associated crashes received from external researchers has increased dramatically. Exploit writers are also facing new challenges: with the advance of modern protection mechanisms, bug bounties and high-prices in vulnerabilities, their time to analyze a potential issue found and write a working exploits is shrinking.\n\nGiven the need to improve the existing tools and methodologies in the field of program crash analysis, our research speeds-up dealing with a vast corpus of crashes. We discuss existing problems, ideas and present our approach that is in essence a combination of backward and forward taint propagation systems. The idea here is to leverage both these approaches and to integrate them into one single framework that provides, at the moment of a crash, the mapping of the input areas that influence the crash situation and from the crash on, an analysis of the potential capabilities for achieving code execution. We discuss the concepts and the implementation of two functional tools developed by the authors (one of which was previously released) and go about the benefits of integrating them. Finally, we demonstrate the use of the integrated tool (DPTrace to be released as open-source at Black Hat) with public vulnerabilities (zero-days at the time of the released in the past), including a few that the authors themselves discovered, analyzed/exploited and reported."
  },
  "drone-attacks-on-industrial-wireless-a-new-front-in-cyber-security": {
    "author": "jeff-melrose",
    "description": "With new Drone technologies appearing in the consumer space daily, Industrial Plant operators are being forced to rethink their most fundamental assumptions about Industrial Wireless and Cyber-Physical security. This presentation will cover Electronic Threats, Electronic Defensive measures, Recent Electronic jamming incidents, Latest Drone Threats and capabilities, defensive planning, and Electronic Attack Threats with Drones as delivery platform.",
    "plaintextTitle": "Drone Attacks on Industrial Wireless: A New Front in Cyber Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Melrose-Drone-Attacks-On-Industrial-Wireless-A-New-Front-In-Cyber-Security.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=2URDrYNjKsY"
      }
    ],
    "youtubeDescription": "by Jeff Melrose\n\nWith new Drone technologies appearing in the consumer space daily, Industrial Plant operators are being forced to rethink their most fundamental assumptions about Industrial Wireless and Cyber-Physical security. This presentation will cover Electronic Threats, Electronic Defensive measures, Recent Electronic jamming incidents, Latest Drone Threats and capabilities, defensive planning, and Electronic Attack Threats with Drones as delivery platform."
  },
  "dungeons-dragons-and-security": {
    "author": "tiphaine-romand-latapie",
    "description": "The security community knows, the weak link is the human factor - from the project manager deciding that \"security costs too much,\" to the operational bypassing its own company security measure, passing through the end user believing that nobody will ever think how he is using its cat's name as a password or a developper not following best practices.   We all arrive to the same conclusion - we need to train people to the computer security stakes. According to the author's experience, standard Security training is focused on the technical context (what a password is, how does a computer work etc.) and tends to bore or scare a neophyte audience.  This briefing will propose a new way to train a neophyte audience to the basic principles of Computer Security. The training is developed around a role playing game consisting in attacking and defending a building. A debriefing is done after the game to highlight all the similarities between the game and computer security stakes. The presentation will focus on the main feature of the training, and a white paper explaining how to conduct such a training will be available.",
    "plaintextTitle": "Dungeons Dragons and Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Romand-Latapie-Dungeons-Dragons-And-Security.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Romand-Latapie-Dungeons-Dragons-And-Security-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=nqa2Bwh7UTA"
      }
    ],
    "youtubeDescription": "by Tiphaine Romand Latapie\n\nThe security community knows, the weak link is the human factor - from the project manager deciding that \"security costs too much,\" to the operational bypassing its own company security measure, passing through the end user believing that nobody will ever think how he is using its cat's name as a password or a developper not following best practices.\n\nWe all arrive to the same conclusion - we need to train people to the computer security stakes. According to the author's experience, standard Security training is focused on the technical context (what a password is, how does a computer work etc.) and tends to bore or scare a neophyte audience.\n\nThis briefing will propose a new way to train a neophyte audience to the basic principles of Computer Security. The training is developed around a role playing game consisting in attacking and defending a building. A debriefing is done after the game to highlight all the similarities between the game and computer security stakes. The presentation will focus on the main feature of the training, and a white paper explaining how to conduct such a training will be available."
  },
  "exploiting-curiosity-and-context-how-to-make-people-click-on-a-dangerous-link-despite-their-security-awareness": {
    "author": "zinaida-benenson",
    "description": "Messages containing links to malware-infected websites represent a serious threat. Despite the numerous user education efforts, people still click on suspicious links and attachments, and their motivations for clicking or not clicking remain hidden. We argue that knowing how people reason about their clicking behavior can help the defenders in devising more effective protection mechanisms. To this end, we report the results of two user studies where we sent to over 1600 university students an email or a Facebook message with a link from a non-existing person, claiming that the link leads to the pictures from the party last week. When clicked, the corresponding webpage showed the \"access denied\" message. We registered the click rates, and later sent to the participants a questionnaire that first assessed their security awareness, and then asked them about the reasons for their clicking behavior.When addressed by first name, 56% of email and 38% of Facebook recipients clicked. When not addressed by first name, 20% of email and 42.5% of Facebook recipients clicked. Respondents of the survey reported high awareness of the fact that clicking on a link can have bad consequences (78%). However, statistical analysis showed that this was not connected to their reported clicking behavior. By far the most frequent reason for clicking was curiosity about the content of the pictures (34%), followed by the explanations that the content or context of the message fits the current life situation of the person (27%), such as actually having been at a party with unknown people last week. Moreover, 16% thought that they know the sender. The most frequent reason for not clicking was unknown sender (51%), followed by the explanation that the message does not fit the context of the user (36%).Therefore, it should be possible to make virtually any person click on a link, as any person will be curious about something, or interested in some topic, or find the message plausible because they know the sender, or because it fits their expectations (context). Expecting from the users error-free decision making under these circumstances seems to be highly unrealistic, even if they are provided with effective awareness training.Moreover, while sending employees fake spear phishing messages from spoofed colleagues and bosses may increase their security awareness, it is also quite likely to have negative consequences in an organization. People's work effectiveness may decrease, as they will have to be suspicious of practically every message they receive. This may also seriously hamper social relationships within the organization, promoting the atmosphere of distrust. Thus, organizations need to carefully assess all pros and cons of increasing security awareness against spear phishing. In the long run, relying on technical in-depth defense may be a better solution, and more research and evidence is needed to determine the feasible level of defense that the non-expert users are able to achieve through security education and training.",
    "plaintextTitle": "Exploiting Curiosity and Context: How to Make People Click on a Dangerous Link Despite Their Security Awareness",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Benenson-Exploiting-Curiosity-And-Context-How-To-Make-People-Click-On-A-Dangerous-Link-Despite-Their-Security-Awareness.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ThOQ63CyQR4"
      }
    ],
    "youtubeDescription": "by Zinaida Benenson\n\nMessages containing links to malware-infected websites represent a serious threat. Despite the numerous user education efforts, people still click on suspicious links and attachments, and their motivations for clicking or not clicking remain hidden. We argue that knowing how people reason about their clicking behavior can help the defenders in devising more effective protection mechanisms. To this end, we report the results of two user studies where we sent to over 1600 university students an email or a Facebook message with a link from a non-existing person, claiming that the link leads to the pictures from the party last week. When clicked, the corresponding webpage showed the \"access denied\" message. We registered the click rates, and later sent to the participants a questionnaire that first assessed their security awareness, and then asked them about the reasons for their clicking behavior.\n\nWhen addressed by first name, 56% of email and 38% of Facebook recipients clicked. When not addressed by first name, 20% of email and 42.5% of Facebook recipients clicked. Respondents of the survey reported high awareness of the fact that clicking on a link can have bad consequences (78%). However, statistical analysis showed that this was not connected to their reported clicking behavior. By far the most frequent reason for clicking was curiosity about the content of the pictures (34%), followed by the explanations that the content or context of the message fits the current life situation of the person (27%), such as actually having been at a party with unknown people last week. Moreover, 16% thought that they know the sender. The most frequent reason for not clicking was unknown sender (51%), followed by the explanation that the message does not fit the context of the user (36%).\n\nTherefore, it should be possible to make virtually any person click on a link, as any person will be curious about something, or interested in some topic, or find the message plausible because they know the sender, or because it fits their expectations (context). Expecting from the users error-free decision making under these circumstances seems to be highly unrealistic, even if they are provided with effective awareness training.\n\nMoreover, while sending employees fake spear phishing messages from spoofed colleagues and bosses may increase their security awareness, it is also quite likely to have negative consequences in an organization. People's work effectiveness may decrease, as they will have to be suspicious of practically every message they receive. This may also seriously hamper social relationships within the organization, promoting the atmosphere of distrust. Thus, organizations need to carefully assess all pros and cons of increasing security awareness against spear phishing. In the long run, relying on technical in-depth defense may be a better solution, and more research and evidence is needed to determine the feasible level of defense that the non-expert users are able to achieve through security education and training."
  },
  "gattacking-bluetooth-smart-devices-introducing-a-new-ble-proxy-tool": {
    "author": "slawomir-jasek",
    "description": "Bluetooth Low Energy is probably the most thriving technology implemented recently in all kinds of IoT devices: gadgets, wearables, smart homes, medical equipment and even banking tokens. The BLE specification assures secure connections through link-layer encryption, device whitelisting and bonding - a mechanisms not without flaws, although that's another story we are already aware of. A surprising number of devices do not (or simply cannot - because of the use scenario) utilize these mechanisms. The security (like authentication) is, in fact, provided on higher \"application\" (GATT protocol) layer of the data exchanged between the \"master\" (usually mobile phone) and peripheral device. The connection from \"master\" in such cases is initiated by scanning to a specific broadcast signal, which by design can be trivially spoofed. And guess what - the device GATT internals (so-called \"services\" and \"characteristics\") can also be easily cloned. Using a few simple tricks, we can assure the victim will connect to our impersonator device instead of the original one, and then just proxy the traffic - without consent of the mobile app or device. And here it finally becomes interesting - just imagine how many attacks you might be able to perform with the possibility to actively intercept the BLE communication! Basing on several examples, I will demonstrate common flaws possible to exploit, including improper authentication, static passwords, not-so-random PRNG, excessive services, bad assumptions - which allow you to take over control of smart locks, disrupt smart home, and even get a free lunch. I will also suggest best practices to mitigate the attacks. Ladies and gentlemen - I give you the BLE MITM proxy. A free open-source tool which opens a whole new chapter for your IoT device exploitation, reversing and debugging. Run it on a portable Raspberry Pi, carry around BLE-packed premises, share your experience and contribute to the code.",
    "plaintextTitle": "GATTacking Bluetooth Smart Devices - Introducing a New BLE Proxy Tool",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Jasek-GATTacking-Bluetooth-Smart-Devices-Introducing-a-New-BLE-Proxy-Tool.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Jasek-GATTacking-Bluetooth-Smart-Devices-Introducing-a-New-BLE-Proxy-Tool-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://github.com/securing/gattacker/",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=uKqdb4lF0XU"
      }
    ],
    "youtubeDescription": "by Slawomir Jasek\n\nBluetooth Low Energy is probably the most thriving technology implemented recently in all kinds of IoT devices: gadgets, wearables, smart homes, medical equipment and even banking tokens. The BLE specification assures secure connections through link-layer encryption, device whitelisting and bonding - a mechanisms not without flaws, although that's another story we are already aware of. A surprising number of devices do not (or simply cannot - because of the use scenario) utilize these mechanisms. The security (like authentication) is, in fact, provided on higher \"application\" (GATT protocol) layer of the data exchanged between the \"master\" (usually mobile phone) and peripheral device. The connection from \"master\" in such cases is initiated by scanning to a specific broadcast signal, which by design can be trivially spoofed. And guess what - the device GATT internals (so-called \"services\" and \"characteristics\") can also be easily cloned.\n\nUsing a few simple tricks, we can assure the victim will connect to our impersonator device instead of the original one, and then just proxy the traffic - without consent of the mobile app or device. And here it finally becomes interesting - just imagine how many attacks you might be able to perform with the possibility to actively intercept the BLE communication! Basing on several examples, I will demonstrate common flaws possible to exploit, including improper authentication, static passwords, not-so-random PRNG, excessive services, bad assumptions - which allow you to take over control of smart locks, disrupt smart home, and even get a free lunch. I will also suggest best practices to mitigate the attacks. Ladies and gentlemen - I give you the BLE MITM proxy. A free open-source tool which opens a whole new chapter for your IoT device exploitation, reversing and debugging. Run it on a portable Raspberry Pi, carry around BLE-packed premises, share your experience and contribute to the code."
  },
  "greatfet-making-goodfet-great-again": {
    "author": "michael-ossmann",
    "description": "My evil plot began by making small but seemingly helpful contributions to the GoodFET project, a line of code here, a simple add-on board there.  Soon I was answering the occasional question on IRC or the mailing list, and I was in: commit rights!\r\n                \r\n                I had chosen my prey carefully.  GoodFET, the preferred open source tool of discriminating hardware hackers around the world, consisted of too many disparate hardware designs.  It was full of terrific ideas and PoCs, but it was becoming unmaintainable.  The Facedancer variant alone had at least three different and incompatible code bases!  The hardware designs were easy to build one at a time but needlessly costly for volume manufacturing.  The project was ripe for a takeover.\r\n                \r\n                I struck when Travis Goodspeed was most vulnerable, his faculties diminished by the hordes of Las Vegas.  He accepted my $5.  GoodFET was mine!\r\n                \r\n                With GoodFET in my control I moved quickly to replace the entire project with something superior, something greater!  Today I unleash GreatFET!",
    "plaintextTitle": "GreatFET: Making GoodFET Great Again",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ossmann-GreatFET-Making-GoodFET-Great-Again.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ossmann-GreatFET-Making-GoodFET-Great-Again-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=4NIoAnsuFOQ"
      }
    ],
    "youtubeDescription": "by Michael Ossmann\n\nMy evil plot began by making small but seemingly helpful contributions to the GoodFET project, a line of code here, a simple add-on board there. Soon I was answering the occasional question on IRC or the mailing list, and I was in: commit rights!\n\nI had chosen my prey carefully. GoodFET, the preferred open source tool of discriminating hardware hackers around the world, consisted of too many disparate hardware designs. It was full of terrific ideas and PoCs, but it was becoming unmaintainable. The Facedancer variant alone had at least three different and incompatible code bases! The hardware designs were easy to build one at a time but needlessly costly for volume manufacturing. The project was ripe for a takeover.\n\nI struck when Travis Goodspeed was most vulnerable, his faculties diminished by the hordes of Las Vegas. He accepted my $5. GoodFET was mine!\n\nWith GoodFET in my control I moved quickly to replace the entire project with something superior, something greater! Today I unleash GreatFET!"
  },
  "hacking-next-gen-atms-from-capture-to-cashout": {
    "author": "weston-hecker",
    "description": "Over the past year I have worked at understanding and breaking the new methods that ATM manufactures have implemented on producing \"Next Generation\" Secure ATM systems. This includes bypassing Anti-skimming/Anti-Shimming methods introduced to the latest generation ATMs, along with NFC long range attacks that allow real-time card communication over 400 miles away. This talk will demonstrate how a $2000 investment can perform unattended \"cash outs,\" touching also on failures in the past with EMV implementations and how credit card data of the future will most likely be sold with the new EMV data - with a short life span. This talk will include a demonstration of \"La-Cara,\" an automated cash out machine that works on current EMV and NFC ATMs. \"La-Cara\" is an entire fascia placed on the machine to hide the auto PIN keyboard and flashable EMV card system that silently withdraws money from harvested card data. This demonstration of the system can cash out around $20,000/$50,000 in 15 min. With these methods revealed we will be able to protect against similar types of attacks.",
    "plaintextTitle": "Hacking Next-Gen ATMs: From Capture to Cashout",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Hecker-Hacking-Next-Gen-ATMs-From-Capture-To-Cashout.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=FgIk_oIK2SM"
      }
    ],
    "youtubeDescription": "MV (Chip & Pin) card ATM's are taking over the industry with the deadlines passed and approaching the industry rushes ATM's to the market. Are they more secure and hack proof? Over the past year I have worked at understanding and breaking the new methods that ATM manufactures have implemented on production ‘Next Generation’ Secure ATM systems. This includes bypassing Anti-skimming/Anti-Shimming methods introduced to the latest generation ATM's. along with NFC long range attack that allows real-time card communication over 400 miles away. This talk will demonstrate how a $2000-dollar investment criminals can do unattended ‘cash outs’ touching also on failures of the past with EMV implementations and how credit card data of the future will most likely be sold with the new EMV data having such a short life span. \n\nWith a rise of the machines theme demonstration of ‘La-Cara’ and automated Cash out machine that works on Current EMV and NFC ATM's it is an entire fascia Placed on the machine to hide the auto PIN keyboard and flash-able EMV card system that is silently withdrawing money from harvested card data. This demonstration of the system can cash out around $20,000/$50,000 in 15 min.\n\nBio:\n11 Years Pen-testing, 12 years’ security research and programming experience. Working for a security Company in the Midwest Weston has recently Spoken at DEF CON 22 & 23, Black Hat USA 2016, Enterprise Connect 2016 ISC2-Security Congress, SC-Congress Toronto, HOPE11, BSIDES Boston and over 50 other speaking engagements from telecom Regional events to University’s on security subject matter. Working with A Major University’s research project with Department of Homeland Security on 911 emergency systems and attack mitigation. Attended school in Minneapolis Minnesota. Computer Science and Geophysics. Found several vulnerabilities’ in very popular software and firmware. Including Microsoft, Qualcomm, Samsung, HTC, Verizon."
  },
  "hackproofing-oracle-ebusiness-suite": {
    "author": "david-litchfield",
    "description": "A recent security review by David Litchfield of Oracle's eBusiness Suite (fully patched) revealed it is vulnerable to a number of (unauthenticated) remote code execution flaws, a slew of SQL injection vulnerabilities and Cross Site Scripting bugs. Used by large corporations across the globe the question becomes how does one secure this product given its weaknesses. This talk will examine those weakness with demonstration exploits then look at how one can protect their systems against these attacks.",
    "plaintextTitle": "Hackproofing Oracle eBusiness Suite",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Litchfield-Hackproofing-Oracle-eBusiness-Suite.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Litchfield-Hackproofing-Oracle-eBusiness-Suite-wp-1.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Litchfield-Hackproofing-Oracle-eBusiness-Suite-wp-2.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Litchfield-Hackproofing-Oracle-eBusiness-Suite-wp-3.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Litchfield-Hackproofing-Oracle-eBusiness-Suite-wp-4.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Litchfield-Hackproofing-Oracle-eBusiness-Suite-wp-5.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=9lR9ncdMrfQ"
      }
    ],
    "youtubeDescription": ""
  },
  "hardening-aws-environments-and-automating-incident-response-for-aws-compromises": {
    "author": "andrew-krug",
    "description": "Incident Response procedures differ in the cloud versus when performed in traditional, on-premise, environments. The cloud offers the ability to respond to an incident by programmatically collecting evidence and quarantining instances but with this programmatic ability comes the risk of a compromised API key. The risk of a compromised key can be mitigated but proper configuration and monitoring must be in place.The talk discusses the paradigm of Incident Response in the cloud and introduces tools to automate the collection of forensic evidence of a compromised host. It highlights the need to properly configure an AWS environment and provides a tool to aid the configuration process.Cloud IR How is it Different?Incident response in the cloud is performed differently than when performed in on-premise systems. Specifically, in a cloud environment you can not walk up to the physical asset, clone the drive with a write-blocker, or perform any action that requires hands on time with the system in question. Incident response best practices advise following predefined practiced procedures when dealing with a security incident, but organizations moving infrastructure to the cloud may fail to realize the procedural differences in obtaining forensic evidence. Furthermore, while cloud providers produce documents on handling incident response in the cloud, these documents fail to address the newly released features or services that can aid incident response or help harden cloud infrastructure. (1.)A survey of AWS facilities for automation around IRThe same features in cloud platforms that create the ability to globally deploy workloads in the blink of an eye can also add to ease of incident handling. An AWS user may establish API keys to use the AWS SDK to programmatically add or remove resources to an environment, scaling on demand. A savvy incident responder can use the same AWS SDK, or (the AWS command line tools) to leverage cloud services to facilitate the collection of evidence. For example, using the AWS command line tools or the AWS SDK, a user can programmatically image the disk of a compromised machine with a single call. However, the power of the AWS SDK introduces a new threat in the event of an API key compromise. Increased Attack Surface via Convenience ( Walk through some compromise scenarios to illustrate ) There are many stories of users accidentally uploading their AWS keys to GitHub or another sharing service and then having to fight to regain control of the AWS account while their bill skyrockets. (2. 3.) And while these stories are sensational, they are preventable by placing limits on a cloud account directly. More concerning is the risk of a compromised key being used to access private data. A compromised API key without restrictions could access managed database, storage, or code repository services, to name a few. (4.) While the API key itself may not be used to access a targeted box, it is possible to use that key to clone a targeted box, and relaunch it with an attacker's SSH key, giving the attacker full access to the newly instantiated clone. While the consequences of a compromised API key can be dire, the risks can be substantially mitigated with proper configuration and monitoring. Hardening of AWS InfrastructureAWS environments can be hardened by following traditional security best practices and leveraging AWS services. AWS Services like CloudTrail and Config should be used to monitor and configure an AWS environment. CloudTrail provides logging of AWS API invocations tied to a specific API key. AWS Config provides historical insight into the configuration of AWS resources including users and the permissions granted in their policies. API keys associated to AWS accounts should be delegated according to least privilege and therefore have the fewest number of permissions granted in its policy as possible. Furthermore, API keys should be tightened to restrict access only to the resources they need. Managing of these policies is made easier by the group and role constructs provided by AWS IAM, but it still leaves to the user having to understand each of the 195 policies currently recognized by IAM.Introduction of ToolsWe present custom tooling so the entire incident response process can be automated based on certain triggers within the AWS account. With very little configuration users could detect a security incident, acquire memory, take snapshots of disk images, quarantine, and have it presented to an examiner workstation all in the time it takes to get a cup of coffee.Additional tooling is presented to aid in the recovery of an AWS account should a AWS key be compromised. The tool attempts to rotate compromised keys, identify and remove rogue EC2 instances and produce a report with next steps for the user.Finally, we present a tool that examines an existing AWS environments and aides in configuring that environment to a hardened state. The tool recommends services to enable, permissions to remove from user accounts, and metrics to collect.We discuss Incident Response in the cloud and introduce tools to automate the collection of forensic evidence of a compromised host. We highlight the need to properly configure an AWS environment and provide tools to aid the configuration process.References1. AWS Security Resources. N.p., n.d. Web. 10 Apr. 2016. . 2. Example AWS Key Compromises. Ed. Soulskill. N.p., n.d. Web. 10 Apr. 2016. . 3. IT News Article on AWS Keys. N.p., n.d. Web. 10 Apr. 2016. . 4. AWS Console Breach CloudSpaces. N.p., n.d. Web. 10 Apr. 2016. .",
    "plaintextTitle": "Hardening AWS Environments and Automating Incident Response for AWS Compromises",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Krug-Hardening-AWS-Environments-And-Automating-Incident-Response-For-AWS-Compromises.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Krug-Hardening-AWS-Environments-And-Automating-Incident-Response-For-AWS-Compromises-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=cmEUxxYFjK8"
      }
    ],
    "youtubeDescription": "These are the videos from Derbycon 2016:\nhttp://www.irongeek.com/i.php?page=videos/derbycon6/mainlist"
  },
  "heist-http-encrypted-information-can-be-stolen-through-tcp-windows": {
    "author": "tom-van-goethem",
    "description": "Over the last few years, a worryingly number of attacks against SSL/TLS and other secure channels have been discovered. Fortunately, at least from a defenders perspective, these attacks require an adversary capable of observing or manipulating network traffic. This prevented a wide and easy exploitation of these vulnerabilities. In contrast, we introduce HEIST, a set of techniques that allows us to carry out attacks against SSL/TLS purely in the browser. More generally, and surprisingly, with HEIST it becomes possible to exploit certain flaws in network protocols without having to sniff actual traffic. HEIST abuses weaknesses and subtleties in the browser, and the underlying HTTP, SSL/TLS, and TCP layers. Most importantly, we discover a side-channel attack that leaks the exact size of any cross-origin response. This side-channel abuses the way responses are sent at the TCP level. Combined with the fact that SSL/TLS lacks length-hiding capabilities, HEIST can directly infer the length of the plaintext message. Concretely, this means that compression-based attacks such as CRIME and BREACH can now be performed purely in the browser, by any malicious website or script, without requiring network access. Moreover, we also show that our length-exposing attacks can be used to obtain sensitive information from unwitting victims by abusing services on popular websites. Finally, we explore the reach and feasibility of exploiting HEIST. We show that attacks can be performed on virtually every web service, even when HTTP/2 is used. In fact, HTTP/2 allows for more damaging attack techniques, further increasing the impact of HEIST. In short, HEIST is a set of novel attack techniques that brings network-level attacks to the browser, posing an imminent threat to our online security and privacy.",
    "plaintextTitle": "HEIST: HTTP Encrypted Information can be Stolen Through TCP-Windows",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-VanGoethem-HEIST-HTTP-Encrypted-Information-Can-Be-Stolen-Through-TCP-Windows.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-VanGoethem-HEIST-HTTP-Encrypted-Information-Can-Be-Stolen-Through-TCP-Windows-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=GwQsu8dGSeA"
      }
    ],
    "youtubeDescription": "by Tom Van Goethem  &  Mathy Vanhoef\n\nOver the last few years, a worryingly number of attacks against SSL/TLS and other secure channels have been discovered. Fortunately, at least from a defenders perspective, these attacks require an adversary capable of observing or manipulating network traffic. This prevented a wide and easy exploitation of these vulnerabilities. In contrast, we introduce HEIST, a set of techniques that allows us to carry out attacks against SSL/TLS purely in the browser. More generally, and surprisingly, with HEIST it becomes possible to exploit certain flaws in network protocols without having to sniff actual traffic. HEIST abuses weaknesses and subtleties in the browser, and the underlying HTTP, SSL/TLS, and TCP layers. Most importantly, we discover a side-channel attack that leaks the exact size of any cross-origin response. This side-channel abuses the way responses are sent at the TCP level. Combined with the fact that SSL/TLS lacks length-hiding capabilities, HEIST can directly infer the length of the plaintext message. Concretely, this means that compression-based attacks such as CRIME and BREACH can now be performed purely in the browser, by any malicious website or script, without requiring network access. Moreover, we also show that our length-exposing attacks can be used to obtain sensitive information from unwitting victims by abusing services on popular websites. Finally, we explore the reach and feasibility of exploiting HEIST. We show that attacks can be performed on virtually every web service, even when HTTP/2 is used. In fact, HTTP/2 allows for more damaging attack techniques, further increasing the impact of HEIST. In short, HEIST is a set of novel attack techniques that brings network-level attacks to the browser, posing an imminent threat to our online security and privacy."
  },
  "horse-pill-a-new-type-of-linux-rootkit": {
    "author": "michael-leibowitz",
    "description": "What if we took the underlying technical elements of Linux containers and used them for evil?  The result a new kind rootkit, which is even able to infect and persist in systems with UEFI secure boot enabled, thanks to the way almost every Linux system boots.  This works without a malicious kernel module and therefore works when kernel module signing is used to prevent loading of unsigned kernel modules.  The infected system has a nearly invisible backdoor that can be remote controlled via a covert network channel.  \r\n                \r\n                Hope is not lost, however!  Come to the talk and see how the risk can be eliminated/mitigated.  While this may poke a stick in the eye of the current state of boot security, we can fix it!",
    "plaintextTitle": "Horse Pill: A New Type of Linux Rootkit",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Leibowitz-Horse-Pill-A-New-Type-Of-Linux-Rootkit.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=wyRRbow4-bc"
      }
    ],
    "youtubeDescription": "by Michael Leibowitz\n\nWhat if we took the underlying technical elements of Linux containers and used them for evil? The result a new kind rootkit, which is even able to infect and persist in systems with UEFI secure boot enabled, thanks to the way almost every Linux system boots. This works without a malicious kernel module and therefore works when kernel module signing is used to prevent loading of unsigned kernel modules. The infected system has a nearly invisible backdoor that can be remote controlled via a covert network channel.\n\nHope is not lost, however! Come to the talk and see how the risk can be eliminated/mitigated. While this may poke a stick in the eye of the current state of boot security, we can fix it!"
  },
  "http-cookie-hijacking-in-the-wild-security-and-privacy-implications": {
    "author": "suphannee-sivakorn",
    "description": "The widespread demand for online privacy, also fueled by widely-publicized demonstrations of session hijacking attacks against popular websites (see Firesheep), has spearheaded the increasing deployment of HTTPS. However, many websites still avoid ubiquitous encryption due to performance or compatibility issues. The prevailing approach in these cases is to force critical functionality and sensitive data access over encrypted connections, while allowing more innocuous functionality to be accessed over HTTP. In practice, this approach is prone to flaws that can expose sensitive information or functionality to third parties. In this work, we conduct an in-depth assessment of a diverse set of major websites and explore what functionality and information is exposed to attackers that have hijacked a user's HTTP cookies. We identify a recurring pattern across websites with partially deployed HTTPS; service personalization inadvertently results in the exposure of private information. The separation of functionality across multiple cookies with different scopes and inter-dependencies further complicates matters, as imprecise access control renders restricted account functionality accessible to non-session cookies. Our cookie hijacking study reveals a number of severe flaws; attackers can obtain the user's home and work address and visited websites from Google, Bing and Baidu expose the user's complete search history, and Yahoo allows attackers to extract the contact list and send emails from the user's account. Furthermore, e-commerce vendors such as Amazon and Ebay expose the user's purchase history (partial and full respectively), and almost every website exposes the user's name and email address. Ad networks like Doubleclick can also reveal pages the user has visited. To fully evaluate the practicality and extent of cookie hijacking, we explore multiple aspects of the online ecosystem, including mobile apps, browser security mechanisms, extensions and search bars. To estimate the extent of the threat, we run IRB-approved measurements on a subset of our university's public wireless network for 30 days, and detect over 282K accounts exposing the cookies required for our hijacking attacks. We also explore how users can protect themselves and find that, while mechanisms such as the EFF's HTTPS Everywhere extension can reduce the attack surface, HTTP cookies are still regularly exposed. The privacy implications of these attacks become even more alarming when considering how they can be used to deanonymize Tor users. Our measurements suggest that a significant portion of Tor users may currently be vulnerable to cookie hijacking.",
    "plaintextTitle": "HTTP Cookie Hijacking in the Wild: Security and Privacy Implications",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Sivakorn-HTTP-Cookie-Hijacking-In-The-Wild-Security-And-Privacy-Implications.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Sivakorn-HTTP-Cookie-Hijacking-In-The-Wild-Security-And-Privacy-Implications-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=jYcx7WtbB0A"
      }
    ],
    "youtubeDescription": "by Suphannee Sivakorn  &  Jason Polakis\n\nThe widespread demand for online privacy, also fueled by widely-publicized demonstrations of session hijacking attacks against popular websites (see Firesheep), has spearheaded the increasing deployment of HTTPS. However, many websites still avoid ubiquitous encryption due to performance or compatibility issues. The prevailing approach in these cases is to force critical functionality and sensitive data access over encrypted connections, while allowing more innocuous functionality to be accessed over HTTP. In practice, this approach is prone to flaws that can expose sensitive information or functionality to third parties. In this work, we conduct an in-depth assessment of a diverse set of major websites and explore what functionality and information is exposed to attackers that have hijacked a user's HTTP cookies. We identify a recurring pattern across websites with partially deployed HTTPS; service personalization inadvertently results in the exposure of private information. The separation of functionality across multiple cookies with different scopes and inter-dependencies further complicates matters, as imprecise access control renders restricted account functionality accessible to non-session cookies. Our cookie hijacking study reveals a number of severe flaws; attackers can obtain the user's home and work address and visited websites from Google, Bing and Baidu expose the user's complete search history, and Yahoo allows attackers to extract the contact list and send emails from the user's account. Furthermore, e-commerce vendors such as Amazon and Ebay expose the user's purchase history (partial and full respectively), and almost every website exposes the user's name and email address. Ad networks like Doubleclick can also reveal pages the user has visited. To fully evaluate the practicality and extent of cookie hijacking, we explore multiple aspects of the online ecosystem, including mobile apps, browser security mechanisms, extensions and search bars. To estimate the extent of the threat, we run IRB-approved measurements on a subset of our university's public wireless network for 30 days, and detect over 282K accounts exposing the cookies required for our hijacking attacks. We also explore how users can protect themselves and find that, while mechanisms such as the EFF's HTTPS Everywhere extension can reduce the attack surface, HTTP cookies are still regularly exposed. The privacy implications of these attacks become even more alarming when considering how they can be used to deanonymize Tor users. Our measurements suggest that a significant portion of Tor users may currently be vulnerable to cookie hijacking."
  },
  "http-2-and-quic-teaching-good-protocols-to-do-bad-things": {
    "author": "catherine-kate-pearce",
    "description": "The meteoric rise of SPDY, HTTP/2, and QUIC has gone largely unremarked upon by most of the security field. QUIC is an application-layer UDP-based protocol that multiplexes connections between endpoints at the application level, rather than the kernel level. HTTP/2 (H2) is a successor to SPDY, and multiplexes different HTTP streams within a single connection. More than 10% of the top 1 Million websites are already using some of these technologies, including much of the 10 highest traffic sites. Whether you multiplex out across connections with QUIC, or multiplex into fewer connections with HTTP/2, the world has changed. We have a strong sensation of Déjà vu with this work and our 2014 BlackHat USA MPTCP research. We find ourselves discussing a similar situation in new protocols with technology stacks evolving faster than ever before, and Network Security is largely unaware of the peril already upon it. This talk briefly introduces QUIC and HTTP/2, covers multiplexing attacks beyond MPTCP, discusses how you can use these techniques over QUIC and within HTTP/2, and discusses how to make sense of and defend against H2/QUIC traffic on your network. We will also demonstrate, and release, some tools with these techniques incorporated.",
    "plaintextTitle": "HTTP/2 & QUIC - Teaching Good Protocols To Do Bad Things",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Pearce-HTTP2-&-QUIC-Teaching-Good-Protocols-To-Do-Bad-Things.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Pearce-HTTP2-&-QUIC-Teaching-Good-Protocols-To-Do-Bad-Things-code.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=wCa5nylzJCo"
      }
    ],
    "youtubeDescription": "by Catherine (Kate) Pearce  &  Carl Vincent\n\nThe meteoric rise of SPDY, HTTP/2, and QUIC has gone largely unremarked upon by most of the security field. QUIC is an application-layer UDP-based protocol that multiplexes connections between endpoints at the application level, rather than the kernel level. HTTP/2 (H2) is a successor to SPDY, and multiplexes different HTTP streams within a single connection. More than 10% of the top 1 Million websites are already using some of these technologies, including much of the 10 highest traffic sites. Whether you multiplex out across connections with QUIC, or multiplex into fewer connections with HTTP/2, the world has changed. We have a strong sensation of Déjà vu with this work and our 2014 BlackHat USA MPTCP research. We find ourselves discussing a similar situation in new protocols with technology stacks evolving faster than ever before, and Network Security is largely unaware of the peril already upon it. This talk briefly introduces QUIC and HTTP/2, covers multiplexing attacks beyond MPTCP, discusses how you can use these techniques over QUIC and within HTTP/2, and discusses how to make sense of and defend against H2/QUIC traffic on your network. We will also demonstrate, and release, some tools with these techniques incorporated."
  },
  "i-came-to-drop-bombs-auditing-the-compression-algorithm-weapon-cache": {
    "author": "cara-marie",
    "description": "A decompression bomb attack is relatively simple to perform --- but can be completely devastating to developers who have not taken the time to properly guard their applications against this type of denial of service. The decompression bomb is not a new attack - it's been around since at least 1996 - but unfortunately they are still horrifyingly common. The stereotypical bomb is the zip bomb, but in reality nearly any compression algorithm can provide fruit for this attack (images, HTTP streams, etc.). What algorithms have the highest compression ratio, the sloppiest parsers, and make for the best bomb candidates? This talk is about an ongoing project to answer that question. In addition to the compression algorithm audit, this research is generating a vast library of tools (\"bombs\") that can be used by security researchers and developers to test for this vulnerability in a wide variety of applications/protocols. These bombs are being released under an open-source license.",
    "plaintextTitle": "I Came to Drop Bombs: Auditing the Compression Algorithm Weapon Cache",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Marie-I-Came-to-Drop-Bombs-Auditing-The-Compression-Algorithm-Weapons-Cache.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=IXkX2ojrKZQ"
      }
    ],
    "youtubeDescription": "by Cara Marie\n\nA decompression bomb attack is relatively simple to perform --- but can be completely devastating to developers who have not taken the time to properly guard their applications against this type of denial of service. The decompression bomb is not a new attack - it's been around since at least 1996 - but unfortunately they are still horrifyingly common. The stereotypical bomb is the zip bomb, but in reality nearly any compression algorithm can provide fruit for this attack (images, HTTP streams, etc.). What algorithms have the highest compression ratio, the sloppiest parsers, and make for the best bomb candidates? This talk is about an ongoing project to answer that question. In addition to the compression algorithm audit, this research is generating a vast library of tools (\"bombs\") that can be used by security researchers and developers to test for this vulnerability in a wide variety of applications/protocols. These bombs are being released under an open-source license."
  },
  "into-the-core-in-depth-exploration-of-windows-10-iot-core": {
    "author": "paul-sabanal",
    "description": "The Internet of Things is becoming a reality, and more and more devices are being introduced into the market every day. With this, the demand for technology that would ease device management, improve device security, and facilitate data analytics increases as well.One such technology is Windows 10 IoT Core, Microsoft's operating system aimed at small footprint, low cost devices. It offers device servicing and manageability, enterprise grade security, and - combined with Microsoft's Azure platform - data analytics in the cloud. Given these features, Microsoft Windows 10 IoT Core will likely play a significant role in the future of IoT. As such, understanding how this operating system works on a deep level is becoming important. Methods and techniques that would aid in assessing its security are also becoming essential.In this talk I will first discuss the internals of the OS, including the security features and mitigations that it shares with the desktop edition. I will then enumerate the attack surface of a device running Windows 10 IoT Core as well as its potential susceptibility to malware. I will also talk about methods to assess the security of devices running Windows 10 IoT Core such as static/dynamic reverse engineering and fuzzing. I will end the talk with some recommendations on how to secure a Windows 10 IoT Core device.",
    "plaintextTitle": "Into The Core - In-Depth Exploration of Windows 10 IoT Core",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Sabanal-Into-The-Core-In-Depth-Exploration-Of-Windows-10-IoT-Core.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Sabanal-Into-The-Core-In-Depth-Exploration-Of-Windows-10-IoT-Core-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=bDQDmomjMIc"
      }
    ],
    "youtubeDescription": "by Paul Sabanal\n\nThe Internet of Things is becoming a reality, and more and more devices are being introduced into the market every day. With this, the demand for technology that would ease device management, improve device security, and facilitate data analytics increases as well.\n\nOne such technology is Windows 10 IoT Core, Microsoft's operating system aimed at small footprint, low cost devices. It offers device servicing and manageability, enterprise grade security, and - combined with Microsoft's Azure platform - data analytics in the cloud. Given these features, Microsoft Windows 10 IoT Core will likely play a significant role in the future of IoT. As such, understanding how this operating system works on a deep level is becoming important. Methods and techniques that would aid in assessing its security are also becoming essential.\n\nIn this talk I will first discuss the internals of the OS, including the security features and mitigations that it shares with the desktop edition. I will then enumerate the attack surface of a device running Windows 10 IoT Core as well as its potential susceptibility to malware. I will also talk about methods to assess the security of devices running Windows 10 IoT Core such as static/dynamic reverse engineering and fuzzing. I will end the talk with some recommendations on how to secure a Windows 10 IoT Core device."
  },
  "intra-process-memory-protection-for-applications-on-arm-and-x86-leveraging-the-elf-abi": {
    "author": "sergey-bratus",
    "description": "Today's software needs to isolate not only processes but the many components *within* a process from each other. Process-level isolation via jails, sandboxes, VMs, or hypervisors is finally becoming mainstream, but it misses an important point about modern software: its growing number of libraries that are all loaded into the same address space, and may all interact with complex inputs by way of vulnerable parsers. A process, even isolated, is as weak as the weakest of its components, but is as valuable as the most sensitive data it holds. Heartbleed was a perfect example of this: a faulty parser in a library could read absolutely everything in memory; there are many others less famous but no better. The biggest challenge of making intra-process memory protection practical is that it cannot require major changes to how software is written. A practical granular memory protection scheme must work for the existing C/C++ build chains, nor should it change the ABI. Further, it cannot rely on concepts that aren't already intuitively clear to C/C++ programmers. Many academic proposals for more granular memory access control stopped short of this. They disregard the glue what keeps the development process and runtime together: the ABI. We demonstrate ELFbac, a system that uses the Linux ELF ABI to express access control policies between a program's components, such as libraries, and requires no changes to the GNU build chain. It enforces these policies by using a modified Linux loader and the Linux virtual memory system. ELFbac policies operate on the level of ELF object file sections. Custom data and code units can be created with existing GCC C/C++ attributes with a one-line annotation per unit; they are no more complex than C's static scoping. We have developed prototypes for ARM and x86. We used our ARM prototype to protect a validating proxy firewall for DNP3, a popular ICS protocol, and our x86 one to write a basic policy for Nginx. We will also demonstrate a policy for protecting OpenSSH.",
    "plaintextTitle": "Intra-Process Memory Protection for Applications on ARM and x86: Leveraging the ELF ABI",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Bratus-Intra-Process-Memory-Protection-For-Applications-On-ARM-And-x86.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Bratus-Intra-Process-Memory-Protection-For-Applications-On-ARM-And-x86-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=YXh2aIc9u64"
      }
    ],
    "youtubeDescription": "by Sergey Bratus  &  Maxwell Koo  &  Julian Bangert\n\nToday's software needs to isolate not only processes but the many components *within* a process from each other. Process-level isolation via jails, sandboxes, VMs, or hypervisors is finally becoming mainstream, but it misses an important point about modern software: its growing number of libraries that are all loaded into the same address space, and may all interact with complex inputs by way of vulnerable parsers. A process, even isolated, is as weak as the weakest of its components, but is as valuable as the most sensitive data it holds. Heartbleed was a perfect example of this: a faulty parser in a library could read absolutely everything in memory; there are many others less famous but no better. The biggest challenge of making intra-process memory protection practical is that it cannot require major changes to how software is written. A practical granular memory protection scheme must work for the existing C/C++ build chains, nor should it change the ABI. Further, it cannot rely on concepts that aren't already intuitively clear to C/C++ programmers. Many academic proposals for more granular memory access control stopped short of this. They disregard the glue what keeps the development process and runtime together: the ABI.\n\nWe demonstrate ELFbac, a system that uses the Linux ELF ABI to express access control policies between a program's components, such as libraries, and requires no changes to the GNU build chain. It enforces these policies by using a modified Linux loader and the Linux virtual memory system. ELFbac policies operate on the level of ELF object file sections. Custom data and code units can be created with existing GCC C/C++ attributes with a one-line annotation per unit; they are no more complex than C's static scoping. We have developed prototypes for ARM and x86. We used our ARM prototype to protect a validating proxy firewall for DNP3, a popular ICS protocol, and our x86 one to write a basic policy for Nginx. We will also demonstrate a policy for protecting OpenSSH."
  },
  "investigating-ddos-architecture-actors-and-attribution": {
    "author": "elliott-peterson",
    "description": "DDOS attack usage has been accelerating, in terms of both attack volume and frequency. Such attacks present a major threat to enterprises worldwide. Presenters will discuss a number of novel techniques utilized by law enforcement and the private sector, to measure, study, and attribute attacks originating from sources such as embedded device botnets and booter/stresser services. Presenters will discuss the usage of honeypots to gather historical attack details, as well as best practices for conducting live DDOS attack testing. Representative PCAPs will be shown, dissected, and explain. Finally, presenters will provide examples of where these services are offered for sale, how they are purchased, and the individuals who operate them.",
    "plaintextTitle": "Investigating DDOS - Architecture Actors and Attribution",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=2SNCWqxe7nU"
      }
    ],
    "youtubeDescription": "by Elliott Peterson  &  Andre Correa\n\nDDOS attack usage has been accelerating, in terms of both attack volume and frequency. Such attacks present a major threat to enterprises worldwide. Presenters will discuss a number of novel techniques utilized by law enforcement and the private sector, to measure, study, and attribute attacks originating from sources such as embedded device botnets and booter/stresser services. Presenters will discuss the usage of honeypots to gather historical attack details, as well as best practices for conducting live DDOS attack testing. Representative PCAPs will be shown, dissected, and explain. Finally, presenters will provide examples of where these services are offered for sale, how they are purchased, and the individuals who operate them."
  },
  "irans-soft-war-for-internet-dominance": {
    "author": "claudio-guarnieri",
    "description": "Over the past decade, the Islamic Republic of Iran has been targeted by continual intrusion campaigns from foreign actors that sought access to the country's nuclear facilities, economic infrastructure, military apparatus, and governmental institutions for the purpose of espionage and coercive diplomacy. Similarly, since the propagandic defacements of international communications platforms and political dissident sites conducted by an organization describing itself as the \"Iranian Cyber Army\" beginning in late 2009, Iranian actors have been attributed to a recurrent campaigns of intrusions and disruptions of private companies, foreign government entities, domestic opposition, regional adversaries and international critics. The intent of the CNO activities is not always discernable based on the tactics used or the data accessed, as the end implications of the disclosure of particular information is often distant and concealed. Where such intent is made evident, the reasons for Iranian intrusion campaigns range from retaliatory campaigns against adversaries, as a result of identifiable grievances, to surveillance of domestic opposition in support of the Islamic Republic establishment. Iranian intrusion campaigns have also reflected an interest in internal security operations against active political movements that have historically advocated for the secession of ethnic minority provinces or overthrow of the political establishment through violence. However, Iranian intrusion sets appear to be primarily interested in a broader field of challenges to the political and religious hegemony of the Islamic Republic. Previous reports on Iranian campaigns have referred to the targeting of Iranian dissident. However, in practice those targeted range from reformists operating within the establishment from inside of Iran to former political prisoners forced out of the country. Across the records of hundreds of intrusion attempts of campaigns conducted by a distinct sets of actors, distinct patterns emerge in the types of individuals and organizations targeted by Iranian actors by internal security operations: high-profile individuals and organizations, such as journalists, human rights advocates or political figures, with extensive relationships and networks inside of Iran; members of the diplomatic establishment of Iran, and former governmental officials under previous administrations; adherents to non-Shia religions, participants in ethnic rights movements, or members of anti-Islamic Republic political organization; academics or public policy organizations critical of the Iranian government; cultural figures that promote values contrary to the interpretation of Islamic values promoted by the establishment; organizations fostering international collaboration and connections with the current Iranian administration; and international organizations conducting political programmes focused on Iran through funding by governmental agencies. In this presentation we will analyze in depth the results of several years of research and investigation on the intrusion activities of Iranian threat actors, particularly engaged in attacks against members of civil society.",
    "plaintextTitle": "Iran's Soft-War for Internet Dominance",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Guarnieri-Iran-And-The-Soft-War-For-Internet-Dominance.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Guarnieri-Iran-And-The-Soft-War-For-Internet-Dominance-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=4TBSK9YgI8U"
      }
    ],
    "youtubeDescription": "by Claudio Guarnieri  &  Collin Anderson\n\nOver the past decade, the Islamic Republic of Iran has been targeted by continual intrusion campaigns from foreign actors that sought access to the country's nuclear facilities, economic infrastructure, military apparatus, and governmental institutions for the purpose of espionage and coercive diplomacy. Similarly, since the propagandic defacements of international communications platforms and political dissident sites conducted by an organization describing itself as the \"Iranian Cyber Army\" beginning in late 2009, Iranian actors have been attributed to a recurrent campaigns of intrusions and disruptions of private companies, foreign government entities, domestic opposition, regional adversaries and international critics. The intent of the CNO activities is not always discernable based on the tactics used or the data accessed, as the end implications of the disclosure of particular information is often distant and concealed. Where such intent is made evident, the reasons for Iranian intrusion campaigns range from retaliatory campaigns against adversaries, as a result of identifiable grievances, to surveillance of domestic opposition in support of the Islamic Republic establishment. Iranian intrusion campaigns have also reflected an interest in internal security operations against active political movements that have historically advocated for the secession of ethnic minority provinces or overthrow of the political establishment through violence. However, Iranian intrusion sets appear to be primarily interested in a broader field of challenges to the political and religious hegemony of the Islamic Republic. Previous reports on Iranian campaigns have referred to the targeting of Iranian dissident. However, in practice those targeted range from reformists operating within the establishment from inside of Iran to former political prisoners forced out of the country.\n\nAcross the records of hundreds of intrusion attempts of campaigns conducted by a distinct sets of actors, distinct patterns emerge in the types of individuals and organizations targeted by Iranian actors by internal security operations: high-profile individuals and organizations, such as journalists, human rights advocates or political figures, with extensive relationships and networks inside of Iran; members of the diplomatic establishment of Iran, and former governmental officials under previous administrations; adherents to non-Shia religions, participants in ethnic rights movements, or members of anti-Islamic Republic political organization; academics or public policy organizations critical of the Iranian government; cultural figures that promote values contrary to the interpretation of Islamic values promoted by the establishment; organizations fostering international collaboration and connections with the current Iranian administration; and international organizations conducting political programmes focused on Iran through funding by governmental agencies. In this presentation we will analyze in depth the results of several years of research and investigation on the intrusion activities of Iranian threat actors, particularly engaged in attacks against members of civil society."
  },
  "keystone-engine-next-generation-assembler-framework": {
    "author": "nguyen-anh-quynh",
    "description": "Assembler is an application that compiles a string of assembly code and returns instruction encodings. An assembler framework allows us to build new tools, and is a fundamental component in the Reverse Engineering (RE) toolset. However, a good assembler framework is sorely missed since the ice age! Indeed, there is no single multi-architecture, multi-platform and open source framework available and the whole RE community are badly suffering from this lingering issue.We have decided to step up again to solve this challenge once and for all. We built Keystone, an assembler engine with unparalleled features: - Multi-architecture, with support for Arm, Arm64 (AArch64/Armv8), Hexagon, Mips, PowerPC, Sparc, SystemZ, & X86 (include 16/32/64bit).- Clean/simple/lightweight/intuitive architecture-neutral API.- Implemented in C/C++ languages, with bindings for Python, NodeJS, Ruby, Go & Rust available.- Native support for Windows & *nix (with Mac OSX, Linux, *BSD & Solaris confirmed).- Thread-safe by design.- Open source.This talk is going to introduce some existing assembler frameworks, then goes into details of their design/implementation and explains their current issues. Next, we will present the architecture of Keystone and the challenges of designing and implementing it. The audience will understand the advantages of our engine and see why the future is assured, so that Keystone will keep getting better, stronger and become the ultimate assembler engine of choice for the security community. Keystone aims to lay the ground for innovative works and open up new opportunities for future of security research and development. To conclude the talk, some new advanced RE tools built on top of Keystone will be introduced to demonstrate its power.Keystone has a homepage at http://www.keystone-engine.org. Full source code of our engine will be released at Black Hat USA 2016.",
    "plaintextTitle": "Keystone Engine: Next Generation Assembler Framework",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Quynh-Keystone-Engine-Next-Generation-Assembler-Framework.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=-vzoz_KJTps"
      }
    ],
    "youtubeDescription": "by Nguyen Anh Quynh\n\nAssembler is an application that compiles a string of assembly code and returns instruction encodings. An assembler framework allows us to build new tools, and is a fundamental component in the Reverse Engineering (RE) toolset. However, a good assembler framework is sorely missed since the ice age! Indeed, there is no single multi-architecture, multi-platform and open source framework available and the whole RE community are badly suffering from this lingering issue.\n\nWe have decided to step up again to solve this challenge once and for all. We built Keystone, an assembler engine with unparalleled features:\n\n- Multi-architecture, with support for Arm, Arm64 (AArch64/Armv8), Hexagon, Mips, PowerPC, Sparc, SystemZ, & X86 (include 16/32/64bit).\n- Clean/simple/lightweight/intuitive architecture-neutral API.\n- Implemented in C/C++ languages, with bindings for Python, NodeJS, Ruby, Go & Rust available.\n- Native support for Windows & *nix (with Mac OSX, Linux, *BSD & Solaris confirmed).\n- Thread-safe by design.\n- Open source.\n\nThis talk is going to introduce some existing assembler frameworks, then goes into details of their design/implementation and explains their current issues. Next, we will present the architecture of Keystone and the challenges of designing and implementing it. The audience will understand the advantages of our engine and see why the future is assured, so that Keystone will keep getting better, stronger and become the ultimate assembler engine of choice for the security community.\n\nKeystone aims to lay the ground for innovative works and open up new opportunities for future of security research and development. To conclude the talk, some new advanced RE tools built on top of Keystone will be introduced to demonstrate its power.\n\nKeystone has a homepage at http://www.keystone-engine.org. Full source code of our engine will be released at Black Hat USA 2016."
  },
  "language-properties-of-phone-scammers-cyberdefense-at-the-level-of-the-human": {
    "author": "judith-tabron",
    "description": "The prevalence of human interactive components of serious system breaches continues to be a problem for every organization. Humans are the biggest vulnerability in any security system; helping people identify social engineering attempts over the phone will be cheaper and more effective than yet another technological implementation. At minimum it will add an important and necessary layer to defense in depth.\r\n                Forensic linguistics is the study of language as evidence for the law. It is a relatively new field and has not previously been applied to cybersecurity. Linguistic analysis uncovers several features of language interaction in a limited data set (recorded IRS phone scammers) that begin to answer how forensic linguistics could assist in cybersecurity defense.\r\n                This presentation will briefly introduce and explain polar tag questions, topic control, question deferral, and irregular narrative constructions in IRS scam phone calls, and offer some starting points for identifying such linguistic properties during the course of a phone call to help improve defense at the human level. We think this is only the beginning of applying forensic linguistics to cybersecurity.",
    "plaintextTitle": "Language Properties of Phone Scammers: Cyberdefense at the Level of the Human",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Tabron-Language-Properties-Of-Phone-Scammers-Cyberdefense-At-The-Level-Of-The-Human.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=0etXZNRUykI"
      }
    ],
    "youtubeDescription": "by Judith Tabron\n\nThe prevalence of human interactive components of serious system breaches continues to be a problem for every organization. Humans are the biggest vulnerability in any security system; helping people identify social engineering attempts over the phone will be cheaper and more effective than yet another technological implementation. At minimum it will add an important and necessary layer to defense in depth.\nForensic linguistics is the study of language as evidence for the law. It is a relatively new field and has not previously been applied to cybersecurity. Linguistic analysis uncovers several features of language interaction in a limited data set (recorded IRS phone scammers) that begin to answer how forensic linguistics could assist in cybersecurity defense.\nThis presentation will briefly introduce and explain polar tag questions, topic control, question deferral, and irregular narrative constructions in IRS scam phone calls, and offer some starting points for identifying such linguistic properties during the course of a phone call to help improve defense at the human level. We think this is only the beginning of applying forensic linguistics to cybersecurity."
  },
  "measuring-adversary-costs-to-exploit-commercial-software-the-government-bootstrapped-non-profit-c.i.t.l.": {
    "author": "mudge-.",
    "description": "Many industries, provide consumers with data about the quality, content, and cost of ownership of products, but the software industry leaves consumers with very little data to act upon. In fact when it comes to how secure or weak a product is from a security perspective, there is no meaningful consumer facing data. There has long been a call for the establishment of an independent organization to address this need.Last year, Mudge (from DARPA, Google, and L0pht fame) announced that after receiving a phone call from the White House he was leaving his senior position inside Google to create a non-profit organization to address this issue. This effort, known as CITL, is akin to Consumer Reports in its methodologies. While the media has dubbed it a \"CyberUL\", there is no focus on certifications or seals of approval, and no opaque evaluation metrics. Rather, like Consumer Reports, the goal is to evaluate software according to metrics and measurements that allow quantitative comparison and evaluation by anyone from a layperson, CFO, to security expert.How? A wide range of heuristics that attackers use to identify which targets are hard or soft against new exploitation has been codified, refined, and enhanced. Some of these techniques are quite straightforward and even broadly known, while others are esoteric tradecraft. To date, no one has applied all of these metrics uniformly across an entire software ecosystem before and shared the results. For the first time, a peak at the Cyber Independent Testing Lab's metrics, methodologies, and preliminary results from assessing the software quality and inherent vulnerability in over 100,000 binary applications on Windows, Linux, and OS X will be revealed. All accomplished with binaries only.Sometimes the more secure product is actually the cheaper, and quite often the security product is the most vulnerable. There are plenty of surprises like these that are finally revealed through quantified measurements. With this information, organizations and consumers can finally make informed purchasing decisions when it comes the security of their products, and measurably realize more hardened environments. Insurance groups are already engaging CITL, as are organizations focused on consumer safety. Vendors will see how much better or worse their products are in comparison to their competitors. Even exploit developers have demonstrated that these results enable bug-bounty arbitrage.That recommendation you made to your family members last holiday about which web browser they should use to stay safe (or that large purchase you made for your industrial control systems)? Well, you can finally see if you chose a hard or soft target… with the data to back it up.",
    "plaintextTitle": "Measuring Adversary Costs to Exploit Commercial Software: The Government-Bootstrapped Non-Profit C.I.T.L.",
    "material": []
  },
  "memory-forensics-using-virtual-machine-introspection-for-cloud-computing": {
    "author": "tobias-zillner",
    "description": "The relocation of systems and services into cloud environments is on the rise. Because of this trend users lose direct control over their machines and depend on the offered services from cloud providers. These services are especially in the field of digital forensics very rudimentary. The possibilities for users to analyze their virtual machines with forensic methods are very limited. In the underlying research of this talk a practical approach has been developed that gives the user additional capabilities in the field of forensic investigations. The solution focuses on a memory forensic service offering. To reach this goal, a management solution for cloud environments has been extended with memory forensic services. Self-developed memory forensic services, which are installed on each cloud node and are managed through the cloud management component, are the basis for this solution. Forensic data is gained via virtual machine introspection techniques. Compared to other approaches it is possible to get trustworthy data without influencing the running system. Additionally, a general overview about the underlying technologies is provided and the pros and cons are discussed. The solution approach is discussed in a generic way and practically implemented in a prototype. In this prototype OpenNebula is used for managing the cloud infrastructure in combination with Xen as virtualization component, LibVMI as Virtual Machine Introspection library and Volatility as forensic tool.",
    "plaintextTitle": "Memory Forensics Using Virtual Machine Introspection for Cloud Computing",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Zillner-Memory-Forensics-Using-VMI-For-Cloud-Computing.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ZqE07ewJeMI"
      }
    ],
    "youtubeDescription": "by Tobias Zillner\n\nThe relocation of systems and services into cloud environments is on the rise. Because of this trend users lose direct control over their machines and depend on the offered services from cloud providers. These services are especially in the field of digital forensics very rudimentary. The possibilities for users to analyze their virtual machines with forensic methods are very limited. In the underlying research of this talk a practical approach has been developed that gives the user additional capabilities in the field of forensic investigations. The solution focuses on a memory forensic service offering. To reach this goal, a management solution for cloud environments has been extended with memory forensic services. Self-developed memory forensic services, which are installed on each cloud node and are managed through the cloud management component, are the basis for this solution. Forensic data is gained via virtual machine introspection techniques. Compared to other approaches it is possible to get trustworthy data without influencing the running system. Additionally, a general overview about the underlying technologies is provided and the pros and cons are discussed. The solution approach is discussed in a generic way and practically implemented in a prototype. In this prototype OpenNebula is used for managing the cloud infrastructure in combination with Xen as virtualization component, LibVMI as Virtual Machine Introspection library and Volatility as forensic tool."
  },
  "next-generation-of-exploit-kit-detection-by-building-simulated-obfuscators": {
    "author": "tongbo-luo",
    "description": "Recently, driving-by downloads attacks have almost reached epidemic levels, and exploit-kit is the propulsion to signify the process of malware delivery. One of the key techniques used by exploit-kit to avoid firewall detection is obfuscating malicious JavaScript program. There exists an engine in each exploit kit, aka obfuscator, which transforms the malicious code to obfuscated code. Few researchers have studied obfuscation techniques utilized by exploit kit. Their main focus is on extracting information from the obfuscated page, such as common substring, common pattern, structure of the script (AST) and statistics of sensitive function invocation, and generating signatures. All of these studies are based on the analysis of obfuscated page, but not the obfuscator. One reason is that purchasing an obfuscator utilized by real exploit-kit is extremely expensive in the underground market. However, exploit-kit research can benefit from obfuscators in various aspects. Our work rebuilds obfuscator for 6 notorious exploit kit families (Angler, Nuclear, Rig, Magnitude, Neutrino, SweetOrange). We will discuss our design to implement an obfuscator used by the exploit kit family, and evaluate how similar our obfuscator is to a real one. We would also like to open-source our obfuscator to benefit the research, which aims to provide better protection of the cyber-world. We performed a serial of experiences based on our obfuscators. With the obfuscator in hand, we are also able to generate more samples than we have ever observed, even those that haven't been created by real exploit-kit. We also simulate the evolution of obfuscator in each exploit kit family by building a new version upon the previous version. We derived some patterns on how obfuscator evolved and tent to predict what the next obfuscator variation could be. We also noticed that current variation naming convention may not properly reflect variation of exploit kit. Currently, people name a new variation of unknown sample by checking whether it shares the similar structure with existing samples. However, our experience shows that even a minor configuration file change in obfuscator could significantly change the obfuscated page. Therefore, we propose to use the actual change of obfuscator as the evidence to name a new variation. We also conduct an evaluation on how many times the obfuscator could amplify its change to the obfuscated page.",
    "plaintextTitle": "Next-Generation of Exploit Kit Detection by Building Simulated Obfuscators",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Luo-Next-Generation-Of-Exploit-Kit-Detection-By-Building-Simulated-Obfuscator.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Luo-Next-Generation-Of-Exploit-Kit-Detection-By-Building-Simulated-Obfuscator-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=l5Xcwe-MZ7Y"
      }
    ],
    "youtubeDescription": "by Tongbo Luo  &  Xing Jin\n\nRecently, driving-by downloads attacks have almost reached epidemic levels, and exploit-kit is the propulsion to signify the process of malware delivery. One of the key techniques used by exploit-kit to avoid firewall detection is obfuscating malicious JavaScript program. There exists an engine in each exploit kit, aka obfuscator, which transforms the malicious code to obfuscated code. Few researchers have studied obfuscation techniques utilized by exploit kit. Their main focus is on extracting information from the obfuscated page, such as common substring, common pattern, structure of the script (AST) and statistics of sensitive function invocation, and generating signatures. All of these studies are based on the analysis of obfuscated page, but not the obfuscator. One reason is that purchasing an obfuscator utilized by real exploit-kit is extremely expensive in the underground market. However, exploit-kit research can benefit from obfuscators in various aspects.\n\nOur work rebuilds obfuscator for 6 notorious exploit kit families (Angler, Nuclear, Rig, Magnitude, Neutrino, SweetOrange). We will discuss our design to implement an obfuscator used by the exploit kit family, and evaluate how similar our obfuscator is to a real one. We would also like to open-source our obfuscator to benefit the research, which aims to provide better protection of the cyber-world. We performed a serial of experiences based on our obfuscators. With the obfuscator in hand, we are also able to generate more samples than we have ever observed, even those that haven't been created by real exploit-kit. We also simulate the evolution of obfuscator in each exploit kit family by building a new version upon the previous version. We derived some patterns on how obfuscator evolved and tent to predict what the next obfuscator variation could be. We also noticed that current variation naming convention may not properly reflect variation of exploit kit. Currently, people name a new variation of unknown sample by checking whether it shares the similar structure with existing samples. However, our experience shows that even a minor configuration file change in obfuscator could significantly change the obfuscated page. Therefore, we propose to use the actual change of obfuscator as the evidence to name a new variation. We also conduct an evaluation on how many times the obfuscator could amplify its change to the obfuscated page."
  },
  "nonce-disrespecting-adversaries-practical-forgery-attacks-on-gcm-in-tls": {
    "author": "sean-devlin",
    "description": "We investigate nonce-reuse issues with the Galois/Counter Mode (GCM) algorithm as used in TLS. Nonce reuse in GCM allows an attacker to recover the authentication key and forge messages as described by Joux. With an Internet-wide scan we identified over 70,000 HTTPS servers that are at risk of nonce reuse. We also identified 184 HTTPS servers repeating nonces directly in a short connection. Affected servers include large corporations, financial institutions, and a credit card company. We implement a proof of concept attack allowing us to violate the authenticity of affected HTTPS connections and inject content.",
    "plaintextTitle": "Nonce-Disrespecting Adversaries: Practical Forgery Attacks on GCM in TLS",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Devlin-Nonce-Disrespecting-Adversaries-Practical-Forgery-Attacks-On-GCM-In-TLS.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Devlin-Nonce-Disrespecting-Adversaries-Practical-Forgery-Attacks-On-GCM-In-TLS-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=uxuXFK5XKEU"
      }
    ],
    "youtubeDescription": "by Sean Devlin  &  Hanno Böck  &  Aaron Zauner  &  Philipp Jovanovic\n\nWe investigate nonce-reuse issues with the Galois/Counter Mode (GCM) algorithm as used in TLS. Nonce reuse in GCM allows an attacker to recover the authentication key and forge messages as described by Joux. With an Internet-wide scan we identified over 70,000 HTTPS servers that are at risk of nonce reuse. We also identified 184 HTTPS servers repeating nonces directly in a short connection. Affected servers include large corporations, financial institutions, and a credit card company. We implement a proof of concept attack allowing us to violate the authenticity of affected HTTPS connections and inject content."
  },
  "o-checker-detection-of-malicious-documents-through-deviation-from-file-format-specifications": {
    "author": "yuhei-otsubo",
    "description": "Documents containing executable files are often used in targeted email attacks in Japan. We examine various document formats (Rich Text Format, Compound File Binary and Portable Document Format) for files used in targeted attacks from 2009 to 2012 in Japan. Almost all the examined document files contain executable files that ignore the document file format specifications. Therefore, we focus on deviations from file format specifications and examine stealth techniques for hiding executable files. We classify eight anomalous structures and create a tool named o-checker to detect them. O-checker detects 96.1% of the malicious files used in targeted email attacks in 2013 and 2014. There are far fewer stealth techniques than vulnerabilities of document processors. Additionally, document file formats are more stable than document processors themselves. Accordingly, we assert that o-checker can continue detecting malware with a high detection rate for long periods.",
    "plaintextTitle": "O-checker: Detection of Malicious Documents Through Deviation from File Format Specifications",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Otsubo-O-checker-Detection-of-Malicious-Documents-through-Deviation-from-File-Format-Specifications.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Otsubo-O-checker-Detection-of-Malicious-Documents-through-Deviation-from-File-Format-Specifications-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Otsubo-O-checker-Detection-of-Malicious-Documents-through-Deviation-from-File-Format-Specifications-tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=WVA2c-OEQ7U"
      }
    ],
    "youtubeDescription": "by Yuhei Otsubo\n\nDocuments containing executable files are often used in targeted email attacks in Japan. We examine various document formats (Rich Text Format, Compound File Binary and Portable Document Format) for files used in targeted attacks from 2009 to 2012 in Japan. Almost all the examined document files contain executable files that ignore the document file format specifications. Therefore, we focus on deviations from file format specifications and examine stealth techniques for hiding executable files. We classify eight anomalous structures and create a tool named o-checker to detect them. O-checker detects 96.1% of the malicious files used in targeted email attacks in 2013 and 2014. There are far fewer stealth techniques than vulnerabilities of document processors. Additionally, document file formats are more stable than document processors themselves. Accordingly, we assert that o-checker can continue detecting malware with a high detection rate for long periods."
  },
  "oss-security-maturity-time-to-put-on-your-big-boy-pants": {
    "author": "jake-kouns",
    "description": "Open source software (OSS) usage is on the rise and also continues to be a major source of risk for companies. OSS and 3rd party code may be inexpensive to use to build products but it comes with significant liability and maintenance costs. Even after high profile vulnerabilities in OpenSSL and other critical libraries, tracking and understanding exposure continues to challenge even at the most mature enterprise company. It doesn't matter if you are a software vendor or not, development and the use of OSS in your organization is most likely significant. It also doesn't matter if you have been developing software for years or are just getting started, or whether you have one product or one hundred, it can feel to many nearly impossible to keep up with OSS vulnerabilities or more important ensure they are properly mitigated. This presentation looks at the real risk of using OSS and the best way to manage its use within your organization and more specifically the Product Development Lifecycle. We will examine all the current hype around OSS and separate out what are the real risks, and what organizations should be the most concerned about. We explore the true cost of using OSS and review the various factors that can be used to evaluate if a particular product or library should be used at your organization, including analyzing Vulnerability Metrics including Time to Patch. Getting your head wrapped around the issues and the need to improve OSS security is challenging, but then taking action at your organization can feel impossible. This presentation provides several real world examples that have been successful at a including: A case study of a single third party libraries vulnerability across several products will help to show why the result of investigating actual impact against your different products is valuable intelligence. We will provide learnings from your incident response function and why understanding the vulnerabilities in your current software can gain you valuable insight into creating smarter products to avoid maintenance costs. Finally, we will introduce a customized OSS Maturity Model and walk through the stages of maturity for organization developing software with regards to how they prioritize and internalize the risk presented by OSS.",
    "plaintextTitle": "OSS Security Maturity: Time to Put On Your Big Boy Pants!",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kouns-OSS-Security-Maturity-Time-To-Put-On-Your-Big-Boy-Pants.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=QEAr6yu_Pgc"
      }
    ],
    "youtubeDescription": "by Jake Kouns  &  Christine Gadsby\n\nOpen source software (OSS) usage is on the rise and also continues to be a major source of risk for companies. OSS and 3rd party code may be inexpensive to use to build products but it comes with significant liability and maintenance costs. Even after high profile vulnerabilities in OpenSSL and other critical libraries, tracking and understanding exposure continues to challenge even at the most mature enterprise company. It doesn't matter if you are a software vendor or not, development and the use of OSS in your organization is most likely significant. It also doesn't matter if you have been developing software for years or are just getting started, or whether you have one product or one hundred, it can feel to many nearly impossible to keep up with OSS vulnerabilities or more important ensure they are properly mitigated.\n\nThis presentation looks at the real risk of using OSS and the best way to manage its use within your organization and more specifically the Product Development Lifecycle. We will examine all the current hype around OSS and separate out what are the real risks, and what organizations should be the most concerned about. We explore the true cost of using OSS and review the various factors that can be used to evaluate if a particular product or library should be used at your organization, including analyzing Vulnerability Metrics including Time to Patch. Getting your head wrapped around the issues and the need to improve OSS security is challenging, but then taking action at your organization can feel impossible. This presentation provides several real world examples that have been successful at a including: A case study of a single third party libraries vulnerability across several products will help to show why the result of investigating actual impact against your different products is valuable intelligence. We will provide learnings from your incident response function and why understanding the vulnerabilities in your current software can gain you valuable insight into creating smarter products to avoid maintenance costs. Finally, we will introduce a customized OSS Maturity Model and walk through the stages of maturity for organization developing software with regards to how they prioritize and internalize the risk presented by OSS."
  },
  "ouroboros-tearing-xen-hypervisor-with-the-snake": {
    "author": "shangcong-luan",
    "description": "The Xen Project has been a widely used virtualization platform powering some of the largest clouds in production today.\r\n                Sitting directly on the hardware below any operating systems, the Xen hypervisor is responsible for the management of CPU/MMU and guest operating systems.\r\n                Guest operating systems cound be controled to run in PV mode using paravirtualization technologies or HVM mode using hardware-assisted virtualization technologies.\r\n                \r\n                Compare to HVM mode, PV mode guest OS kernel could recognize the existence of hypervisor and, thus, work normally via hypervisor inferfaces which are called hypercalls. While performing priviledged operations, PV mode guest OS would submit requests via hypercalls then the hypervisor do these operations for it after verifying its requests.\r\n                \r\n                Inspired by Ouroboros, an ancient symbol with a snake bitting its tail, our team has found a critical verification bypass bug in Xen hypervisor and that will be used to tear the hypervisor a hole. With sepecific exploition vectors and payloads, malicious PV guest OS could control not only the hypervisor but also all other guest operating systems running on current platform.",
    "plaintextTitle": "Ouroboros: Tearing Xen Hypervisor with the Snake",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Luan-Ouroboros-Tearing-Xen-Hypervisor-With-The-Snake.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Luan-Ouroboros-Tearing-Xen-Hypervisor-With-The-Snake-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=kt3kX94kWcM"
      }
    ],
    "youtubeDescription": "by Shangcong Luan\n\nThe Xen Project has been a widely used virtualization platform powering some of the largest clouds in production today.\nSitting directly on the hardware below any operating systems, the Xen hypervisor is responsible for the management of CPU/MMU and guest operating systems.\nGuest operating systems cound be controled to run in PV mode using paravirtualization technologies or HVM mode using hardware-assisted virtualization technologies.\n\nCompare to HVM mode, PV mode guest OS kernel could recognize the existence of hypervisor and, thus, work normally via hypervisor inferfaces which are called hypercalls. While performing priviledged operations, PV mode guest OS would submit requests via hypercalls then the hypervisor do these operations for it after verifying its requests.\n\nInspired by Ouroboros, an ancient symbol with a snake bitting its tail, our team has found a critical verification bypass bug in Xen hypervisor and that will be used to tear the hypervisor a hole. With sepecific exploition vectors and payloads, malicious PV guest OS could control not only the hypervisor but also all other guest operating systems running on current platform."
  },
  "over-the-edge-silently-owning-windows-10s-secure-browser": {
    "author": "erik-bosman",
    "description": "Memory deduplication, a well-known technique to reduce the memory footprint across virtual machines, is now also a default-on feature inside the Windows 10 operating system. Deduplication maps multiple identical copies of a physical page onto a single shared copy with copy-on-write semantics. As a result, a write to such a shared page triggers a page fault and is thus measurably slower than a write to a normal page.\r\n                \r\n                We leverage this side channel to build a weird machine and read arbitrary data in the system from the browser. By controlling the alignment and reuse of data in memory, we perform a byte-by-byte disclosure of high-entropy sensitive data, such as 64-bit code pointers randomized by ASLR. Next, even without control over data alignment or reuse, we show how to disclose randomized 64-bit heap pointers using a novel birthday attack. To show these attack primitives are practical, we have built an end-to-end JavaScript-based exploit against the new Microsoft Edge browser, in absence of software vulnerabilities and with all defenses turned on. Our exploit combines our deduplication-based primitives with a reliable Rowhammer attack to gain arbitrary memory read and write access in the browser.",
    "plaintextTitle": "Over the Edge: Silently Owning Windows 10's Secure Browser",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=1-TlnMuNPZk"
      }
    ],
    "youtubeDescription": "by Erik Bosman  &  Kaveh Razavi  &  Herbert Bos  &  Cristiano Giuffrida\n\nMemory deduplication, a well-known technique to reduce the memory footprint across virtual machines, is now also a default-on feature inside the Windows 10 operating system. Deduplication maps multiple identical copies of a physical page onto a single shared copy with copy-on-write semantics. As a result, a write to such a shared page triggers a page fault and is thus measurably slower than a write to a normal page.\n\nWe leverage this side channel to build a weird machine and read arbitrary data in the system from the browser. By controlling the alignment and reuse of data in memory, we perform a byte-by-byte disclosure of high-entropy sensitive data, such as 64-bit code pointers randomized by ASLR. Next, even without control over data alignment or reuse, we show how to disclose randomized 64-bit heap pointers using a novel birthday attack. To show these attack primitives are practical, we have built an end-to-end JavaScript-based exploit against the new Microsoft Edge browser, in absence of software vulnerabilities and with all defenses turned on. Our exploit combines our deduplication-based primitives with a reliable Rowhammer attack to gain arbitrary memory read and write access in the browser."
  },
  "pangu-9-internals": {
    "author": "tielei-wang",
    "description": "Pangu 9, the first (and only) untethered jailbreak tool for iOS 9, exploited a sequence of vulnerabilities in the iOS userland to achieve final arbitrary code execution in the kernel and persistent code signing bypass. Although these vulnerabilities were fixed in iOS 9.2, there are no details disclosed. This talk will reveal the internals of Pangu 9. Specifically, this talk will first present a logical error in a system service that is exploitable by any container app through XPC communication to gain arbitrary file read/write as mobile. Next, this talk will explain how Pangu 9 gains arbitrary code execution outside the sandbox through the system debugging feature. This talk will then elaborate a vulnerability in the process of loading the dyld_shared_cache file that enables Pangu 9 to achieve persistent code signing bypass. Finally, this talk will present a vulnerability in the backup-restore process that allows apps signed by a revoked enterprise certificate to execute without the need of the user's explicit approval of the certificate.",
    "plaintextTitle": "Pangu 9 Internals",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Wang-Pangu-9-Internals.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=vCLf7tdjabY"
      }
    ],
    "youtubeDescription": "by Tielei Wang  &  Hao Xu  &  Xiaobo Chen\n\nPangu 9, the first (and only) untethered jailbreak tool for iOS 9, exploited a sequence of vulnerabilities in the iOS userland to achieve final arbitrary code execution in the kernel and persistent code signing bypass. Although these vulnerabilities were fixed in iOS 9.2, there are no details disclosed. This talk will reveal the internals of Pangu 9. Specifically, this talk will first present a logical error in a system service that is exploitable by any container app through XPC communication to gain arbitrary file read/write as mobile. Next, this talk will explain how Pangu 9 gains arbitrary code execution outside the sandbox through the system debugging feature. This talk will then elaborate a vulnerability in the process of loading the dyld_shared_cache file that enables Pangu 9 to achieve persistent code signing bypass. Finally, this talk will present a vulnerability in the backup-restore process that allows apps signed by a revoked enterprise certificate to execute without the need of the user's explicit approval of the certificate."
  },
  "pay-no-attention-to-that-hacker-behind-the-curtain-a-look-inside-the-black-hat-network": {
    "author": "neil-wyler",
    "description": "Each year thousands of security professionals answer the siren song of Black Hat USA. They come to learn from the best trainers, and the smartest(and best looking) speakers. And hey, this is Vegas, and when you're in Vegas, you make it rain...exploits.Yes, every year thousands of security pros learn the latest tactics and techniques from the sharpest minds in the industry, and once they have, they can't wait to test them on the closest network they can find, our network. This presentation will help you understand what's going on behind the scenes at Black Hat. Who's attacking who? What are they doing? And what makes it all tick.So come see what goes into standing up, and maintaining one of the most hostile networks on the planet. We'll share everything we can about the history of the network, the infrastructure we're using today, and the traffic patterns that keep us sweating, and laughing, well into the night.",
    "plaintextTitle": "Pay No Attention to That Hacker Behind the Curtain: A Look Inside the Black Hat Network",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=6MAKD7Hz_xA"
      }
    ],
    "youtubeDescription": "by Neil Wyler  &  Bart Stump\n\nEach year thousands of security professionals answer the siren song of Black Hat USA. They come to learn from the best trainers, and the smartest(and best looking) speakers. And hey, this is Vegas, and when you're in Vegas, you make it rain...exploits.\n\nYes, every year thousands of security pros learn the latest tactics and techniques from the sharpest minds in the industry, and once they have, they can't wait to test them on the closest network they can find, our network. This presentation will help you understand what's going on behind the scenes at Black Hat. Who's attacking who? What are they doing? And what makes it all tick.\n\nSo come see what goes into standing up, and maintaining one of the most hostile networks on the planet. We'll share everything we can about the history of the network, the infrastructure we're using today, and the traffic patterns that keep us sweating, and laughing, well into the night."
  },
  "pindemonium-a-dbi-based-generic-unpacker-for-windows-executable": {
    "author": "sebastiano-mariani",
    "description": "Nowadays malware authors employ multiple obfuscation and packing techniques to hinder the process of reverse engineering and bypass the anti-virus (AV) signature based analysis. This is a significant threat for end user's PCs since this voids part of the AV analysis, and it is also a problem for professional reverse engineers that have to invest lot of time in order to unpack and study a single packed malware sample. The problem of unpacking is well studied in literature and several works have been proposed both for enhancing the end user's protection and supporting the malware analysts in their work. Different approaches exist in order to build a generic unpacker: debuggers, kernel modules, hypervisor modules, dynamic binary instrumentation (DBI). In this thesis we explore the possibility to exploit the functionality of a DBI framework since it provides great functionality useful during the analysis process: it allows an instruction level granularity inspection and modification, through high level APIs, which gives the analyst full control of the program being instrumented. Our system can extract and reconstruct the original program from a packed version of it, helping and speeding up the analysis of an obfuscated binary. The packers employ different techniques with various levels of complexity, but all of them must share one common behavior during the run-time unpacking: they have to write new code in memory and eventually execute it. Starting from this we have designed a generic unpacking algorithm that can correctly detect this behaviour and defeat the most popular of packing techniques. Not only the packing strategy can be really different, but the obfuscation can be increased by hiding the function imported by the program which is usually a valuable source of information during the process of reverse engineer. These are known in literature as Import Address Table (IAT) obfuscation techniques. Our tool tries to reconstruct a working PE from its packed version, taking care of modern packing techniques like unpacking on dynamic memory allocated areas and tries to defeat the most used IAT obfuscation techniques. In order to validate our work we have conducted two experiments. The first one demonstrate the generality of our unpacking process with respect to fifteen different packers. The second experiment demonstrates the effectiveness of our system against malware samples packed with both known and unknown packers. Our system was able to reconstruct a working unpacked binary for 63\\% of the collected samples. When it is not possible to reconstruct a fully working PE, we provide all the memory dumps, representing the unpacked program along with a log about the unpacking process, which can be really useful to a malware analyst in order to speed up his work as it has been useful for us during the development of this tool. The source code of our tool can be found at https://github.com/Seba0691/PINdemonium.",
    "plaintextTitle": "PINdemonium: A DBI-Based Generic Unpacker for Windows Executable",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Mariani-Pindemonium-A-Dbi-Based-Generic-Unpacker-For-Windows-Executables.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Mariani-Pindemonium-A-Dbi-Based-Generic-Unpacker-For-Windows-Executables-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ec5xY7O-Txw"
      }
    ],
    "youtubeDescription": "by Sebastiano Mariani  &  Lorenzo Fontana\n\nNowadays malware authors employ multiple obfuscation and packing techniques to hinder the process of reverse engineering and bypass the anti-virus (AV) signature based analysis. This is a significant threat for end user's PCs since this voids part of the AV analysis, and it is also a problem for professional reverse engineers that have to invest lot of time in order to unpack and study a single packed malware sample. The problem of unpacking is well studied in literature and several works have been proposed both for enhancing the end user's protection and supporting the malware analysts in their work. Different approaches exist in order to build a generic unpacker: debuggers, kernel modules, hypervisor modules, dynamic binary instrumentation (DBI). In this thesis we explore the possibility to exploit the functionality of a DBI framework since it provides great functionality useful during the analysis process: it allows an instruction level granularity inspection and modification, through high level APIs, which gives the analyst full control of the program being instrumented. Our system can extract and reconstruct the original program from a packed version of it, helping and speeding up the analysis of an obfuscated binary. The packers employ different techniques with various levels of complexity, but all of them must share one common behavior during the run-time unpacking: they have to write new code in memory and eventually execute it. Starting from this we have designed a generic unpacking algorithm that can correctly detect this behaviour and defeat the most popular of packing techniques. Not only the packing strategy can be really different, but the obfuscation can be increased by hiding the function imported by the program which is usually a valuable source of information during the process of reverse engineer. These are known in literature as Import Address Table (IAT) obfuscation techniques. Our tool tries to reconstruct a working PE from its packed version, taking care of modern packing techniques like unpacking on dynamic memory allocated areas and tries to defeat the most used IAT obfuscation techniques.\n\nIn order to validate our work we have conducted two experiments. The first one demonstrate the generality of our unpacking process with respect to fifteen different packers. The second experiment demonstrates the effectiveness of our system against malware samples packed with both known and unknown packers. Our system was able to reconstruct a working unpacked binary for 63\\% of the collected samples. When it is not possible to reconstruct a fully working PE, we provide all the memory dumps, representing the unpacked program along with a log about the unpacking process, which can be really useful to a malware analyst in order to speed up his work as it has been useful for us during the development of this tool. The source code of our tool can be found at https://github.com/Seba0691/PINdemonium."
  },
  "plc-blaster-a-worm-living-solely-in-the-plc": {
    "author": "ralf-spenneberg",
    "description": "We will present and demonstrate the first PLC only worm. Our PLC worm will scan and compromise Siemens Simatic S7-1200 PLCs Version 1 through 3 without any external support. No PCs or additional hardware is required. The worm is fully self-contained and \"lives\" only on the PLC. Siemens S7-1200 PLCs offer different protection features. The access protection prevents the worm from compromising the the PLC. To our knowledge, this is the first time such a worm is publicly shown.The Siemens Simatic PLCs are managed using a proprietary Siemens protocol. Using this protocol, the PLC may be stopped, started and diagnostic information may be read. Futhermore, this protocol is used to upload and download user programs to the PLC. The older S7-300 and S7-400 PLCs are supported by several OpenSource solutions, like snap7, supporting the protocols used on these older PLCs. These solutions have already been used to misuse PLCs for attacking purposes (Klick and Lau, Black Hat USA 2015). With the introduction of the S7-1200 the protocol has been replaced by a new version not yet publicly analyzed. We inspected the protocol based on the S7-1200v3 and implemented the protocol by ourselves in our ICShell. We are now able to install and extract any user program on these PLCs. These newest extensions to the ICShell have not been published yet.Based on this work, we developed a PLC program which scans a local network for other S7-1200 PLCs. Once these are found the program compromises these PLCs by uploading itself to these devices. The already installed user software is not removed and still running on the PLC. Our malware attaches itself to the original software and runs in parallel to the original user program. The operator does not notice any changed behavior. We developed the first PLC only worm.The worm is only written using the programming language SCL and does not need any additional support. For the remote administration of the compromised PLCs, we implemented a Command&Control (C&C) server. Infected PLCs automatically contact the C&C server and may be remotely controlled using this connection. Using this connection, we can manipulate any physical input or output of the PLC. An additional proxy function enables us to access any additional system using a tunnel. Lastly, the Stop mode may be initiated through the C&C connection requiring a cold restart of the PLC by disconnecting the power supply to recover. We will demonstrate the attack during our talk.Our worm prevents its detection and analysis. If the operator connects to the PLC using the programming software TIA Portal 11, the operator may notice unnamed additional function blocks. But, when accessing these blocks the TIA Portal crashes preventing the forensic analysis.The infection of the PLC takes roughly 10 seconds. While the infection is in progress the PLC is in Stop mode. As soon as the infection has succeeded, the PLC undergoes a warm restart and the worm is running additionally to to the original user program.Our worm malware requires 38,5kb RAM and 216,6kb persistent memory. If the PLC does not offer the memory required by the original user software including our worm, it may overwrite the original user program. Based on the actually used model of the S7-1200 different setups may be required.Model:Available RAM (used by worm):Available persistent memory (used by worm) S7-1211:50kb (77%):1Mb (21%) S7-1212:75kb (51%):1MB (5 %) S7-1214:100kb (38%):4MB (5 %) S7-1215:125kb (30%):4MB (5 %) S7-1217:150kb (25%):4MB (5 %)A critical requirement for the execution of a PLC program is the cycle time for one full cycle of the user program. Our malware requires 7ms per cycle. This is just 4.7% of the maximum cycle time configured by default on the PLC models we inspected. The original user program still has plenty of time to run.By default, all Siemens Simatic S7-1200 v1-3 are susceptible to this attack. The PLC user programs may be uploaded and downloaded without any restriction. The Siemens Simatic PLCs support several protection mechanisms. We will explain these mechanisms and their result on the attack.Siemens PLCs support several protection features including the access protection. The access protection does prevent the attack we will demonstrate. The access protection is disabled by default.With the introduction of the S7-1200v4 Siemens introduced again a new protocol. These PLCs are not susceptible to the attack.While we present an attack via the ethernet interface the installation of the user program can also happen using the field bus interface. Using this interface even PLCs not connected to the ethernet network may be compromised. Once the first PLC is infected using the Ethernet, all other PLCs connected via the same field bus would be compromised as well.This talk emphasizes the significance of the built in protection features in modern PLCs and their correct deployment by the user.",
    "plaintextTitle": "PLC-Blaster: A Worm Living Solely in the PLC",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Spenneberg-PLC-Blaster-A-Worm-Living-Solely-In-The-PLC.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Spenneberg-PLC-Blaster-A-Worm-Living-Solely-In-The-PLC-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=NNAKaAKRUow"
      }
    ],
    "youtubeDescription": "by Ralf Spenneberg, Maik Brueggemann & Hendrik Schwartke\n\nWe will present and demonstrate the first PLC only worm. Our PLC worm will scan and compromise Siemens Simatic S7-1200 PLCs Version 1 through 3 without any external support. No PCs or additional hardware is required. The worm is fully self-contained and \"lives\" only on the PLC. Siemens S7-1200 PLCs offer different protection features. The access protection prevents the worm from compromising the the PLC. To our knowledge, this is the first time such a worm is publicly shown.\n\nThe Siemens Simatic PLCs are managed using a proprietary Siemens protocol. Using this protocol, the PLC may be stopped, started and diagnostic information may be read. Futhermore, this protocol is used to upload and download user programs to the PLC. The older S7-300 and S7-400 PLCs are supported by several OpenSource solutions, like snap7, supporting the protocols used on these older PLCs. These solutions have already been used to misuse PLCs for attacking purposes (Klick and Lau, Black Hat USA 2015). With the introduction of the S7-1200 the protocol has been replaced by a new version not yet publicly analyzed. We inspected the protocol based on the S7-1200v3 and implemented the protocol by ourselves in our ICShell. We are now able to install and extract any user program on these PLCs. These newest extensions to the ICShell have not been published yet.\n\nBased on this work, we developed a PLC program which scans a local network for other S7-1200 PLCs. Once these are found the program compromises these PLCs by uploading itself to these devices. The already installed user software is not removed and still running on the PLC. Our malware attaches itself to the original software and runs in parallel to the original user program. The operator does not notice any changed behavior. We developed the first PLC only worm.\n\nThe worm is only written using the programming language SCL and does not need any additional support. For the remote administration of the compromised PLCs, we implemented a Command&Control (C&C) server. Infected PLCs automatically contact the C&C server and may be remotely controlled using this connection. Using this connection, we can manipulate any physical input or output of the PLC. An additional proxy function enables us to access any additional system using a tunnel. Lastly, the Stop mode may be initiated through the C&C connection requiring a cold restart of the PLC by disconnecting the power supply to recover. We will demonstrate the attack during our talk.\n\nOur worm prevents its detection and analysis. If the operator connects to the PLC using the programming software TIA Portal 11, the operator may notice unnamed additional function blocks. But, when accessing these blocks the TIA Portal crashes preventing the forensic analysis.\n\nThe infection of the PLC takes roughly 10 seconds. While the infection is in progress the PLC is in Stop mode. As soon as the infection has succeeded, the PLC undergoes a warm restart and the worm is running additionally to to the original user program.\n\nOur worm malware requires 38,5kb RAM and 216,6kb persistent memory. If the PLC does not offer the memory required by the original user software including our worm, it may overwrite the original user program. Based on the actually used model of the S7-1200 different setups may be required...."
  },
  "pwning-your-java-messaging-with-deserialization-vulnerabilities": {
    "author": "matthias-kaiser",
    "description": "Messaging can be found everywhere. It's used by your favourite Mobile Messenger as well as in your bank's backend system. Message Brokers such as Pivotal's RabbitMQ, IBM's WebSphere MQ and others often form a key component of a modern backend system's architecture. Furthermore, there are various messaging standards in place like AMQP, MQTT, and STOMP. When it comes to the Java World it is rather unknown that Messaging in the Java ecosystem relies heavily on Java's serialization. Recent advances in the exploitation of Java deserialization vulnerabilities can be applied to exploit applications using Java messaging. This talk will show the attack surface of various Java messaging API implementations and their deserialization vulnerabilities. Last but not least, the Java Messaging Exploitation Tool (JMET) will be presented to help you identify and exploit message-consuming systems like a boss.",
    "plaintextTitle": "Pwning Your Java Messaging with Deserialization Vulnerabilities",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kaiser-Pwning-Your-Java-Messaging-With-Deserialization-Vulnerabilities.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kaiser-Pwning-Your-Java-Messaging-With-Deserialization-Vulnerabilities-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kaiser-Pwning-Your-Java-Messaging-With-Deserialization-Vulnerabilities-jmet-src-0.1.0.tar.bz2",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=0h8DWiOWGGA"
      }
    ],
    "youtubeDescription": "by Matthias Kaiser\n\nMessaging can be found everywhere. It's used by your favourite Mobile Messenger as well as in your bank's backend system. Message Brokers such as Pivotal's RabbitMQ, IBM's WebSphere MQ and others often form a key component of a modern backend system's architecture. Furthermore, there are various messaging standards in place like AMQP, MQTT, and STOMP. When it comes to the Java World it is rather unknown that Messaging in the Java ecosystem relies heavily on Java's serialization. Recent advances in the exploitation of Java deserialization vulnerabilities can be applied to exploit applications using Java messaging. This talk will show the attack surface of various Java messaging API implementations and their deserialization vulnerabilities. Last but not least, the Java Messaging Exploitation Tool (JMET) will be presented to help you identify and exploit message-consuming systems like a boss."
  },
  "recover-a-rsa-private-key-from-a-tls-session-with-perfect-forward-secrecy": {
    "author": "marco-ortisi",
    "description": "They always taught us that the only thing that can be pulled out from a SSL/TLS session using strong authentication and latest Perferct Forward Secrecy ciphersuites is the public key of the certificate exchanged during the handshake - an insufficient condition to place a MiTM attack without to generate alarms on the validity of the TLS connection and certificate itself. Anyway, this is not always true. In certain circumstances it is possible to derive the private key of server regardless of the size of the used modulus. Even RSA keys of 4096 bits can be factored at the cost of a few CPU cycles and computational resources. All that needed is the generation of a faulty digital signature from server, an event that can be observed when occurring certain conditions such as CPU overheating, RAM errors or other hardware faults. Because of these premises, devices like firewall, switch, router and other embedded appliances are more exposed than traditional IT servers or clients. During the talk, the author will explain the theory behind the attack, how common the factors are that make it possible and his custom pratical implementation of the technique. At the end, a proof-of-concept, able to work both in passive mode (i.e. only by sniffing the network traffic) and in active mode (namely, by participating directly in the establishment of TLS handshakes), will be released.",
    "plaintextTitle": "Recover a RSA Private Key from a TLS Session with Perfect Forward Secrecy",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ortisi-Recover-A-RSA-Private-Key-From-A-TLS-Session-With-Perfect-Forward-Secrecy.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ortisi-Recover-A-RSA-Private-Key-From-A-TLS-Session-With-Perfect-Forward-Secrecy-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ortisi-Recover-A-RSA-Private-Key-From-A-TLS-Session-With-Perfect-Forward-Secrecy-tools.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=QS1u2N3RABU"
      }
    ],
    "youtubeDescription": "by Marco Ortisi\n\nThey always taught us that the only thing that can be pulled out from a SSL/TLS session using strong authentication and latest Perferct Forward Secrecy ciphersuites is the public key of the certificate exchanged during the handshake - an insufficient condition to place a MiTM attack without to generate alarms on the validity of the TLS connection and certificate itself. Anyway, this is not always true. In certain circumstances it is possible to derive the private key of server regardless of the size of the used modulus. Even RSA keys of 4096 bits can be factored at the cost of a few CPU cycles and computational resources. All that needed is the generation of a faulty digital signature from server, an event that can be observed when occurring certain conditions such as CPU overheating, RAM errors or other hardware faults. Because of these premises, devices like firewall, switch, router and other embedded appliances are more exposed than traditional IT servers or clients. During the talk, the author will explain the theory behind the attack, how common the factors are that make it possible and his custom pratical implementation of the technique. At the end, a proof-of-concept, able to work both in passive mode (i.e. only by sniffing the network traffic) and in active mode (namely, by participating directly in the establishment of TLS handshakes), will be released."
  },
  "samsung-pay-tokenized-numbers-flaws-and-issues": {
    "author": "salvador-mendoza",
    "description": "Samsung announced many layers of security to its Pay app. Without storing or sharing any type of user's credit card information, Samsung Pay is trying to become one of the most secure approaches offering functionality and simplicity for its customers. This app is a complex mechanism which has some limitations relating security. Using random tokenize numbers and implementing Magnetic Secure Transmission (MST) technology, which do not guarantee that every token generated with Samsung Pay would be applied to make a purchase with the same Samsung device. That means that an attacker could steal a token from a Samsung Pay device and use it without restrictions. Inconvenient but practical is that Samsung's users could utilize the app in airplane mode. This makes it impossible for Samsung Pay to have a full control process of the tokens pile. Even when the tokens have their own restrictions, the tokenization process gets weaker after the app generates the first token relating a specific card. How random is a Spay tokenized number? It is really necessary to understand how the tokens heretically share similarities in the generation process, and how this affect the end users' security. What are the odds to guess the next tokenized number knowing the previous one?",
    "plaintextTitle": "Samsung Pay: Tokenized Numbers Flaws and Issues",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Mendoza-Samsung-Pay-Tokenized-Numbers-Flaws-And-Issues.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Mendoza-Samsung-Pay-Tokenized-Numbers-Flaws-And-Issues-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=BqjyewIEFSc"
      }
    ],
    "youtubeDescription": "Samsung announced many layers of security to its Pay app. Without storing or sharing any type of user’s credit card information, Samsung Pay is trying to become one of the securest approaches offering functionality and simplicity for its customers.\nThis app is a complex mechanism which has some limitations relating security. Using random tokenize numbers and implementing Magnetic Secure Transmission (MST) technology, which do not guarantee that every token generated with Samsung Pay would be applied to make a purchase with the same Samsung device. That means that an attacker could steal a token from a Samsung Pay device and use it without restrictions.\n\nInconvenient but practical is that Samsung’s users could utilize the app in airplane mode. This makes impossible for Samsung Pay to have a full control process of the tokens pile. Even when the tokens have their own restrictions, the tokenization process gets weaker after the app generates the first token relating a specific card.\nHow random is a Spay tokenized number? It is really necessary to understand how the tokens heretically share similarities in the generation process, and how this affect the end users’ security.\nWhat are the odds to guess the next tokenized number knowing the previous one?\n\nBio:\nSalvador Mendoza is a college student & researcher."
  },
  "secure-penetration-testing-operations-demonstrated-weaknesses-in-learning-material-and-tools": {
    "author": "wesley-mcgrew",
    "description": "Following previous presentations on the dangers penetration testers face in using current off-the-shelf tools and practices, this presentation explores how widely available learning materials used to train penetration testers lead to inadequate protection of client data and penetration testing operations. With widely available books and other training resources targeting the smallest set of prerequisites, in order to attract the largest audience, many penetration testers adopt the techniques used in simplified examples to real world tests, where the network environment can be much more dangerous. Malicious threat actors are incentivized to attack and compromise penetration testers, and given current practices, can do so easily and with dramatic impact. This presentation will include a live demonstration of techniques for hijacking a penetration tester's normal practices, as well as guidance for examining and securing your current testing procedures. Tools shown in this demonstration will be released along with the talk.",
    "plaintextTitle": "Secure Penetration Testing Operations: Demonstrated Weaknesses in Learning Material and Tools",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-McGrew-Secure-Penetration-Testing-Operations-Demonstrated-Weaknesses-In-Learning-Material-And-Tools.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-McGrew-Secure-Penetration-Testing-Operations-Demonstrated-Weaknesses-In-Learning-Material-And-Tools-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-McGrew-Secure-Penetration-Testing-Operations-Demonstrated-Weaknesses-In-Learning-Material-And-Tools-snagterpreter.py",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_nWjofdnu0E"
      }
    ],
    "youtubeDescription": "by Wesley McGrew\n\nFollowing previous presentations on the dangers penetration testers face in using current off-the-shelf tools and practices, this presentation explores how widely available learning materials used to train penetration testers lead to inadequate protection of client data and penetration testing operations. With widely available books and other training resources targeting the smallest set of prerequisites, in order to attract the largest audience, many penetration testers adopt the techniques used in simplified examples to real world tests, where the network environment can be much more dangerous. Malicious threat actors are incentivized to attack and compromise penetration testers, and given current practices, can do so easily and with dramatic impact. This presentation will include a live demonstration of techniques for hijacking a penetration tester's normal practices, as well as guidance for examining and securing your current testing procedures. Tools shown in this demonstration will be released along with the talk."
  },
  "security-through-design-making-security-better-by-designing-for-people": {
    "author": "jelle-niemantsverdriet",
    "description": "In this session we will explore why certain devices, pieces of software or companies lead us to utter frustration while others consistently delight us and put a smile on our face. With these insights in mind, we will explore how we typically create our security processes, teams and solutions. All too often we create something without properly understanding what our colleagues or customers are trying to achieve only to bombard them with awareness training and policies because they \"just don't get it\" and because \"humans are the weakest link.\" We will look at user-centered design methods and concepts from other disciplines like economy, psychology or marketing that can help us to build security in a truly usable way not just our tools but also the way we setup our teams, the way we communicate and the way we align incentives. Every interaction with security is an opportunity to improve convenience and bring a smile to somebody's face. By understanding the impact of design, we can do a lot to improve corporate productivity and security itself.",
    "plaintextTitle": "Security Through Design - Making Security Better by Designing for People",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Niemantsverdriet-Security-Through-Design-Making-Security-Better-By-Designing-For-People.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=iErWwQ36eUc"
      }
    ],
    "youtubeDescription": "by Jelle Niemantsverdriet\n\nIn this session we will explore why certain devices, pieces of software or companies lead us to utter frustration while others consistently delight us and put a smile on our face. With these insights in mind, we will explore how we typically create our security processes, teams and solutions. All too often we create something without properly understanding what our colleagues or customers are trying to achieve only to bombard them with awareness training and policies because they \"just don't get it\" and because \"humans are the weakest link.\" We will look at user-centered design methods and concepts from other disciplines like economy, psychology or marketing that can help us to build security in a truly usable way not just our tools but also the way we setup our teams, the way we communicate and the way we align incentives. Every interaction with security is an opportunity to improve convenience and bring a smile to somebody's face. By understanding the impact of design, we can do a lot to improve corporate productivity and security itself."
  },
  "sgx-secure-enclaves-in-practice-security-and-crypto-review": {
    "author": "jean-philippe-aumasson",
    "description": "Software Guard Extensions (SGX) is a technology available in Intel(R) CPUs released in autumn 2015. SGX allows a remote server to process a client's secret data within a software enclave that hides the secrets from the operating system, hypervisor, and even BIOS or chipset manager, while giving cryptographic evidence to the client that the code has been executed correctly the very definition of secure remote computation. This talk is the first public assessment of SGX based on real SGX-enabled hardware and on Intel's software development environment. While researchers already scrutinized Intel's partial public documentation, many properties can only be verified and documented by working with the real thing: What's really in the development environment? Which components are implemented in microcode and which are in software? How can developers create secure enclaves that won't leak secrets? Can the development environment be trusted? How to debug and analyze SGX software? What crypto schemes are used in SGX critical components? How reliable are they? How safe are their implementations? Based on these newly documented aspects, we'll assess the attack surface and real risk for SGX users. We'll then present and demo proofs-of-concept of cryptographic functionalities leveraging SGX: secure remote storage and delegation (what fully homomorphic encryption promises, but is too slow to put in practice), and reencryption. We'll see how basic architectures can deliver powerful crypto functionalities with a wide range of applications. We'll release code as well as a tool to extract and verify an enclave's metadata.",
    "plaintextTitle": "SGX Secure Enclaves in Practice: Security and Crypto Review",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Aumasson-SGX-Secure-Enclaves-In-Practice-Security-And-Crypto-Review.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Aumasson-SGX-Secure-Enclaves-In-Practice-Security-And-Crypto-Review-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=0ZVFy4Qsryc"
      }
    ],
    "youtubeDescription": "by Jean-Philippe Aumasson  &  Luis Merino\n\nSoftware Guard Extensions (SGX) is a technology available in Intel(R) CPUs released in autumn 2015. SGX allows a remote server to process a client's secret data within a software enclave that hides the secrets from the operating system, hypervisor, and even BIOS or chipset manager, while giving cryptographic evidence to the client that the code has been executed correctly the very definition of secure remote computation.\n\nThis talk is the first public assessment of SGX based on real SGX-enabled hardware and on Intel's software development environment. While researchers already scrutinized Intel's partial public documentation, many properties can only be verified and documented by working with the real thing: What's really in the development environment? Which components are implemented in microcode and which are in software? How can developers create secure enclaves that won't leak secrets? Can the development environment be trusted? How to debug and analyze SGX software? What crypto schemes are used in SGX critical components? How reliable are they? How safe are their implementations? Based on these newly documented aspects, we'll assess the attack surface and real risk for SGX users. We'll then present and demo proofs-of-concept of cryptographic functionalities leveraging SGX: secure remote storage and delegation (what fully homomorphic encryption promises, but is too slow to put in practice), and reencryption. We'll see how basic architectures can deliver powerful crypto functionalities with a wide range of applications. We'll release code as well as a tool to extract and verify an enclave's metadata."
  },
  "side-channel-attacks-on-everyday-applications": {
    "author": "taylor-hornby",
    "description": "In 2013, Yuval Yarom and Katrina Falkner discovered the FLUSH+RELOAD L3 cache side-channel. So far it has broken numerous implementations of cryptography including, notably, the AES and ECDSA in OpenSSL and the RSA GnuPG. Given FLUSH+RELOAD's astounding success at breaking cryptography, we're lead to wonder if it can be applied more broadly, to leak useful information out of regular applications like text editors and web browsers whose main functions are not cryptography.\r\n                \r\n                In this talk, I'll briefly describe how the FLUSH+RELOAD attack works, and how it can be used to build input distinguishing attacks. In particular, I'll demonstrate how when the user Alice browses around the top 100 Wikipedia pages, the user Bob can spy on which of those pages she's visiting.\r\n                \r\n                This isn't an earth-shattering attack, but as the code I'm releasing shows, it can be implemented reliably. My goal is to convince the community that side channels, FLUSH+RELOAD in particular, are useful for more than just breaking cryptography. The code I'm releasing is a starting point for developing better attacks. If you have access to a vulnerable CPU running a suitable OS, you should be able to reproduce the attack within minutes after watching the talk and downloading the code.",
    "plaintextTitle": "Side-Channel Attacks on Everyday Applications",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Hornby-Side-Channel-Attacks-On-Everyday-Applications.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Hornby-Side-Channel-Attacks-On-Everyday-Applications-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://github.com/defuse/flush-reload-attacks",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=GPwNFrpd1KU"
      }
    ],
    "youtubeDescription": "by Taylor Hornby\n\nIn 2013, Yuval Yarom and Katrina Falkner discovered the FLUSH+RELOAD L3 cache side-channel. So far it has broken numerous implementations of cryptography including, notably, the AES and ECDSA in OpenSSL and the RSA GnuPG. Given FLUSH+RELOAD's astounding success at breaking cryptography, we're lead to wonder if it can be applied more broadly, to leak useful information out of regular applications like text editors and web browsers whose main functions are not cryptography.\n\nIn this talk, I'll briefly describe how the FLUSH+RELOAD attack works, and how it can be used to build input distinguishing attacks. In particular, I'll demonstrate how when the user Alice browses around the top 100 Wikipedia pages, the user Bob can spy on which of those pages she's visiting.\n\nThis isn't an earth-shattering attack, but as the code I'm releasing shows, it can be implemented reliably. My goal is to convince the community that side channels, FLUSH+RELOAD in particular, are useful for more than just breaking cryptography. The code I'm releasing is a starting point for developing better attacks. If you have access to a vulnerable CPU running a suitable OS, you should be able to reproduce the attack within minutes after watching the talk and downloading the code."
  },
  "subverting-apple-graphics-practical-approaches-to-remotely-gaining-root": {
    "author": "liang-chen",
    "description": "Apple graphics, both the userland and the kernel components, are reachable from most of the sandboxed applications, including browsers, where an attack can be launched first remotely and then escalated to obtain root privileges. On OS X, the userland graphics component is running under the WindowServer process, while the kernel component includes IOKit user clients created by IOAccelerator IOService. Similar components do exist on iOS system as well. It is the counterpart of \"Win32k.sys\" on Windows. In the past few years, lots of interfaces have been neglected by security researchers because some of them are not explicitly defined in the sandbox profile, yet our research reveals not only that they can be opened from a restrictive sandboxed context, but several of them are not designed to be called, exposing a large attack surface to an adversary. On the other hand, due to its complexity and various factors (such as being mainly closed source), Apple graphics internals are not well documented by neither Apple nor the security community. This leads to large pieces of code not well analyzed, including large pieces of functionality behind hidden interfaces with no necessary check in place even in fundamental components. Furthermore, there are specific exploitation techniques in Apple graphics that enable you complete the full exploit chain from inside the sandbox to gain unrestricted access. We named it \"graphic-style\" exploitation. In the first part of the talk, we introduce the userland Apple graphics component WindowServer. We start from an overview of WindowServer internals, its MIG interfaces as well as \"hello world\" sample code. After that, we explain three bugs representing three typical security flaws: - Design related logic issue CVE-2014-1314, which we used at Pwn2Own 2014 - Logic vulnerability within hidden interfaces - The memory corruption issue we used at Pwn2Own 2016 Last but not least we talk about the \"graphic-style\" approach to exploit a single memory corruption bug and elevate from windowserver to root context. The second part covers the kernel attack surface. We will show vulnerabilities residing in closed-source core graphics pipeline components of all Apple graphic drivers including the newest chipsets, analyze the root cause and explain how to use our \"graphic-style\" exploitation technique to obtain root on OS X El Capitan at Pwn2Own 2016. This part of code, mostly related to rendering algorithm, by its nature lies deeply in driver's core stack and requires much graphical programming background to understand and audit, and is overlooked by security researchers. As it's the fundamental of Apple's rendering engine, it hasn't been changed for years and similar issues do exist in this blue ocean. We'll also come up with a new way of kernel heap spraying, with less side-effect and more controllable content than any other previous known methods. The talk is concluded by showing two live demos of remote gaining root through a chain of exploits on OS X El Capitan. Our first demo is done by exploiting userland graphics and the second by exploiting kernel graphics.",
    "plaintextTitle": "Subverting Apple Graphics: Practical Approaches to Remotely Gaining Root",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Chen-Subverting-Apple-Graphics-Practical-Approaches-To-Remotely-Gaining-Root.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Chen-Subverting-Apple-Graphics-Practical-Approaches-To-Remotely-Gaining-Root-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=hiM80vi1UNY"
      }
    ],
    "youtubeDescription": "by Liang Chen  &  Qidan He  &  Marco Grassi  &  Yubin Fu\n\nApple graphics, both the userland and the kernel components, are reachable from most of the sandboxed applications, including browsers, where an attack can be launched first remotely and then escalated to obtain root privileges. On OS X, the userland graphics component is running under the WindowServer process, while the kernel component includes IOKit user clients created by IOAccelerator IOService. Similar components do exist on iOS system as well. It is the counterpart of \"Win32k.sys\" on Windows. In the past few years, lots of interfaces have been neglected by security researchers because some of them are not explicitly defined in the sandbox profile, yet our research reveals not only that they can be opened from a restrictive sandboxed context, but several of them are not designed to be called, exposing a large attack surface to an adversary. On the other hand, due to its complexity and various factors (such as being mainly closed source), Apple graphics internals are not well documented by neither Apple nor the security community. This leads to large pieces of code not well analyzed, including large pieces of functionality behind hidden interfaces with no necessary check in place even in fundamental components. Furthermore, there are specific exploitation techniques in Apple graphics that enable you complete the full exploit chain from inside the sandbox to gain unrestricted access. We named it \"graphic-style\" exploitation.\n\nIn the first part of the talk, we introduce the userland Apple graphics component WindowServer. We start from an overview of WindowServer internals, its MIG interfaces as well as \"hello world\" sample code. After that, we explain three bugs representing three typical security flaws: - Design related logic issue CVE-2014-1314, which we used at Pwn2Own 2014 - Logic vulnerability within hidden interfaces - The memory corruption issue we used at Pwn2Own 2016 Last but not least we talk about the \"graphic-style\" approach to exploit a single memory corruption bug and elevate from windowserver to root context.\n\nThe second part covers the kernel attack surface. We will show vulnerabilities residing in closed-source core graphics pipeline components of all Apple graphic drivers including the newest chipsets, analyze the root cause and explain how to use our \"graphic-style\" exploitation technique to obtain root on OS X El Capitan at Pwn2Own 2016. This part of code, mostly related to rendering algorithm, by its nature lies deeply in driver's core stack and requires much graphical programming background to understand and audit, and is overlooked by security researchers. As it's the fundamental of Apple's rendering engine, it hasn't been changed for years and similar issues do exist in this blue ocean. We'll also come up with a new way of kernel heap spraying, with less side-effect and more controllable content than any other previous known methods. The talk is concluded by showing two live demos of remote gaining root through a chain of exploits on OS X El Capitan. Our first demo is done by exploiting userland graphics and the second by exploiting kernel graphics."
  },
  "tcp-injection-attacks-in-the-wild-a-large-scale-study": {
    "author": "gabi-nakibly",
    "description": "In this work we present a massively large-scale survey of Internet traffic that studies the practice of false content injections on the web. We examined more than 1.5 Peta-bits of data from over 1.5 million distinct IP addresses. Earlier this year we have shown that false content injection is practiced by network operators for commercial purposes. These network operators inject advertisements and malware into webpages viewed by potentially ALL users on the Internet. In this presentation we recap the injections we discovered earlier this year and show them in detail. Additionally, we shall show new types of non-commercial injections, identify the injectors behind them and discuss their modi operandi. Finally, we shall discuss in detail analysis of a targeted injection attack against an American website. The attacks we discovered are done using out-of-band TCP injection of false packets (rather than in-band alteration of the original packets). This is what actually allowed us to detect the injection events in the first place. We also present a novel client-side tool to mitigate such attacks that has minimal performance impact.",
    "plaintextTitle": "TCP Injection Attacks in the Wild - A Large Scale Study",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Nakibly-TCP-Injection-Attacks-in-the-Wild-A-Large-Scale-Study.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Nakibly-TCP-Injection-Attacks-in-the-Wild-A-Large-Scale-Study-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Nakibly-TCP-Injection-Attacks-in-the-Wild-A-Large-Scale-Study-samples.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=b4oB1FB_vrM"
      }
    ],
    "youtubeDescription": "by Gabi Nakibly\n\nIn this work we present a massively large-scale survey of Internet traffic that studies the practice of false content injections on the web. We examined more than 1.5 Peta-bits of data from over 1.5 million distinct IP addresses. Earlier this year we have shown that false content injection is practiced by network operators for commercial purposes. These network operators inject advertisements and malware into webpages viewed by potentially ALL users on the Internet.\n\nIn this presentation we recap the injections we discovered earlier this year and show them in detail. Additionally, we shall show new types of non-commercial injections, identify the injectors behind them and discuss their modi operandi. Finally, we shall discuss in detail analysis of a targeted injection attack against an American website.\n\nThe attacks we discovered are done using out-of-band TCP injection of false packets (rather than in-band alteration of the original packets). This is what actually allowed us to detect the injection events in the first place. We also present a novel client-side tool to mitigate such attacks that has minimal performance impact."
  },
  "the-art-of-defense-how-vulnerabilities-help-shape-security-features-and-mitigations-in-android": {
    "author": "nick-kralevich",
    "description": "Information security is ever evolving, and Android's security posture is no different. Android users faces threats from a variety of sources, from the mundane to the extraordinary. Lost and stolen devices, malware attacks, rooting vulnerabilities, malicious websites, and nation state attackers are all within the Android threat model, and something the Android Security Team deals with daily. In this talk, we will cover the threats facing Android users, using both specific examples from previous Black Hat conferences and published research, as well as previously unpublished threats. For the threats, we will go into the specific technical controls which contain the vulnerability, as well as newly added Android N security features which defend against future unknown vulnerabilities. Finally, we'll discuss where we could go from here to make Android, and the entire computer industry, safer.",
    "plaintextTitle": "The Art of Defense - How Vulnerabilities Help Shape Security Features and Mitigations in Android",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Kralevich-The-Art-Of-Defense-How-Vulnerabilities-Help-Shape-Security-Features-And-Mitigations-In-Android.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=xQ-X0-bzpRQ"
      }
    ],
    "youtubeDescription": "by Nick Kralevich\n\nInformation security is ever evolving, and Android's security posture is no different. Android users faces threats from a variety of sources, from the mundane to the extraordinary. Lost and stolen devices, malware attacks, rooting vulnerabilities, malicious websites, and nation state attackers are all within the Android threat model, and something the Android Security Team deals with daily. In this talk, we will cover the threats facing Android users, using both specific examples from previous Black Hat conferences and published research, as well as previously unpublished threats. For the threats, we will go into the specific technical controls which contain the vulnerability, as well as newly added Android N security features which defend against future unknown vulnerabilities. Finally, we'll discuss where we could go from here to make Android, and the entire computer industry, safer."
  },
  "the-art-of-reverse-engineering-flash-exploits": {
    "author": "jeong-wook-oh",
    "description": "Adobe Flash is one of the battlegrounds of exploit and mitigation methods. As most of the Flash exploits demonstrate native memory layer exploit technique, it is valuable to understand the memory layout and behavior of Adobe Flash Player. We developed fine-grained debugging tactics to observe memory exploit technique and the way to interpret them effectively. This eventually helps defenders to understand new exploit techniques that are used for current targets quickly. This information is also valuable in deciding which area should defenders focus on for mitigation and code fixes. Adobe Flash Player was one of the major attack targets in 2015. We observed at least 17 effective zero-days or 1-day attacks in the wild. Flash is not just used by exploit kits like Angler, it has also been commonly used for advanced persistent threat (APT) attacks. The bug class ranges from simple heap overflows, uninitialized memory to type confusion and use-after-free. At Microsoft, understanding exploits in-the-wild is a continuous process. Flash exploit is one of the hardest to reverse-engineer. It often involves multi-layer obfuscation, and by default, is highly obfuscated and has non-decompilable codes. The challenge with Flash exploit comes from the lack of tools for static and dynamic analysis. Exploits are written with ActionScript programming language and obfuscated in bytecode level using commercial-grade obfuscation tools. Understanding highly obfuscated logic and non-decompilable AVM bytecode is a big challenge. Especially, the lack of usable debuggers for Flash file itself is a huge hurdle for exploit reverse engineers. It is just like debugging PE binaries without using Windbg or Olly debugger. The ability of the researcher is highly limited. With this presentation, I want to deliver two things: 1. The tactics and debugging technique that can be used to reverse engineer exploits. This includes using existing toolsets and combining them in an effective way. 2. The detailed exploit code reverse engineering examples that can help you understand what's the current and past status of attack and mitigation war. You might have heard of Vector corruption, ByteArray corruption and other JIT manipulation technique. Technical details will be discussed on how the exploits are using these and how the vendor defended against these.",
    "plaintextTitle": "The Art of Reverse Engineering Flash Exploits",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Oh-The-Art-of-Reverse-Engineering-Flash-Exploits.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Oh-The-Art-of-Reverse-Engineering-Flash-Exploits-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=lyeko1GILU4"
      }
    ],
    "youtubeDescription": "by Jeong Wook Oh\n\nAdobe Flash is one of the battlegrounds of exploit and mitigation methods. As most of the Flash exploits demonstrate native memory layer exploit technique, it is valuable to understand the memory layout and behavior of Adobe Flash Player. We developed fine-grained debugging tactics to observe memory exploit technique and the way to interpret them effectively. This eventually helps defenders to understand new exploit techniques that are used for current targets quickly. This information is also valuable in deciding which area should defenders focus on for mitigation and code fixes. Adobe Flash Player was one of the major attack targets in 2015. We observed at least 17 effective zero-days or 1-day attacks in the wild. Flash is not just used by exploit kits like Angler, it has also been commonly used for advanced persistent threat (APT) attacks. The bug class ranges from simple heap overflows, uninitialized memory to type confusion and use-after-free. At Microsoft, understanding exploits in-the-wild is a continuous process. Flash exploit is one of the hardest to reverse-engineer. It often involves multi-layer obfuscation, and by default, is highly obfuscated and has non-decompilable codes. The challenge with Flash exploit comes from the lack of tools for static and dynamic analysis. Exploits are written with ActionScript programming language and obfuscated in bytecode level using commercial-grade obfuscation tools. Understanding highly obfuscated logic and non-decompilable AVM bytecode is a big challenge. Especially, the lack of usable debuggers for Flash file itself is a huge hurdle for exploit reverse engineers. It is just like debugging PE binaries without using Windbg or Olly debugger. The ability of the researcher is highly limited.\n\nWith this presentation, I want to deliver two things: 1. The tactics and debugging technique that can be used to reverse engineer exploits. This includes using existing toolsets and combining them in an effective way. 2. The detailed exploit code reverse engineering examples that can help you understand what's the current and past status of attack and mitigation war. You might have heard of Vector corruption, ByteArray corruption and other JIT manipulation technique. Technical details will be discussed on how the exploits are using these and how the vendor defended against these."
  },
  "the-beast-within-evading-dynamic-malware-analysis-using-microsoft-com": {
    "author": "ralf-hund",
    "description": "Microsoft Common Object Model (COM) is a technology for providing a binary programming interface for Windows programs. Despite its age it still forms the internal foundation of many new Microsoft technologies such as .NET. However, over the course of more than twenty years of development, the inevitable pressure to retain backwards compatibility has turned the COM runtime into an obscure beast. These days, many COM interfaces exist that mirror almost the same functionality provided by common Windows APIs. Malware authors can easily execute almost any operation (creating files, starting new processes, etc.) only using COM calls. Dynamic malware analyzers must deal with this accordingly without getting lost in the shadowy depths of the COM runtime. The talk presents various aspects of automated dynamic COM malware analysis and shows which approaches are actually practical and which ones are hopeless from the beginning. We show how COM interfaces are already actively used by malware in the wild. Our data retrieved from various sample sharing programs indicates that COM use is widespread and not only limited to sophisticated attacks. It can be used to create arbitrary files, access the registry, control the Windows firewall, tap into audio interfaces and much more. The possibilities are endless. Furthermore, many script engines such as VBScript or JScript use COM underneath. If such samples are analyzed, then this must be dealt with appropriately. Unfortunately, many existing dynamic analysis solutions fail at monitoring COM correctly which makes it easy for malware to evade many common sandboxes. One essential problem is that COM classes can be implemented in various places: in the calling program itself, in other processes on the same machine, or even in remote processes on different machines using DCOM. This requires to catch and process COM calls at the very first API layer and not later on. Due to the myriad of COM calls in question, hooking-based solutions quickly hit a wall. The popular workaround is to hook on API layers behind (such as NTDLL). Since COM calls can be executed in remote processes and heavily rely on data marshalling, this approach can only be used for not more than simple COM interfaces. Furthermore, it requires filtering out irrelevant API calls from OS libraries, which, notwithstanding the above, poses many problems by itself. Last but not least, hooking COM calls (or API calls in general) makes it easy for malware to detect that it is running in a sandbox. We show how transition-based monitoring can be used to monitor all COM calls at the first interface layer. This requires additional effort in parsing the numerous different formats COM uses to encode function call parameters. We show what obstacles are to be expected and how to deal with them accordingly. This generic approach yields a detailed list of all COM calls executed by malware with all their parameters. In addition, malware cannot evade the analysis since transitions are detected transparently in a hypervisor. Not a single bit has to be modified in the analysis environment.",
    "plaintextTitle": "The Beast Within - Evading Dynamic Malware Analysis Using Microsoft COM",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Hund-The-Beast-Within-Evading-Dynamic-Malware-Analysis-Using-Micro.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=6POwbEpEtpw"
      }
    ],
    "youtubeDescription": "by Ralf Hund\n\nMicrosoft Common Object Model (COM) is a technology for providing a binary programming interface for Windows programs. Despite its age it still forms the internal foundation of many new Microsoft technologies such as .NET. However, over the course of more than twenty years of development, the inevitable pressure to retain backwards compatibility has turned the COM runtime into an obscure beast. These days, many COM interfaces exist that mirror almost the same functionality provided by common Windows APIs. Malware authors can easily execute almost any operation (creating files, starting new processes, etc.) only using COM calls. Dynamic malware analyzers must deal with this accordingly without getting lost in the shadowy depths of the COM runtime.\n\nThe talk presents various aspects of automated dynamic COM malware analysis and shows which approaches are actually practical and which ones are hopeless from the beginning. We show how COM interfaces are already actively used by malware in the wild. Our data retrieved from various sample sharing programs indicates that COM use is widespread and not only limited to sophisticated attacks. It can be used to create arbitrary files, access the registry, control the Windows firewall, tap into audio interfaces and much more. The possibilities are endless. Furthermore, many script engines such as VBScript or JScript use COM underneath. If such samples are analyzed, then this must be dealt with appropriately. Unfortunately, many existing dynamic analysis solutions fail at monitoring COM correctly which makes it easy for malware to evade many common sandboxes. One essential problem is that COM classes can be implemented in various places: in the calling program itself, in other processes on the same machine, or even in remote processes on different machines using DCOM. This requires to catch and process COM calls at the very first API layer and not later on. Due to the myriad of COM calls in question, hooking-based solutions quickly hit a wall. The popular workaround is to hook on API layers behind (such as NTDLL). Since COM calls can be executed in remote processes and heavily rely on data marshalling, this approach can only be used for not more than simple COM interfaces. Furthermore, it requires filtering out irrelevant API calls from OS libraries, which, notwithstanding the above, poses many problems by itself. Last but not least, hooking COM calls (or API calls in general) makes it easy for malware to detect that it is running in a sandbox.\n\nWe show how transition-based monitoring can be used to monitor all COM calls at the first interface layer. This requires additional effort in parsing the numerous different formats COM uses to encode function call parameters. We show what obstacles are to be expected and how to deal with them accordingly. This generic approach yields a detailed list of all COM calls executed by malware with all their parameters. In addition, malware cannot evade the analysis since transitions are detected transparently in a hypervisor. Not a single bit has to be modified in the analysis environment."
  },
  "the-linux-kernel-hidden-inside-windows-10": {
    "author": "alex-ionescu",
    "description": "Initially known as \"Project Astoria\" and delivered in beta builds of Windows 10 Threshold 2 for Mobile, Microsoft implemented a full blown Linux 3.4 kernel in the core of the Windows operating system, including full support for VFS, BSD Sockets, ptrace, and a bonafide ELF loader. After a short cancellation, it's back and improved in Windows 10 Anniversary Update (\"Redstone\"), under the guise of Bash Shell interoperability. This new kernel and related components can run 100% native, unmodified Linux binaries, meaning that NT can now execute Linux system calls, schedule thread groups, fork processes, and access the VDSO!  As it's implemented using a full-blown, built-in, loaded-by-default, Ring 0 driver with kernel privileges, this not a mere wrapper library or user-mode system call converter like the POSIX subsystem of yore. The very thought of an alternate virtual file system layer, networking stack, memory and process management logic, and complicated ELF parser and loader in the kernel should tantalize exploit writers - why choose from the attack surface of a single kernel, when there's now two?  But it's not just about the attack surface - what effects does this have on security software? Do these frankenLinux processes show up in Procmon or other security drivers? Do they have PEBs and TEBs? Is there even an EPROCESS? And can a Windows machine, and the kernel, now be attacked by Linux/Android malware? How are Linux system calls implemented and intercepted?  As usual, we'll take a look at the internals of this entirely new paradigm shift in the Windows OS, and touch the boundaries of the undocumented and unsupported to discover interesting design flaws and abusable assumptions, which lead to a wealth of new security challenges on Windows 10 Anniversary Update (\"Redstone\") machines.",
    "plaintextTitle": "The Linux Kernel Hidden Inside Windows 10",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_p3RtkwstNk"
      }
    ],
    "youtubeDescription": "\"The Linux Kernel Hidden Inside Windows 10\" techtalk by Alex Ionescu at BlackHat USA 2016\nSlides for the presentation https://github.com/ionescu007/lxss/blob/master/The%20Linux%20kernel%20hidden%20inside%20windows%2010.pdf\nOther videos from BlackHat USA 2016  https://www.youtube.com/playlist?list=PLbHqJuIbKd_6jPpl9pnXGUmUj8gtlWony\n\nDo you want even more from Alex Ionescu? Watch this - https://www.youtube.com/watch?v=HNPoCz1IBoQ"
  },
  "the-remote-malicious-butler-did-it": {
    "author": "tal-beery",
    "description": "An Evil Maid attack is a security exploit that targets a computing device that has been left unattended. An evil maid attack is characterized by the attacker's ability to physically access the target multiple times without the owner's knowledge. On BlackHat Europe 2015, Ian Haken in his talk \"Bypassing Local Windows Authentication to Defeat Full Disk Encryption\" had demonstrated a smart Evil Maid attack which allows the attacker to bypass Bitlocker disk encryption in an enterprise's domain environment. The attacker can do so by connecting the unattended computer into a rogue Domain Controller and abusing a client side authentication vulnerability. As a result, Microsoft had released a patch to fix this vulnerability and mitigate the attack. While being a clever attack, the physical access requirement for the attack seems to be prohibitive and would prevent it from being used on most APT campaigns. As a result, defenders might not correctly prioritize the importance of patching it. In our talk, we reveal the \"Remote Malicious Butler\" attack, which shows how attackers can perform such an attack, remotely, to take a complete control over the remote computer. We will dive into the technical details of the attack including the rogue Domain Controller, the client-side vulnerability and the Kerberos authentication protocol network traffic that ties them. We would explore some other attack avenues, all leveraging on the rogue Domain Controller concept. We would conclude with the analysis of some practical generic detection and prevention methods against rogue Domain Controllers.",
    "plaintextTitle": "The Remote Malicious Butler Did It!",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Beery-The-Remote-Malicious-Butler-Did-It.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Beery-The-Remote-Malicious-Butler-Did-It-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=xujWesUS1ZQ"
      }
    ],
    "youtubeDescription": "by Tal Be'ery  &  Chaim Hoch\n\nAn Evil Maid attack is a security exploit that targets a computing device that has been left unattended. An evil maid attack is characterized by the attacker's ability to physically access the target multiple times without the owner's knowledge. On BlackHat Europe 2015, Ian Haken in his talk \"Bypassing Local Windows Authentication to Defeat Full Disk Encryption\" had demonstrated a smart Evil Maid attack which allows the attacker to bypass Bitlocker disk encryption in an enterprise's domain environment. The attacker can do so by connecting the unattended computer into a rogue Domain Controller and abusing a client side authentication vulnerability. As a result, Microsoft had released a patch to fix this vulnerability and mitigate the attack. While being a clever attack, the physical access requirement for the attack seems to be prohibitive and would prevent it from being used on most APT campaigns. As a result, defenders might not correctly prioritize the importance of patching it.\n\nIn our talk, we reveal the \"Remote Malicious Butler\" attack, which shows how attackers can perform such an attack, remotely, to take a complete control over the remote computer. We will dive into the technical details of the attack including the rogue Domain Controller, the client-side vulnerability and the Kerberos authentication protocol network traffic that ties them. We would explore some other attack avenues, all leveraging on the rogue Domain Controller concept. We would conclude with the analysis of some practical generic detection and prevention methods against rogue Domain Controllers."
  },
  "the-risk-from-power-lines-how-to-sniff-the-g3-and-prime-data-and-detect-the-interfere-attack": {
    "author": "lei-ji",
    "description": "Power line communication (PLC) is a kind of communication technology which uses the power line as the communication media. The PLC technology is divided with 2 sub-field: narrow-band PLC and wide-band PLC. For the narrow-band PLC, there are 2 very import standards: Prime and G3. Both the standards are widely used in AMR and electric monitor system and it lead to the rise of threat in AMR system security and electric safety. This topic will talk about how to get the PLC data stream in a PLC communication system which would use G3 or Prime standard, and will also talk about how to detect attacking in the net. We will focus on how to identify which kind of standard the system using and how to sniff the PLC data in physical level.",
    "plaintextTitle": "The Risk from Power Lines: How to Sniff the G3 and Prime Data and Detect the Interfere Attack",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Lei-The-Risk-From-Power-Lines-How-To-Sniff-The-G3-And-Prime-Data-And-Detect-The-Interfere-Attack.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Lei-The-Risk-From-Power-Lines-How-To-Sniff-The-G3-And-Prime-Data-And-Detect-The-Interfere-Attack-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=eLluZ_ipv5c"
      }
    ],
    "youtubeDescription": "by Lei Ji  &  Yunding Jian\n\nPower line communication (PLC) is a kind of communication technology which uses the power line as the communication media. The PLC technology is divided with 2 sub-field: narrow-band PLC and wide-band PLC. For the narrow-band PLC, there are 2 very import standards: Prime and G3. Both the standards are widely used in AMR and electric monitor system and it lead to the rise of threat in AMR system security and electric safety. This topic will talk about how to get the PLC data stream in a PLC communication system which would use G3 or Prime standard, and will also talk about how to detect attacking in the net. We will focus on how to identify which kind of standard the system using and how to sniff the PLC data in physical level."
  },
  "the-tao-of-hardware-the-te-of-implants": {
    "author": "joe-fitzpatrick",
    "description": "Embedded, IOT, and ICS devices tend to be things we can pick up, see, and touch. They're designed for nontechnical users who think of them as immutable hardware devices. Even software security experts, at some point, consider hardware attacks out of scope. Thankfully, even though a handful of hardware manufacturers are making some basic efforts to harden devices, there's still plenty of cheap and easy ways to subvert hardware. The leaked ANT catalog validated that these cheap hardware attacks are worthwhile. The projects of the NSA Playset have explored what's possible in terms of cheap and easy DIY hardware implants, so I've continued to apply those same techniques to more embedded devices and industrial control systems. I'll show off a handful of simple hardware implants that can 1) Blindly escalate privilege using JTAG 2) Patch kernels via direct memory access on an embedded device without JTAG 3) Enable wireless control of the inputs and outputs of an off-the-shelf PLC 4) Hot-plug a malicious expansion module onto another PLC without even taking the system offline and 5) Subvert a system via a malicious display adapter. Some of these are new applications of previously published implants - others are brand new. \r\n                I'll conclude with some potential design decisions that could reduce vulnerability to implants, as well as ways of protecting existing hardware systems from tampering.",
    "plaintextTitle": "The Tao of Hardware the Te of Implants",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-FitzPatrick-The-Tao-Of-Hardware-The-Te-Of-Implants.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-FitzPatrick-The-Tao-Of-Hardware-The-Te-Of-Implants-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=UpaX6_Z3joU"
      }
    ],
    "youtubeDescription": "by Joe FitzPatrick\n\nEmbedded, IOT, and ICS devices tend to be things we can pick up, see, and touch. They're designed for nontechnical users who think of them as immutable hardware devices. Even software security experts, at some point, consider hardware attacks out of scope. Thankfully, even though a handful of hardware manufacturers are making some basic efforts to harden devices, there's still plenty of cheap and easy ways to subvert hardware. The leaked ANT catalog validated that these cheap hardware attacks are worthwhile. The projects of the NSA Playset have explored what's possible in terms of cheap and easy DIY hardware implants, so I've continued to apply those same techniques to more embedded devices and industrial control systems. I'll show off a handful of simple hardware implants that can 1) Blindly escalate privilege using JTAG 2) Patch kernels via direct memory access on an embedded device without JTAG 3) Enable wireless control of the inputs and outputs of an off-the-shelf PLC 4) Hot-plug a malicious expansion module onto another PLC without even taking the system offline and 5) Subvert a system via a malicious display adapter. Some of these are new applications of previously published implants - others are brand new.\nI'll conclude with some potential design decisions that could reduce vulnerability to implants, as well as ways of protecting existing hardware systems from tampering."
  },
  "the-year-in-flash": {
    "author": "natalie-silvanovich",
    "description": "Adobe Flash continues to be a popular target for attackers in the wild. As an increasing number of bug fixes and mitigations are implemented, increasingly complex vulnerabilities and exploits are coming to light. This talk describes notable vulnerabilities and exploits that have been discovered in Flash in the past year.\r\n                \r\n                It will start with an overview of the attack surface of Flash, and then discuss how the most common types of vulnerabilities work. It will then go through the year with regards to bugs, exploits and mitigations. It will end with a discussion of the future of Flash attacks: likely areas for new bugs, and the impact of existing mitigations.",
    "plaintextTitle": "The Year in Flash",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Silvanovich-The-Year-In-Flash.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=JbvwCEOxyrA"
      }
    ],
    "youtubeDescription": "http://recon.cx. This video is licensed under Creative commons CC-BY."
  },
  "timing-attacks-have-never-been-so-practical-advanced-cross-site-search-attacks": {
    "author": "nethanel-gelernter",
    "description": "Cross-site search (XS-search) is a practical timing side-channel attack that allows the extraction of sensitive information from web-services. The attack exploits inflation techniques to efficiently distinguish between search requests that yield results and requests that do not. This work focuses on the response inflation technique that increases the size of the response; as the difference in the sizes of the responses increases, it becomes easier to distinguish between them. We begin with browser-based XS-search attack and demonstrate its use in extracting users' private data from Gmail and Facebook. The browser-based XS-search attack exploits the differences in the sizes of HTTP responses, and works even when significant inflation of the response is impossible. This part also involves algorithmic improvements compared to previous work. When there is no leakage of information via the timing side channel it is possible to use second-order (SO) XS-search, a novel type of attack that allows the attacker to significantly increase the difference in the sizes of the responses by planting maliciously crafted record into the storage. SO XS-search attacks can be used to extract sensitive information such as email content of Gmail and Yahoo! users, and search history of Bing users.",
    "plaintextTitle": "Timing Attacks Have Never Been So Practical: Advanced Cross-Site Search Attacks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Gelernter-Timing-Attacks-Have-Never-Been-So-Practical-Advanced-Cross-Site-Search-Attacks.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=vzp7JdezZRU"
      }
    ],
    "youtubeDescription": "by Nethanel Gelernter\n\nCross-site search (XS-search) is a practical timing side-channel attack that allows the extraction of sensitive information from web-services. The attack exploits inflation techniques to efficiently distinguish between search requests that yield results and requests that do not. This work focuses on the response inflation technique that increases the size of the response; as the difference in the sizes of the responses increases, it becomes easier to distinguish between them. We begin with browser-based XS-search attack and demonstrate its use in extracting users' private data from Gmail and Facebook. The browser-based XS-search attack exploits the differences in the sizes of HTTP responses, and works even when significant inflation of the response is impossible. This part also involves algorithmic improvements compared to previous work. When there is no leakage of information via the timing side channel it is possible to use second-order (SO) XS-search, a novel type of attack that allows the attacker to significantly increase the difference in the sizes of the responses by planting maliciously crafted record into the storage. SO XS-search attacks can be used to extract sensitive information such as email content of Gmail and Yahoo! users, and search history of Bing users."
  },
  "towards-a-holistic-approach-in-building-intelligence-to-fight-crimeware": {
    "author": "dhia-mahjoub",
    "description": "To defeat your adversaries, it is crucial to understand how they operate and to develop a comprehensive view of their playing field. In this talk, we describe a holistic and scalable approach to investigating and combating cybercrime. Our strategy focuses on two perspectives: the network attack surface and the actors. The network attack surface exploited by malware manifests itself through various aspects such as hosting IP space, DNS traffic, open ports, BGP announcements, ASN peerings, and SSL certificates. The actors' view tracks trends, motivations, and TTPs of cyber criminals by infiltrating and maintaining access to closed underground forums where threat actors collaborate to plan cyber attacks. Crimeware campaigns nowadays rely heavily on bulletproof hosting for scalable deployment. We distinguish two types of such hosting infrastructures: the first consists of a large number of infected residential hosts scattered geographically that are leveraged to build a fast flux proxy network. This network is a hosting-as-a service platform for various malware and ransomware C2, phishing, carding, and botnet panels. The second type exists in dedicated servers acquired from rogue hosting companies or large abused hosting providers with the purpose of hosting exploit kits, phishing, malware C2, and other gray content. We start by using DNS traffic analysis and passive DNS mining algorithms to massively detect malware domains. After we identify the hosting IPs of these domains, we will demonstrate novel methods using DNS PTR data to further map out the entire IP space of bulletproof hosters serving these attacks. In the case of fast flux proxy networks, we leverage SSL data to map out larger sets of compromised hosts. Concurrently, we investigate underground forums for emerging signals about bulletproof hosters just about to be employed for malware campaigns.The talk describes how to proactively bridge the gap between the actors and network views by identifying the IP space of the mentioned hosters given very few initial indicators and predictively block it. This is made possible thanks to the deployment at large scale of DNS PTR, SSL, and HTTP data provided by Project Sonar datasets and our own scanning of certain IP regions. It is undoubtedly a serious challenge facing security researchers to devise means to quickly index and search through vast quantities of security related log data. Therefore, we will also describe the backend architecture, based on HBase and ElasticSearch, that we use to index global Internet metadata so it is easily searchable and retrievable. Join us in this talk to learn about effective methods to investigate malware from both network and actors' perspectives and hear about our experience on how to deploy and mine large scale Internet data to support threat research.",
    "plaintextTitle": "Towards a Holistic Approach in Building Intelligence to Fight Crimeware",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=hBzGM3d7c1Y"
      }
    ],
    "youtubeDescription": "by Dhia Mahjoub  &  Mykhailo Sakaly  &  Thomas Mathew\n\nTo defeat your adversaries, it is crucial to understand how they operate and to develop a comprehensive view of their playing field. In this talk, we describe a holistic and scalable approach to investigating and combating cybercrime. Our strategy focuses on two perspectives: the network attack surface and the actors. The network attack surface exploited by malware manifests itself through various aspects such as hosting IP space, DNS traffic, open ports, BGP announcements, ASN peerings, and SSL certificates. The actors' view tracks trends, motivations, and TTPs of cyber criminals by infiltrating and maintaining access to closed underground forums where threat actors collaborate to plan cyber attacks. Crimeware campaigns nowadays rely heavily on bulletproof hosting for scalable deployment. We distinguish two types of such hosting infrastructures: the first consists of a large number of infected residential hosts scattered geographically that are leveraged to build a fast flux proxy network. This network is a hosting-as-a service platform for various malware and ransomware C2, phishing, carding, and botnet panels. The second type exists in dedicated servers acquired from rogue hosting companies or large abused hosting providers with the purpose of hosting exploit kits, phishing, malware C2, and other gray content. We start by using DNS traffic analysis and passive DNS mining algorithms to massively detect malware domains. After we identify the hosting IPs of these domains, we will demonstrate novel methods using DNS PTR data to further map out the entire IP space of bulletproof hosters serving these attacks. In the case of fast flux proxy networks, we leverage SSL data to map out larger sets of compromised hosts. Concurrently, we investigate underground forums for emerging signals about bulletproof hosters just about to be employed for malware campaigns.\n\nThe talk describes how to proactively bridge the gap between the actors and network views by identifying the IP space of the mentioned hosters given very few initial indicators and predictively block it. This is made possible thanks to the deployment at large scale of DNS PTR, SSL, and HTTP data provided by Project Sonar datasets and our own scanning of certain IP regions. It is undoubtedly a serious challenge facing security researchers to devise means to quickly index and search through vast quantities of security related log data. Therefore, we will also describe the backend architecture, based on HBase and ElasticSearch, that we use to index global Internet metadata so it is easily searchable and retrievable. Join us in this talk to learn about effective methods to investigate malware from both network and actors' perspectives and hear about our experience on how to deploy and mine large scale Internet data to support threat research."
  },
  "understanding-hl7-2.x-standards-pen-testing-and-defending-hl7-2.x-messages": {
    "author": "anirudh-duggal",
    "description": "Health Level-7 or HL7 refers to a set of international standards for transfer of clinical and administrative data between software applications used by various healthcare providers. Healthcare provider organizations typically have many different computer systems used for everything from billing records to patient tracking. All of these systems should communicate with each other (or \"interface\") when they receive new information, or when they wish to retrieve information, but not all do so. The Hl7 2.x protocol was designed keeping certain factors in mind. Some of which are: a closed network, no malicious intent by the devices, and running the devices in a completely reliable environment. The number of devices using the HL7 2.x is huge (currently, the HL7 v2.x messaging standard is supported by every major medical information systems vendor in the world). However, a secure implementation standard / guide still needs to be worked on. Over some time I have observed that hospitals and vendors do not fully understand the risks on their infrastructure. Also vendors need to implement some changes over their software and hardware to make their devices more resilient to attacks. The talk will cover HL7 2.x messages, their significance and the information in these messages, also the impact of gaining access to these messages. We will look the scenario of gaining patient information, fingerprinting architecture, examining and changing diagnosis, gaining access to non-prescribed drugs / changing medication and possible financial scams. This talk will also cover how to Pen test medical systems running HL7 interfaces (EMR Software, Patient monitors, X-ray machines.. etc.), discovering common flaws and attack surfaces and on devices that use HL 7 2.x messages to test machine interfaces and connected environment.",
    "plaintextTitle": "Understanding HL7 2.x Standards Pen Testing and Defending HL7 2.x Messages",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=MR7cH44fjrc"
      }
    ],
    "youtubeDescription": "by Anirudh Duggal\n\nHealth Level-7 or HL7 refers to a set of international standards for transfer of clinical and administrative data between software applications used by various healthcare providers. Healthcare provider organizations typically have many different computer systems used for everything from billing records to patient tracking. All of these systems should communicate with each other (or \"interface\") when they receive new information, or when they wish to retrieve information, but not all do so. The Hl7 2.x protocol was designed keeping certain factors in mind. Some of which are: a closed network, no malicious intent by the devices, and running the devices in a completely reliable environment. The number of devices using the HL7 2.x is huge (currently, the HL7 v2.x messaging standard is supported by every major medical information systems vendor in the world). However, a secure implementation standard / guide still needs to be worked on. Over some time I have observed that hospitals and vendors do not fully understand the risks on their infrastructure. Also vendors need to implement some changes over their software and hardware to make their devices more resilient to attacks.\n\nThe talk will cover HL7 2.x messages, their significance and the information in these messages, also the impact of gaining access to these messages. We will look the scenario of gaining patient information, fingerprinting architecture, examining and changing diagnosis, gaining access to non-prescribed drugs / changing medication and possible financial scams. This talk will also cover how to Pen test medical systems running HL7 interfaces (EMR Software, Patient monitors, X-ray machines.. etc.), discovering common flaws and attack surfaces and on devices that use HL 7 2.x messages to test machine interfaces and connected environment."
  },
  "unleash-the-infection-monkey-a-modern-alternative-to-pen-tests": {
    "author": "ofri-ziv",
    "description": "Security breaches never happen exactly the way you expected or planned for. Yet an organization's infrastructure should be able to withstand a breach of its perimeter security layer, and also handle the infection of internal servers. The security testing toolset available to security professionals today consists mainly of penetration testing and vulnerability scanners.These tools were designed for traditional, relatively static networks and can no longer address ALL the possible vulnerabilities of today's dynamic and hybrid network. While there is no replacement to a highly skilled human pen-test hacker, penetration tests are limited to specific parts of a network, are expensive, and may become obsolete within months. Automatic vulnerability scanners have limited accessibility and can not simulate today's advanced lateral movement attack methods. The result is network blind spots which is where security threats often arise. This calls for a new approach to testing network security resilience. An ideal tool would be easy to use, budgetary conscious, autonomous and scalable. We propose using the Infection Monkey, a new open source cyber security testing tool, designed to thoroughly test a network from an attacker's point of view. Our tool draws its inspiration from Netflix's Chaos Monkey released in 2011. Netflix's Monkey was designed to randomly delete servers in Netflix' infrastructure to test a service's ability to withstand server failures. We think that a similar approach applies to network security, \"infecting\" your network to test your defenses capabilities, so we have leveraged Netflix's Chaos Monkey concept to address the challenges of the network defense community. The Infection Monkey spins up an infected virtual machine inside random parts of your data center, to test for potential security failures. By \"inside\", we mean behind the firewall and any other perimeter defense you are deploying for your computing infrastructure. By equipping the monkey with advanced exploitation abilities (without destructive payloads), it can spread to any vulnerable machine within reach. Along with the ability to spread onwards from its victims, the monkey can detect surprising weak spots throughout the network. In our talk we will show how our Infection Monkey uncovers blind spots and argue that ongoing network-wide security testing adds strong capabilities to the security team. We will focus on vulnerabilities that up until now have stayed in the industry's 'collective blind spot'. The security community can greatly benefit from a disruptive, modern tool that helps verify security solution deployments and shed light on the weaker parts of the security chain.",
    "plaintextTitle": "Unleash the Infection Monkey: A Modern Alternative to Pen-Tests",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ziv-Unleash-The-Infection_Monkey-A-Modern-Alternative-To-Pen-Tests.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ziv-Unleash-The-Infection_Monkey-A-Modern-Alternative-To-Pen-Tests-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=M_kJ7zfAagc"
      }
    ],
    "youtubeDescription": "by Ofri Ziv\n\nSecurity breaches never happen exactly the way you expected or planned for. Yet an organization's infrastructure should be able to withstand a breach of its perimeter security layer, and also handle the infection of internal servers. The security testing toolset available to security professionals today consists mainly of penetration testing and vulnerability scanners.These tools were designed for traditional, relatively static networks and can no longer address ALL the possible vulnerabilities of today's dynamic and hybrid network. While there is no replacement to a highly skilled human pen-test hacker, penetration tests are limited to specific parts of a network, are expensive, and may become obsolete within months. Automatic vulnerability scanners have limited accessibility and can not simulate today's advanced lateral movement attack methods. The result is network blind spots which is where security threats often arise. This calls for a new approach to testing network security resilience. An ideal tool would be easy to use, budgetary conscious, autonomous and scalable.\n\nWe propose using the Infection Monkey, a new open source cyber security testing tool, designed to thoroughly test a network from an attacker's point of view. Our tool draws its inspiration from Netflix's Chaos Monkey released in 2011. Netflix's Monkey was designed to randomly delete servers in Netflix' infrastructure to test a service's ability to withstand server failures. We think that a similar approach applies to network security, \"infecting\" your network to test your defenses capabilities, so we have leveraged Netflix's Chaos Monkey concept to address the challenges of the network defense community. The Infection Monkey spins up an infected virtual machine inside random parts of your data center, to test for potential security failures. By \"inside\", we mean behind the firewall and any other perimeter defense you are deploying for your computing infrastructure. By equipping the monkey with advanced exploitation abilities (without destructive payloads), it can spread to any vulnerable machine within reach. Along with the ability to spread onwards from its victims, the monkey can detect surprising weak spots throughout the network.\n\nIn our talk we will show how our Infection Monkey uncovers blind spots and argue that ongoing network-wide security testing adds strong capabilities to the security team. We will focus on vulnerabilities that up until now have stayed in the industry's 'collective blind spot'. The security community can greatly benefit from a disruptive, modern tool that helps verify security solution deployments and shed light on the weaker parts of the security chain."
  },
  "using-an-expanded-cyber-kill-chain-model-to-increase-attack-resiliency": {
    "author": "sean-malone",
    "description": "The Cyber Kill Chain model provides a framework for understanding how an adversary breaches the perimeter to gain access to systems on the internal network. However, this model is incomplete and can lead to over-focusing on perimeter security, to the detriment of internal security controls. In this presentation, we'll explore an expanded model including the Internal Kill Chain and the Target Manipulation Kill Chain. We'll review what actions are taken in each phase, and what's necessary for the adversary to move from one phase to the next. We'll discuss multiple types of controls that you can implement today in your enterprise to frustrate the adversary's plan at each stage, to avoid needing to declare \"game over\" just because an adversary has gained access to the internal network. The primary limiting factor of the traditional Cyber Kill Chain is that it ends with Stage 7: Actions on Objectives, conveying that once the adversary reaches this stage and has access to a system on the internal network, the defending victim has already lost. In reality, there should be multiple layers of security zones on the internal network, to protect the most critical assets. The adversary often has to move through numerous additional phases in order to access and manipulate specific systems to achieve his objective. By increasing the time and effort required to move through these stages, we decrease the likelihood of the adversary causing material damage to the enterprise.",
    "plaintextTitle": "Using an Expanded Cyber Kill Chain Model to Increase Attack Resiliency",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Malone-Using-An-Expanded-Cyber-Kill-Chain-Model-To-Increase-Attack-Resiliency.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=1Dz12M7u-S8"
      }
    ],
    "youtubeDescription": "by Sean Malone\n\nThe Cyber Kill Chain model provides a framework for understanding how an adversary breaches the perimeter to gain access to systems on the internal network. However, this model is incomplete and can lead to over-focusing on perimeter security, to the detriment of internal security controls. In this presentation, we'll explore an expanded model including the Internal Kill Chain and the Target Manipulation Kill Chain.\n\nWe'll review what actions are taken in each phase, and what's necessary for the adversary to move from one phase to the next. We'll discuss multiple types of controls that you can implement today in your enterprise to frustrate the adversary's plan at each stage, to avoid needing to declare \"game over\" just because an adversary has gained access to the internal network. The primary limiting factor of the traditional Cyber Kill Chain is that it ends with Stage 7: Actions on Objectives, conveying that once the adversary reaches this stage and has access to a system on the internal network, the defending victim has already lost. In reality, there should be multiple layers of security zones on the internal network, to protect the most critical assets. The adversary often has to move through numerous additional phases in order to access and manipulate specific systems to achieve his objective. By increasing the time and effort required to move through these stages, we decrease the likelihood of the adversary causing material damage to the enterprise."
  },
  "using-emet-to-disable-emet": {
    "author": "abdulellah-alsaheel",
    "description": "Microsoft's Enhanced Mitigation Experience Toolkit (EMET) is a project that adds security mitigations to user mode programs beyond those built in to the operating system. It runs inside \"protected\" programs as a Dynamic Link Library (DLL), and makes various changes in order to make software exploitation expensive. If an attacker can bypass EMET with significantly less work, then it defeats EMET's purpose of increasing the cost of exploit development. In this briefing we discuss protections being offered from EMET, how individually each of them can be evaded by playing around the validation code and then a generic disabling method, which applies to multiple endpoint products and sandboxing agents relying on injecting their Dynamic Link Library into host processes in order to protect them. It can be noted that Microsoft has issued a patch to address this very issue in EMET 5.5 in February 2016. EMET was designed to raise the cost of exploit development and not as a \"fool proof exploit mitigation solution\". Consequently, it is no surprise that attackers who have read/write capabilities within the process space of a protected program can bypass EMET by systematically defeating its mitigations. As long as their address space remains same, a complete defensive solution cannot be used to prevent exploitation. The talk will focus on how easy is it to defeat EMET or any other Agent. How secure is any endpoint exploit prevention/detection solution, which relies on same address space validations and how to defeat them with their own checks or by circumventing and evading their validation. Moreover it will also reflect on, targeted EMET evasion i.e. when the attacker knows EMET is installed on victim machine. These methods applied on EMET can be applied on other enterprise products and were tested on many during our research.",
    "plaintextTitle": "Using EMET to Disable EMET",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Alsaheel-Using-EMET-To-Disable-EMET.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Alsaheel-Using-EMET-To-Disable-EMET-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=rDYgxfmUwi8"
      }
    ],
    "youtubeDescription": "by Abdulellah Alsaheel  &  Raghav Pande\n\nMicrosoft's Enhanced Mitigation Experience Toolkit (EMET) is a project that adds security mitigations to user mode programs beyond those built in to the operating system. It runs inside \"protected\" programs as a Dynamic Link Library (DLL), and makes various changes in order to make software exploitation expensive. If an attacker can bypass EMET with significantly less work, then it defeats EMET's purpose of increasing the cost of exploit development. In this briefing we discuss protections being offered from EMET, how individually each of them can be evaded by playing around the validation code and then a generic disabling method, which applies to multiple endpoint products and sandboxing agents relying on injecting their Dynamic Link Library into host processes in order to protect them. It can be noted that Microsoft has issued a patch to address this very issue in EMET 5.5 in February 2016. EMET was designed to raise the cost of exploit development and not as a \"fool proof exploit mitigation solution\". Consequently, it is no surprise that attackers who have read/write capabilities within the process space of a protected program can bypass EMET by systematically defeating its mitigations. As long as their address space remains same, a complete defensive solution cannot be used to prevent exploitation.\n\nThe talk will focus on how easy is it to defeat EMET or any other Agent. How secure is any endpoint exploit prevention/detection solution, which relies on same address space validations and how to defeat them with their own checks or by circumventing and evading their validation. Moreover it will also reflect on, targeted EMET evasion i.e. when the attacker knows EMET is installed on victim machine. These methods applied on EMET can be applied on other enterprise products and were tested on many during our research."
  },
  "using-undocumented-cpu-behavior-to-see-into-kernel-mode-and-break-kaslr-in-the-process": {
    "author": "anders-fogh",
    "description": "Typically, hackers focus on software bugs to find vulnerabilities in the trust model of computers. In this talk, however, we'll focus on, how the micro architectural design of computers and how they enable an attacker to breach trust boundaries. Specifically, we'll focus on how an attacker with no special privileges can gain insights into the kernel and how these insights can enable further breaches of security. We will focus on the x86-64 architecture, but round up with comments on how our research touches on ARM processors. Unlike software bugs, micro architectural design issues have applications across operating systems and are independent of easily fixable software bugs. In modern operating systems the security model is enforced by the kernel. The kernel itself runs in a processor supported and protected state often called supervisor or kernel mode. Thus the kernel itself is protected from introspection and attack by hardware. We will present a method that'll allow for fast and reliable introspection into the memory hierarchy in the kernel based on undocumented CPU behavior and show how attackers could make use of this information to mount attacks on the kernel and consequently of the entire security model of modern computers. Making a map of memory and breaking KASLR Modern operating systems use a number of methods to prevent an attacker from running unauthorized code in kernel mode. They range from requiring user-privileges to load drivers, over driver signing to hardware enabled features preventing execution in memory marked as data such as DEP (Data Execution Prevention) or more resonantly SMEP that prevents execution of user allocated code with kernel level privileges. Often used bypasses modify either page tables or use so called code reuse attacks. Either way an attacker needs to know where the code or page tables are located. To further complicate an attack modern operating system is equipped with \"Kernel Address Space Randomized Layout\" (KASLR) that randomizes the location of important system memory. We'll present a fast and reliable method to map where the kernel has mapped pages in the kernel mode area. Further, we'll present a method for locating specific kernel modules thus by passing KASLR and paving the way for classic privileged elevation attacks. Neither method requires any special privileges and they even run from a sandboxed environment. Also relevant is that our methods are more flexible than traditional software information leaks, since they leak information on the entire memory hierarchy. The core idea of the work is that the prefetch instructions leaks information about the caches that are related to translating a virtual address into a physical address. Also significant is that the prefetch instruction is unprivileged and does not cause exceptions nor does it have any privilege verification. Thus it can be used on any address in the address space. Physical to virtual address conversion A number of micro-architectural attacks is possible on modern computers. The Row hammer is probably the most famous of these attacks. But attacks methodologies such as cache side channel attacks have proven to be able to exfiltrate private data, such as private keys, across trust boundaries. These two attack methodologies have in common that they require information about how virtual memory is mapped to physical memory. Both methodologies have thus far either used the \"/proc/PID/pagemap\" which is now accessible only with administrator privileges or by using approximations. We will discuss a method where an unprivileged user is able to reconstruct this mapping. This goes a long way towards making the row hammer attack a practical attack vector and can be a valuable assistance in doing cache side channel attacks. Again we use the prefetch's instructions lack of privilege checking, but instead of using the timing that it leaks we now use the instructions ability to load CPU caches and that timing of memory access instructions depend heavily on the cache state. Bonus material We will shortly discuss the attack vectors relevance on ARM platforms and its potential impact on hypervisor environments. Finally, we will shortly outline a possible defense.",
    "plaintextTitle": "Using Undocumented CPU Behavior to See into Kernel Mode and Break KASLR in the Process",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Fogh-Using-Undocumented-CPU-Behaviour-To-See-Into-Kernel-Mode-And-Break-KASLR-In-The-Process.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Fogh-Using-Undocumented-CPU-Behaviour-To-See-Into-Kernel-Mode-And-Break-KASLR-In-The-Process-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Pwq0vv4X7m4"
      }
    ],
    "youtubeDescription": "by Anders Fogh  &  Daniel Gruss\n\nTypically, hackers focus on software bugs to find vulnerabilities in the trust model of computers. In this talk, however, we'll focus on, how the micro architectural design of computers and how they enable an attacker to breach trust boundaries. Specifically, we'll focus on how an attacker with no special privileges can gain insights into the kernel and how these insights can enable further breaches of security. We will focus on the x86-64 architecture, but round up with comments on how our research touches on ARM processors. Unlike software bugs, micro architectural design issues have applications across operating systems and are independent of easily fixable software bugs. In modern operating systems the security model is enforced by the kernel. The kernel itself runs in a processor supported and protected state often called supervisor or kernel mode. Thus the kernel itself is protected from introspection and attack by hardware. We will present a method that'll allow for fast and reliable introspection into the memory hierarchy in the kernel based on undocumented CPU behavior and show how attackers could make use of this information to mount attacks on the kernel and consequently of the entire security model of modern computers. Making a map of memory and breaking KASLR Modern operating systems use a number of methods to prevent an attacker from running unauthorized code in kernel mode. They range from requiring user-privileges to load drivers, over driver signing to hardware enabled features preventing execution in memory marked as data such as DEP (Data Execution Prevention) or more resonantly SMEP that prevents execution of user allocated code with kernel level privileges. Often used bypasses modify either page tables or use so called code reuse attacks. Either way an attacker needs to know where the code or page tables are located. To further complicate an attack modern operating system is equipped with \"Kernel Address Space Randomized Layout\" (KASLR) that randomizes the location of important system memory.\n\nWe'll present a fast and reliable method to map where the kernel has mapped pages in the kernel mode area. Further, we'll present a method for locating specific kernel modules thus by passing KASLR and paving the way for classic privileged elevation attacks. Neither method requires any special privileges and they even run from a sandboxed environment. Also relevant is that our methods are more flexible than traditional software information leaks, since they leak information on the entire memory hierarchy. The core idea of the work is that the prefetch instructions leaks information about the caches that are related to translating a virtual address into a physical address. Also significant is that the prefetch instruction is unprivileged and does not cause exceptions nor does it have any privilege verification. Thus it can be used on any address in the address space. Physical to virtual address conversion A number of micro-architectural attacks is possible on modern computers. The Row hammer is probably the most famous of these attacks. But attacks methodologies such as cache side channel attacks have proven to be able to exfiltrate private data, such as private keys, across trust boundaries. These two attack methodologies have in common that they require information about how virtual memory is mapped to physical memory. Both methodologies have thus far either used the \"/proc/PID/pagemap\" which is now accessible only with administrator privileges or by using approximations. We will discuss a method where an unprivileged user is able to reconstruct this mapping. This goes a long way towards making the row hammer attack a practical attack vector and can be a valuable assistance in doing cache side channel attacks. Again we use the prefetch's instructions lack of privilege checking, but instead of using the timing that it leaks we now use the instructions ability to load CPU caches and that timing of memory access instructions depend heavily on the cache state. Bonus material We will shortly discuss the attack vectors relevance on ARM platforms and its potential impact on hypervisor environments. Finally, we will shortly outline a possible defense."
  },
  "viral-video-exploiting-ssrf-in-video-converters": {
    "author": "nikolay-ermishkin",
    "description": "Many web applications allow users to upload video - video/image hostings, cloud storages, social networks, instant messengers, etc. Typically, developers want to convert user uploaded files into formats supported by all clients. The number of input formats is very big, so developers use third-party tools/libraries for video encoding. The most common solution in this area is ffmpeg and its forks. ffmpeg by default supports many different formats, including playlists (files with a set of links to other files). In this Briefing, we will examine exploitation of SSRF in hls (m3u8) playlists processing. Video processing is frequently done in clouds, which by design is more vulnerable to SSRF attacks, and playlists support many different protocols (http, file, tcp, upd, gopher ...), so SSRF in playlist processing can be very critical and even lead to full service takeover.\r\n                \r\n                We will show how implementation details of hls playlists processing in ffmpeg allow reading files from the video conversion server, with and without network support. We will show how SSRF in video converter can give full access to service based on cloud like Amazon AWS. We will also present our tool for the detection and exploitation of this vulnerability. We will show a truly \"viral\" video which could perform successful attacks on Facebook, Telegram, Microsoft Azure, flickr, one of Twitter services, Imgur and others.",
    "plaintextTitle": "Viral Video - Exploiting SSRF in Video Converters",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ermishkin-Viral-Video-Exploiting-Ssrf-In-Video-Converters.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=tZil9j7TTps"
      }
    ],
    "youtubeDescription": "by Nikolay Ermishkin  &  Maxim Andreev\n\nMany web applications allow users to upload video - video/image hostings, cloud storages, social networks, instant messengers, etc. Typically, developers want to convert user uploaded files into formats supported by all clients. The number of input formats is very big, so developers use third-party tools/libraries for video encoding. The most common solution in this area is ffmpeg and its forks. ffmpeg by default supports many different formats, including playlists (files with a set of links to other files). In this Briefing, we will examine exploitation of SSRF in hls (m3u8) playlists processing. Video processing is frequently done in clouds, which by design is more vulnerable to SSRF attacks, and playlists support many different protocols (http, file, tcp, upd, gopher ...), so SSRF in playlist processing can be very critical and even lead to full service takeover.\n\nWe will show how implementation details of hls playlists processing in ffmpeg allow reading files from the video conversion server, with and without network support. We will show how SSRF in video converter can give full access to service based on cloud like Amazon AWS. We will also present our tool for the detection and exploitation of this vulnerability. We will show a truly \"viral\" video which could perform successful attacks on Facebook, Telegram, Microsoft Azure, flickr, one of Twitter services, Imgur and others."
  },
  "voip-wars-the-phreakers-awaken": {
    "author": "fatih-ozavci",
    "description": "Larger organisations are using VoIP within their commercial services and corporate communications and the take up of cloud based Unified Communications (UC) solutions is rising every day. However, response teams and security testers have limited knowledge of VoIP attack surfaces and threats in the wild. Due to this lack of understanding of modern UC security requirements, numerous service providers, larger organisations and subscribers are leaving themselves susceptible to attack. Current threat actors are repurposing this exposed infrastructure for botnets, toll fraud etc. The talk aims to arm response and security testing teams with knowledge of cutting-edge attacks, tools and vulnerabilities for VoIP networks. Some of the headlines are: attacking cloud based VoIP solutions to jailbreak tenant environments; discovering critical security vulnerabilities with the VoIP products of major vendors; exploiting harder to fix VoIP protocol and service vulnerabilities; testing the security of IP Multimedia Subsystem (IMS) services; and understanding the toolset developed by the author to discover previously unknown vulnerabilities and to develop custom attacks. In addition, the business impact of these attacks will be explained for various implementations, such as cloud UC services, commercial services, service provider networks and corporate communication. Through the demonstrations, the audience will understand how can they secure and test their communication infrastructure and services. The talk will also be accompanied by the newer versions of Viproy and Viproxy developed by the author to operate the attack demonstrations.",
    "plaintextTitle": "VOIP WARS: The Phreakers Awaken",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ozavci-VoIP-Wars-The-Phreakers-Awaken.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ozavci-VoIP-Wars-The-Phreakers-Awaken.rb",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=rl_kp5UZKlw"
      }
    ],
    "youtubeDescription": "by Fatih Ozavci\n\nLarger organisations are using VoIP within their commercial services and corporate communications and the take up of cloud based Unified Communications (UC) solutions is rising every day. However, response teams and security testers have limited knowledge of VoIP attack surfaces and threats in the wild. Due to this lack of understanding of modern UC security requirements, numerous service providers, larger organisations and subscribers are leaving themselves susceptible to attack. Current threat actors are repurposing this exposed infrastructure for botnets, toll fraud etc.\n\nThe talk aims to arm response and security testing teams with knowledge of cutting-edge attacks, tools and vulnerabilities for VoIP networks. Some of the headlines are: attacking cloud based VoIP solutions to jailbreak tenant environments; discovering critical security vulnerabilities with the VoIP products of major vendors; exploiting harder to fix VoIP protocol and service vulnerabilities; testing the security of IP Multimedia Subsystem (IMS) services; and understanding the toolset developed by the author to discover previously unknown vulnerabilities and to develop custom attacks. In addition, the business impact of these attacks will be explained for various implementations, such as cloud UC services, commercial services, service provider networks and corporate communication. Through the demonstrations, the audience will understand how can they secure and test their communication infrastructure and services. The talk will also be accompanied by the newer versions of Viproy and Viproxy developed by the author to operate the attack demonstrations."
  },
  "watching-commodity-malware-get-sold-to-a-targeted-actor": {
    "author": "israel-barak",
    "description": "Detected breaches are often classified by security operation centers and incident response teams as either \"targeted\" or \"untargeted.\" This quick classification of a breach as \"untargeted,\" and the following de-prioritization for remediation, often misses a re-classification and upgrade process several attack groups have been conducting. As part of this process, assets compromised as part of broad, untargeted \"commodity\" malware campaigns are re-classified based on the organizational network they're part of to determine their potential value in the market. The higher value ones are upgraded and taken out of the \"commodity\" campaign to prepare them for a sale, for buyers planning a targeted attack. Organizations overlooking this often miss the opportunity to eliminate the threat prior to its escalation. This session will cover the analysis of endpoint and network data captured during these re-classification operations, demonstrating the techniques and procedures used by some of the attack groups as they migrate compromised endpoints from the \"commodity\" threat platform to the valuable-target's platform. What measures can be taken to detect that a commodity threat is going through a migration process? How can this be leveraged to increase the efficiency of the incident response process?",
    "plaintextTitle": "Watching Commodity Malware Get Sold to a Targeted Actor",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=-Jbt1d_CDKo"
      }
    ],
    "youtubeDescription": "by Israel Barak\n\nDetected breaches are often classified by security operation centers and incident response teams as either \"targeted\" or \"untargeted.\" This quick classification of a breach as \"untargeted,\" and the following de-prioritization for remediation, often misses a re-classification and upgrade process several attack groups have been conducting. As part of this process, assets compromised as part of broad, untargeted \"commodity\" malware campaigns are re-classified based on the organizational network they're part of to determine their potential value in the market. The higher value ones are upgraded and taken out of the \"commodity\" campaign to prepare them for a sale, for buyers planning a targeted attack. Organizations overlooking this often miss the opportunity to eliminate the threat prior to its escalation.\n\nThis session will cover the analysis of endpoint and network data captured during these re-classification operations, demonstrating the techniques and procedures used by some of the attack groups as they migrate compromised endpoints from the \"commodity\" threat platform to the valuable-target's platform. What measures can be taken to detect that a commodity threat is going through a migration process? How can this be leveraged to increase the efficiency of the incident response process?"
  },
  "weaponizing-data-science-for-social-engineering-automated-e2e-spear-phishing-on-twitter": {
    "author": "john-seymour",
    "description": "Historically, machine learning for information security has prioritized defense: think intrusion detection systems, malware classification and botnet traffic identification. Offense can benefit from data just as well. Social networks, especially Twitter with its access to extensive personal data, bot-friendly API, colloquial syntax and prevalence of shortened links, are the perfect venues for spreading machine-generated malicious content.\r\n                \r\n                We present a recurrent neural network that learns to tweet phishing posts targeting specific users. The model is trained using spear phishing pen-testing data, and in order to make a click-through more likely, it is dynamically seeded with topics extracted from timeline posts of both the target and the users they retweet or follow. We augment the model with clustering to identify high value targets based on their level of social engagement such as their number of followers and retweets, and measure success using click-rates of IP-tracked links. Taken together, these techniques enable the world's first automated end-to-end spear phishing campaign generator for Twitter.",
    "plaintextTitle": "Weaponizing Data Science for Social Engineering: Automated E2E Spear Phishing on Twitter",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Seymour-Tully-Weaponizing-Data-Science-For-Social-Engineering-Automated-E2E-Spear-Phishing-On-Twitter.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Seymour-Tully-Weaponizing-Data-Science-For-Social-Engineering-Automated-E2E-Spear-Phishing-On-Twitter-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Seymour-Tully-Weaponizing-Data-Science-For-Social-Engineering-Automated-E2E-Spear-Phishing-On-Twitter-tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=-Y-xLQy0UuQ"
      }
    ],
    "youtubeDescription": "by John Seymour  &  Philip Tully\n\nHistorically, machine learning for information security has prioritized defense: think intrusion detection systems, malware classification and botnet traffic identification. Offense can benefit from data just as well. Social networks, especially Twitter with its access to extensive personal data, bot-friendly API, colloquial syntax and prevalence of shortened links, are the perfect venues for spreading machine-generated malicious content.\n\nWe present a recurrent neural network that learns to tweet phishing posts targeting specific users. The model is trained using spear phishing pen-testing data, and in order to make a click-through more likely, it is dynamically seeded with topics extracted from timeline posts of both the target and the users they retweet or follow. We augment the model with clustering to identify high value targets based on their level of social engagement such as their number of followers and retweets, and measure success using click-rates of IP-tracked links. Taken together, these techniques enable the world's first automated end-to-end spear phishing campaign generator for Twitter."
  },
  "web-application-firewalls-analysis-of-detection-logic": {
    "author": "vladimir-ivanov",
    "description": "The presentation will highlight the core of Web Application Firewall (WAF): detection logic, with an accent on regular expressions detection mechanism. The security of 6 trending opensource WAFs (OWASP CRS 2,3 - ModSecurity, Comodo WAF, PHPIDS, QuickDefense, Libinjection) will be called into question.Static Application Security Testing (SAST) tool for Regular Expressions analysis will be released, which aims to finds security flaws in the cunning syntax of regular expressions. Using the proposed \"regex security cheatsheet\", rules from popular WAFs will be examined. Logical flaws in regular expressions will be demonstrated by applying author's bughunting experience and best practices. Unexpected by regexp's primary logic vectors will be discovered for Cross-Site Scripting and SQL-Injection attacks (MySQL, MSSQL, Oracle) using advanced fuzz testing techniques. Obtained from fuzz testing framework attack vectors will be clustered and represented via look-up tables. Such tables can be used by both attackers and defenders in order to understand the purpose of characters in various parts of attack vector, which are allowed by appropriate browsers or databases.More than 15 new bypass vectors will be described, with an indication of over 300 potential weakness in regular expression detection logic of WAFs.",
    "plaintextTitle": "Web Application Firewalls: Analysis of Detection Logic",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Ivanov-Web-Application-Firewalls-Analysis-Of-Detection-Logic.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=dMFJLicdaC0"
      }
    ],
    "youtubeDescription": "by Vladimir Ivanov\n\nThe presentation will highlight the core of Web Application Firewall (WAF): detection logic, with an accent on regular expressions detection mechanism. The security of 6 trending opensource WAFs (OWASP CRS 2,3 - ModSecurity, Comodo WAF, PHPIDS, QuickDefense, Libinjection) will be called into question.\n\nStatic Application Security Testing (SAST) tool for Regular Expressions analysis will be released, which aims to finds security flaws in the cunning syntax of regular expressions. Using the proposed \"regex security cheatsheet\", rules from popular WAFs will be examined. Logical flaws in regular expressions will be demonstrated by applying author's bughunting experience and best practices. Unexpected by regexp's primary logic vectors will be discovered for Cross-Site Scripting and SQL-Injection attacks (MySQL, MSSQL, Oracle) using advanced fuzz testing techniques. Obtained from fuzz testing framework attack vectors will be clustered and represented via look-up tables. Such tables can be used by both attackers and defenders in order to understand the purpose of characters in various parts of attack vector, which are allowed by appropriate browsers or databases.\n\nMore than 15 new bypass vectors will be described, with an indication of over 300 potential weakness in regular expression detection logic of WAFs."
  },
  "whats-the-dfirence-for-ics": {
    "author": "chris-sistrunk",
    "description": "Digital Forensics and Incident Response (DFIR) for IT systems has been around quite a while, but what about Industrial Control Systems (ICS)? This talk will explore the basics of DFIR for embedded devices used in critical infrastructure such as Programmable Logic Controllers (PLCs), Remote Terminal Units (RTUs), and controllers. If these are compromised or even have a misoperation, we will show what files, firmware, memory dumps, physical conditions, and other data can be analyzed in embedded systems to determine the root cause. \r\n                \r\n                This talk will show examples of what and how to collect forensics data from two popular RTUs that are used in Electric Substations: the General Electric D20MX and the Schweitzer Engineering Labs SEL-3530 RTAC.\r\n                \r\n                This talk will not cover Windows or *nixbased devices such as Human Machine Interfaces (HMIs) or gateways.",
    "plaintextTitle": "What's the DFIRence for ICS?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Sistrunk-Triplett-Whats-The-DFIRence-For-ICS.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=qcOwnS_ytIY"
      }
    ],
    "youtubeDescription": "by Chris Sistrunk  &  Josh Triplett\n\nDigital Forensics and Incident Response (DFIR) for IT systems has been around quite a while, but what about Industrial Control Systems (ICS)? This talk will explore the basics of DFIR for embedded devices used in critical infrastructure such as Programmable Logic Controllers (PLCs), Remote Terminal Units (RTUs), and controllers. If these are compromised or even have a misoperation, we will show what files, firmware, memory dumps, physical conditions, and other data can be analyzed in embedded systems to determine the root cause.\n\nThis talk will show examples of what and how to collect forensics data from two popular RTUs that are used in Electric Substations: the General Electric D20MX and the Schweitzer Engineering Labs SEL-3530 RTAC.\n\nThis talk will not cover Windows or *nixbased devices such as Human Machine Interfaces (HMIs) or gateways."
  },
  "when-governments-attack-state-sponsored-malware-attacks-against-activists-lawyers-and-journalists": {
    "author": "cooper-quintin",
    "description": "Targeted malware campaigns against Activists, Lawyers and journalists are becoming extremely commonplace. These attacks range in sophistication from simple spear-phishing campaigns using off the shelf malware, to APT-level attacks employing exploits, large budgets, and increasingly sophisticated techniques. Activists, lawyers and journalists are, for the most part, completely unprepared to deal with cyber-attacks; most of them don't even have a single security professional on staff. In this session Eva Galperin and Cooper Quintin of the Electronic Frontier Foundation will discuss the technical and operational details of malware campaigns against activists, journalists, and lawyers around the world, including EFF.  They will also present brand new research about a threat actor targeting  lawyers and activists in Europe and the Post-Soviet States. With targeted  malware campaigns, governments have a powerful tool to suppress and silence dissent. As security professionals we are in a unique position to help in this fight.",
    "plaintextTitle": "When Governments Attack: State Sponsored Malware Attacks Against Activists Lawyers and Journalists",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Quintin-When-Governments-Attack-State-Sponsored-Malware-Attacks-Against-Activists-Lawyers-And-Journalists.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Quintin-When-Governments-Attack-State-Sponsored-Malware-Attacks-Against-Activists-Lawyers-And-Journalists-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=bknjZnOP9Wg"
      }
    ],
    "youtubeDescription": "by Cooper Quintin  &  Eva Galperin\n\nTargeted malware campaigns against Activists, Lawyers and journalists are becoming extremely commonplace. These attacks range in sophistication from simple spear-phishing campaigns using off the shelf malware, to APT-level attacks employing exploits, large budgets, and increasingly sophisticated techniques. Activists, lawyers and journalists are, for the most part, completely unprepared to deal with cyber-attacks; most of them don't even have a single security professional on staff. In this session Eva\nGalperin and Cooper Quintin of the Electronic Frontier Foundation will discuss the technical and operational details of malware campaigns against activists, journalists, and lawyers around the world, including EFF. They will also present brand new research about a threat actor targeting lawyers and activists in Europe and the Post-Soviet States. With targeted malware campaigns, governments have a powerful tool to suppress and silence dissent. As security professionals we are in a unique position to help in this fight."
  },
  "when-the-cops-come-a-knocking-handling-technical-assistance-demands-from-law-enforcement": {
    "author": "jennifer-granick",
    "description": "What kind of surveillance assistance can the U.S. government force companies to provide? This issue has entered the public consciousness due to the FBI's demand in February that Apple write software to help it access the San Bernardino shooter's encrypted iPhone. Technical assistance orders can go beyond the usual government requests for user data, requiring a company to actively participate in the government's monitoring of the targeted user(s). Companies that take seriously the task of securing of their users' information and communications must be prepared to respond to demands to disclose, proactively begin storing, or decrypt user data; write custom code; allow the installation of government equipment on their systems; or hand over encryption keys. Advance preparation for handling technical assistance demands is especially important now since the U.S. Department of Justice has been so aggressive with companies that resist broad or novel surveillance orders. In the \"Apple vs. FBI\" case, America's richest company faced a motion for contempt of court and derisive rhetoric from U.S. officials before it enlisted the nation's top lawyers in its defense and ultimately fought off the case. In stark contrast, encrypted e-mail provider Lavabit unsuccessfully opposed multiple court orders to compel it to decrypt and give law enforcement the e-mails of its most famous customer, Edward Snowden, and even to hand over its private encryption keys. The Fourth Circuit Court of Appeal did not look kindly on Lavabit, which lost its legal battle and shuttered its operations after its legal defeat. In 2007, Yahoo! unsuccessfully battled warrantless wiretapping in secret before the Foreign Intelligence Surveillance Court. The price for seeking to protect its users' Fourth Amendment rights? DOJ argued that Yahoo! should be fined $250,000 a day for non-compliance while the litigation was pending. This talk, given by two Crypto Policy Project attorneys from Stanford Law School's Center for Internet and Society, will teach an enterprise audience what they need to know about technical-assistance orders by U.S. law enforcement, so that they can handle demands effectively even if they do not have Apple-level resources. We'll go over what sorts of assistance law enforcement may demand you provide (and has demanded of companies in the past), whether they have authority to require such assistance and under what law(s), and a company's options in response.",
    "plaintextTitle": "When the Cops Come A-Knocking: Handling Technical Assistance Demands from Law Enforcement",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Granick-When-The-Cops-Come-A-Knocking-Handling-Technical-Assistance-Demands-From-Law-Enforcement.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=PX2RjJAfTYg"
      }
    ],
    "youtubeDescription": "by Jennifer Granick  &  Riana Pfefferkorn\n\nWhat kind of surveillance assistance can the U.S. government force companies to provide? This issue has entered the public consciousness due to the FBI's demand in February that Apple write software to help it access the San Bernardino shooter's encrypted iPhone. Technical assistance orders can go beyond the usual government requests for user data, requiring a company to actively participate in the government's monitoring of the targeted user(s). Companies that take seriously the task of securing of their users' information and communications must be prepared to respond to demands to disclose, proactively begin storing, or decrypt user data; write custom code; allow the installation of government equipment on their systems; or hand over encryption keys. Advance preparation for handling technical assistance demands is especially important now since the U.S. Department of Justice has been so aggressive with companies that resist broad or novel surveillance orders. In the \"Apple vs. FBI\" case, America's richest company faced a motion for contempt of court and derisive rhetoric from U.S. officials before it enlisted the nation's top lawyers in its defense and ultimately fought off the case. In stark contrast, encrypted e-mail provider Lavabit unsuccessfully opposed multiple court orders to compel it to decrypt and give law enforcement the e-mails of its most famous customer, Edward Snowden, and even to hand over its private encryption keys. The Fourth Circuit Court of Appeal did not look kindly on Lavabit, which lost its legal battle and shuttered its operations after its legal defeat. In 2007, Yahoo! unsuccessfully battled warrantless wiretapping in secret before the Foreign Intelligence Surveillance Court. The price for seeking to protect its users' Fourth Amendment rights? DOJ argued that Yahoo! should be fined $250,000 a day for non-compliance while the litigation was pending.\n\nThis talk, given by two Crypto Policy Project attorneys from Stanford Law School's Center for Internet and Society, will teach an enterprise audience what they need to know about technical-assistance orders by U.S. law enforcement, so that they can handle demands effectively even if they do not have Apple-level resources. We'll go over what sorts of assistance law enforcement may demand you provide (and has demanded of companies in the past), whether they have authority to require such assistance and under what law(s), and a company's options in response."
  },
  "windows-10-mitigation-improvements": {
    "author": "matt-miller",
    "description": "Continuous improvements have been made to Windows and other Microsoft products over the past decade that have made it more difficult and costly to exploit software vulnerabilities. The various mitigation technologies that have been created as a result have played a key role in helping to keep people safe online even as the number of vulnerabilities that are found and fixed each year has increased. In this presentation, we'll describe some of the new ways that Microsoft is tackling software security and some of the new mitigation improvements that have been made to Windows 10 as a result. This talk will cover a new data driven approach to software security at Microsoft. This approach involves proactive monitoring and analysis of exploits found in-the-wild to better understand the types of vulnerabilities that are being exploited and exploitation techniques being used. This category of analysis and insight has driven a series of mitigation improvements that has broken widely used exploitation techniques and in some cases virtually eliminated entire classes of vulnerabilities. In this presentation, we'll share more details on how this analysis is performed at Microsoft, how it has helped drive improvements, and how we have measured the success of those improvements. This presentation will also describe Microsoft's unique proactive approach to software security assurance which embraces offensive security research and extends traditional \"red team\" operations into the software security world. This approach replaces traditional software security design and implementation reviews with a true end-to-end simulation of attacks in the wild by spanning vulnerability discovery, exploit development, and mitigation bypass identification. This approach enables Microsoft to concretely evaluate the effectiveness of mitigations, identify gaps in protection, and provide concrete metrics on the cost and resources required to develop an exploit in a given scenario. In other words, this provides concrete data to help Microsoft be proactive about making holistic platform security improvements rather than simply waiting and reacting to what we see attackers do in-the-wild. In order to help drive these points home, this presentation will describe a number of mitigation improvements that have been made in Windows 10 and the upcoming Windows 10 anniversary edition. We will show how these improvements were supported by the above methods and what impact we expect these improvements to have going forward. This portion of the presentation can be seen as a follow-on to our \"Exploit Mitigation Improvements in Windows 8\" presentation which was given at Black Hat USA 2012.",
    "plaintextTitle": "Windows 10 Mitigation Improvements",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Weston-Windows-10-Mitigation-Improvements.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=gCu2GQd0GSE"
      }
    ],
    "youtubeDescription": "by Matt Miller  &  David Weston\n\nContinuous improvements have been made to Windows and other Microsoft products over the past decade that have made it more difficult and costly to exploit software vulnerabilities. The various mitigation technologies that have been created as a result have played a key role in helping to keep people safe online even as the number of vulnerabilities that are found and fixed each year has increased. In this presentation, we'll describe some of the new ways that Microsoft is tackling software security and some of the new mitigation improvements that have been made to Windows 10 as a result. This talk will cover a new data driven approach to software security at Microsoft. This approach involves proactive monitoring and analysis of exploits found in-the-wild to better understand the types of vulnerabilities that are being exploited and exploitation techniques being used. This category of analysis and insight has driven a series of mitigation improvements that has broken widely used exploitation techniques and in some cases virtually eliminated entire classes of vulnerabilities.\n\nIn this presentation, we'll share more details on how this analysis is performed at Microsoft, how it has helped drive improvements, and how we have measured the success of those improvements. This presentation will also describe Microsoft's unique proactive approach to software security assurance which embraces offensive security research and extends traditional \"red team\" operations into the software security world. This approach replaces traditional software security design and implementation reviews with a true end-to-end simulation of attacks in the wild by spanning vulnerability discovery, exploit development, and mitigation bypass identification. This approach enables Microsoft to concretely evaluate the effectiveness of mitigations, identify gaps in protection, and provide concrete metrics on the cost and resources required to develop an exploit in a given scenario. In other words, this provides concrete data to help Microsoft be proactive about making holistic platform security improvements rather than simply waiting and reacting to what we see attackers do in-the-wild. In order to help drive these points home, this presentation will describe a number of mitigation improvements that have been made in Windows 10 and the upcoming Windows 10 anniversary edition. We will show how these improvements were supported by the above methods and what impact we expect these improvements to have going forward. This portion of the presentation can be seen as a follow-on to our \"Exploit Mitigation Improvements in Windows 8\" presentation which was given at Black Hat USA 2012."
  },
  "windows-10-segment-heap-internals": {
    "author": "mark-vincent-yason",
    "description": "Introduced in Windows 10, Segment Heap is the native heap used in Windows app (formerly called Modern/Metro app) processes and certain system processes. This heap is an addition to the well-researched and widely documented NT heap that is still used in traditional application processes and in certain types of allocations in Windows app processes.\r\n                \r\n                One important aspect of the Segment Heap is that it is enabled for Microsoft Edge which means that components/dependencies running in Edge that do not use a custom heap manager will use the Segment Heap. Therefore, reliably exploiting memory corruption vulnerabilities in these Edge components/dependencies would require some level of understanding of the Segment Heap.\r\n                \r\n                In this presentation, I'll discuss the data structures, algorithms and security mechanisms of the Segment Heap. Knowledge of the Segment Heap is also applied by discussing and demonstrating how a memory corruption vulnerability in the Microsoft WinRT PDF library (CVE-2016-0117) is used to create a reliable write primitive in the context of the Edge content process.",
    "plaintextTitle": "Windows 10 Segment Heap Internals",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Yason-Windows-10-Segment-Heap-Internals.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Yason-Windows-10-Segment-Heap-Internals-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=hetZx78SQ_A"
      }
    ],
    "youtubeDescription": "by Mark Vincent Yason\n\nIntroduced in Windows 10, Segment Heap is the native heap used in Windows app (formerly called Modern/Metro app) processes and certain system processes. This heap is an addition to the well-researched and widely documented NT heap that is still used in traditional application processes and in certain types of allocations in Windows app processes.\n\nOne important aspect of the Segment Heap is that it is enabled for Microsoft Edge which means that components/dependencies running in Edge that do not use a custom heap manager will use the Segment Heap. Therefore, reliably exploiting memory corruption vulnerabilities in these Edge components/dependencies would require some level of understanding of the Segment Heap.\n\nIn this presentation, I'll discuss the data structures, algorithms and security mechanisms of the Segment Heap. Knowledge of the Segment Heap is also applied by discussing and demonstrating how a memory corruption vulnerability in the Microsoft WinRT PDF library (CVE-2016-0117) is used to create a reliable write primitive in the context of the Edge content process."
  },
  "xenpwn-breaking-paravirtualized-devices": {
    "author": "felix-wilhelm",
    "description": "Instead of simply emulating old and slow hardware, modern hypervisors use paravirtualized devices to provide guests access to virtual hardware. Bugs in the privileged backend components can allow an attacker to break out of a guest, making them quite an interesting target.  In this talk, I'll present the results of my research on the security of these backend components and discuss Xenpwn, a hypervisor based memory access tracing tool used to discover multiple critical vulnerabilities in paravirtualized drivers of the Xen hypervisor.  If you like virtualization security, race conditions, vulnerabilities introduced by compiler optimizations or are a big fan of Bochspwn, this is the right talk for you.",
    "plaintextTitle": "Xenpwn: Breaking Paravirtualized Devices",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Wilhelm-Xenpwn-Breaking-Paravirtualized-Devices.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/us-16/materials/us-16-Wilhelm-Xenpwn-Breaking-Paravirtualized-Devices-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=qxz8MzE3QME"
      }
    ],
    "youtubeDescription": "by Felix Wilhelm\n\nInstead of simply emulating old and slow hardware, modern hypervisors use paravirtualized devices to provide guests access to virtual hardware. Bugs in the privileged backend components can allow an attacker to break out of a guest, making them quite an interesting target.\n\nIn this talk, I'll present the results of my research on the security of these backend components and discuss Xenpwn, a hypervisor based memory access tracing tool used to discover multiple critical vulnerabilities in paravirtualized drivers of the Xen hypervisor.\nIf you like virtualization security, race conditions, vulnerabilities introduced by compiler optimizations or are a big fan of Bochspwn, this is the right talk for you."
  },
  "Shamir": {
    "author": "",
    "description": "Many computer systems use protective mechanisms, which are mathematically secure but physically vulnerable. In this talk, I will survey the development of such side channel attacks since the late 1990's, and describe various examples of devastating attacks on widely deployed systems. In the last part of the talk, I will describe some recently developed (and previously unpublished) techniques which can be used by an outside attacker to establish long range (>1 kilometer) bidirectional communication with a top-secret computer system which contains only standard untampered hardware components, is completely air gapped, and is perfectly shielded from TEMPEST attacks.",
    "plaintextTitle": "Side Channel Attacks - Past, Present, and Future",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=galPCEVzwaU"
      }
    ],
    "youtubeDescription": "The following video demonstrates a cache side-channel attack extracting the secret RSA key of a web server on a virtual infrastructure.\n\nThere are three virtual machines in the demonstration: a web server which is the target of the attack, a web client which repeatedly connects to the server and the attacker's virtual machine. The attacker's VM is located on the same physical machine as the web server while the client may be a remote machine, and may be operated by the attacker.\n\nThe demo begins by starting the web server and the web client. Communication between them is protected by TLS. The client repeatedly connects to the server and the server accepts the requested connections.\n\nThe interesting action will take place in the attacker's virtual machine and the demonstration focuses on it.\n\n\nThe attacker maps the cache - this means finding enough memory addresses in its memory space to fill as many of the 8192 sets of the cache as possible.\n\nThe attacker goes over every set and compares its activity to the expected activity of sets that are involved in the RSA decryption operation.\n\nDuring the RSA decryption operation the attacker manages to take several samples for each bit in the RSA  private key. The samples are\nexpected to be slightly different depending on whether the bit is zero or one. However, due to noise, a single sequence of samples is insufficient to deduce the key correctly, thus we use many samples.\n\nFinally, we obtain the correct key.\n\nMIKELANGELO is a project, funded by European Union under the H2020 research and innovation programme. Contract number: 645402.\n\nContacts:\nNiv Gilboa, Gabriel Scalosub \n\nMIKELANGELO project\nhttp://www.mikelangelo-project.eu\n\nCREDITS\nProduced by Daniel Vladušič - daniel@mikelangelo-project.eu\nMusic - Haus Guest, Gunnar Olsen"
  },
  "Koretsky": {
    "author": "",
    "description": "The secure BYOD hype is growing and Virtual Desktop Infrastructure (VDI) is considered the alternative solution for secure containers. In a nutshell, VDI solutions provide a remote workstation offering so that no data is stored locally. We decided to examine the architecture and see for ourselves whether VDI delivers on its security promise.  \n\nIn this engaging session, we demonstrate a proof-of-concept attack where a malicious app leverages screen scraping to exfiltrate data through common VDI platforms. By simulating the user's interaction, we show how such an attack is not only feasible - but also efficient. While keeping the espionage activity invisible both from client-side and server-side malware detection measures, the attacker can automate the process and ultimately render the VDI solution ineffective.",
    "plaintextTitle": "A Practical Attack Against VDI Solutions",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Koretsky-A-Practical-Attack-Against-VDI-Solutions-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Koretsky-A-Practical-Attack-Against-VDI-Solutions.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5RPXHeEKrX0"
      }
    ],
    "youtubeDescription": "By Dan Koretsky\n\n\"The secure BYOD hype is growing and Virtual Desktop Infrastructure (VDI) is considered the alternative solution for secure containers. In a nutshell, VDI solutions provide a remote workstation offering so that no data is stored locally. We decided to examine the architecture and see for ourselves whether VDI delivers on its security promise.  \n\nIn this engaging session, we demonstrate a proof-of-concept attack where a malicious app leverages screen scraping to exfiltrate data through common VDI platforms. By simulating the user's interaction, we show how such an attack is not only feasible - but also efficient. While keeping the espionage activity invisible both from client-side and server-side malware detection measures, the attacker can automate the process and ultimately render the VDI solution ineffective.\""
  },
  "Pickett": {
    "author": "",
    "description": "Software Defined Networking (SDN) transfers all forwarding decisions to a single controller and provides the network with the same degree of control and flexibility as the cloud.  And, with all the major vendors onboard, it will soon be supporting networks everywhere. But, current implementations are full of weaknesses that could easily turn this utopian dream of the future into a nightmare and leave networks world-wide exposed.\n\nWith clear-text wire protocol implementations, little support for switch TLS, no authentication for nodes, poorly conceived rate-limiting features in the controllers, controller APIs that don't require authentication, and back-door netconf access, the leading platforms Floodlight and OpenDaylight, are ripe for attack.\n\nAnd in this session, using a new toolkit that I developed, I'll demonstrate by showing you how to locate and identify these controllers, impersonate switches to DoS them, and engage their wide-open APIs and backdoors to map the network, locate targets, and control access to the network...even hide from sensors.  But all is not lost, because I'll show how to protect them too.  Because dream or nightmare, SDN can make a difference in the real world if we just protect it right.",
    "plaintextTitle": "Abusing Software Defined Networks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Pickett-Abusing-Software-Defined-Networks-tool-sdn-toolkit_v1.01_openflow.tar",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-source.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Pickett-Abusing-Software-Defined-Networks-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Pickett-Abusing-Software-Defined-Networks.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_UCEAgtvtMo"
      }
    ],
    "youtubeDescription": "By Gregory Pickett\n\n\"Software Defined Networking (SDN) transfers all forwarding decisions to a single controller and provides the network with the same degree of control and flexibility as the cloud.  And, with all the major vendors onboard, it will soon be supporting networks everywhere. But, current implementations are full of weaknesses that could easily turn this utopian dream of the future into a nightmare and leave networks world-wide exposed.\n\nWith clear-text wire protocol implementations, little support for switch TLS, no authentication for nodes, poorly conceived rate-limiting features in the controllers, controller APIs that don't require authentication, and back-door netconf access, the leading platforms Floodlight and OpenDaylight, are ripe for attack.\n\nAnd in this session, using a new toolkit that I developed, I'll demonstrate by showing you how to locate and identify these controllers, impersonate switches to DoS them, and engage their wide-open APIs and backdoors to map the network, locate targets, and control access to the network...even hide from sensors.  But all is not lost, because I'll show how to protect them too.  Because dream or nightmare, SDN can make a difference in the real world if we just protect it right.\""
  },
  "Kovah": {
    "author": "Butterworth",
    "description": "In 2013, MITRE released Copernicus 1, a best-effort system to capture a raw dump of the BIOS and whether it appears to be possible for an attacker to write to it. In 2014, we released Copernicus 2 to combat the ability of an attacker to subvert not just Copernicus 1, but all other BIOS capture systems. While these free tools are a good way to get a copy of your BIOS, analyzing it to detect malicious changes is still an open problem in need of further investigation before defenders can feel confident that they have un-infected BIOS. You can't just compare the MD5s from two BIOS dumps and get a valid comparison. This is a problem that leads to firmware-level malware going under-reported and under-analyzed due to not enough people with the background to jump into this area.\n\nIn this presentation, we will assume that you have a suspected badBIOS dumped by Copernicus that you'd like to determine the integrity and authenticity of. We will perform a breadth-first discussion of the topics such as port IO, memory-mapped IO, PCI, SMM, UEFI, and others that you need to become more familiar with in order to effectively analyze modern BIOSes. We will especially focus on how UEFI's removal of security through obscurity is a double edged sword which helps both attackers and defenders analyze BIOSes for attacks or integrity checks. This talk will serve as a gateway for people with existing reverse engineering knowledge to start analyzing modern PC firmware.",
    "plaintextTitle": "Analyzing UEFI BIOSes from Attacker & Defender Viewpoints",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Kovah-Analyzing-UEFI-BIOSes-From-Attacker-And-Defender-Viewpoints.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      }
    ]
  },
  "Arora": {
    "author": "Naropanth",
    "description": "Android is a pliable environment bent into different shapes by different OEMs. While Android offers several security mechanisms at the framework and at the application levels, there's little it offers to an OEM that customizes Android. We have seen vulnerabilities in Android stemming out of excess file permissions, processes left running as root or system after a debug cycle, privileged security capabilities in an attempt to avoid setuid files, and so on. While there are tools to run partial checks at either the Android framework level or at the Linux layer, we do not have a powerful tool that can scan for platform level vulnerabilities. We announce our tool called Iron Crow that can greatly benefit Android BSP developers and OEMs to catch vulnerabilities of this nature - thereby protecting end users, improving the security of Android, and also protect themselves from media reprimand.",
    "plaintextTitle": "Android Kernel and OS Security Assessment with Iron Crow",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=gEV2dKeeqds"
      }
    ],
    "youtubeDescription": "By Akhil Arora and Sumanth Naropanth\n\nAndroid is a pliable environment bent into different shapes by different OEMs. While Android offers several security mechanisms at the framework and at the application levels, there's little it offers to an OEM that customizes Android. We have seen vulnerabilities in Android stemming out of excess file permissions, processes left running as root or system after a debug cycle, privileged security capabilities in an attempt to avoid setuid files, and so on. While there are tools to run partial checks at either the Android framework level or at the Linux layer, we do not have a powerful tool that can scan for platform level vulnerabilities. We announce our tool called Iron Crow that can greatly benefit Android BSP developers and OEMs to catch vulnerabilities of this nature - thereby protecting end users, improving the security of Android, and also protect themselves from media reprimand."
  },
  "Abbasi": {
    "author": "Wetzels",
    "description": "APTs and government-supported attackers use a broad arsenal of techniques to avoid having their exploits detected by IDSes. Signature Based IDSes are not efficient against nation-state-sponsored attackers which use custom shellcode encoders in an exploit. Emulation Based NIDSes (EBNIDS) have been proposed as a solution to mitigate such attacks. EBNISes detect a suspicious network stream (pre-processing) and after converting them to emulate-able byte sequences run it in an instrumented environment (Emulation), finally matching the behavior with certain heuristics (Heuristics Detection). In this talk, we will present novel ways that an APT might use to circumvente the Pre-Processing, Emulation and Heuristic Detection steps of EBNIDSes by employing a wide range of evasion techniques.",
    "plaintextTitle": "APTs Way: Evading Your EBNIDS",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Abbasi-APTs-Way-Evading-Your-EBNIDS-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Abbasi-APTs-Way-Evading-Your-EBNIDS.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=1DL2jnCFXsw"
      }
    ],
    "youtubeDescription": "By Ali Abbasi and Jos Wetzels\n\nAPTs and government-supported attackers use a broad arsenal of techniques to avoid having their exploits detected by IDSes. Signature Based IDSes are not efficient against nation-state-sponsored attackers which use custom shellcode encoders in an exploit. Emulation Based NIDSes (EBNIDS) have been proposed as a solution to mitigate such attacks. EBNISes detect a suspicious network stream (pre-processing) and after converting them to emulate-able byte sequences run it in an instrumented environment (Emulation), finally matching the behavior with certain heuristics (Heuristics Detection). In this talk, we will present novel ways that an APT might use to circumvente the Pre-Processing, Emulation and Heuristic Detection steps of EBNIDSes by employing a wide range of evasion techniques."
  },
  "Kedmi": {
    "author": "",
    "description": "Android is the most prevalent Linux-based mobile Operating System in the market today. Many features of the platform security (such as stack protection, key generation, etc.) are based on values provided by the Linux Pseudorandom Number Generator (LPRNG) and weaknesses in the LPRNG could therefore directly affect platform security. Much literature has been published previously investigating and detailing such weaknesses in the LPRNG. We build upon this prior work and show that - given a leak of a random value extracted from the LPRNG - a practical, inexpensive attack against the LPRNG internal state in early boot is feasible. Furthermore, the version of the Linux kernel vulnerable to such an attack is used in the majority of Android-based mobile devices in circulation. We also present two real-world exploitation vectors that could be enabled by such an attack. Finally, we mention current mitigations and highlight lessons that can be learned in respect to the design and use of future PRNGs for security features on embedded platforms.",
    "plaintextTitle": "Attacking the Linux PRNG on Android: Weaknesses in Seeding of Entropic Pools and Low Boot-Time Entropy",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Kedmi-Attacking-The-Linux-PRNG-On-Android-Weaknesses-In-Seeding-Of-Entropic-Pools-And-Low-Boot-Time-Entropy-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Kedmi-Attacking-The-Linux-PRNG-On-Android-Weaknesses-In-Seeding-Of-Entropic-Pools-And-Low-Boot-Time-Entropy.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      }
    ]
  },
  "Perez-Etchegoyen": {
    "author": "Vandevanter",
    "description": "It is well known there is a race going on in the \"Big Data\" arena (take a drink for even thinking about the \"Internet of Things\"). One of the stronger competitors in the \"Big Data\" market is Real-Time, In-Memory Platforms. An interesting thing about this platform and, the one we will talk about specifically, is that it blends everything to increase performance. The database tables, webserver engine, webserver code, authorization, analytics engine, libraries, etc. are all optimized to, if possible, never touch the disk.   Surprisingly, this causes a perspective shift for the web and database application threat landscape and how security professionals should address it. For example:  The resources are massive enough that the Database can store all previous versions of the table. We will introduce a new SQL Injection attack vector that abuses a \"TIME TRAVEL\" feature, providing access to previously deleted data.The Web Application code is stored in the database and not on the filesystem! Or to put it another way, web application code is executed though a web server engine by retrieving the code directly from the database. We will present Server-Side Javascript exploits performed using SQL queries.The Database is enhanced with special libraries to support advanced analytics and statistical features, such as integration with the R programming environment. We will demonstrate how, if implemented insecurely, this could lead to exploits \"written in R.\"The Web Application database queries are typically run in the context of the current users session. In other words, no database credentials are stored in the web application backend code. We will show how an attacker may need to resort to Social Engineering as a critical component of SQL Injection.  In this talk, we will explore how an attacker might blend old attack vectors to obtain the same or novel goals in the industry-leading Real-Time, In-Memory platform: SAP HANA. We will present live demos of new vulnerabilities discovered by the Onapsis Research Labs team, as well as ways to ensure your platform is protected.   Furthermore, we will present a reference framework for professionals that need to assess the security of these unique platforms, as well as sample vulnerable applications for developers to understand how to avoid common pitfalls that would introduce security risks.   Basic understanding of Web Application and Database Security concepts is recommended to get the most out of this session.",
    "plaintextTitle": "Blended Web and Database Attacks on Real-Time, In-Memory Platforms",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=zpr6fMoEIck"
      }
    ],
    "youtubeDescription": "By Juan Perez-Etchegoyen and Willis Vandevanter\n\n\"It is well known there is a race going on in the \"\"Big Data\"\" arena (take a drink for even thinking about the \"\"Internet of Things\"\"). One of the stronger competitors in the \"\"Big Data\"\" market is Real-Time, In-Memory Platforms. An interesting thing about this platform and, the one we will talk about specifically, is that it blends everything to increase performance. The database tables, webserver engine, webserver code, authorization, analytics engine, libraries, etc. are all optimized to, if possible, never touch the disk. \n\nSurprisingly, this causes a perspective shift for the web and database application threat landscape and how security professionals should address it. For example: \n\n - The resources are massive enough that the Database can store all previous versions of the table. We will introduce a new SQL Injection attack vector that abuses a \"\"TIME TRAVEL\"\" feature, providing access to previously deleted data.\n - The Web Application code is stored in the database and not on the filesystem! Or to put it another way, web application code is executed though a web server engine by retrieving the code directly from the database. We will present Server-Side Javascript exploits performed using SQL queries.\n - The Database is enhanced with special libraries to support advanced analytics and statistical features, such as integration with the R programming environment. We will demonstrate how, if implemented insecurely, this could lead to exploits \"\"written in R.\"\"   \n - The Web Application database queries are typically run in the context of the current users session. In other words, no database credentials are stored in the web application backend code. We will show how an attacker may need to resort to Social Engineering as a critical component of SQL Injection.\n\nIn this talk, we will explore how an attacker might blend old attack vectors to obtain the same or novel goals in the industry-leading Real-Time, In-Memory platform: SAP HANA. We will present live demos of new vulnerabilities discovered by the Onapsis Research Labs team, as well as ways to ensure your platform is protected. \n\nFurthermore, we will present a reference framework for professionals that need to assess the security of these unique platforms, as well as sample vulnerable applications for developers to understand how to avoid common pitfalls that would introduce security risks.   \n\nBasic understanding of Web Application and Database Security concepts is recommended to get the most out of this session. \""
  },
  "Peterson": {
    "author": "",
    "description": "Amazon Web Services (AWS) is billed as an amazingly secure and resilient cloud services provider, but what is the reality once you look past that pristine environment and the manicured forests give way to dark jungle as you start to migrate existing applications to the AWS Cloud or design new ones for AWS exclusively?\n\nIn this talk, we will explore Amazon Web Services and the advent of \"full stack\" vulnerabilities and how they create new security pitfalls when migrating to and operating in an AWS world. From the unexpected to the unintended, many examples will be shared along side new techniques showing how you have likely already exposed your applications and infrastructure to attack through misunderstanding, ignorance, or bad actors. \n\nTo address these challenges, this presentation will also reveal and demonstrate a free tool we have designed to assess AWS applications, map out the interactions between infrastructure and code, and help individuals and organizations get clarity and bring a machete to the Amazon Cloud.",
    "plaintextTitle": "Bringing a Machete to the Amazon",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=JTOWxi17k-w"
      }
    ],
    "youtubeDescription": "By Erik Peterson\n\n\"Amazon Web Services (AWS) is billed as an amazingly secure and resilient cloud services provider, but what is the reality once you look past that pristine environment and the manicured forests give way to dark jungle as you start to migrate existing applications to the AWS Cloud or design new ones for AWS exclusively?\n\nIn this talk, we will explore Amazon Web Services and the advent of \"\"full stack\"\" vulnerabilities and how they create new security pitfalls when migrating to and operating in an AWS world. From the unexpected to the unintended, many examples will be shared along side new techniques showing how you have likely already exposed your applications and infrastructure to attack through misunderstanding, ignorance, or bad actors. \n\nTo address these challenges, this presentation will also reveal and demonstrate a free tool we have designed to assess AWS applications, map out the interactions between infrastructure and code, and help individuals and organizations get clarity and bring a machete to the Amazon Cloud.\""
  },
  "Selvi": {
    "author": "",
    "description": "For the last few years, some different attacks against SSL/TLS have been released. Some of them based on cryptography or protocol weaknesses such as BEAST, CRIME, etc, and some others, such as SSLStrip, based on rewriting https links into http ones and keep user communications always in HTTP. In order to protect users against SSLStrip attacks, a new protection called HTTP Strict Transport Security (HSTS) has been developed and it's currently supported by most widely used browsers.\n\nHowever, under certain circumstances, an attacker could exploit an inter-operation vulnerability in order to bypass HTTP Strict Transport Security protection and use other well-known attack techniques such as SSLStrip. In this presentation, we review the HSTS strengths and weaknesses, and we go in-depth on this inter-operation vulnerability and how it could be exploited.",
    "plaintextTitle": "Bypassing HTTP Strict Transport Security",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Selvi-Bypassing-HTTP-Strict-Transport-Security-tool-delorean.zip",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-source.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Selvi-Bypassing-HTTP-Strict-Transport-Security-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Selvi-Bypassing-HTTP-Strict-Transport-Security.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=eLhb4jZuv6M"
      }
    ],
    "youtubeDescription": "By Jose Selvi\n\n\"For the last few years, some different attacks against SSL/TLS have been released. Some of them based on cryptography or protocol weaknesses such as BEAST, CRIME, etc, and some others, such as SSLStrip, based on rewriting https links into http ones and keep user communications always in HTTP. In order to protect users against SSLStrip attacks, a new protection called HTTP Strict Transport Security (HSTS) has been developed and it's currently supported by most widely used browsers.\n\nHowever, under certain circumstances, an attacker could exploit an inter-operation vulnerability in order to bypass HTTP Strict Transport Security protection and use other well-known attack techniques such as SSLStrip. In this presentation, we review the HSTS strengths and weaknesses, and we go in-depth on this inter-operation vulnerability and how it could be exploited.\""
  },
  "Andrivet": {
    "author": "",
    "description": "The C++ language and its siblings like C and Objective-C are ones of the most used languages today. Significant portions of operating systems like Windows, Linux, Mac OS X, iOS and Android are written in C and C++. There is however a fact that is little known about C++: it contains a Turing-complete sub-language executed at compile time. It is called C++ template metaprogramming (not to be confounded with the C preprocessor and macros) and is close to functional programming.\n\nDuring this talk, I will show how to use this language to generate, at compile time, obfuscated code without using any external tool and without modifying the compiler. The techniques presented rely only on C++11, as standardized by ISO. I will also show how to introduce some form of randomness to generate polymorphic code and I will give some concrete examples like the encryption of strings literals or the obfuscation of calls using finite state machines generated at compile time.\n\nAll the examples presented will be released under GitHub.",
    "plaintextTitle": "C++11 Metaprogramming Applied to Software Obfuscation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Andrivet-C-plus-plus11-Metaprogramming-Applied-To-software-Obfuscation-tool.zip",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-source.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Andrivet-C-plus-plus11-Metaprogramming-Applied-To-software-Obfuscation-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Andrivet-C-plus-plus11-Metaprogramming-Applied-To-software-Obfuscation.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Z-QYa6dSc-o"
      }
    ],
    "youtubeDescription": "By Sebastien Andrivet\n\n\"The C++ language and its siblings like C and Objective-C are ones of the most used languages today. Significant portions of operating systems like Windows, Linux, Mac OS X, iOS and Android are written in C and C++. There is however a fact that is little known about C++: it contains a Turing-complete sub-language executed at compile time. It is called C++ template metaprogramming (not to be confounded with the C preprocessor and macros) and is close to functional programming.\n\nDuring this talk, I will show how to use this language to generate, at compile time, obfuscated code without using any external tool and without modifying the compiler. The techniques presented rely only on C++11, as standardized by ISO. I will also show how to introduce some form of randomness to generate polymorphic code and I will give some concrete examples like the encryption of strings literals or the obfuscation of calls using finite state machines generated at compile time.\n\nAll the examples presented will be released under GitHub.\""
  },
  "Pereira": {
    "author": "",
    "description": "I'll expose USB vulnerability in some vendor's customization of the Android system, I'll also target that vulnerability in a specific vendor, together with a proof of concept  of  the  attack  and  practical  scenario  environment,  and  I will  unveil  the  implications of such vulnerability. Culminating in the flashing of a compromised boot partition, and root access.",
    "plaintextTitle": "Charge Your Device with the Latest Malware",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Pereira-Charge-Your-Device-With-The-Latest-Malware.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=6CPuD_nWBLw"
      }
    ],
    "youtubeDescription": "By André Pereira\n\nI'll expose USB vulnerability in some vendor's customization of the Android system, I'll also target that vulnerability in a specific vendor, together with a proof of concept  of  the  attack  and  practical  scenario  environment,  and  I will  unveil  the  implications of such vulnerability. Culminating in the flashing of a compromised boot partition, and root access."
  },
  "Sikorski": {
    "author": "Honig",
    "description": "Successful dynamic analysis of malware is dependent on your ability to \"Fake the Network.\" Tricking malware into thinking it is connected to the Internet allows you to efficiently capture network signatures. FakeNet is a free and easy-to-use network simulation tool designed for Windows. In this workshop, we will publically release FakeNet 2.0 and teach you how it operates. \n\nAttendees will learn the following practical skills:\n\n-\tUse FakeNet to mimic common protocols like HTTP, SSL, and DNS\n-\tQuickly reconfigure FakeNet to have success defeating malware\n-\tHow FakeNet uses Windows Internals\n-\tUse process tracking, which allows you to quickly identify the process responsible for the malicious network activity\n-\tHow FakeNet automatically logs network traffic to PCAP without the need for additional tools \n\nBring your Windows malware analysis Virtual Machine or we'll provide one for you. The hands-on section of this workshop forces you to analyze real world malware samples to tease out network-based malware signatures. These challenges start at a basic level and progress until you dive into how to extend FakeNet by writing a Python Extension for a custom malware protocol.",
    "plaintextTitle": "Counterfeiting the Pipes with FakeNet 2.0",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Sikorski-Counterfeiting-The-Pipes-With-FakeNet-2-0.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=IxpBin6kMD8"
      }
    ],
    "youtubeDescription": "By Michael Sikorski and Andrew Honig\n\n\"Successful dynamic analysis of malware is dependent on your ability to \"\"Fake the Network.\"\" Tricking malware into thinking it is connected to the Internet allows you to efficiently capture network signatures. FakeNet is a free and easy-to-use network simulation tool designed for Windows. In this workshop, we will publically release FakeNet 2.0 and teach you how it operates. \n\nAttendees will learn the following practical skills:\n\n- Use FakeNet to mimic common protocols like HTTP, SSL, and DNS\n- Quickly reconfigure FakeNet to have success defeating malware\n- How FakeNet uses Windows Internals\n- Use process tracking, which allows you to quickly identify the process responsible for the malicious network activity\n- How FakeNet automatically logs network traffic to PCAP without the need for additional tools \n\nBring your Windows malware analysis Virtual Machine or we'll provide one for you. The hands-on section of this workshop forces you to analyze real world malware samples to tease out network-based malware signatures. These challenges start at a basic level and progress until you dive into how to extend FakeNet by writing a Python Extension for a custom malware protocol.\""
  },
  "Schumilo": {
    "author": "Spenneberg",
    "description": "The Universal Serial Bus (USB) has become the standard interface for interconnecting computers with peripheral hardware today. USB is used to access human interface devices (HID) like keyboards and mice, storage devices like USB flash sticks or external harddrives but also webcams, soundcards, network cards (NIC), wireless cards, and bluetooth sticks etc. While the most common devices like keyboards, mice, and storage devices are handled via generic drivers by the kernel on the host system, many devices require specific drivers. Using the facedancer device created by Travis Goodspeed and Sergey Bratus, many implementation bugs in the generic drivers have been found. Systematic analysis of the hardware specific drivers using fuzzing based on the facedancer device is almost impossible because of the enormous amount of different devices and drivers. The current Linux kernel supports 15,000 different vendor and product ids which are mapped to several hundred drivers. These drivers might behave differently depending on the vendor/product id presented. One basic USB simulated test using the facedancer requires 2-7 seconds execution time and can only be parallized using several facedancer devices and as many physical hosts.\n\nTherefore, I developed the vUSBf framework. This framework implements a virtual USB fuzzer based on KVM and the USB redirection protocol in QEMU. It virtualizes the target systems and using parallization we are able to execute up to 150 tests/second on a single Intel system with 24 cores. Using the built-in cluster protocol, we are able to arbitrarily scale this using additional systems. \n\nThe vUSBf framework allows the dynamic definition of several million testcases using a simple XML configuration. Each test is identified using a unique test id and thus is reproducible.\n\nWe are triggering and detecting the following bugs in both Enterprise Linux kernels and the most current Linux kernels:\n\n - Null-pointer dereferences\n - Kernel paging requests\n - Kernel panic\n - Bad page state\n - Segfault\n\nWhile the actual exploitation of these bugs still needs to be tested and their severity to be determined, the vast amount of bugs we are finding, is frightening. About 0.3% of the tests trigger one of the above listed exceptions in the Linux kernels depending on the kernel used and the amount of drivers included.\n\nTo validate the results some of the bugs were reproduced using the facedancer and physical hosts. This proves that these bugs might be reproduced using specialized hardware which than can attack, exploit, and maybe compromise the target system.\n\nThe vUSBf framework uses several emulators for the fuzzing of different devices and stages of the usb connection. Further emulators can be added via a simple API and are currently in development. Additionally, first tests have been executed using Microsoft Windows as a target.\n\nThe framework will be released as Open Source at the Black Hat Conference.",
    "plaintextTitle": "Don't Trust Your USB! How to Find Bugs in USB Device Drivers",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Schumilo-Dont-Trust-Your-USB-How-To-Find-Bugs-In-USB-Device-Drivers-toolk-vusbf.tar.gz",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-source.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Schumilo-Dont-Trust-Your-USB-How-To-Find-Bugs-In-USB-Device-Drivers-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Schumilo-Dont-Trust-Your-USB-How-To-Find-Bugs-In-USB-Device-Drivers.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=OAbzN8k6Am4"
      }
    ],
    "youtubeDescription": "By Sergej Schumilo, Ralf Spenneberg, and Hendrik Schwartke\n\n\"The Universal Serial Bus (USB) has become the standard interface for interconnecting computers with peripheral hardware today. USB is used to access human interface devices (HID) like keyboards and mice, storage devices like USB flash sticks or external harddrives but also webcams, soundcards, network cards (NIC), wireless cards, and bluetooth sticks etc. While the most common devices like keyboards, mice, and storage devices are handled via generic drivers by the kernel on the host system, many devices require specific drivers. Using the facedancer device created by Travis Goodspeed and Sergey Bratus, many implementation bugs in the generic drivers have been found. Systematic analysis of the hardware specific drivers using fuzzing based on the facedancer device is almost impossible because of the enormous amount of different devices and drivers. The current Linux kernel supports 15,000 different vendor and product ids which are mapped to several hundred drivers. These drivers might behave differently depending on the vendor/product id presented. One basic USB simulated test using the facedancer requires 2-7 seconds execution time and can only be parallized using several facedancer devices and as many physical hosts.\n\nTherefore, I developed the vUSBf framework. This framework implements a virtual USB fuzzer based on KVM and the USB redirection protocol in QEMU. It virtualizes the target systems and using parallization we are able to execute up to 150 tests/second on a single Intel system with 24 cores. Using the built-in cluster protocol, we are able to arbitrarily scale this using additional systems. \n\nThe vUSBf framework allows the dynamic definition of several million testcases using a simple XML configuration. Each test is identified using a unique test id and thus is reproducible.\n\nWe are triggering and detecting the following bugs in both Enterprise Linux kernels and the most current Linux kernels:\n\n - Null-pointer dereferences\n - Kernel paging requests\n - Kernel panic\n - Bad page state\n - Segfault\n\nWhile the actual exploitation of these bugs still needs to be tested and their severity to be determined, the vast amount of bugs we are finding, is frightening. About 0.3% of the tests trigger one of the above listed exceptions in the Linux kernels depending on the kernel used and the amount of drivers included.\n\nTo validate the results some of the bugs were reproduced using the facedancer and physical hosts. This proves that these bugs might be reproduced using specialized hardware which than can attack, exploit, and maybe compromise the target system.\n\nThe vUSBf framework uses several emulators for the fuzzing of different devices and stages of the usb connection. Further emulators can be added via a simple API and are currently in development. Additionally, first tests have been executed using Microsoft Windows as a target.\n\nThe framework will be released as Open Source at the Black Hat Conference.\""
  },
  "O'Connor": {
    "author": "Dobbe",
    "description": "The Internet is no longer trustworthy, having been compromised by bad actors across the globe. Current proposals to work around a compromised Internet rely upon encrypted transport links, mesh networks, or harassing users for being unable to use GPG safely. Each of these strategies fails in different ways that inevitably lead to information leakage or - in the extreme case - death. Endrun, by contrast, takes NASA's Disruption-Tolerant Networking project from a laboratory experiment to a functional system that supports user-friendly encryption in hostile environments. Endrun embraces the nearly-unlimited throughput of a disk-laden station wagon and creates a reliable, eventually-consistent communications system ideal for activists, refugees, and trolls.",
    "plaintextTitle": "Endrun - Secure Digital Communications for Our Modern Dystopia",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-OConnor-Endrun-Secure-Digital-Communications-For-Our-Modern-Dystopia-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-OConnor-Endrun-Secure-Digital-Communications-For-Our-Modern-Dystopia.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=NxKpOEyLFxY"
      }
    ],
    "youtubeDescription": "By Brendan O'Connor and Grant Dobbe\n\nThe Internet is no longer trustworthy, having been compromised by bad actors across the globe. Current proposals to work around a compromised Internet rely upon encrypted transport links, mesh networks, or harassing users for being unable to use GPG safely. Each of these strategies fails in different ways that inevitably lead to information leakage or - in the extreme case - death. Endrun, by contrast, takes NASA's Disruption-Tolerant Networking project from a laboratory experiment to a functional system that supports user-friendly encryption in hostile environments. Endrun embraces the nearly-unlimited throughput of a disk-laden station wagon and creates a reliable, eventually-consistent communications system ideal for activists, refugees, and trolls."
  },
  "Tsai": {
    "author": "",
    "description": "Attacking Mac OS X has become a trend as we see more and more malware with advanced attack techniques on Mac OS X. In order to gain persistent control and avoid detection, malware have started to adopt rootkit tricks.We will quickly review existing rootkit on Mac OS X, including both user and kernel mode, and approaches to detect them. In the major part of the presentation, we will disclose several new and advanced rootkit techniques by digging into more kernel objects and data structures. And we will demonstrate how to evade existing detection and memory forensics tools, such as Volatility.Not only hiding things, tricks to gaining permission will also be discussed. It is not necessary to be root to get into kernel. Also, we will introduce techniques to start rootkit, special ways to load kernel modules, and anti-tracing techniques.The techniques we introduced have been tested on Mac OS X 10.9. There are new security features to verify 3rd party kernel modules in OS X 10.9, and we will tell you how we bypass.",
    "plaintextTitle": "You Can't See Me: A Mac OS X Rootkit Uses the Tricks You Haven't Known Yet ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Tsai/WP-Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Tsai/Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=LQ9QKJYcq5A"
      }
    ],
    "youtubeDescription": ""
  },
  "Costin": {
    "author": "Zaddach",
    "description": "As embedded systems are more than ever present in our society, their security is becoming an increasingly important issue. However, with many recent analysis of individual firmware images, embedded systems acquired a reputation of being very insecure. However, we still lack a global understanding of embedded systems security as well as the tools and techniques needed to support such general claims.\n\nIn this talk, we present the first public, large scale, analysis of firmware images: we unpacked 32K firmware images into 1.7M individual files, which we then analyze. We leverage this large scale analysis to bring new insights and outline several open challenges when performing such experiments. We also show the main benefits of looking at many different devices at the same time and of linking our results with other large scale datasets, such as the ZMap SSL collection. We discuss results that would not have been possible to achieve without such a wide-scale analysis.\n\nIn summary, without performing sophisticated static analysis, we discovered a total of 38 previously unknown vulnerabilities in over 693 firmware images. Moreover, by correlating similar files inside apparently unrelated firmware images, we were able to extend some of those vulnerabilities to over 123 different products. We also confirmed that some of these vulnerabilities altogether are affecting at least 140K devices accessible on the public Internet.\n\nWe believe that this project, which we plan to provide as a service on the long term, will help shed some light on the security of embedded devices.",
    "plaintextTitle": "Firmware.RE: Firmware Unpacking, Analysis and Vulnerability-Discovery as a Service",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Zaddach-Firmware-re-Firmware-Unpacking-Analysis-And-Vulnerability-Discovery-As-A-Service-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Zaddach-Firmware-re-Firmware-Unpacking-Analysis-And-Vulnerability-Discovery-As-A-Service.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=bfH_Ah5X9v8"
      }
    ],
    "youtubeDescription": "By Jonas Zaddach\n\n\"As embedded systems are more than ever present in our society, their security is becoming an increasingly important issue. However, with many recent analysis of individual firmware images, embedded systems acquired a reputation of being very insecure. However, we still lack a global understanding of embedded systems security as well as the tools and techniques needed to support such general claims.\n\nIn this talk, we present the first public, large scale, analysis of firmware images: we unpacked 32K firmware images into 1.7M individual files, which we then analyze. We leverage this large scale analysis to bring new insights and outline several open challenges when performing such experiments. We also show the main benefits of looking at many different devices at the same time and of linking our results with other large scale datasets, such as the ZMap SSL collection. We discuss results that would not have been possible to achieve without such a wide-scale analysis.\n\nIn summary, without performing sophisticated static analysis, we discovered a total of 38 previously unknown vulnerabilities in over 693 firmware images. Moreover, by correlating similar files inside apparently unrelated firmware images, we were able to extend some of those vulnerabilities to over 123 different products. We also confirmed that some of these vulnerabilities altogether are affecting at least 140K devices accessible on the public Internet.\n\nWe believe that this project, which we plan to provide as a service on the long term, will help shed some light on the security of embedded devices.\""
  },
  "Chubachi": {
    "author": "Aiko",
    "description": "Recently, a malware is constantly growing which forces malware analysts into hard work. An automated malware analysis can help security engineers, but some malware cannot be run in a sandbox environment. For example, sophisticated malware such as the Citadel and Zeus/GameOver are armed with anti-sandbox techniques to prevent running except on an infected host. These malware detect the execution environment and do not engage in malicious behavior when the current host differs from the infected host.\n\nIn this presentation, we present an automatically disarmament system for armed malware with anti-sandboxing. The system targets 1) Host-fingerprinting malware like citadel, 2) armed malware with general anti-sandboxing for automated sandbox analyzer. Disarmament approach focuses on exit reasons and exit before activity in malware execution.\n\nWe developed CPU emulator-based disarmament system with instrumentation. The system suggests a suitable environment for dynamic analysis for individual malware. We will provide statistics of evasive malware in the real world. We will report the result of analysis of large-scale samples.",
    "plaintextTitle": "SLIME: Automated Anti-Sandboxing Disarmament System",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Chubachi-Slime-Automated-Anti-Sandboxing-Disarmament-System.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=kDhMe__v918"
      }
    ],
    "youtubeDescription": "by Yosuke Chubachi &  Kenji Aiko\n\nRecently, a malware is constantly growing which forces malware analysts into hard work. An automated malware analysis can help security engineers, but some malware cannot be run in a sandbox environment. For example, sophisticated malware such as the Citadel and Zeus/GameOver are armed with anti-sandbox techniques to prevent running except on an infected host. These malware detect the execution environment and do not engage in malicious behavior when the current host differs from the infected host. In this presentation, we present an automatically disarmament system for armed malware with anti-sandboxing. The system targets 1) Host-fingerprinting malware like citadel, 2) armed malware with general anti-sandboxing for automated sandbox analyzer. Disarmament approach focuses on exit reasons and exit before activity in malware execution. We developed CPU emulator-based disarmament system with instrumentation. The system suggests a suitable environment for dynamic analysis for individual malware. We will provide statistics of evasive malware in the real world. We will report the result of analysis of large-scale samples."
  },
  "Nakibly": {
    "author": "Michalevsky",
    "description": "We show that the gyroscopes found on most smart phones are sensitive to measure acoustic signals in the vicinity of the phone. Since iOS and Android require no special permissions to access the gyro, our research shows that apps and active websites that cannot access the microphone can nevertheless eavesdrop on speech in the vicinity of the phone. We have validated our findings on numerous phones and tablets with different gyro models. This is a joint work with Dan Boneh of Stanford University.",
    "plaintextTitle": "Gyrophone: Eavesdropping Using a Gyroscope",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Nakibly-Gyrophone-Eavesdropping-Using-A-Gyroscope-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Nakibly-Gyrophone-Eavesdropping-Using-A-Gyroscope.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=PVpBrum-H0Y"
      }
    ],
    "youtubeDescription": "By Gabi Nakibly and Yan Michalevsky\n\nWe show that the gyroscopes found on most smart phones are sensitive to measure acoustic signals in the vicinity of the phone. Since iOS and Android require no special permissions to access the gyro, our research shows that apps and active websites that cannot access the microphone can nevertheless eavesdrop on speech in the vicinity of the phone. We have validated our findings on numerous phones and tablets with different gyro models. This is a joint work with Dan Boneh of Stanford University."
  },
  "Osipov": {
    "author": "Kochetova",
    "description": "At all times there have been bad guys, who tried to steal money. ATM machines containing vast amounts of money have always been attractive targets. Until recently, criminals were only using physical weaknesses. Skimmers and shimmers for stealing magstripe-tracking data, fake pin pads and cameras for stealing pin codes, and even fake ATMs were created.\n\nTime passed and ATM software started to unify. Where there is unification, there are viruses. Trojan.Skimmer.*, Ploutus and other named or unnamed trojans.\n\nAnd what did we see on the public scene? Vendors started discussing the skimmers problem only after they were detected in the wild. As you remember, Barnaby Jack presented \"Jackpotting Automated Teller Machines\" at Black Hat USA 2010. He used some vulnerabilities in ATM software. He showed that malware, was injected into the OS of the ATM via bootable flash drive or via remote management TCP port. \n\nBarnaby Jack's work was based on assumptions that most vulnerabilities were concentrated in the host machine and that we can and should reuse software made by ATM vendors. And that's quite true, but... antiviruses, locked firmware upgrades, blocked USB connectors, and encrypted hard drives can mitigate such risks. But, what about connecting not to the host machine, but to devices themselves? What countermeasures exist, when we will try to impersonate ourselves as an ATM host? Hacking ATMs with small computer like Raspberry Pi should be impossible, but it isn't.\n\nThe point of our presentation is to draw attention to the problem, which has existed for quite a long time. The problem is usage of common interfaces (like RS232 or USB) and protocols of communication from host machine to such devices as card readers, pin pads and/or dispenser units.",
    "plaintextTitle": "Hack Your ATM with Friend's Raspberry.Py",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=q5tQWe6YsLM"
      }
    ],
    "youtubeDescription": "By Alexey Osipov and Olga Kochetova\n\n\"At all times there have been bad guys, who tried to steal money. ATM machines containing vast amounts of money have always been attractive targets. Until recently, criminals were only using physical weaknesses. Skimmers and shimmers for stealing magstripe-tracking data, fake pin pads and cameras for stealing pin codes, and even fake ATMs were created.\n\nTime passed and ATM software started to unify. Where there is unification, there are viruses. Trojan.Skimmer.*, Ploutus and other named or unnamed trojans.\n\nAnd what did we see on the public scene? Vendors started discussing the skimmers problem only after they were detected in the wild. As you remember, Barnaby Jack presented \"\"Jackpotting Automated Teller Machines\"\" at Black Hat USA 2010. He used some vulnerabilities in ATM software. He showed that malware, was injected into the OS of the ATM via bootable flash drive or via remote management TCP port. \n\nBarnaby Jack's work was based on assumptions that most vulnerabilities were concentrated in the host machine and that we can and should reuse software made by ATM vendors. And that's quite true, but... antiviruses, locked firmware upgrades, blocked USB connectors, and encrypted hard drives can mitigate such risks. But, what about connecting not to the host machine, but to devices themselves? What countermeasures exist, when we will try to impersonate ourselves as an ATM host? Hacking ATMs with small computer like Raspberry Pi should be impossible, but it isn't.\n\nThe point of our presentation is to draw attention to the problem, which has existed for quite a long time. The problem is usage of common interfaces (like RS232 or USB) and protocols of communication from host machine to such devices as card readers, pin pads and/or dispenser units.\""
  },
  "Apvrille": {
    "author": "Albertini",
    "description": "Malware authors are always interested in concealing their goals to evade detection. \n\nWe have discovered a technique which enables them to hide whatever payload they wish in an Android package (APK). \n\nThe malicious payload is encrypted with AES, thus its reverse engineering does not give in any element. \n\nMoreover, contrary to general belief, it is actually possible to manipulate the output of encryption and have it look like, for instance, a chosen image. Thus, the encrypted malicious payload can be crafted to look like an absolutely genuine image (of Anakin Skywalker ;).\n\nWe demonstrate with a Proof of Concept application that the attack works on current Android platforms, and we also explain how it works and how the payload is crafted.\n\nThis talk is not (or only very little) about cryptography. Understanding file formats, that's the magic :).",
    "plaintextTitle": "Hide Android Applications in Images",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Apvrille-Hide-Android-Applications-In-Images-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Apvrille-Hide-Android-Applications-In-Images.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      }
    ]
  },
  "Soullie": {
    "author": "",
    "description": "There is a lot of talking about ICS, SCADA and such nowadays, but only few people have the opportunity to get their hands dirty and understand how it works. The goal of this workshop is to provide the knowledge required to start attacking Scada networks and PLCs, and give hands-on experience on real devices.\n \nIn this workshop, you will learn the specifics of performing a penetration test on industrial control systems, and especially on Programmable Logic Controllers (PLCs).  We will cover the main components and the commonly associated security flaws of industrial control systems, aka SCADA systems. We will discover how they work and how they communicate with the SCADA systems to learn the methods and tools you can use to p*wn them.\n\nThen, we will move on to real-world by attacking a Siemens S7-1200 PLC and a Schneider m340, which are two common PLCs.",
    "plaintextTitle": "Industrial Control Systems : Pentesting PLCs 101",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Soullie-Industrial-Control-Systems-Pentesting-PLCs-101.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=iGwm6-lyn2Y"
      }
    ],
    "youtubeDescription": "By Arnaud Soullie\n\n\"There is a lot of talking about ICS, SCADA and such nowadays, but only few people have the opportunity to get their hands dirty and understand how it works. The goal of this workshop is to provide the knowledge required to start attacking Scada networks and PLCs, and give hands-on experience on real devices.\n \nIn this workshop, you will learn the specifics of performing a penetration test on industrial control systems, and especially on Programmable Logic Controllers (PLCs).  We will cover the main components and the commonly associated security flaws of industrial control systems, aka SCADA systems. We will discover how they work and how they communicate with the SCADA systems to learn the methods and tools you can use to p*wn them.\n\nThen, we will move on to real-world by attacking a Siemens S7-1200 PLC and a Schneider m340, which are two common PLCs.\""
  },
  "Garcia-Illera": {
    "author": "Vazquez-Vidal",
    "description": "We all know that connected devices are uprising, and this enables more overall control over them. But what happens when that control is used against you? How can a device, which is supposed to make your life easier, be used against you? Does it really mean, when you read \"AES, Triple DES, RSA, etc...\" in a device specification, that it is really secure?\n\nWe will talk about a device that is present in all houses, a smart power meter. This model is being installed in all houses and buildings, and it's already present in the 65% of the \"paella\" country. We will show the process necessary to rip off any device, taking the meter as \"demo hardware,\" and the possibilities that this procedure could bring, including firmware and hardware reverse engineering.\n\nAs a small preview, these smart meters are capable of cutting down the power supply by receiving remote commands. Oh, and by default, they are not able to \"talk\" between them.",
    "plaintextTitle": "Lights Off! The Darkness of the Smart Meters",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Z_y_vjYtAWM"
      }
    ],
    "youtubeDescription": "By Alberto Garcia Illera and Javier Vazquez Vidal\n\n\"We all know that connected devices are uprising, and this enables more overall control over them. But what happens when that control is used against you? How can a device, which is supposed to make your life easier, be used against you? Does it really mean, when you read \"\"AES, Triple DES, RSA, etc...\"\" in a device specification, that it is really secure?\n\nWe will talk about a device that is present in all houses, a smart power meter. This model is being installed in all houses and buildings, and it's already present in the 65% of the \"\"paella\"\" country. We will show the process necessary to rip off any device, taking the meter as \"\"demo hardware,\"\" and the possibilities that this procedure could bring, including firmware and hardware reverse engineering.\n\nAs a small preview, these smart meters are capable of cutting down the power supply by receiving remote commands. Oh, and by default, they are not able to \"\"talk\"\" between them.\""
  },
  "Artenstein": {
    "author": "Revivo",
    "description": "Big Brother is watching your droid. His name is Binder.\n\nAs the only vehicle of IPC in Android, Binder is the system component that makes the operating system tick. A process running in a typical OS will hold dozens of handles to the system's hardware: hard disk, display adapter, network card, and many more. Android's unique architecture, on the contrary, means that a process will achieve the same tasks just by grabbing a file descriptor to the Binder device - greatly minimizing the attack surface against the kernel. As the god of IPC in Android, Binder controls an application's interaction with just about anything.\n\nFrom that perspective, it becomes immediately apparent that this system component is a prime target for any Android malware. By controlling any single link in the long chain which leads down from the Java APIs to the native Binder code, an attacker could stealthily implement a keylogger, set up VNC-like functionality, modify sensitive data in transit, and do many other evil deeds.\n\nIn this presentation, we will showcase a POC rootkit which provides a basis for all of the above, and more. We will also give a comprehensive overview of Binder at the lowest level. We'll talk about how the data transport buffers are actually constructed, what gets sent down to the kernel, and what comes back up. We believe this is an important contribution to the security community: Binder has simply not been researched enough.",
    "plaintextTitle": "Man in the Binder: He Who Controls IPC, Controls the Droid",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Artenstein-Man-In-The-Binder-He-Who-Controls-IPC-Controls-The-Droid-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Artenstein-Man-In-The-Binder-He-Who-Controls-IPC-Controls-The-Droid.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=O-UHvFjxwZ8"
      }
    ],
    "youtubeDescription": "By Nitay Artenstein and Idam Revivo\n\n\"Big Brother is watching your droid. His name is Binder.\n\nAs the only vehicle of IPC in Android, Binder is the system component that makes the operating system tick. A process running in a typical OS will hold dozens of handles to the system's hardware: hard disk, display adapter, network card, and many more. Android's unique architecture, on the contrary, means that a process will achieve the same tasks just by grabbing a file descriptor to the Binder device - greatly minimizing the attack surface against the kernel. As the god of IPC in Android, Binder controls an application's interaction with just about anything.\n\nFrom that perspective, it becomes immediately apparent that this system component is a prime target for any Android malware. By controlling any single link in the long chain which leads down from the Java APIs to the native Binder code, an attacker could stealthily implement a keylogger, set up VNC-like functionality, modify sensitive data in transit, and do many other evil deeds.\n\nIn this presentation, we will showcase a POC rootkit which provides a basis for all of the above, and more. We will also give a comprehensive overview of Binder at the lowest level. We'll talk about how the data transport buffers are actually constructed, what gets sent down to the kernel, and what comes back up. We believe this is an important contribution to the security community: Binder has simply not been researched enough.\""
  },
  "St-John": {
    "author": "Guigo",
    "description": "Cheaters are a growing problem in multiplayer gaming. As games become increasingly complex, the level of sophistication in cheat detection and anti-cheating strategy is forced to keep pace. While some developers spend the time to create their own protections, many have turned to external anti-cheat libraries. These tools are managed by a central server and offer an ideal target for attackers.  In this talk, we demonstrate a way to comprehensively bypass existing anti-cheat mechanisms and outline two practical attacks against one of the most popular anti-cheat engines, demonstrating the implications of a successful attack against anti-cheat software.",
    "plaintextTitle": "Next Level Cheating and Leveling Up Mitigations",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-StJohn-Next-Level-Cheating-And-Leveling-Up-Mitigations.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-StJohn-Next-Level-Cheating-And-Leveling-Up-Mitigations-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=N1kMyzWGHUg"
      }
    ],
    "youtubeDescription": "by Joel St. John &  Nicolas Guigo\n\nCheaters are a growing problem in multiplayer gaming. As games become increasingly complex, the level of sophistication in cheat detection and anti-cheating strategy is forced to keep pace. While some developers spend the time to create their own protections, many have turned to external anti-cheat libraries. These tools are managed by a central server and offer an ideal target for attackers. In this talk, we demonstrate a way to comprehensively bypass existing anti-cheat mechanisms and outline two practical attacks against one of the most popular anti-cheat engines, demonstrating the implications of a successful attack against anti-cheat software."
  },
  "Esparza": {
    "author": "",
    "description": "\"PDF Attack: A Journey From the Exploit Kit to the Shellcode\" is a workshop to show how to analyze obfuscated JavaScript code from an Exploit Kit page, extract the exploits used and analyze them. Nowadays, it is possible to use automated tools to extract URLs and binaries but it is also important to know how to do it manually to not to miss a detail. We will focus on PDF documents mostly, starting from a simple JavaScript Hello World document and ending with a real file used by a fresh Exploit Kit. This workshop will also include exercises to modify malicious PDF files and obfuscate them to try to bypass AV software, very useful in pentesting. The last version of peepdf (included in REMnux, BackTrack and Kali Linux) will be used to accomplish these tasks, so it means that this presentation covers the latest tricks used by cybercriminals like using new filters and encryption to make the analysis more difficult.",
    "plaintextTitle": "PDF Attack: A Journey From the Exploit Kit to the Shellcode ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Esparza/Asia-14-Esparza-PDF-Attack-A-Journey-From-The-Exploit-Kit-To-The-Shellcode.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Esparza/peepdf_0.2_215.zip",
        "type": "source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=UCy4P2tJKq8"
      }
    ],
    "youtubeDescription": "By Jose Miguel Esparza\n\n\"PDF Attack: A Journey from the Exploit Kit to the Shellcode\" is a workshop to show how to analyze obfuscated Javascript code from an Exploit Kit page, extract the exploits used, and analyze them. Nowadays it is possible to use automated tools to extract URLs and binaries but it is also important to know how to do it manually to not to miss a detail. We will focus on PDF documents mostly, starting from a simple Javascript Hello World document and ending with a real file used by a fresh Exploit Kit. This workshop will also include exercises to modify malicious PDF files and obfuscate them to try to bypass AV software, very useful in pentesting. The last version of peepdf (included in REMnux, BackTrack and Kali Linux) will be used for acomplish these tasks, so it means that this presentation covers the latest tricks used by cybercriminals like using new filters and encryption to make the analysis more difficult."
  },
  "Wueest": {
    "author": "",
    "description": "In recent years, the idea of collecting and analyzing data about a subject has transitioned and the subject is now the person. We are not just talking about high level details about the person but instead we are dealing with highly detailed and personal information at a low-level. A new term has been coined for this activity and it is generally known as the concept of the Quantified Self (QS). This trend is a collision of several different forces currently observed, including wearable smart devices, the Internet-of-Things, and social media.\n\nQS is about personal data, but not as we have known it. While analyzing the top QS apps for smartphones we have found all sorts of worrisome behavior. How much data is actually gathered? How is the data stored? How many entities do you have to trust to not sell your data to marketing companies? These are only a few of the questions that users have to ask themselves. We will explain the different attack vectors and attack scenarios against QS devices.\n\nWe have found that not all applications are following security best practice guidelines. Some applications submit passwords in clear text over HTTP, leak your location, or let everyone by default see your progress. Other applications distribute your data by contacting 16 different service providers or leave you with a unpleasant feeling as they do not allow you to delete the account or do not even have a privacy policy to begin with. We will provide an overview of the different findings we gathered while analyzing QS applications. \n\nFurthermore, we discovered that most of the quantifying self hardware devices, like sports bracelets, do not implement the full spectrum of privacy functions available. Hence, people using such activity trackers can be tracked by others. We created a proof of concept scanner and performed some tests in different European cities. We will discuss the scan results and show that when the tracking is combined with the leakage of personal identifiable information, this can quickly become a nightmare.",
    "plaintextTitle": "Quantified Self - A Path to Self-Enlightenment or Just a Security Nightmare?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Wueest-Quantified-Self-A-Path-To-Self-Enlightenment-Or-Just-A-Security-Nightmare-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Wueest-Quantified-Self-A-Path-To-Self-Enlightenment-Or-Just-A-Security-Nightmare.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=68ZQ3dDqEeg"
      }
    ],
    "youtubeDescription": "By Candid Wueest\n\n\"In recent years, the idea of collecting and analyzing data about a subject has transitioned and the subject is now the person. We are not just talking about high level details about the person but instead we are dealing with highly detailed and personal information at a low-level. A new term has been coined for this activity and it is generally known as the concept of the Quantified Self (QS). This trend is a collision of several different forces currently observed, including wearable smart devices, the Internet-of-Things, and social media.\n\nQS is about personal data, but not as we have known it. While analyzing the top QS apps for smartphones we have found all sorts of worrisome behavior. How much data is actually gathered? How is the data stored? How many entities do you have to trust to not sell your data to marketing companies? These are only a few of the questions that users have to ask themselves. We will explain the different attack vectors and attack scenarios against QS devices.\n\nWe have found that not all applications are following security best practice guidelines. Some applications submit passwords in clear text over HTTP, leak your location, or let everyone by default see your progress. Other applications distribute your data by contacting 16 different service providers or leave you with a unpleasant feeling as they do not allow you to delete the account or do not even have a privacy policy to begin with. We will provide an overview of the different findings we gathered while analyzing QS applications. \n\nFurthermore, we discovered that most of the quantifying self hardware devices, like sports bracelets, do not implement the full spectrum of privacy functions available. Hence, people using such activity trackers can be tracked by others. We created a proof of concept scanner and performed some tests in different European cities. We will discuss the scan results and show that when the tracking is combined with the leakage of personal identifiable information, this can quickly become a nightmare.\""
  },
  "Karagiannis": {
    "author": "",
    "description": "Quantum computing will bring tumultuous change to the world of information security in the coming decade. As multi-qubit systems use quantum algorithms to slice through even 4096-bit PK encryption in seconds, new Quantum Encryption will be required to ensure data security. Join Konstantinos for a look at real world experiments in Quantum Key Distribution that BT and partners have recently performed that show what the future of encryption will look like. Remember the panic after Heartbleed when SOME passwords needed to be changed? Imagine a day when ALL communications are at risk of eavesdropping via Quantum Computers - a day when only new systems that exploit the weirdness of quantum mechanics can ensure privacy.",
    "plaintextTitle": "Quantum Key Distribution and the Future of Encryption",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Karagiannis-Quantum-Key-Distribution-And-The-Future-Of-Encryption.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=RrdTAURD1rI"
      }
    ],
    "youtubeDescription": "By Konstantinos Karagiannis\n\nQuantum computing will bring tumultuous change to the world of information security in the coming decade. As multi-qubit systems use quantum algorithms to slice through even 4096-bit PK encryption in seconds, new Quantum Encryption will be required to ensure data security. Join Konstantinos for a look at real world experiments in Quantum Key Distribution that BT and partners have recently performed that show what the future of encryption will look like. Remember the panic after Heartbleed when SOME passwords needed to be changed? Imagine a day when ALL communications are at risk of eavesdropping via Quantum Computers - a day when only new systems that exploit the weirdness of quantum mechanics can ensure privacy."
  },
  "Hafif": {
    "author": "",
    "description": "Attackers would LOVE having the ability to upload executable files to domains like Google.com, Facebook.com, and Bing.com. How cool would it be for them if their files are downloaded without ever being uploaded! Yes, download without upload! RFD is a new web based attack that extends reflected attacks beyond the context of the web browser. Attackers can build malicious URLs which once accessed, download files, and store them with any desired extension, giving a new malicious meaning to reflected input, even if it is properly encoded. Moreover, this attack allows running shell commands on the victim's computer. \n\nHow bad is it? By using this attack on Google.com, Bing.com and others, I created the first cross-social-network worm that is downloadable from trusted sites like Google.com, completely disables same-origin-policy, steals all browser cookies, and spreads itself throughout all social networks such as Facebook, Twitter, Google+, and LinkedIn.",
    "plaintextTitle": "Reflected File Download - A New Web Attack Vector",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=dl1BJUNk8V4"
      }
    ],
    "youtubeDescription": "By Oren Hafif\n\n\"Attackers would LOVE having the ability to upload executable files to domains like Google.com, Facebook.com, and Bing.com. How cool would it be for them if their files are downloaded without ever being uploaded! Yes, download without upload! RFD is a new web based attack that extends reflected attacks beyond the context of the web browser. Attackers can build malicious URLs which once accessed, download files, and store them with any desired extension, giving a new malicious meaning to reflected input, even if it is properly encoded. Moreover, this attack allows running shell commands on the victim's computer. \n\nHow bad is it? By using this attack on Google.com, Bing.com and others, I created the first cross-social-network worm that is downloadable from trusted sites like Google.com, completely disables same-origin-policy, steals all browser cookies, and spreads itself throughout all social networks such as Facebook, Twitter, Google+, and LinkedIn.\""
  },
  "Kemerlis": {
    "author": "",
    "description": "Return-to-user (ret2usr) attacks redirect corrupted kernel pointers to controlled data residing in user space, by taking advantage of the weak separation of the kernel context from user space, as for performance reasons the kernel is typically mapped into the address space of every process. In response to such attacks, several kernel-hardening approaches have been proposed to enforce a more strict address space separation, by preventing arbitrary control flow transfers and dereferences from kernel to user space. Intel and ARM recently introduced hardware support for this purpose in the form of the SMEP, SMAP, and PXN processor features.\n\nIn this presentation, we show that although mechanisms like the above prevent the explicit sharing of the virtual address space among user processes and the kernel, conditions of implicit sharing still exist due to fundamental OS design choices that trade stronger isolation for performance. We demonstrate how implicit data sharing can be leveraged for the complete circumvention of software and hardware kernel isolation protections, by introducing a new kernel exploitation technique, dubbed return-to-direct-mapped memory (ret2dir). ret2dir bypasses existing ret2usr protections, such as PaX's KERNEXEC and UDEREF, Intel's SMEP and SMAP, as well as ARM's PXN, by taking advantage of the kernel's direct-mapped physical memory region. We present techniques for constructing ret2dir exploits against x86, x86-64, AArch32, and AArch64 Linux targets that bypass all tested protection mechanisms (KERNEXEC, UDEREF, SMEP, SMAP, and PXN). To mitigate ret2dir attacks, we also discuss the design and implementation of an exclusive page frame ownership scheme for the Linux kernel that prevents the implicit sharing of physical memory pages.",
    "plaintextTitle": "ret2dir: Deconstructing Kernel Isolation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Kemerlis-Ret2dir-Deconstructing-Kernel-Isolation-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Kemerlis-Ret2dir-Deconstructing-Kernel-Isolation.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=kot-EQ9zf9k"
      }
    ],
    "youtubeDescription": "By Vasileios Kemerlis\n\n\"Return-to-user (ret2usr) attacks redirect corrupted kernel pointers to controlled data residing in user space, by taking advantage of the weak separation of the kernel context from user space, as for performance reasons the kernel is typically mapped into the address space of every process. In response to such attacks, several kernel-hardening approaches have been proposed to enforce a more strict address space separation, by preventing arbitrary control flow transfers and dereferences from kernel to user space. Intel and ARM recently introduced hardware support for this purpose in the form of the SMEP, SMAP, and PXN processor features.\n\nIn this presentation, we show that although mechanisms like the above prevent the explicit sharing of the virtual address space among user processes and the kernel, conditions of implicit sharing still exist due to fundamental OS design choices that trade stronger isolation for performance. We demonstrate how implicit data sharing can be leveraged for the complete circumvention of software and hardware kernel isolation protections, by introducing a new kernel exploitation technique, dubbed return-to-direct-mapped memory (ret2dir). ret2dir bypasses existing ret2usr protections, such as PaX's KERNEXEC and UDEREF, Intel's SMEP and SMAP, as well as ARM's PXN, by taking advantage of the kernel's direct-mapped physical memory region. We present techniques for constructing ret2dir exploits against x86, x86-64, AArch32, and AArch64 Linux targets that bypass all tested protection mechanisms (KERNEXEC, UDEREF, SMEP, SMAP, and PXN). To mitigate ret2dir attacks, we also discuss the design and implementation of an exclusive page frame ownership scheme for the Linux kernel that prevents the implicit sharing of physical memory pages.\""
  },
  "Javed": {
    "author": "",
    "description": "The online WYSIWYG \"What You See Is What You Get\" editors  or rich-text editors are nowadays an essential component of the web applications. They allow users of web applications to edit and enter HTML rich text (i.e., formatted text, images, links and videos etc) inside the web browser window. \n\nThis talk will first demonstrate how to break the top 25 online WYSIWYG editors powering thousands of web applications. We show XSS bypasses for top WYSIWYG editors like TinyMCE, Jive, Froala, CKEditor etc. We will share stories of how we were able to XSSed WYSIWYG editors of sites like Twitter, Yahoo Email, Amazon, GitHub, Magento, and CNET etc.   \n\nAfter breaking almost all WYSIWYG editors in the wild, this talk will present a sanitizer (very easy to use, effective and practical solution) which is based only on '11 chars + 3 regular expressions' and will show how it will safe you from an XSS in HTML, attribute, script (includes JSON context), style and URL contexts.",
    "plaintextTitle": "Revisiting XSS Sanitization",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Javed-Revisiting-XSS-Sanitization-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Javed-Revisiting-XSS-Sanitization.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=LLtOJNeMp7c"
      }
    ],
    "youtubeDescription": "By Ashar Javed\n\n\"The online WYSIWYG \"\"What You See Is What You Get\"\" editors  or rich-text editors are nowadays an essential component of the web applications. They allow users of web applications to edit and enter HTML rich text (i.e., formatted text, images, links and videos etc) inside the web browser window. \n\nThis talk will first demonstrate how to break the top 25 online WYSIWYG editors powering thousands of web applications. We show XSS bypasses for top WYSIWYG editors like TinyMCE, Jive, Froala, CKEditor etc. We will share stories of how we were able to XSSed WYSIWYG editors of sites like Twitter, Yahoo Email, Amazon, GitHub, Magento, and CNET etc.   \n\nAfter breaking almost all WYSIWYG editors in the wild, this talk will present a sanitizer (very easy to use, effective and practical solution) which is based only on '11 chars + 3 regular expressions' and will show how it will safe you from an XSS in HTML, attribute, script (includes JSON context), style and URL contexts.\""
  },
  "Moss": {
    "author": "",
    "description": "At the close of this year's conference, join Black Hat Founder Jeff Moss and members of the esteemed Black Hat Review Board for an insightful conversation on the most pressing issues facing the InfoSec community today. This Locknote will feature a candid discussion on the key takeaways coming out of Black Hat Asia 2015.",
    "plaintextTitle": "Locknote: Conclusions and Key Takeaways from Black Hat Asia 2015",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=z3Klcs-ijU0"
      }
    ],
    "youtubeDescription": "by Jeff Moss & members of the Black Hat Review Board\n\nAt the close of this year's conference, join Black Hat Founder Jeff Moss and members of the esteemed Black Hat Review Board for an insightful conversation on the most pressing issues facing the InfoSec community today. This Locknote will feature a candid discussion on the key takeaways coming out of Black Hat Asia 2015."
  },
  "Hayak": {
    "author": "",
    "description": "SOME - \"Same Origin Method Execution\" is a new technique that abuses JSONP in order to perform a limitless number of unintended actions on a website on behalf of users, by assembling a malicious set of timed frames and/or windows. Despite the similarity to click-jacking, this attack is not UI related nor it is confined in terms of user interaction, browser brand, HTTP X-FRAME-OPTIONS/Other response headers or a particular webpage, in fact, when a webpage found vulnerable to \"SOME\", the entire domain becomes vulnerable. During this talk, I intend to demonstrate how JSONP opens a backdoor, even in the most protected domains, to a very powerful attack that can cause severe damage without any user-interaction.",
    "plaintextTitle": "Same Origin Method Execution (SOME) - Exploiting a Callback for Same Origin Policy Bypass",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Hayak-Same-Origin-Method-Execution-Exploiting-A-Callback-For-Same-Origin-Policy-Bypass-wp.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Hayak-Same-Origin-Method-Execution-Some-Exploiting-A-Callback-For-Same-Origin-Policy-Bypass.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=UfYfID_r7-U"
      }
    ],
    "youtubeDescription": "By Ben Hayak\n\nSOME - \"Same Origin Method Execution\" is a new technique that abuses JSONP in order to perform a limitless number of unintended actions on a website on behalf of users, by assembling a malicious set of timed frames and/or windows. Despite the similarity to click-jacking, this attack is not UI related nor it is confined in terms of user interaction, browser brand, HTTP X-FRAME-OPTIONS/Other response headers or a particular webpage, in fact, when a webpage found vulnerable to \"SOME\", the entire domain becomes vulnerable. During this talk, I intend to demonstrate how JSONP opens a backdoor, even in the most protected domains, to a very powerful attack that can cause severe damage without any user-interaction."
  },
  "Cabetas": {
    "author": "Soto",
    "description": "Scala is an increasingly popular language that runs on the JVM. LiftWeb and Play are the two main web application frameworks developed for Scala. The language is getting really hot in the web start-up and Financial Tech world, but nobody has dug deep into the frameworks to see if they're secure. This talk reviews the various exploitation mitigations built into each framework and what this means for attackers and defenders. The core of our talk examines the OWASP Top 10 as it applies to Lift/Play and we'll also publicly release our \"hack me\" app as well a Scala library to help prevent SSRF.",
    "plaintextTitle": "Scala Security: Examining the Play and LiftWeb Frameworks",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=gCRWvlmX7Is"
      }
    ],
    "youtubeDescription": "By Erik Cabetas and Paolo Soto\n\nScala is an increasingly popular language that runs on the JVM. LiftWeb and Play are the two main web application frameworks developed for Scala. The language is getting really hot in the web start-up and Financial Tech world, but nobody has dug deep into the frameworks to see if they're secure. This talk reviews the various exploitation mitigations built into each framework and what this means for attackers and defenders. The core of our talk examines the OWASP Top 10 as it applies to Lift/Play and we'll also publicly release our \"hack me\" app as well a Scala library to help prevent SSRF."
  },
  "Brandstetter": {
    "author": "",
    "description": "The \"go to fail\" bug was a shock for all security-aware apple users. A simple coding error lead to a missing check in SSL validation with grave consequences. Many applications rely on SSL, but only few recognize that all of its helpful mechanisms (encryption, integrity protection, replay protection) are not worth a penny without proper authentication of communication peers. We suspected that many programs, especially mobile apps, do not fully validate the certificate of the server they send confidential information to. Could \"go to fail\" and similar insufficient certificate validation checks be tested for, without having access to the source code? To test this out, we developed SVF - the \"SSL-Validation-Fuzzer\" for easier certificate validation check testing in cooperation with University of Applied Sciences St. Poelten. SVF is written in python and based on the well-known mitm proxy software. For testing, it is placed between the test target (e.g mobile app) and the server. SVF will 1.) capture the SSL handshake 2.) generate several mutation certificates based on the original server certificate according to a range of test cases 3.) allow the user to apply those mutation certificates in the encryption in order to 4.) test if the client starts/continues data transfer with a forged certificate, thereby allowing testing of client-side certificate validation logic. Though currently still a simple yet powerful prototype, we used SVF on a bunch of iOS, Android, and Windows Mobile apps. The first range of testing candidates were mobile banking applications, as we expected strong validation checks here. We started with mobile banking apps from our home country Austria, then moved on to banking apps from other countries too, giving us some very interesting results and a glimpse on the state of certificate checks overall. Vendors affected by the discovered vulnerabilities are informed in a coordinated disclosure process. In our talk, both the SVF tool, as well as the results from our field study, will be presented. We believe that although still in a prototype stage with just a bunch of test-cases, SVF-type checks could be valuable not only for app-developers, but anyone trying to test the SSL-validation checks of an app, thereby testing its susceptibility to crafted man-in-the-middle attacks.",
    "plaintextTitle": "SSL Validation Checking vs. Go(ing) to Fail",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Brandstetter-SSL-Validation-Checking-VS-Going-To-Fail.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=DoS-5CDNjes"
      }
    ],
    "youtubeDescription": "By Thomas Brandstetter\n\nThe \"go to fail\" bug was a shock for all security-aware apple users. A simple coding error lead to a missing check in SSL validation with grave consequences. Many applications rely on SSL, but only few recognize that all of its helpful mechanisms (encryption, integrity protection, replay protection) are not worth a penny without proper authentication of communication peers. We suspected that many programs, especially mobile apps, do not fully validate the certificate of the server they send confidential information to. Could \"go to fail\" and similar insufficient certificate validation checks be tested for, without having access to the source code? To test this out, we developed SVF - the \"SSL-Validation-Fuzzer\" for easier certificate validation check testing in cooperation with University of Applied Sciences St. Poelten. SVF is written in python and based on the well-known mitm proxy software. For testing, it is placed between the test target (e.g mobile app) and the server. SVF will 1.) capture the SSL handshake 2.) generate several mutation certificates based on the original server certificate according to a range of test cases 3.) allow the user to apply those mutation certificates in the encryption in order to 4.) test if the client starts/continues data transfer with a forged certificate, thereby allowing testing of client-side certificate validation logic. Though currently still a simple yet powerful prototype, we used SVF on a bunch of iOS, Android, and Windows Mobile apps. The first range of testing candidates were mobile banking applications, as we expected strong validation checks here. We started with mobile banking apps from our home country Austria, then moved on to banking apps from other countries too, giving us some very interesting results and a glimpse on the state of certificate checks overall. Vendors affected by the discovered vulnerabilities are informed in a coordinated disclosure process. In our talk, both the SVF tool, as well as the results from our field study, will be presented. We believe that although still in a prototype stage with just a bunch of test-cases, SVF-type checks could be valuable not only for app-developers, but anyone trying to test the SSL-validation checks of an app, thereby testing its susceptibility to crafted man-in-the-middle attacks."
  },
  "Qu": {
    "author": "Lu",
    "description": "The browser, as no one needs to explain, plays a very important role in security. There are many browser fuzzing tools, like cross_fuzz and grinder, which help people to build their own browser fuzzing system. \n\nHowever, the most important thing of fuzzing is the fuzzing strategy. With a good strategy, we can find more vulnerabilities instead of useless crashes. With a unique strategy, we can find bugs that others couldn't find.\n\nFrom September 2013 to April 2014, we discovered more than 100 IE use-after-free vulnerabilities. We got 19 CVEs that affect all versions of Microsoft IEs. We also have more than 50 pending IE vulnerabilities at MSRC.\n\nIn this talk, we are going to introduce the vulnerability hunting system we built from scratch and the fuzzing strategy we used.",
    "plaintextTitle": "The Power of Pair: One Template that Reveals 100+ UAF IE Vulnerabilities",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Lu-The-Power-Of-Pair-One-Template-That-Reveals-100-plus-UAF-IE-Vulnerabilities.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=dgQnYRiNIKU"
      }
    ],
    "youtubeDescription": "By ChienHua Lu\n\n\"The browser, as no one needs to explain, plays a very important role in security. There are many browser fuzzing tools, like cross_fuzz and grinder, which help people to build their own browser fuzzing system. \n\nHowever, the most important thing of fuzzing is the fuzzing strategy. With a good strategy, we can find more vulnerabilities instead of useless crashes. With a unique strategy, we can find bugs that others couldn't find.\n\nFrom September 2013 to April 2014, we discovered more than 100 IE use-after-free vulnerabilities. We got 19 CVEs that affect all versions of Microsoft IEs. We also have more than 50 pending IE vulnerabilities at MSRC.\n\nIn this talk, we are going to introduce the vulnerability hunting system we built from scratch and the fuzzing strategy we used.\""
  },
  "Lackey": {
    "author": "",
    "description": "Two Factor Authentication (2FA) systems are required by security standards and help to solve the many weaknesses of password authentication, and are increasingly found both in enterprise systems and in general web applications.\n\nUnfortunately, many 2FA systems have vulnerabilities - some glaring, some more subtle - and 2FA systems have frequently sacrificed security to be more usable.\n\nWe will demonstrate the vulnerabilities of various 2FA systems, including a new form of attack against mobile phone based TOTP (RFC 6238) systems, and describe best practices for deploying 2FA of various types.",
    "plaintextTitle": "Two Factor Failure",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=FO5dXQzLzGA"
      }
    ],
    "youtubeDescription": "By Ryan Lackey\n\n\"Two Factor Authentication (2FA) systems are required by security standards and help to solve the many weaknesses of password authentication, and are increasingly found both in enterprise systems and in general web applications.\n\nUnfortunately, many 2FA systems have vulnerabilities - some glaring, some more subtle - and 2FA systems have frequently sacrificed security to be more usable.\n\nWe will demonstrate the vulnerabilities of various 2FA systems, including a new form of attack against mobile phone based TOTP (RFC 6238) systems, and describe best practices for deploying 2FA of various types.\""
  },
  "Chen": {
    "author": "",
    "description": "WebKit is widely used as a web rendering engine by applications present on almost all popular PC platforms including Windows, Mac OS X, as well as mobile platforms such as iOS and Android. Usually a single vulnerability in WebKit - either logic or memory corruption one - utilized with appropriate exploit techniques can result in a remote code execution impacting various applications, regardless of what platforms they are running on.\n\nAfter years of security improvements made by Apple, Google, and other companies and communities, WebKit became one of the most secure engines amongst web rendering engines. The security improvements mainly focused on reducing the number of critical vulnerabilities such as Use-After-Free, heap overflow, etc. More importantly, exploitation mitigations implemented in WebKit and its corresponding JavaScript engines (JavaScriptCore and V8) also dramatically increased the difficulty level of a successful exploitation.\n\nDifficult, but not impossible. \n\nDespite the strong security, defeating WebKit-based applications is still feasible. In this talk, I will discuss the details of these security enhancements and the approach I took to defeat them. The talk will be illustrated by demos of two exploits. The first one is a Webkit vulnerability deployed using several advanced exploit techniques to deliver a remote code execution that doesn't rely on Heap Spray technique and can be reliably ran on x64 Safari browser. The second one will demonstrate that similar techniques also apply to mobile applications.\n\nAt the end of our talk, we will provide recommendations on how to improve security of WebKit-based applications.",
    "plaintextTitle": "WebKit Everywhere: Secure or Not?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Chen-WebKit-Everywhere-Secure-Or-Not-WP.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-whitepaper.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Chen-WebKit-Everywhere-Secure-Or-Not.PDF",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-14/materials/eu-14-Chen-WebKit-Everywhere-Secure-Or-Not.pdf",
        "type": "https://www.blackhat.com/images/page-graphics-usa-14/us-14-slides.png"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5Bf1i89hF38"
      }
    ],
    "youtubeDescription": "By Liang Chen\n\n\"WebKit is widely used as a web rendering engine by applications present on almost all popular PC platforms including Windows, Mac OS X, as well as mobile platforms such as iOS and Android. Usually a single vulnerability in WebKit - either logic or memory corruption one - utilized with appropriate exploit techniques can result in a remote code execution impacting various applications, regardless of what platforms they are running on.\n\nAfter years of security improvements made by Apple, Google, and other companies and communities, WebKit became one of the most secure engines amongst web rendering engines. The security improvements mainly focused on reducing the number of critical vulnerabilities such as Use-After-Free, heap overflow, etc. More importantly, exploitation mitigations implemented in WebKit and its corresponding JavaScript engines (JavaScriptCore and V8) also dramatically increased the difficulty level of a successful exploitation.\n\nDifficult, but not impossible. \n\nDespite the strong security, defeating WebKit-based applications is still feasible. In this talk, I will discuss the details of these security enhancements and the approach I took to defeat them. The talk will be illustrated by demos of two exploits. The first one is a Webkit vulnerability deployed using several advanced exploit techniques to deliver a remote code execution that doesn't rely on Heap Spray technique and can be reliably ran on x64 Safari browser. The second one will demonstrate that similar techniques also apply to mobile applications.\n\nAt the end of our talk, we will provide recommendations on how to improve security of WebKit-based applications.\""
  },
  "what-got-us-here-wont-get-us-there": {
    "author": "haroon-meer",
    "description": "It's no secret that we have huge challenges in InfoSec: Every day we seem to pump out more code, connect more machines, and collect more data than ever before. Malicious actors have been making out like bandits and intelligence agencies have been owning (and pre-owning) the planet while your average large-company InfoSec team is still struggling with problems that we \"knew about\" in the 90's.This is not for a lack of effort: Security teams are bigger, security budgets are larger, and there is a security conference going on for almost every day of the year.Lots of the fault here lies squarely with us.This talk will discuss the problems we should be tackling, (the distractions we should be ignoring,) and then, riffing on the Marshall Goldsmith best seller (What Got You Here Won't Get You There) will aim to explore those activities that we are currently engaged in (as individuals and an industry) that are doing us all more harm than good.",
    "plaintextTitle": "What Got Us Here Wont Get Us There",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Meer-What-Got-Us-Here-Wont-Get-Us-There.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ExMuk_Vdyac"
      }
    ],
    "youtubeDescription": "by Haroon Meer\n\nIt's no secret that we have huge challenges in InfoSec: Every day we seem to pump out more code, connect more machines, and collect more data than ever before. Malicious actors have been making out like bandits and intelligence agencies have been owning (and pre-owning) the planet while your average large-company InfoSec team is still struggling with problems that we \"knew about\" in the 90's.\n\nThis is not for a lack of effort: Security teams are bigger, security budgets are larger, and there is a security conference going on for almost every day of the year.\n\nLots of the fault here lies squarely with us.\n\nThis talk will discuss the problems we should be tackling, (the distractions we should be ignoring,) and then, riffing on the Marshall Goldsmith best seller (What Got You Here Won't Get You There) will aim to explore those activities that we are currently engaged in (as individuals and an industry) that are doing us all more harm than good."
  },
  "in-security-of-backend-as-a-service": {
    "author": "siegfried-rasthofer",
    "description": "Smartphone applications frequently need to store data remotely. From a developer's point of view, setting up and maintaining back-ends, however, is time-consuming and error-prone. Therefore, commercial cloud-based data storage solutions from Backend-As-A-Service (BaaS) providers such as the ones from Amazon, Google, and Facebook have become omnipresent. They provide simple APIs for common tasks such as managing database records or files. Adding a few library classes and writing three or four lines of code is sufficient to make an interaction between the cloud and the app, and, e.g., store credit card data. While this model is convenient, one might wonder whether it's really secure in practice (spoiler: it's not).  In this study, we will show that many BaaS solutions are completely insecure and attackers have no difficulties in breaking into the developer's backend. We investigated about two million Android apps and the results were quite shocking. We were able to access more than 56 million sensitive user records stored in the cloud by heavily misconfigured BaaS solutions. These records contained all sorts of sensitive data processed by Android apps: medical information, credit card data, photos, voice-, audio- and video-records, money transaction records, etc. Some apps even contained credentials that gave us full control over the remote storage. Adversaries could hijack Amazon S3-Buckets which gives them the ability to modify sensitive customer databases, add malicious code to well-known websites or directly run malware on the cloud at the app developer's expense. In order to find and verify these insecure BaaS solutions in Android applications, we developed an automatic exploit generator that extracts credentials from the app, even if they are obfuscated, and provides access to the respective BaaS backend.",
    "plaintextTitle": "(In-)Security of Backend-As-A-Service",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Rasthofer-In-Security-Of-Backend-As-A-Service.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Rasthofer-In-Security-Of-Backend-As-A-Service-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=CMKvsBYkFgI"
      }
    ],
    "youtubeDescription": "by Siegfried Rasthofer  &  Steven Arzt\n\nSmartphone applications frequently need to store data remotely. From a developer's point of view, setting up and maintaining back-ends, however, is time-consuming and error-prone. Therefore, commercial cloud-based data storage solutions from Backend-As-A-Service (BaaS) providers such as the ones from Amazon, Google, and Facebook have become omnipresent. They provide simple APIs for common tasks such as managing database records or files. Adding a few library classes and writing three or four lines of code is sufficient to make an interaction between the cloud and the app, and, e.g., store credit card data. While this model is convenient, one might wonder whether it's really secure in practice (spoiler: it's not).\n\nIn this study, we will show that many BaaS solutions are completely insecure and attackers have no difficulties in breaking into the developer's backend. We investigated about two million Android apps and the results were quite shocking. We were able to access more than 56 million sensitive user records stored in the cloud by heavily misconfigured BaaS solutions. These records contained all sorts of sensitive data processed by Android apps: medical information, credit card data, photos, voice-, audio- and video-records, money transaction records, etc. Some apps even contained credentials that gave us full control over the remote storage. Adversaries could hijack Amazon S3-Buckets which gives them the ability to modify sensitive customer databases, add malicious code to well-known websites or directly run malware on the cloud at the app developer's expense. In order to find and verify these insecure BaaS solutions in Android applications, we developed an automatic exploit generator that extracts credentials from the app, even if they are obfuscated, and provides access to the respective BaaS backend."
  },
  "a-peek-under-the-blue-coat": {
    "author": "raphael-rigo",
    "description": "Blue Coat ProxySG systems are widely deployed in big corporations to handle web traffic proxying and filtering. While they are very common, no work has ever been published regarding the internals of the system. With this talk, I will present the results of a detailed analysis of the entirely proprietary SG OS, which runs on commodity Intel hardware.  The talk will include a detailed description of :OS mechanismsFile system internalsSecurity mechanisms (or lack thereof)",
    "plaintextTitle": "A Peek Under the Blue Coat",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Rigo-A-Peek-Under-The-Blue-Coat.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KMbWS2-KK9M"
      }
    ],
    "youtubeDescription": "by Raphael Rigo\n\nBlue Coat ProxySG systems are widely deployed in big corporations to handle web traffic proxying and filtering. While they are very common, no work has ever been published regarding the internals of the system. With this talk, I will present the results of a detailed analysis of the entirely proprietary SG OS, which runs on commodity Intel hardware.\n\nThe talk will include a detailed description of :\n\n    OS mechanisms\n    File system internals\n    Security mechanisms (or lack thereof)"
  },
  "all-your-root-checks-belong-to-us-the-sad-state-of-root-detection": {
    "author": "azzedine-benameur",
    "description": "Today, mobile devices are ubiquitous; a facet of everyday life for most people. Due to increasing computational power, these devices are used to perform a large number of tasks, from personal email to corporate expense account management. It is a hassle for users to be required to maintain multiple mobile devices to separate personal and corporate activities, but in the past this was a commonplace requirement.The Bring Your Own Device (BYOD) revolution has promised to consolidate personal and business applications onto one device for added convenience and to reduce costs. As business applications move to personal devices, a clear problem has arisen: how to keep business data secure and personal data private when they reside on the same device. Many solutions exist, both for increasing the security of mobile devices as well as BYOD and Mobile Device Management (MDM) software, to allow access to business applications and data while keeping it secure.One chink in the armor for both security and business applications is \"rooted\" devices. These devices have been unlocked, providing low-level system access to users and applications. With root access, users may be able to bypass BYOD mechanisms in place to protect data, and malware may be able to access both private personal and business data on devices. As such, security applications and business applications often attempt to identify rooted devices and report them as compromised.In this talk, we analyze the most popular Android security focused applications along with market leading BYOD solutions to discover how \"rooted\" devices are identified. We dissect the aforementioned applications with commonly available open source Android reverse engineering frameworks to demonstrate the relative ease of circumventing these root checks. Finally, we present AndroPoser, a simple tool that can subdue all the root checks we discovered, allowing \"rooted\" devices to appear \"non-rooted.\"",
    "plaintextTitle": "All Your Root Checks Belong to Us: The Sad State of Root Detection",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Benameur-All-Your-Root-Checks-Are-Belong-To-Us-The-Sad-State-Of-Root-Detection.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ftQVDMsCaYw"
      }
    ],
    "youtubeDescription": "by Azzedine Benameur  &  Nathan Evans  &  Yun Shen\n\nToday, mobile devices are ubiquitous; a facet of everyday life for most people. Due to increasing computational power, these devices are used to perform a large number of tasks, from personal email to corporate expense account management. It is a hassle for users to be required to maintain multiple mobile devices to separate personal and corporate activities, but in the past this was a commonplace requirement.\n\nThe Bring Your Own Device (BYOD) revolution has promised to consolidate personal and business applications onto one device for added convenience and to reduce costs. As business applications move to personal devices, a clear problem has arisen: how to keep business data secure and personal data private when they reside on the same device. Many solutions exist, both for increasing the security of mobile devices as well as BYOD and Mobile Device Management (MDM) software, to allow access to business applications and data while keeping it secure.\n\nOne chink in the armor for both security and business applications is \"rooted\" devices. These devices have been unlocked, providing low-level system access to users and applications. With root access, users may be able to bypass BYOD mechanisms in place to protect data, and malware may be able to access both private personal and business data on devices. As such, security applications and business applications often attempt to identify rooted devices and report them as compromised.\n\nIn this talk, we analyze the most popular Android security focused applications along with market leading BYOD solutions to discover how \"rooted\" devices are identified. We dissect the aforementioned applications with commonly available open source Android reverse engineering frameworks to demonstrate the relative ease of circumventing these root checks. Finally, we present AndroPoser, a simple tool that can subdue all the root checks we discovered, allowing \"rooted\" devices to appear \"non-rooted.\""
  },
  "androbugs-framework-an-android-application-security-vulnerability-scanner": {
    "author": "yu-cheng-lin",
    "description": "Android developers sometimes make coding mistakes with some of these mistakes leading to serious security vulnerabilities. However, it cannot be expected that every Android developer will first check the official Android Developer documents or have a mobile or web security background. Therefore, an Android analysis security system that can verify vulnerabilities before releasing Android applications on Google Play becomes crucial. AndroBugs Framework is a free Android vulnerability analysis system that helps developers or hackers find potential security vulnerabilities. In the Android system, each application's security is maintained by creating a different Linux user and group for each App to distinguish permissions. Valid security vulnerability occurs when a malicious App is able to steal the privacy information inside a legitimate App by exploiting the vulnerabilities in the legitimate App or intercepting the network packet (e.g. MITM attack) under the non-rooted phones. It is normally not considered as a valid vulnerability if hackers must have \"root\" permission (e.g. Xposed Framework) or have physical access to the phone (e.g. \"adb backup\" security issue) to exploit the vulnerabilities.This presentation will demonstrate how AndroBugs Framework can help find valid vulnerabilities and help Android developers reduce the risk of having their applications exploited or hacked. Additionally, this system can also be used to efficiently and instantly find all the possible and potential security vulnerabilities in millions of Android apps. Using AndroBugs Framework, security vulnerabilities have been found in Android applications or SDKs developed by companies such as Facebook, Twitter, Microsoft, Yahoo!, Google Android, Huawei, Evernote, Alibaba, AT&T, and Sina Weibo, which have later been acknowledged by those companies in their Hall of Fame. Vulnerabilities in Android products by some of the famous companies will also be disclosed in this presentation and used as real cases to introduce the vulnerability vectors implemented in AndroBugs Framework.",
    "plaintextTitle": "AndroBugs Framework: An Android Application Security Vulnerability Scanner",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Lin-Androbugs-Framework-An-Android-Application-Security-Vulnerability-Scanner.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=EMjFVoCi2fA"
      }
    ],
    "youtubeDescription": "by Yu-Cheng Lin\n\nAndroid developers sometimes make coding mistakes with some of these mistakes leading to serious security vulnerabilities. However, it cannot be expected that every Android developer will first check the official Android Developer documents or have a mobile or web security background. Therefore, an Android analysis security system that can verify vulnerabilities before releasing Android applications on Google Play becomes crucial. AndroBugs Framework is a free Android vulnerability analysis system that helps developers or hackers find potential security vulnerabilities. In the Android system, each application's security is maintained by creating a different Linux user and group for each App to distinguish permissions. Valid security vulnerability occurs when a malicious App is able to steal the privacy information inside a legitimate App by exploiting the vulnerabilities in the legitimate App or intercepting the network packet (e.g. MITM attack) under the non-rooted phones. It is normally not considered as a valid vulnerability if hackers must have \"root\" permission (e.g. Xposed Framework) or have physical access to the phone (e.g. \"adb backup\" security issue) to exploit the vulnerabilities.\n\nThis presentation will demonstrate how AndroBugs Framework can help find valid vulnerabilities and help Android developers reduce the risk of having their applications exploited or hacked. Additionally, this system can also be used to efficiently and instantly find all the possible and potential security vulnerabilities in millions of Android apps. Using AndroBugs Framework, security vulnerabilities have been found in Android applications or SDKs developed by companies such as Facebook, Twitter, Microsoft, Yahoo!, Google Android, Huawei, Evernote, Alibaba, AT&T, and Sina Weibo, which have later been acknowledged by those companies in their Hall of Fame. Vulnerabilities in Android products by some of the famous companies will also be disclosed in this presentation and used as real cases to introduce the vulnerability vectors implemented in AndroBugs Framework."
  },
  "attacking-the-xnu-kernel-in-el-capitain": {
    "author": "luca-todesco",
    "description": "The XNU kernel powers Apple's operative systems. As their market share grows, exploitation of OS X and iOS is gaining popularity. The introduction of kernel exploit mitigations such as KASLR and SMEP has been overcome with new techniques. \"vm_map_copy\" corruption, a well-known technique useful for bypassing KASLR and SMAP / AS Isolation, has been mitigated in 10.11 & iOS 9. My talk will demonstrate new techniques to get around XNU's latest changes and I will demonstrate a real kernel exploit for the most recent version of El Capitain to bypass System Integrity Protection (rootless).",
    "plaintextTitle": "Attacking the XNU Kernel in El Capitain",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Todesco-Attacking-The-XNU-Kernal-In-El-Capitain.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=k550C0V79ts"
      }
    ],
    "youtubeDescription": "by Luca Todesco\n\nThe XNU kernel powers Apple's operative systems. As their market share grows, exploitation of OS X and iOS is gaining popularity. The introduction of kernel exploit mitigations such as KASLR and SMEP has been overcome with new techniques. \"vm_map_copy\" corruption, a well-known technique useful for bypassing KASLR and SMAP / AS Isolation, has been mitigated in 10.11 & iOS 9. My talk will demonstrate new techniques to get around XNU's latest changes and I will demonstrate a real kernel exploit for the most recent version of El Capitain to bypass System Integrity Protection (rootless)."
  },
  "authenticator-leakage-through-backup-channels-on-android": {
    "author": "guangdong-bai",
    "description": "Security of authentication protocols heavily replies on the confidentiality of credentials (or authenticators) like passwords and session IDs. However, unlike browser-based web applications for which highly evolved browsers manage the authenticators, Android apps have to construct their own management. We find that most apps simply locate the authenticators into the persistent storage and entrust the underlying Android OS for mediation. Consequently, the authenticators can be leaked through compromised backup channels. In this work, we conduct the first systematic investigation on this previously overlooked attack vector. We find that nearly all backup apps on Google Play inadvertently expose backup data to any app with Internet and SD card permissions. With this exposure, the malicious apps can steal other apps' authenticators and obtain complete control over the authenticated sessions. We show that this can be stealthily and efficiently done by building a proof-of-concept app named AuthSniffer. We find that 80 (68.4%) out of 117 tested top-ranked apps which have implemented authentication schemes are subject to this threat. Our study should raise the awareness of app developers and protocol analysts about this attack vector.",
    "plaintextTitle": "Authenticator Leakage through Backup Channels on Android",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Bai-Authenticator-Leakage-Through-Backup-Channels-On-Android.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7O5qqQy675c"
      }
    ],
    "youtubeDescription": "by Guangdong Bai\n\nSecurity of authentication protocols heavily replies on the confidentiality of credentials (or authenticators) like passwords and session IDs. However, unlike browser-based web applications for which highly evolved browsers manage the authenticators, Android apps have to construct their own management. We find that most apps simply locate the authenticators into the persistent storage and entrust the underlying Android OS for mediation. Consequently, the authenticators can be leaked through compromised backup channels. In this work, we conduct the first systematic investigation on this previously overlooked attack vector. We find that nearly all backup apps on Google Play inadvertently expose backup data to any app with Internet and SD card permissions. With this exposure, the malicious apps can steal other apps' authenticators and obtain complete control over the authenticated sessions. We show that this can be stealthily and efficiently done by building a proof-of-concept app named AuthSniffer. We find that 80 (68.4%) out of 117 tested top-ranked apps which have implemented authentication schemes are subject to this threat. Our study should raise the awareness of app developers and protocol analysts about this attack vector."
  },
  "automating-linux-malware-analysis-using-limon-sandbox": {
    "author": "monnappa-k-a",
    "description": "A number of devices are running Linux due to its flexibility and open source nature. This has made Linux platform the target for malware attacks, so it becomes important to analyze the Linux malware. Today, there is a need to analyze Linux malwares in an automated way to understand its capabilities.Limon is a sandbox developed as a research project written in python, which automatically collects, analyzes, and reports on the run time indicators of Linux malware. It allows one to inspect the malware before execution, during execution, and after execution (post-mortem analysis) by performing static, dynamic and memory analysis using open source tools. Limon apart from displaying the characteristics of the ELF binary, analyzes the malware in a controlled environment, monitors its activities and its child processes to determine the nature and purpose of the malware. It determines the malware's process activity, interaction with the file system, network, memory, and also stores the analyzed artifacts for later analysis, which helps in post mortem analysis. Since Limon relies on open source tools, it's easy for any security analyst to setup a personal sandbox to perform Linux malware analysis. The presentation will touch on the implementation details of the sandbox and will present a video demo showing the analysis of a real world Linux malware samples using Limon.",
    "plaintextTitle": "Automating Linux Malware Analysis Using Limon Sandbox",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-KA-Automating-Linux-Malware-Analysis-Using-Limon-Sandbox.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-KA-Automating-Linux-Malware-Analysis-Using-Limon-Sandbox-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-KA-Automating-Linux-Malware-Analysis-Using-Limon-Sandbox-tool.zip",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=fSCKyF--tRs"
      }
    ],
    "youtubeDescription": "by Monnappa K A\n\nA number of devices are running Linux due to its flexibility and open source nature. This has made Linux platform the target for malware attacks, so it becomes important to analyze the Linux malware. Today, there is a need to analyze Linux malwares in an automated way to understand its capabilities.\n\nLimon is a sandbox developed as a research project written in python, which automatically collects, analyzes, and reports on the run time indicators of Linux malware. It allows one to inspect the malware before execution, during execution, and after execution (post-mortem analysis) by performing static, dynamic and memory analysis using open source tools. Limon apart from displaying the characteristics of the ELF binary, analyzes the malware in a controlled environment, monitors its activities and its child processes to determine the nature and purpose of the malware. It determines the malware's process activity, interaction with the file system, network, memory, and also stores the analyzed artifacts for later analysis, which helps in post mortem analysis. Since Limon relies on open source tools, it's easy for any security analyst to setup a personal sandbox to perform Linux malware analysis. The presentation will touch on the implementation details of the sandbox and will present a video demo showing the analysis of a real world Linux malware samples using Limon."
  },
  "bypassing-local-windows-authentication-to-defeat-full-disk-encryption": {
    "author": "ian-haken",
    "description": "In 2007, starting with Windows Vista, Microsoft began shipping a full disk encryption feature named BitLocker with professional and enterprise versions of Windows. Full disk encryption helps protect users from threats that include physical access. This can, for example, prevent the exposure of proprietary information and account credentials if a company laptop is lost, stolen, or even left temporarily accessible to an attacker.Under the hood, BitLocker utilizes a system's Trusted Platform Module (TPM) to store the secret key used for full disk encryption, and is able to use the features of the TPM to safely provide transparent, passwordless decryption of the disk on boot. Because BitLocker can work transparentlywithout any extra passwords or prompts on bootmany enterprises have opted to enable this form of full disk encryption as a part of their data loss prevention strategy.However, in this presentation, I will demonstrate how one can abuse physical access in order to bypass Windows authenticationthus accessing all of a user's dataeven when the disk is fully encrypted by BitLocker. This platform-independent attack effectively bypasses all of the protection offered by BitLocker, reliably and quickly allowing an attacker to retrieve all of the sensitive data on the machine, all without having to perform any cryptographic brute-forcing or hardware manipulation.",
    "plaintextTitle": "Bypassing Local Windows Authentication to Defeat Full Disk Encryption",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Haken-Bypassing-Local-Windows-Authentication-To-Defeat-Full-Disk-Encryption.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Haken-Bypassing-Local-Windows-Authentication-To-Defeat-Full-Disk-Encryption-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=eRuca6eAdFM"
      }
    ],
    "youtubeDescription": "by Ian Haken\n\nIn 2007, starting with Windows Vista, Microsoft began shipping a full disk encryption feature named BitLocker with professional and enterprise versions of Windows. Full disk encryption helps protect users from threats that include physical access. This can, for example, prevent the exposure of proprietary information and account credentials if a company laptop is lost, stolen, or even left temporarily accessible to an attacker.\n\nUnder the hood, BitLocker utilizes a system's Trusted Platform Module (TPM) to store the secret key used for full disk encryption, and is able to use the features of the TPM to safely provide transparent, passwordless decryption of the disk on boot. Because BitLocker can work transparentlywithout any extra passwords or prompts on bootmany enterprises have opted to enable this form of full disk encryption as a part of their data loss prevention strategy.\n\nHowever, in this presentation, I will demonstrate how one can abuse physical access in order to bypass Windows authenticationthus accessing all of a user's dataeven when the disk is fully encrypted by BitLocker. This platform-independent attack effectively bypasses all of the protection offered by BitLocker, reliably and quickly allowing an attacker to retrieve all of the sensitive data on the machine, all without having to perform any cryptographic brute-forcing or hardware manipulation."
  },
  "bypassing-self-encrypting-drives-sed-in-enterprise-environments": {
    "author": "daniel-boteanu",
    "description": "For years, Full-Disk Encryption (FDE) solutions have been advertised as the \"silver bullet\" solution to protect against the unauthorized disclosure of sensitive data at rest. Hardware-based FDE, known as Self-Encrypting Drives (SED), have reportedly zero overhead and enhanced security in contrast to software encryption alternatives and have already been adopted by organizations across the world.   Unknowingly, organizations using SED have been sitting on a critical exposure to their data that they thought was encrypted.  This session will explore SED solutions, a newly discovered vulnerability that allows you to circumvent their protection mechanisms and how organizations can protect themselves against this new threat.",
    "plaintextTitle": "Bypassing Self-Encrypting Drives (SED) in Enterprise Environments",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Boteanu-Bypassing-Self-Encrypting-Drives-SED-In-Enterprise-Environments.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Boteanu-Bypassing-Self-Encrypting-Drives-SED-In-Enterprise-Environments-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=beMtNM7nwfQ"
      }
    ],
    "youtubeDescription": "by Daniel Boteanu  &  Kevvie Fowler\n\nFor years, Full-Disk Encryption (FDE) solutions have been advertised as the \"silver bullet\" solution to protect against the unauthorized disclosure of sensitive data at rest. Hardware-based FDE, known as Self-Encrypting Drives (SED), have reportedly zero overhead and enhanced security in contrast to software encryption alternatives and have already been adopted by organizations across the world.\n\nUnknowingly, organizations using SED have been sitting on a critical exposure to their data that they thought was encrypted.\nThis session will explore SED solutions, a newly discovered vulnerability that allows you to circumvent their protection mechanisms and how organizations can protect themselves against this new threat."
  },
  "commix-detecting-and-exploiting-command-injection-flaws": {
    "author": "anastasios-stasinopoulos",
    "description": "Command injections are prevalent to any application independently of its operating system that hosts the application or the programming language that the application itself is developed. The impact of command injection attacks ranges from loss of data confidentiality and integrity to unauthorized remote access to the system that hosts the vulnerable application. A prime example of a real, infamous command injection vulnerability that clearly depicts the threats of this type of code injection was the recently discovered Shellshock bug. Despite the prevalence and the high impact of the command injection attacks, little attention has been given by the research community to this type of code injection. In particular, we have observed that although there are many software tools to detect and exploit other types of code injections such as SQL injections or Cross Site Scripting, to the best of our knowledge there is no dedicated and specialized software application that detects and exploits automatically command injection attacks. This talk attempts to fill this gap by proposing an open source tool that automates the process of detecting and exploiting command injection flaws on web applications, named as commix, (COMMand Injection eXploitation). This tool supports a plethora of functionalities, in order to cover several exploitation scenarios. Moreover, Commix is capable of detecting, with a high success rate, whether a web application is vulnerable to command injection attacks. Finally, during the evaluation of the tool, we have detected several 0-day vulnerabilities in applications.  Overall, the contributions of this work are: a) We provide a comprehensive analysis and categorization of command injection attacks; b) We present and analyze our open source tool that automates the process of detecting and exploiting command injection vulnerabilities; c) We will reveal (during our presentation) several 0-day command injection vulnerabilities that Commix detected on various web based applications from home services (embedded devices) to web servers.",
    "plaintextTitle": "Commix: Detecting and Exploiting Command Injection Flaws",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Stasinopoulos-Commix-Detecting-And-Exploiting-Command-Injection-Flaws.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Stasinopoulos-Commix-Detecting-And-Exploiting-Command-Injection-Flaws-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=8U88YvLMYQo"
      }
    ],
    "youtubeDescription": "by Anastasios Stasinopoulos  &  Christoforos Ntantogian  &  Christos Xenakis\n\nCommand injections are prevalent to any application independently of its operating system that hosts the application or the programming language that the application itself is developed. The impact of command injection attacks ranges from loss of data confidentiality and integrity to unauthorized remote access to the system that hosts the vulnerable application. A prime example of a real, infamous command injection vulnerability that clearly depicts the threats of this type of code injection was the recently discovered Shellshock bug. Despite the prevalence and the high impact of the command injection attacks, little attention has been given by the research community to this type of code injection. In particular, we have observed that although there are many software tools to detect and exploit other types of code injections such as SQL injections or Cross Site Scripting, to the best of our knowledge there is no dedicated and specialized software application that detects and exploits automatically command injection attacks. This talk attempts to fill this gap by proposing an open source tool that automates the process of detecting and exploiting command injection flaws on web applications, named as commix, (COMMand Injection eXploitation). This tool supports a plethora of functionalities, in order to cover several exploitation scenarios. Moreover, Commix is capable of detecting, with a high success rate, whether a web application is vulnerable to command injection attacks. Finally, during the evaluation of the tool, we have detected several 0-day vulnerabilities in applications.\n\nOverall, the contributions of this work are: a) We provide a comprehensive analysis and categorization of command injection attacks; b) We present and analyze our open source tool that automates the process of detecting and exploiting command injection vulnerabilities; c) We will reveal (during our presentation) several 0-day command injection vulnerabilities that Commix detected on various web based applications from home services (embedded devices) to web servers."
  },
  "continuous-intrusion-why-ci-tools-are-an-attackers-best-friends": {
    "author": "nikhil-mittal",
    "description": "Continuous Integration (CI) tools provide an excellent attack surface due to the no/poor security controls, distributed build management capability, and level of access/privileges in an enterprise.  This talk looks at the CI tools from an attacker's perspective and to use them as portals for getting a foothold and lateral movement. We will see how to execute attacks like command and script execution, credentials stealing, privilege escalation to not only compromise the build process but the underlying operating system and even entire Windows domains. No memory corruption bugs will be exploited and only the features of the CI tools will be used.  Popular CI tools, open source as well as proprietary will be the targets. The talk will be full of live demonstrations.",
    "plaintextTitle": "Continuous Intrusion: Why CI tools are an Attackers Best Friends",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Mittal-Continuous-Intrusion-Why-CI-Tools-Are-An-Attackers-Best-Friend.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=wHJyGqsAi5U"
      }
    ],
    "youtubeDescription": "Continuous Integration (CI) tools provide excellent attack surfaces due to no/poor security controls, the distributed build management capability and the level of access/privileges in an enterprise.\n\nThis talk looks at the CI tools from an attacker’s perspective, using them as portals to get a foothold and for lateral movement. We will show how to execute attacks like command and script execution, credentials stealing and privilege escalation; how to not only compromise the build process but the underlying Operating System and even entire Windows domains. No memory corruption bugs will be exploited and only the features of the CI tools will be used.\n\nPopular CI tools, open source as well as proprietary, will be the targets. The talk will be full of live demonstrations.\n\nNikhil Mittal is a hacker, infosec researcher, speaker and enthusiast. His area of interest includes penetration testing, attack research, defence strategies and post exploitation research. He has 6+ years of experience in Penetration Testing for his clients, including many global corporate giants. He is also a member of Red teams of selected clients.\n\nHe specializes in assessing security risks in secure environments which require novel attack vectors and an \"out of the box\" approach. He has worked extensively on using Human Interface Devices in Penetration Tests and PowerShell for post exploitation. He is creator of Kautilya, a toolkit which makes it easy to use Teensy in penetration tests and Nishang, a post exploitation framework in PowerShell. In his spare time, Nikhil researches on new attack methodologies and updates his tools and frameworks.\nNikhil has held trainings and boot camps for various corporate clients (in US, Europe and SE Asia), and at the world’s top information security conferences.\nHe has spoken at conferences like Defcon, BlackHat USA, BlackHat Europe, RSA China, Troopers, DeepSec, PHDays, BlackHat Abu Dhabi, Hackfest, ClubHack, EuSecWest and more.\nHe blogs at http://www.labofapenetrationtester.com/"
  },
  "cybercrime-in-the-deep-web": {
    "author": "marco-balduzzi",
    "description": "All content not indexed by traditional web-based search engines is known as the DeepWeb. Wrongly been associated only with the Onion Routing (TOR), the DeepWeb's ecosystem comprises a number of other anonymous and decentralized networks. The Invisible Internet Project (I2P), FreeNET, and Alternative Domain Names (like Name.Space and OpenNic) are examples of networks leveraged by bad actors to host malware, high-resilient botnets, underground forums and bitcoin-based cashout systems (e.g., for cryptolockers).We designed and implemented a prototype system called DeWA for the automated collection and analysis of the DeepWeb, with the goal of quickly identifying new threats as soon they appear.In this talk, we provide concrete examples of how using DeWA to detect, e.g., trading of illicit and counterfeit goods, underground forums, privacy leaks, hidden dropzones, malware hosting and TOR-based botnets.",
    "plaintextTitle": "Cybercrime in the Deep Web",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Balduzzi-Cybercrmine-In-The-Deep-Web.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Balduzzi-Cybercrmine-In-The-Deep-Web-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=TdE6N07ACRU"
      }
    ],
    "youtubeDescription": "Marco Balduzzi\n\nCybercrime in the deep web\n\nABSTRACT:\nALL CONTENT NOT INDEXED BY TRADITIONAL WEB-BASED SEARCH ENGINES IS KNOWN AS THE DEEPWEB. WRONGLY BEEN ASSOCIATED ONLY WITH THE ONION ROUTING (TOR), THE DEEPWEB’S ECOSYSTEM COMPRISES A NUMBER OF OTHER ANONYMOUS AND DECENTRALIZED NETWORKS. THE INVISIBLE INTERNET PROJECT (I2P), FREENET, AND ALTERNATIVE DOMAIN NAMES (LIKE NAME.SPACE AND OPENNIC) ARE EXAMPLES OF NETWORKS LEVERAGED BY BAD ACTORS TO HOST MALWARE, HIGH-RESILIENT BOTNETS, UNDERGROUND FORUMS AND BITCOIN-BASED CASHOUT SYSTEMS (E.G., FOR CRYPTOLOCKERS).\nWE DESIGNED AND IMPLEMENTED A PROTOTYPE SYSTEM CALLED DEWA FOR THE AUTOMATED COLLECTION AND ANALYSIS OF THE DEEPWEB, WITH THE GOAL OF QUICKLY IDENTIFYING NEW THREATS AS SOON THEY APPEAR.\nIN THIS TALK, WE PROVIDE CONCRETE EXAMPLES OF HOW USING DEWA TO DETECT, E.G., TRADING OF ILLICIT AND COUNTERFEIT GOODS, UNDERGROUND FORUMS, PRIVACY LEAKS, HIDDEN DROPZONES, MALWARE HOSTING AND TOR-BASED BOTNETS.\n\n\nSito dell'evento:\nwww.hackinbo.it\n\nPagina Facebook:\nhttps://www.facebook.com/hackinbo/?fref=ts\n\nPagina Twitter:\nhttps://www.twitter.com/hackinbo\n\nLo streaming e i video sono stati realizzati da Segment: https://wearesegment.com/\n\nVuoi diventare SPONSOR dell'evento? Scrivi a: info@hackinbo.it\n\n\n\nHackInBo® - All Right Reserved 2016 - Tutti i Diritti Riservati."
  },
  "cybersecurity-for-oil-and-gas-industries-how-hackers-can-manipulate-oil-stocks": {
    "author": "alexander-polyakov",
    "description": "The industries most plagued by cyber-attacks are oil and gas. Several attacks against the infrastructure of oil firms like Aramco have been executed by the Anonymous operation #OpPetrol that targeted major oil companies. The oil and gas sectors are also threatened by frauds where there is blatant theft of resources during upstream or downstream processes. SAP and Oracle systems are widely used in oil and gas industries, and there are even specific SAP modules for oil and gas such as SAP Upstream Operations Management (UOM) or SAP PRA (Production and Revenue Accounting), Oracle Field Service, and Oracle Enterprise Asset Management.Cyber-attacks on SAP systems belonging to oil and gas industries can be critical themselves, however they are even more lethal because of trust connections in systems responsible for asset management (such as SAP xMII and SAP Plant Connectivity) and systems responsible for OT (such as ICS, SCADA and Field Devices). Moreover, SAP and Oracle serves business processes like Digital Oilfield Operations, Hydrocarbon Supply Chain and Operational Integrity that are extremely critical themselves and are vulnerable to attacks. For example, hydrocarbon volumes, which are the basis for pricing, excise duty, and transportation fees, fluctuate depending on environmental temperature and pressure conditions. An attacker can easily modify these conditions. As it requires masses and weights for product valuation, and weighing is not possible, we must derive them from volumes at ambient temperature and pressure conditions, requiring complex conversion calculations of the observed volumes at each custody transfer point. These complex features put all infrastructure at high risk if an attacker can get access to these data.Our talk, based on a several case studies conducted during research and professional services, will shed a light on this highly critical and very dark area. We will discuss specific attacks and vulnerabilities related to oil and gas companies as well as guidelines and processes on how to avoid them.\n",
    "plaintextTitle": "Cybersecurity for Oil and Gas Industries: How Hackers Can Manipulate Oil Stocks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Polyakov-Cybersecurity-For-Oil-And-Gas-Industries-How-Hackers-Can-Manipulate-Oil-Stocks.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Polyakov-Cybersecurity-For-Oil-And-Gas-Industries-How-Hackers-Can-Manipulate-Oil-Stocks-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=NPdARknmJ4E"
      }
    ],
    "youtubeDescription": "by Alexander Polyakov & Mathieu Geli\n\nThe industries most plagued by cyber-attacks are oil and gas. Several attacks against the infrastructure of oil firms like Aramco have been executed by the Anonymous operation #OpPetrol that targeted major oil companies. The oil and gas sectors are also threatened by frauds where there is blatant theft of resources during upstream or downstream processes. SAP and Oracle systems are widely used in oil and gas industries, and there are even specific SAP modules for oil and gas such as SAP Upstream Operations Management (UOM) or SAP PRA (Production and Revenue Accounting), Oracle Field Service, and Oracle Enterprise Asset Management.\n\nCyber-attacks on SAP systems belonging to oil and gas industries can be critical themselves, however they are even more lethal because of trust connections in systems responsible for asset management (such as SAP xMII and SAP Plant Connectivity) and systems responsible for OT (such as ICS, SCADA and Field Devices). Moreover, SAP and Oracle serves business processes like Digital Oilfield Operations, Hydrocarbon Supply Chain and Operational Integrity that are extremely critical themselves and are vulnerable to attacks. For example, hydrocarbon volumes, which are the basis for pricing, excise duty, and transportation fees, fluctuate depending on environmental temperature and pressure conditions. An attacker can easily modify these conditions. As it requires masses and weights for product valuation, and weighing is not possible, we must derive them from volumes at ambient temperature and pressure conditions, requiring complex conversion calculations of the observed volumes at each custody transfer point. These complex features put all infrastructure at high risk if an attacker can get access to these data.\n\nOur talk, based on a several case studies conducted during research and professional services, will shed a light on this highly critical and very dark area. We will discuss specific attacks and vulnerabilities related to oil and gas companies as well as guidelines and processes on how to avoid them."
  },
  "defending-against-malicious-application-compatibility-shims": {
    "author": "sean-pierce",
    "description": "The Application Compatibility Toolkit (ACT) is an important component of the Microsoft Application Compatibility ecosystem and holds a position of considerable tactical value on modern computer systems, but it is currently not well-known to those in the security industry. Microsoft specifically designed the ACT to intercept application API calls, alter the Portable Executable (PE) file loading process, and subvert the integrity of a number of key systems which ironically is the type of functionality seen in advanced rootkits. In my talk, I will demonstrate how the ACT is used to create Shim Database Files (sdb files / shims) which are simple to produce, easy to install, flexible, and stealthy. While the ACT offers an excellent post-exploitation avenue for novice attackers, a number of sophisticated actors have been observed leveraging the Application Compatibility Framework for advanced persistence and privilege escalation. I will go on to show far more advanced techniques such as in-memory patching, malware obfuscation, evasion, and system integrity subversion using malicious shims.  To aid defenders, I have released a number of tools that detect and prevent shimming. I will also demonstrate the offensive capabilities of malicious shims, along with numerous examples of how defenders can employ my publicly available countermeasures. These tools can be used by enterprise wide defenders/responders, single host administrators, and application developers to better protect their environments.   I will also demonstrate triage techniques that defenders can use for quick analysis via publicly available tools to determine an sdb file's general functionality.",
    "plaintextTitle": "Defending Against Malicious Application Compatibility Shims",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Pierce-Defending-Against-Malicious-Application-Compatibility-Shims.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Pierce-Defending-Against-Malicious-Application-Compatibility-Shims-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=QihKhGHokF4"
      }
    ],
    "youtubeDescription": "by Sean Pierce\n\nThe Application Compatibility Toolkit (ACT) is an important component of the Microsoft Application Compatibility ecosystem and holds a position of considerable tactical value on modern computer systems, but it is currently not well-known to those in the security industry. Microsoft specifically designed the ACT to intercept application API calls, alter the Portable Executable (PE) file loading process, and subvert the integrity of a number of key systems which ironically is the type of functionality seen in advanced rootkits. In my talk, I will demonstrate how the ACT is used to create Shim Database Files (sdb files / shims) which are simple to produce, easy to install, flexible, and stealthy. While the ACT offers an excellent post-exploitation avenue for novice attackers, a number of sophisticated actors have been observed leveraging the Application Compatibility Framework for advanced persistence and privilege escalation. I will go on to show far more advanced techniques such as in-memory patching, malware obfuscation, evasion, and system integrity subversion using malicious shims.\n\nTo aid defenders, I have released a number of tools that detect and prevent shimming. I will also demonstrate the offensive capabilities of malicious shims, along with numerous examples of how defenders can employ my publicly available countermeasures. These tools can be used by enterprise wide defenders/responders, single host administrators, and application developers to better protect their environments.\n\nI will also demonstrate triage techniques that defenders can use for quick analysis via publicly available tools to determine an sdb file's general functionality."
  },
  "even-the-lastpass-will-be-stolen-deal-with-it": {
    "author": "alberto-garcia",
    "description": "Password managers have become very popular as a solution to avoid reusing passwords. With that in mind, password managers are a prized target for pentesters and attackers. If a password manager is compromised, the consequences are catastrophic as all the victim's secrets reside in the vault. One breach to get it all.  LastPass is arguably one of the most popular password managers in the market. Over 10,000 corporate customers ranging in various sizes including Fortune 500's rely on LastPass to protect all their data.  Research has been done on how to attack password managers but it has all focused on leaking specific credentials from the vault. LastPass not only stores credentials, but also bank accounts, ssh keys, personal records, etc. Therefore, we focused our research on finding the silver bullet to gain full access to the vault and steal all the secrets. By reversing LastPass plugins, we found several ways to do so. We will demonstrate how it is possible to steal and decrypt the master password. We also found how it is possible to abuse account recovery to ultimately obtain the encryption key for the vault. In addition, we discovered ways to bypass 2 factor authentication.  We wrote a Metasploit module that takes care of all of this. The module is able to search for all LastPass data in the machine comprising all accounts present. It will find and decrypt the master password, it will derive the encryption key for the vault, it will find the 2FA trust token and it will steal the vault so it can be decrypted. All secrets in the vault will be printed out for the pen-tester's satisfaction.",
    "plaintextTitle": "Even the LastPass Will be Stolen Deal with It!",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Vigo-Even-The-Lastpass-Will-Be-Stolen-deal-with-it.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=MlmEiT5bhxg"
      }
    ],
    "youtubeDescription": "by Alberto Garcia  &  Martin Vigo\n\nPassword managers have become very popular as a solution to avoid reusing passwords. With that in mind, password managers are a prized target for pentesters and attackers. If a password manager is compromised, the consequences are catastrophic as all the victim's secrets reside in the vault. One breach to get it all.\n\nLastPass is arguably one of the most popular password managers in the market. Over 10,000 corporate customers ranging in various sizes including Fortune 500's rely on LastPass to protect all their data.\n\nResearch has been done on how to attack password managers but it has all focused on leaking specific credentials from the vault. LastPass not only stores credentials, but also bank accounts, ssh keys, personal records, etc. Therefore, we focused our research on finding the silver bullet to gain full access to the vault and steal all the secrets. By reversing LastPass plugins, we found several ways to do so. We will demonstrate how it is possible to steal and decrypt the master password. We also found how it is possible to abuse account recovery to ultimately obtain the encryption key for the vault. In addition, we discovered ways to bypass 2 factor authentication.\n\nWe wrote a Metasploit module that takes care of all of this. The module is able to search for all LastPass data in the machine comprising all accounts present. It will find and decrypt the master password, it will derive the encryption key for the vault, it will find the 2FA trust token and it will steal the vault so it can be decrypted. All secrets in the vault will be printed out for the pen-tester's satisfaction."
  },
  "exploiting-adobe-flash-player-in-the-era-of-control-flow-guard": {
    "author": "francisco-falcon",
    "description": "Adobe Flash Player, one of the most ubiquitous pieces of software, is integrated into the operating system on Windows 8.1 and Windows 10. Along with the introduction of Control Flow Guard (CFG) - Microsoft's newest exploit mitigation technology - in November 2014, Flash Player binaries provided by Microsoft are now protected by CFG, which adds a check before every indirect call in the code in order to verify that the destination address of that call is one of the locations identified as \"safe\" at compile time. Gaining code execution isn't as simple as overwriting the vtable of an object and calling one of its virtual methods anymore.  We'll start this presentation by discussing an exploitation technique which leverages the Flash Player's JIT compiler in order to bypass CFG, and how Microsoft and Adobe have hardened Flash Player's JIT compiler against this technique in the June 2015 security updates. Then, we are going to discuss three practical data-only attacks, showing how it is possible to take advantage of vulnerabilities in Flash Player while avoiding the mess of having to deal with CFG. One of these alternative payloads makes it possible to execute arbitrary commands on the vulnerable system without injecting shellcode nor using ROP. Interestingly, detecting and protecting against these data-only attacks can be challenging.  Although this talk is focused on the challenges of exploiting Flash Player vulnerabilities on CFG-enabled systems, the techniques and ideas discussed here may be applied against other software.",
    "plaintextTitle": "Exploiting Adobe Flash Player in the Era of Control Flow Guard",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Falcon-Exploiting-Adobe-Flash-Player-In-The-Era-Of-Control-Flow-Guard.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=OAaIpZXSoYQ"
      }
    ],
    "youtubeDescription": "by Francisco Falcon\n\nAdobe Flash Player, one of the most ubiquitous pieces of software, is integrated into the operating system on Windows 8.1 and Windows 10. Along with the introduction of Control Flow Guard (CFG) - Microsoft's newest exploit mitigation technology - in November 2014, Flash Player binaries provided by Microsoft are now protected by CFG, which adds a check before every indirect call in the code in order to verify that the destination address of that call is one of the locations identified as \"safe\" at compile time. Gaining code execution isn't as simple as overwriting the vtable of an object and calling one of its virtual methods anymore.\n\nWe'll start this presentation by discussing an exploitation technique which leverages the Flash Player's JIT compiler in order to bypass CFG, and how Microsoft and Adobe have hardened Flash Player's JIT compiler against this technique in the June 2015 security updates. Then, we are going to discuss three practical data-only attacks, showing how it is possible to take advantage of vulnerabilities in Flash Player while avoiding the mess of having to deal with CFG. One of these alternative payloads makes it possible to execute arbitrary commands on the vulnerable system without injecting shellcode nor using ROP. Interestingly, detecting and protecting against these data-only attacks can be challenging.\n\nAlthough this talk is focused on the challenges of exploiting Flash Player vulnerabilities on CFG-enabled systems, the techniques and ideas discussed here may be applied against other software."
  },
  "fuzzing-android-a-recipe-for-uncovering-vulnerabilities-inside-system-components-in-android": {
    "author": "alexandru-blanda",
    "description": "The presentation focuses on a fuzzing approach that can be used to uncover different types of vulnerabilities inside multiple core system components of the Android OS. The session will be targeted on exposing the general idea behind this approach and how it applies to several real-life targets from the Android OS with examples of actual discovered vulnerabilities. Some of the components that were targeted and found vulnerable: the Stagefright framework, the mediaserver process, the Android APK install process, the installd daemon, dex2oat, ART.The presentation will cover a number of topics starting with the actual fuzzing process with the data/seed generation processes and test case execution, the logging and triage mechanisms, addressing challenges such as bug reproducibility, sorting out unique issues and prioritizing issues based on their severity. The second part of the presentation will take the talk towards explaining the creation of several tools that have been developed using this methodology. The actual implementation of the tools will be discussed with focus on the more innovative technical details, as well as the issues discovered, CVE entries released and possible exploitable patterns. An insight of the results that will be discussed: thousands of crashes discovered, tens of unique issues, 6 CVE entries released by Google.",
    "plaintextTitle": "Fuzzing Android: A Recipe for Uncovering Vulnerabilities Inside System Components in Android",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Blanda-Fuzzing-Android-A-Recipe-For-Uncovering-Vulnerabilities-Inside-System-Components-In-Android.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Blanda-Fuzzing-Android-A-Recipe-For-Uncovering-Vulnerabilities-Inside-System-Components-In-Android-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=q_HibdrbIxo"
      }
    ],
    "youtubeDescription": "by Alexandru Blanda\n\nThe presentation focuses on a fuzzing approach that can be used to uncover different types of vulnerabilities inside multiple core system components of the Android OS. The session will be targeted on exposing the general idea behind this approach and how it applies to several real-life targets from the Android OS with examples of actual discovered vulnerabilities. Some of the components that were targeted and found vulnerable: the Stagefright framework, the mediaserver process, the Android APK install process, the installd daemon, dex2oat, ART.\n\nThe presentation will cover a number of topics starting with the actual fuzzing process with the data/seed generation processes and test case execution, the logging and triage mechanisms, addressing challenges such as bug reproducibility, sorting out unique issues and prioritizing issues based on their severity. The second part of the presentation will take the talk towards explaining the creation of several tools that have been developed using this methodology. The actual implementation of the tools will be discussed with focus on the more innovative technical details, as well as the issues discovered, CVE entries released and possible exploitable patterns. An insight of the results that will be discussed: thousands of crashes discovered, tens of unique issues, 6 CVE entries released by Google."
  },
  "going-auth-the-rails-on-a-crazy-train": {
    "author": "jeff-jarmoc",
    "description": "Rails has a strong foundation in convention over configuration. In this regard, Rails handles a lot of security related conventions for developers, keeping them safe from vulnerabilities such as SQL Injection, XSS, and CSRF out of the box. However, authentication and authorization logic is largely left up to the developer. It is here that the abilities of the framework hit the end of the track and it's up to the developers to keep themselves safe. In this talk, we take a look at patterns that we've seen across some of the largest Rails applications on the internet and cover common pitfalls that you as a security researcher and/or developer can watch out for. We will also be discussing and releasing a new dynamic analysis tool for Rails applications to help pentesters navigate through authentication and authorization solutions in Rails.",
    "plaintextTitle": "Going AUTH the Rails on a Crazy Train",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Jarmoc-Going-AUTH-The-Rails-On-A-Crazy-Train.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Jarmoc-Going-AUTH-The-Rails-On-A-Crazy-Train-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=U9VOlLKnt-Y"
      }
    ],
    "youtubeDescription": "by Jeff Jarmoc  &  Tomek Rabczak\n\nRails has a strong foundation in convention over configuration. In this regard, Rails handles a lot of security related conventions for developers, keeping them safe from vulnerabilities such as SQL Injection, XSS, and CSRF out of the box. However, authentication and authorization logic is largely left up to the developer. It is here that the abilities of the framework hit the end of the track and it's up to the developers to keep themselves safe. In this talk, we take a look at patterns that we've seen across some of the largest Rails applications on the internet and cover common pitfalls that you as a security researcher and/or developer can watch out for. We will also be discussing and releasing a new dynamic analysis tool for Rails applications to help pentesters navigate through authentication and authorization solutions in Rails."
  },
  "hey-man-have-you-forgotten-to-initialize-your-memory": {
    "author": "yuki-chen",
    "description": "When the rules for this year's Pwn2Own contest came out, there was only less than one month left for us to prepare for our Internet Explorer Exploit. It was not an easy task to pop up a calc on this year's IE target, where you need to conquer the 64-bit IE child process, the control flow guard (CFG) on windows 8.1 as well as the enhanced-protected mode (EPM) of IE11. This was the first time that 64-bit IE was used in the contest, which means more stronger ASLR that makes simple heap-spraying techinque does not work as it does on 32-bit process. Also on Windows 8.1, CFG is heavily used in user mode processes which makes it harder to transfer the execution-flow to our shellcode. And at last, we need to bypass the EPM sandbox without user interfaction and without re-starting/re-login the computer. We are glad that we finally made it, with two 0day vulnerabilities, which have already been patched by Microsfot in June 2015.  In this presentation, we will describe (for the first time) the details of the two vulnerabilities we used to take down 64-bit IE in this year's Pwn2Own. By going through the poc exploit, we will show how we achieved ASLR & CFG bypass and remote code execution in 64-bit IE with a single uninitialized memory bug. And, we will also discuss the TOCTOU vulnerability we used to bypass IE's EPM sandbox to achieve elevation of privilege.  Throughout the talk, we will describe several methods you may use to bypass exploit mitigtions (such as ASLR, CFG) on 64-bit IE, to achieve remote code execution with your memory corruption bug.",
    "plaintextTitle": "Hey Man Have You Forgotten to Initialize Your Memory?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Chen-Hey-Man-Have-You-Forgotten-To-Initialize-Your-Memory.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Chen-Hey-Man-Have-You-Forgotten-To-Initialize-Your-Memory-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=1XmK01Szie8"
      }
    ],
    "youtubeDescription": "by Yuki Chen  &  Linan Hao\n\nWhen the rules for this year's Pwn2Own contest came out, there was only less than one month left for us to prepare for our Internet Explorer Exploit. It was not an easy task to pop up a calc on this year's IE target, where you need to conquer the 64-bit IE child process, the control flow guard (CFG) on windows 8.1 as well as the enhanced-protected mode (EPM) of IE11.\nThis was the first time that 64-bit IE was used in the contest, which means more stronger ASLR that makes simple heap-spraying techinque does not work as it does on 32-bit process. Also on Windows 8.1, CFG is heavily used in user mode processes which makes it harder to transfer the execution-flow to our shellcode. And at last, we need to bypass the EPM sandbox without user interfaction and without re-starting/re-login the computer. We are glad that we finally made it, with two 0day vulnerabilities, which have already been patched by Microsfot in June 2015.\n\nIn this presentation, we will describe (for the first time) the details of the two vulnerabilities we used to take down 64-bit IE in this year's Pwn2Own. By going through the poc exploit, we will show how we achieved ASLR & CFG bypass and remote code execution in 64-bit IE with a single uninitialized memory bug. And, we will also discuss the TOCTOU vulnerability we used to bypass IE's EPM sandbox to achieve elevation of privilege.\n\nThroughout the talk, we will describe several methods you may use to bypass exploit mitigtions (such as ASLR, CFG) on 64-bit IE,\nto achieve remote code execution with your memory corruption bug."
  },
  "hiding-in-plain-sight-advances-in-malware-covert-communication-channels": {
    "author": "pierre-marc-bureau",
    "description": "Steganography, the art of concealing information in different types of medias, is a very old practice. Yet, it only recently started being used by malware operators on a large scale. Malware programmers and operators are increasing their efforts in developing covert communication channels between infected computers and their command and control servers. In addition to steganography, recent examples include hiding communication in inconspicuous network traffic such as DNS queries or HTTP 404 error messages.  When used properly, these covert communication channels can bypass many automated detection mechanisms and render malware communication difficult to detect and block. From an attacker's perspective, covert communication channels are a valuable addition because they allow messages to blend in with legitimate traffic and thus significantly lower the chance of being detected even when inspected by a human analyst.  This presentation studies recent advances in covert communication channels used by real-world malware. First, we will show how steganography has recently been used in three different malware families (Stegoloader, Vawtrak, and Lurk). We will dive into the implementation details on how steganography is implemented and discuss the strengths and weaknesses of each approach. Furthermore, we will detail and compare the usage of inconspicuous carrier protocols for covert communication channels in malware. Examples will span commodity cybercrime as well as targeted attack malware.  The cases that are discussed in this presentation are based on real life incidents. While it is easy to speculate how covert communication channels might be used by malicious actors, documentation of real-world cases is sparse. Yet, covert communication channels have arrived in both, the commodity cybercrime and targeted attack world. It is thus vital to understand the status-quo and identify current trends in cybercriminal and targeted attack malware. As such, we believe that it is mandatory to highlight what is currently being used in the wild.",
    "plaintextTitle": "Hiding in Plain Sight - Advances in Malware Covert Communication Channels",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Bureau-Hiding-In-Plain-Sight-Advances-In-Malware-Covert-Communication-Channels.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Bureau-Hiding-In-Plain-Sight-Advances-In-Malware-Covert-Communication-Channels-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=3o4sVGmf4Dk"
      }
    ],
    "youtubeDescription": "by Pierre-Marc Bureau  &  Christian Dietrich\n\nSteganography, the art of concealing information in different types of medias, is a very old practice. Yet, it only recently started being used by malware operators on a large scale. Malware programmers and operators are increasing their efforts in developing covert communication channels between infected computers and their command and control servers. In addition to steganography, recent examples include hiding communication in inconspicuous network traffic such as DNS queries or HTTP 404 error messages.\n\nWhen used properly, these covert communication channels can bypass many automated detection mechanisms and render malware communication difficult to detect and block. From an attacker's perspective, covert communication channels are a valuable addition because they allow messages to blend in with legitimate traffic and thus significantly lower the chance of being detected even when inspected by a human analyst.\n\nThis presentation studies recent advances in covert communication channels used by real-world malware. First, we will show how steganography has recently been used in three different malware families (Stegoloader, Vawtrak, and Lurk). We will dive into the implementation details on how steganography is implemented and discuss the strengths and weaknesses of each approach. Furthermore, we will detail and compare the usage of inconspicuous carrier protocols for covert communication channels in malware. Examples will span commodity cybercrime as well as targeted attack malware.\n\nThe cases that are discussed in this presentation are based on real life incidents. While it is easy to speculate how covert communication channels might be used by malicious actors, documentation of real-world cases is sparse. Yet, covert communication channels have arrived in both, the commodity cybercrime and targeted attack world. It is thus vital to understand the status-quo and identify current trends in cybercriminal and targeted attack malware. As such, we believe that it is mandatory to highlight what is currently being used in the wild."
  },
  "how-to-break-xml-encryption-automatically": {
    "author": "juraj-somorovsky",
    "description": "In recent years, XML Encryption has become a target of several new attacks. These attacks belong to the family of adaptive chosen-ciphertext attacks, and allow an adversary to decrypt symmetric and asymmetric XML ciphertexts, without knowing the secret keys. In order to protect XML Encryption implementations, the World Wide Web Consortium (W3C) published an updated version of the standard.  Unfortunately, most of the current XML Encryption implementations do not support the newest XML Encryption specification and offer different XML Security configurations to protect confidentiality of the exchanged messages. Resulting from the attack complexity, evaluation of the security configuration correctness becomes tedious and error prone. Validation of the applied countermeasures can only be made with numerous XML messages provoking incorrect behavior by decrypting XML content. Up to now, this validation was only manually possible.  In this talk, we give an overview on the analysis of chosen-ciphertext attacks on XML Encryption and design an algorithm to perform a vulnerability scan on arbitrary encrypted XML messages. The algorithm can automatically detect a vulnerability and exploit it to retrieve the plaintext of a message protected by XML Encryption. To assess practicability of our approach, we implemented an open source attack plugin for Web Service attacking tool called WS-Attacker. With the plugin, we discovered new vulnerabilities in four out of five analyzed Web Service implementations, including IBM Datapower or Apache CXF.",
    "plaintextTitle": "How to Break XML Encryption - Automatically",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Somorovsky-How-To-Break-XML-Encryption-Automatically.pdf",
        "type": "Slides"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Somorovsky-How-To-Break-XML-Encryption-Automatically-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://github.com/RUB-NDS/WS-Attacker",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=2IYv59C-Ho8"
      }
    ],
    "youtubeDescription": "In recent years, XML Encryption became a target of several new attacks. These attacks belong to the family of adaptive chosen-ciphertext attacks, and allow an adversary to decrypt symmetric and asymmetric XML ciphertexts, without knowing the secret keys. In order toprotect XML Encryption implementations, the World Wide Web Consortium (W3C) published an updated version of the standard.\n\nUnfortunately, most of the current XML Encryption implementations do not support the newest standard and offer different XML Security configurations to protect confidentiality of the exchanged messages. Resulting from the attack and specification complexity, evaluation of the security configuration correctness becomes tedious and error prone.\nIn this talk, we will first give an overview on Web Service specific attacks. Afterwards, we present attacks on XML Encryption and how to evaluate security of XML Encryption interfaces automatically. Our algorithm can detect a vulnerability and exploit it to retrieve a plaintext from an encrypted message. To assess practicability of our approach, we implemented an open source attack plugin for Web Service attacking tool called WS-Attacker. With the plugin, we discovered new security problems in four out of five analyzed Web Service implementations, including IBM Datapower or Apache CXF. \n\nDr. Juraj Somorovsky finished his PhD in the area of XML Security in 2013. In his thesis „On the Insecurity of XML Security\" he analyzes various cryptographic attacks on Web Services and presents practical countermeasures against these attacks, which were applied in XML Security specifications and in countless frameworks and applications. He presented his work at many scientific and industry conferences, including Usenix Security or OWASP Germany. Currently, he works as a Postdoc at the Ruhr University Bochum, and as a security specialist for his co-founded company 3curity GmbH."
  },
  "implementing-practical-electrical-glitching-attacks": {
    "author": "brett-giller",
    "description": "Techniques for glitching attacks are well known, but there is little information on how to implement a full reliable exploit on a target. In this talk, we attempt to implement and execute successful voltage and clock glitching attacks on a group of target devices. During the talk, we detail the necessary conditions required to create an affordable, and reliable exploit for a target device. Other attacks typically involve decapping the target chip, with the use of expensive equipment typically out of reach of the normal hobbyist. In contrast, electrical glitching is a technique that can be used non-invasively, and can allow attackers the ability to bypass normal software protections or generate exploitable conditions within the target device.  Electrical glitching involves modification of the clock or the voltage supplied to a chip. Clock glitching involves sending an out of cycle clock edge in order to make the chip advance to its next state prematurely, allowing us to bypass entire instructions. Voltage glitching involves increase or decreasing the voltage supplied to a chip in order to alter the state of the propagation delay experienced by the transistors in the chip, allowing you to corrupt register memory. The talk will involve studying and reproducing results from well known cases of electrical glitching such as the Xbox 360 clock glitch exploit.",
    "plaintextTitle": "Implementing Practical Electrical Glitching Attacks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Giller-Implementing-Electrical-Glitching-Attacks.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=irq-Y0LOIOc"
      }
    ],
    "youtubeDescription": "by Brett Giller\n\nTechniques for glitching attacks are well known, but there is little information on how to implement a full reliable exploit on a target. In this talk, we attempt to implement and execute successful voltage and clock glitching attacks on a group of target devices. During the talk, we detail the necessary conditions required to create an affordable, and reliable exploit for a target device. Other attacks typically involve decapping the target chip, with the use of expensive equipment typically out of reach of the normal hobbyist. In contrast, electrical glitching is a technique that can be used non-invasively, and can allow attackers the ability to bypass normal software protections or generate exploitable conditions within the target device.\n\nElectrical glitching involves modification of the clock or the voltage supplied to a chip. Clock glitching involves sending an out of cycle clock edge in order to make the chip advance to its next state prematurely, allowing us to bypass entire instructions. Voltage glitching involves increase or decreasing the voltage supplied to a chip in order to alter the state of the propagation delay experienced by the transistors in the chip, allowing you to corrupt register memory. The talk will involve studying and reproducing results from well known cases of electrical glitching such as the Xbox 360 clock glitch exploit."
  },
  "is-your-timespace-safe-time-and-position-spoofing-opensourcely": {
    "author": "wang-kang",
    "description": "We have found a way to produce GPS spoofing with an extremely low cost SDR device and both iPhone and Apple Watch could be affected. (Tech details have already been submitted to Apple Product Security Team. )  The map apps of iOS and Android can be cheated too, and you can even produce an Uber position spoofing, which make LBS apps vulnerable.  Futhermore, the time information of smart devices could be easily cheated, since those devices rely heavily on GPS based timing or NTP service (also based on GPS timing).  Additionally, we will examine other common positioning methods used by smart devices, such as iBeacon/BLE/WiFi.  We will give a demo on how we collect WiFi Access Point SSID data, and then make a fake WiFi environment to cheat WiFi positioning system of Android.  In the end, we will also give some suggestions in order to prevent such spoofing.",
    "plaintextTitle": "Is Your TimeSpace Safe?  - Time and Position Spoofing Opensourcely",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Kang-Is-Your-Timespace-Safe-Time-And-Position-Spoofing-Opensourcely.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Kang-Is-Your-Timespace-Safe-Time-And-Position-Spoofing-Opensourcely-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=XpivcmmoWQU"
      }
    ],
    "youtubeDescription": "by Wang Kang  &  Shuhua Chen  &  Aimin Pan\n\nWe have found a way to produce GPS spoofing with an extremely low cost SDR device and both iPhone and Apple Watch could be affected. (Tech details have already been submitted to Apple Product Security Team. )\n\nThe map apps of iOS and Android can be cheated too, and you can even produce an Uber position spoofing, which make LBS apps vulnerable.\n\nFuthermore, the time information of smart devices could be easily cheated, since those devices rely heavily on GPS based timing or NTP service (also based on GPS timing).\n\nAdditionally, we will examine other common positioning methods used by smart devices, such as iBeacon/BLE/WiFi.\n\nWe will give a demo on how we collect WiFi Access Point SSID data, and then make a fake WiFi environment to cheat WiFi positioning system of Android.\n\nIn the end, we will also give some suggestions in order to prevent such spoofing."
  },
  "lessons-from-defending-the-indefensible": {
    "author": "marek-majkowski",
    "description": "For the last year, we've been working hard to optimize CloudFlare's infrastructure to survive different types of denial of service attacks. If you have plenty of servers the usual advice of \"buy more bandwidth\" may be sufficient, but it certainly wasn't useful to us. At some point you need to do _something_ with the incoming traffic, and the servers have only so many CPU cycles.  In this talk, we'll share our experiences in defending our services. We'll go through many layers, from flowspec and sflow, to ethtool tweaks, kernel bypass techniques, iptables examples to useful sysctls. We'll touch on details such as: why increasing backlog queue size may hurt you, why your servers can't send more than 200k syn cookies per second, how to stop a botnet with iptables ipsets and hashlimits, when enabling conntrack makes sense or how to process 10M pps on a single commodity server. Our favorite defense techniques are using BPF, so we will spent a fair bit of time discussing this.  We'll discuss what we tried, what worked, what didn't, and why some of the technically sound ideas turned up to be totally impractical.  Our experience is in defending HTTP/S and DNS services, on which this talk will focus, but our techniques are applicable to the usual variety of DDoS'es like Chargen, SSDP, NTP or DNS reflection.",
    "plaintextTitle": "Lessons from Defending the Indefensible",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Majkowski-Lessons-From-Defending-The-Indefensible.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=pCVTEx1ouyk"
      }
    ],
    "youtubeDescription": "by Marek Majkowski\n\nFor the last year, we've been working hard to optimize CloudFlare's infrastructure to survive different types of denial of service attacks. If you have plenty of servers the usual advice of \"buy more bandwidth\" may be sufficient, but it certainly wasn't useful to us. At some point you need to do _something_ with the incoming traffic, and the servers have only so many CPU cycles.\n\nIn this talk, we'll share our experiences in defending our services. We'll go through many layers, from flowspec and sflow, to ethtool tweaks, kernel bypass techniques, iptables examples to useful sysctls. We'll touch on details such as: why increasing backlog queue size may hurt you, why your servers can't send more than 200k syn cookies per second, how to stop a botnet with iptables ipsets and hashlimits, when enabling conntrack makes sense or how to process 10M pps on a single commodity server. Our favorite defense techniques are using BPF, so we will spent a fair bit of time discussing this.\n\nWe'll discuss what we tried, what worked, what didn't, and why some of the technically sound ideas turned up to be totally impractical.\n\nOur experience is in defending HTTP/S and DNS services, on which this talk will focus, but our techniques are applicable to the usual variety of DDoS'es like Chargen, SSDP, NTP or DNS reflection."
  },
  "locknote-conclusions-and-key-takeaways-from-black-hat-europe-2015": {
    "author": "jeff-moss",
    "description": "At the close of this year's conference, join Black Hat Founder Jeff Moss and members of the esteemed Black Hat Review Board for an insightful conversation on the most pressing issues facing the InfoSec community. This Locknote will feature a candid discussion on the key takeaways coming out of Black Hat Europe and how these trends will impact future InfoSec strategies.",
    "plaintextTitle": "Locknote: Conclusions and Key Takeaways from Black Hat Europe 2015",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=zyjCcup0zAE"
      }
    ],
    "youtubeDescription": "by Jeff Moss  &  Marion Marschalek  &  Haroon Meer  &  Jennifer Savage\n\nAt the close of this year's conference, join Black Hat Founder Jeff Moss and members of the esteemed Black Hat Review Board for an insightful conversation on the most pressing issues facing the InfoSec community. This Locknote will feature a candid discussion on the key takeaways coming out of Black Hat Europe and how these trends will impact future InfoSec strategies."
  },
  "lte-and-imsi-catcher-myths": {
    "author": "ravishankar-borgaonkar",
    "description": "It  is true that LTE (4G) is more secure than its old generations GSM (2G) & UMTS (3G). In theory, most of the traditional IMSI catchers would not work in a straightforward manner against LTE-based mobile phones due to LTE's enhanced security mechanisms. However, in practice, it is possible to bypass these LTE security features, due to vulnerabilities in baseband software and in deployed LTE networks. In this talk, we build an LTE IMSI catcher and show how most popular phones fail when they are on LTE networks.",
    "plaintextTitle": "LTE & IMSI Catcher Myths",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Borgaonkar-LTE-And-IMSI-Catcher-Myths.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Borgaonkar-LTE-And-IMSI-Catcher-Myths-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=t6q97Vzu5Uk"
      }
    ],
    "youtubeDescription": "by Ravishankar Borgaonkar  &  Altaf Shaik  &  N. Asokan  &  Valtteri Niemi  &  Jean-Pierre Seifert\n\nIt is true that LTE (4G) is more secure than its old generations GSM (2G) & UMTS (3G). In theory, most of the traditional IMSI catchers would not work in a straightforward manner against LTE-based mobile phones due to LTE's enhanced security mechanisms. However, in practice, it is possible to bypass these LTE security features, due to vulnerabilities in baseband software and in deployed LTE networks. In this talk, we build an LTE IMSI catcher and show how most popular phones fail when they are on LTE networks."
  },
  "new-and-newly-changed-fully-qualified-domain-names-a-view-of-worldwide-changes-to-the-internets-dns": {
    "author": "paul-vixie",
    "description": "The Domain Name System (DNS) is highly dynamic, and changes to it are continually taking place.   For example, new base domain names get registered and used for the first time, new resource records (and new resource record types such as MX, PTR, AAAA) get created within those base domains, and resource records get set to new values. A single domain can have up to 100 resource records returned at once.  Historically, all of those changes were largely overlooked in the flood of DNS traffic available to security analysts and DNS researchers from DNS-data sharing sites until now. In this presentation, Dr. Paul Vixie will discuss a ground-breaking approach that tames this information fire hose - the creation of two winnowed, real-time data streams, one consisting of newly-observed fully-qualified domain names, and another of DNS changes.   These new streams make it easy to identify numerous security-relevant DNS changes. For example, if a prominent web server is subject to a DNS poisoning attack or its name servers are changed without authorization at the registrar, that hijacked web server will show up in these streams as having experienced a \"DNS change.\" Spam sites that formerly used DNS wildcarding in an attempt to \"fly under the radar\" are now easily identified, since each of their new pseudo-random Fully Qualified Domain Names (FQDN)s gets tagged as being new. Similarly, operators of fast flux or double fast flux networks can no longer hide.  Dr. Vixie will provide practical examples of how this innovative new approach will allow for more timely and effective approaches to combating malicious Internet behavior, including significantly improving brand protection and anti-phishing controls, and increasing situational awareness.  He will also discuss limitations associated with this approach, including filtering choices, and limitations to the paradigm and his talk will include a demo with Q&A.",
    "plaintextTitle": "New (and Newly-Changed) Fully Qualified Domain Names:  A View of Worldwide Changes to the Internets DNS",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Vixie-New-And-Newly-Changed-Fully-Qualified-Domain-Names-A-View-Of-Worldwide-Changes-To-The-Internets-DNS.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=onvpji8fZBU"
      }
    ],
    "youtubeDescription": "by Paul Vixie\n\nThe Domain Name System (DNS) is highly dynamic, and changes to it are continually taking place.\n\nFor example, new base domain names get registered and used for the first time, new resource records (and new resource record types such as MX, PTR, AAAA) get created within those base domains, and resource records get set to new values. A single domain can have up to 100 resource records returned at once.\n\nHistorically, all of those changes were largely overlooked in the flood of DNS traffic available to security analysts and DNS researchers from DNS-data sharing sites until now. In this presentation, Dr. Paul Vixie will discuss a ground-breaking approach that tames this information fire hose - the creation of two winnowed, real-time data streams, one consisting of newly-observed fully-qualified domain names, and another of DNS changes.\n\nThese new streams make it easy to identify numerous security-relevant DNS changes. For example, if a prominent web server is subject to a DNS poisoning attack or its name servers are changed without authorization at the registrar, that hijacked web server will show up in these streams as having experienced a \"DNS change.\" Spam sites that formerly used DNS wildcarding in an attempt to \"fly under the radar\" are now easily identified, since each of their new pseudo-random Fully Qualified Domain Names (FQDN)s gets tagged as being new. Similarly, operators of fast flux or double fast flux networks can no longer hide.\n\nDr. Vixie will provide practical examples of how this innovative new approach will allow for more timely and effective approaches to combating malicious Internet behavior, including significantly improving brand protection and anti-phishing controls, and increasing situational awareness.\n\nHe will also discuss limitations associated with this approach, including filtering choices, and limitations to the paradigm and his talk will include a demo with Q&A."
  },
  "new-tool-for-discovering-flash-player-0-day-attacks-in-the-wild-from-various-channels": {
    "author": "peter-pi",
    "description": "2015 is the Year of Flash. Zero day attacks found in 2015 are almost always using flash player.In 2013 and 2014, JAVA and IE were the most popular attack targets for PCs. Oracle introduced a pop-up window to escape from the attack spotlight. Microsoft introduced isolated heap and memory protector to avoid huge attacks from UAF bugs in the second half of 2014. Based on these findings in late 2014, I predicted that 2015 would be the Year of the Flash Attack. Armed with this knowledge, I worked to discover several flash 0-day attacks. The most important thing to discover with flash 0-day attacks is how to get effective samples in the wild, and the second important task is how to identify 0-days effectively from these samples which maybe very large data sets. In this session, I will detail the following points:",
    "plaintextTitle": "New Tool for Discovering Flash Player 0-day Attacks in the Wild from Various Channels",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Pi-New-Tool-For-Discovering-Flash-Player-0-day-Attacks-In-The-Wild-From-Various-Channels.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Pi-New-Tool-For-Discovering-Flash-Player-0-day-Attacks-In-The-Wild-From-Various-Channels-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5xMu5Ye_v3Y"
      }
    ],
    "youtubeDescription": "by Peter Pi\n\n2015 is the Year of Flash. Zero day attacks found in 2015 are almost always using flash player.\n\nIn 2013 and 2014, JAVA and IE were the most popular attack targets for PCs. Oracle introduced a pop-up window to escape from the attack spotlight. Microsoft introduced isolated heap and memory protector to avoid huge attacks from UAF bugs in the second half of 2014. Based on these findings in late 2014, I predicted that 2015 would be the Year of the Flash Attack. Armed with this knowledge, I worked to discover several flash 0-day attacks. The most important thing to discover with flash 0-day attacks is how to get effective samples in the wild, and the second important task is how to identify 0-days effectively from these samples which maybe very large data sets. In this session, I will detail the following points:\n\n    The various channels I used to get flash samples in the wild.\n    The process I used to identify 0-day samples from these big sets of data.\n    The tool I used to detect flash 0-day attack samples with extremely low false positive alerts."
  },
  "panel-what-you-need-to-know-about-the-changing-regulatory-landscape-in-information-security": {
    "author": "vincenzo-iozzo",
    "description": "The past two years have seen an increasing amount of scrutiny of the Information Security industry by policy makers around the world. The Wassenaar agreement and the EU Dual Use regulation are just two examples of the type of policy challenges that we face as the industry matures. What has been clear from these recent experiences is that there is a fundamental lack of communication and understanding between the parties involved and fostering communication will be essential to tackle future regulatory efforts. Join us for a panel that brings together policy makers, civil society and industry experts to examine the current status of the regulatory environment in Europe and the impact on our community.",
    "plaintextTitle": "Panel: What You Need to Know About the Changing Regulatory Landscape in Information Security",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=PbvSCHxKIQk"
      }
    ],
    "youtubeDescription": "by Vincenzo Iozzo  &  Dr. Richard Tynan  &  Halvar Flake  &  Paul Timmers  &  Marietje Schaake\n\nThe past two years have seen an increasing amount of scrutiny of the Information Security industry by policy makers around the world. The Wassenaar agreement and the EU Dual Use regulation are just two examples of the type of policy challenges that we face as the industry matures. What has been clear from these recent experiences is that there is a fundamental lack of communication and understanding between the parties involved and fostering communication will be essential to tackle future regulatory efforts. Join us for a panel that brings together policy makers, civil society and industry experts to examine the current status of the regulatory environment in Europe and the impact on our community."
  },
  "self-driving-and-connected-cars-fooling-sensors-and-tracking-drivers": {
    "author": "jonathan-petit",
    "description": "Automated and connected vehicles are the next evolution in transportation and will improve safety, traffic efficiency and driving experience. This talk will be divided in two parts: 1) security of autonomous automated vehicles and 2) privacy of connected vehicles.Automated vehicles are equipped with multiple sensors (LiDAR, radar, camera, etc.) enabling local awareness of their surroundings. A fully automated vehicle will solely rely on its sensors readings to make short-term (i.e. safety-related) and long-term (i.e. planning) driving decisions. In this context, sensors have to be robust against intentional or unintentional attacks that aim at lowering sensor data quality or alter sensor input to disrupt the automation system. This talk presents remote attacks on camera-based system and LiDAR using commodity hardware. Results from laboratory experiments show effective blinding, jamming, replay, relay, and spoofing attacks. We propose software and hardware countermeasures that improve sensors resilience against these attacks. As such sensors are also deployed in today's cars for advanced driver assistance systems (ADAS), our results have a short-term relevancy beyond automated driving.Connected Vehicle is an upcoming technology that allow vehicles and road-side infrastructure to communicate to increase traffic efficiency and safety. To enable cooperative awareness, vehicles continually broadcast messages containing their location. These messages can be received by anyone, jeopardizing location privacy. A misconception is that such attacks are only possible by a global attacker with extensive resources (e.g. sniffing stations at every intersections giving a full city-wide coverage). In this paper, we demonstrate the feasibility of location tracking attack in an ITS in the presence of a mid-sized attacker (i.e. an attacker that has partial network coverage but can choose which parts to cover). We conduct an empirical study on the campus of the University of Twente, The Netherlands by deploying ITS hardware on a small scale. As road intersections are likely targets for an attacker to eavesdrop, we propose a graph-based approach to determine which intersections an attacker should cover. We also derive a cost analysis that gives an indication of the financial resources an attacker needs to track a vehicle. To mitigate location tracking attacks, we assess the benefit of pseudonym change strategies and propose a privacy metric to quantify a vehicle's level of privacy in the presence of mid-sized attackers. Experiment results demonstrate that tracking is feasible even if such an attacker covers a small number of intersections. If this is deficiency of privacy protection is left unaddressed, it will be cost efficient for any interested parties to set up scalable passive surveillance and sousveillance operations.",
    "plaintextTitle": "Self-Driving and Connected Cars: Fooling Sensors and Tracking Drivers",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Petit-Self-Driving-And-Connected-Cars-Fooling-Sensors-And-Tracking-Drivers.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Petit-Self-Driving-And-Connected-Cars-Fooling-Sensors-And-Tracking-Drivers-wp1.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Petit-Self-Driving-And-Connected-Cars-Fooling-Sensors-And-Tracking-Drivers-wp2.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=C29UGFsIWVI"
      }
    ],
    "youtubeDescription": "by Jonathan Petit\n\nAutomated and connected vehicles are the next evolution in transportation and will improve safety, traffic efficiency and driving experience. This talk will be divided in two parts: 1) security of autonomous automated vehicles and 2) privacy of connected vehicles.\n\nAutomated vehicles are equipped with multiple sensors (LiDAR, radar, camera, etc.) enabling local awareness of their surroundings. A fully automated vehicle will solely rely on its sensors readings to make short-term (i.e. safety-related) and long-term (i.e. planning) driving decisions. In this context, sensors have to be robust against intentional or unintentional attacks that aim at lowering sensor data quality or alter sensor input to disrupt the automation system. This talk presents remote attacks on camera-based system and LiDAR using commodity hardware. Results from laboratory experiments show effective blinding, jamming, replay, relay, and spoofing attacks. We propose software and hardware countermeasures that improve sensors resilience against these attacks. As such sensors are also deployed in today's cars for advanced driver assistance systems (ADAS), our results have a short-term relevancy beyond automated driving.\n\nConnected Vehicle is an upcoming technology that allow vehicles and road-side infrastructure to communicate to increase traffic efficiency and safety. To enable cooperative awareness, vehicles continually broadcast messages containing their location. These messages can be received by anyone, jeopardizing location privacy. A misconception is that such attacks are only possible by a global attacker with extensive resources (e.g. sniffing stations at every intersections giving a full city-wide coverage). In this paper, we demonstrate the feasibility of location tracking attack in an ITS in the presence of a mid-sized attacker (i.e. an attacker that has partial network coverage but can choose which parts to cover). We conduct an empirical study on the campus of the University of Twente, The Netherlands by deploying ITS hardware on a small scale. As road intersections are likely targets for an attacker to eavesdrop, we propose a graph-based approach to determine which intersections an attacker should cover. We also derive a cost analysis that gives an indication of the financial resources an attacker needs to track a vehicle. To mitigate location tracking attacks, we assess the benefit of pseudonym change strategies and propose a privacy metric to quantify a vehicle's level of privacy in the presence of mid-sized attackers. Experiment results demonstrate that tracking is feasible even if such an attacker covers a small number of intersections. If this is deficiency of privacy protection is left unaddressed, it will be cost efficient for any interested parties to set up scalable passive surveillance and sousveillance operations."
  },
  "silently-breaking-aslr-in-the-cloud": {
    "author": "antonio-barresi",
    "description": "To reduce the memory footprint and to increase the cost-effectiveness of virtual machines (VMs) running on the same host, cloud providers use memory deduplication. Memory deduplication searches for memory pages with the same contents and merges them into one, read-only memory page. Writing to these pages is expensive due to page faults caused by the memory protection, and this cost can be used by an attacker as a side-channel to detect whether a page has been shared. Leveraging this memory side-channel, we craft an attack that leaks the randomized base addresses of libraries and executables mapped in processes of neighboring VMs, and hence, defeats ASLR. Our proof-of-concept exploit, CAIN (Cross-VM ASL INtrospection), defeats ASLR of a 64-bit Windows Server 2012 victim VM running on a default KVM configuration in less than five hours.In this session, we will discuss the underlying concepts of the attack and we will present the CAIN PoC exploit.",
    "plaintextTitle": "Silently Breaking ASLR in the Cloud",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Barresi-Silently-Breaking-ASLR-In-The-Cloud.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Barresi-Silently-Breaking-ASLR-In-The-Cloud-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=lxXQxYFHTbA"
      }
    ],
    "youtubeDescription": "by Antonio Barresi  &  Kaveh Razavi  &  Mathias Payer  &  Thomas Gross\n\nTo reduce the memory footprint and to increase the cost-effectiveness of virtual machines (VMs) running on the same host, cloud providers use memory deduplication. Memory deduplication searches for memory pages with the same contents and merges them into one, read-only memory page. Writing to these pages is expensive due to page faults caused by the memory protection, and this cost can be used by an attacker as a side-channel to detect whether a page has been shared. Leveraging this memory side-channel, we craft an attack that leaks the randomized base addresses of libraries and executables mapped in processes of neighboring VMs, and hence, defeats ASLR. Our proof-of-concept exploit, CAIN (Cross-VM ASL INtrospection), defeats ASLR of a 64-bit Windows Server 2012 victim VM running on a default KVM configuration in less than five hours.\n\nIn this session, we will discuss the underlying concepts of the attack and we will present the CAIN PoC exploit."
  },
  "stegosploit-exploit-delivery-with-steganography-and-polyglots": {
    "author": "saumil-shah",
    "description": "\"A good exploit is one that is delivered with style.\"Stegosploit creates a new way to encode \"drive-by\" browser exploits and deliver them through image files. These payloads are undetectable using current means. This talk discusses two broad underlying techniques used for image based exploit delivery - Steganography and Polyglots. Drive-by browser exploits are steganographically encoded into JPG and PNG images. The resultant image file is fused with HTML and Javascript decoder code, turning it into an HTML+Image polyglot. The polyglot looks and feels like an image, but is decoded and triggered in a victim's browser when loaded. The Stegosploit Toolkit v0.3, to be released with improvements upon existing v0.2, contains the tools necessary to test image based exploit delivery.",
    "plaintextTitle": "Stegosploit - Exploit Delivery with Steganography and Polyglots",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Shah-Stegosploit-Exploit-Delivery-With-Steganography-And-Polyglots.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=6lYUtIZHlJA"
      }
    ],
    "youtubeDescription": "by Saumil Shah\n\n\"A good exploit is one that is delivered with style.\"\n\nStegosploit creates a new way to encode \"drive-by\" browser exploits and deliver them through image files. These payloads are undetectable using current means. This talk discusses two broad underlying techniques used for image based exploit delivery - Steganography and Polyglots. Drive-by browser exploits are steganographically encoded into JPG and PNG images. The resultant image file is fused with HTML and Javascript decoder code, turning it into an HTML+Image polyglot. The polyglot looks and feels like an image, but is decoded and triggered in a victim's browser when loaded. The Stegosploit Toolkit v0.3, to be released with improvements upon existing v0.2, contains the tools necessary to test image based exploit delivery."
  },
  "triaging-crashes-with-backward-taint-analysis-for-arm-architecture": {
    "author": "dongwoo-kim",
    "description": "We have developed a set of tools for analyzing crashes that occur on Linux OS and ARM architecture to determine exploitability with taint analysis for practical use. For the analysis, Dynamic Binary Instrumentation (DBI) is required to extract context information of each instruction at runtime. Unfortunately, most existing DBI tools have been developed for x86 architecture. Therefore, we have developed a dedicated tool called ARM-Tracer based on ptrace system call. ARM-Tracer can dynamically trace a specific thread in the multi-threaded environment and generate a trace log until the target gets crashed. Then, the trace log is analyzed by another tool that we have developed to perform the backward taint analysis on Desktop for efficiency. The tool is named ARM-Analyzer, a stand-alone GUI application developed in C# language, which lets us know whether the crash is affected by the input data. For this, we analyzed ARM instructions to identify taint objects of each instruction.   During this talk, we will demonstrate our tools by applying them to an Android application for the crash analysis. We will also release our tools at Black Hat.",
    "plaintextTitle": "Triaging Crashes with Backward Taint Analysis for ARM Architecture",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Kim-Triaging-Crashes-With-Backward-Taint-Analysis-For-ARM-Architecture.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=rXsyfhRvO8M"
      }
    ],
    "youtubeDescription": "by Dongwoo Kim  &  Sangwho Kim\n\nWe have developed a set of tools for analyzing crashes that occur on Linux OS and ARM architecture to determine exploitability with taint analysis for practical use. For the analysis, Dynamic Binary Instrumentation (DBI) is required to extract context information of each instruction at runtime. Unfortunately, most existing DBI tools have been developed for x86 architecture. Therefore, we have developed a dedicated tool called ARM-Tracer based on ptrace system call. ARM-Tracer can dynamically trace a specific thread in the multi-threaded environment and generate a trace log until the target gets crashed. Then, the trace log is analyzed by another tool that we have developed to perform the backward taint analysis on Desktop for efficiency. The tool is named ARM-Analyzer, a stand-alone GUI application developed in C# language, which lets us know whether the crash is affected by the input data. For this, we analyzed ARM instructions to identify taint objects of each instruction.\n\nDuring this talk, we will demonstrate our tools by applying them to an Android application for the crash analysis. We will also release our tools at Black Hat."
  },
  "unboxing-the-white-box-practical-attacks-against-obfuscated-ciphers": {
    "author": "eloi-sanfelix",
    "description": "White-Box Cryptography (WBC) aims to provide software implementations of cryptographic algorithms that are resistant against an attacker with full access to the internals. Therefore, the key must remain secure even if the attacker is able to inspect and modify the execution of the cryptographic algorithm. This is often referred to as \"security in the White-Box context.\"  In a vanilla implementation of a cryptographic algorithm, access to intermediate results directly leads to extraction of the key. To achieve security in the white-box context, data encoding schemes and strong obfuscation are typically applied. This type of implementation is commonly seen in DRM systems, and is currently gaining momentum in the mobile payment market.  Assessing the security of WBC implementations is a challenge both for evaluators and for WBC designers, as it often requires a powerful mix of reverse engineering and applied cryptanalysis skills.  In this presentation, we show how attacks typically used to attack hardware cryptosystems can be ported to the white-box settings. We will introduce generic yet practical attacks on WBC implementations of the TDES and AES ciphers. Additionally, we will analyze the requirements for each attack and discuss potential countermeasures.  We have applied these attacks to recover cryptographic keys from commercial as well as academic implementations. During the presentation, we will demonstrate several attacks on open source WBC implementations using custom tools.  If you are tasked with evaluating the attack resistance of a WBC-based solution, this presentation will provide a better understanding of what White-Box Cryptography is and how to evaluate its robustness against different key extraction attacks. If you are a WBC designer, you will obtain a better understanding of what the most common weak points of such schemes are.  Our results highlight the importance of evaluating WBC implementations with respect to these generic attacks in order to provide correct judgment about their level of security.",
    "plaintextTitle": "Unboxing the White-Box: Practical Attacks Against Obfuscated Ciphers",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Sanfelix-Unboxing-The-White-Box-Practical-Attacks-Against-Obfuscated-Ciphers.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Sanfelix-Unboxing-The-White-Box-Practical-Attacks-Against-Obfuscated-Ciphers-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=A9md7ONv7tI"
      }
    ],
    "youtubeDescription": "by Eloi Sanfelix  &  Job de Haas  &  Cristofaro Mune\n\nWhite-Box Cryptography (WBC) aims to provide software implementations of cryptographic algorithms that are resistant against an attacker with full access to the internals. Therefore, the key must remain secure even if the attacker is able to inspect and modify the execution of the cryptographic algorithm. This is often referred to as \"security in the White-Box context.\"\n\nIn a vanilla implementation of a cryptographic algorithm, access to intermediate results directly leads to extraction of the key. To achieve security in the white-box context, data encoding schemes and strong obfuscation are typically applied. This type of implementation is commonly seen in DRM systems, and is currently gaining momentum in the mobile payment market.\n\nAssessing the security of WBC implementations is a challenge both for evaluators and for WBC designers, as it often requires a powerful mix of reverse engineering and applied cryptanalysis skills.\n\nIn this presentation, we show how attacks typically used to attack hardware cryptosystems can be ported to the white-box settings. We will introduce generic yet practical attacks on WBC implementations of the TDES and AES ciphers. Additionally, we will analyze the requirements for each attack and discuss potential countermeasures.\n\nWe have applied these attacks to recover cryptographic keys from commercial as well as academic implementations. During the presentation, we will demonstrate several attacks on open source WBC implementations using custom tools.\n\nIf you are tasked with evaluating the attack resistance of a WBC-based solution, this presentation will provide a better understanding of what White-Box Cryptography is and how to evaluate its robustness against different key extraction attacks. If you are a WBC designer, you will obtain a better understanding of what the most common weak points of such schemes are.\n\nOur results highlight the importance of evaluating WBC implementations with respect to these generic attacks in order to provide correct judgment about their level of security."
  },
  "voip-wars-destroying-jar-jar-lync": {
    "author": "fatih-ozavci",
    "description": "Enterprise companies are increasingly using Microsoft Lync 2010/2013 (a.k.a Skype for Business 2015) services as call centre, internal communication, cloud communication, and video conference platform. These services are based on the VoIP and instant messaging protocols, and support multiple client types such as Microsoft Office 365, Microsoft Lync, Skype for Business, IP phones, and teleconference devices. Also, the official clients are available for mobile devices (e.g. Windows phone, Android and iOS), desktops (Mac, Linux and Windows), and web applications developed with .NET framework.Although the Microsoft Lync platform has been developed along with the new technologies, it still suffers from old VoIP teleconference and platform issues. Modern VoIP attacks can be used to attack Microsoft Lync environments to obtain unauthorised access to the infrastructure. Open MS Lync front-end and edge servers, insecure federation security design, lack of encryption, insufficient defence for VoIP attacks, and insecure compatibility options may allow attackers to hijack enterprise communications. The enterprise users and employees are also the next generation targets for these attackers. They can attack client soft phones and handsets using the broken communication, invalid protocol options, and malicious messaging content to compromise sensitive business assets. These attacks may lead to privacy violations, legal issues, call/toll fraud, and intelligence collection.  Attack vectors and practical threats against the Microsoft Lync ecosystem will be presented with newly published vulnerabilities and Microsoft Lync testing modules of the Viproy VoIP kit developed by the speaker. This will be accompanied by live demonstrations against a test environment. A brief introduction to Microsoft Lync ecosystem Security requirements, design vulnerabilities and priorities Modern threats against commercial Microsoft Lync services Demonstration of new attack vectors against target test platform.",
    "plaintextTitle": "VoIP Wars: Destroying Jar Jar Lync",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Ozavci-VoIP-Wars-Destroying-Jar-Jar-Lync.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=DXuAu_m1dsU"
      }
    ],
    "youtubeDescription": "PRESENTATION MATERIALS: \nhttp://gsec.hitb.org/materials/sg2015/\n\nPRESENTATION ABSTRACT:\nEnterprise companies are increasingly using Microsoft Lync 2010/2013 (a.k.a Skype for Business 2015) services as call centre, internal communication, cloud communication and video conference platform. These services are based on the VoIP and instant messaging protocols, and support multiple client types such as Microsoft Office 365, Microsoft Lync, Skype for Business, IP phones and teleconference devices. Also the official clients are available for mobile devices (e.g. Windows phone, Android and iOS), desktops (Mac, Linux and Windows) and web applications developed with .NET framework. Although the Microsoft Lync platform has been developed along with the new technologies, it still suffers from old VoIP, teleconference and platform issues.\n\nModern VoIP attacks can be used to attack Microsoft Lync environments to obtain unauthorised access to the infrastructure. Open MS Lync frontend and edge servers, insecure federation security design, lack of encryption, insufficient defence for VoIP attacks and insecure compatibility options may allow attackers to hijack enterprise communications. The enterprise users and employees are also the next generation targets for these attackers. They can attack client soft phones and handsets using the broken communication, invalid protocol options and malicious messaging content to compromise sensitive business assets. These attacks may lead to privacy violations, legal issues, call/toll fraud and intelligence collection.\n\nAttack vectors and practical threats against the Microsoft Lync ecosystem will be presented with newly published vulnerabilities and Microsoft Lync testing modules of the Viproy VoIP kit developed by the speaker. This will be accompanied by live demonstrations against a test environment.\n\n•    A brief introduction to Microsoft Lync ecosystem\n•    Security requirements, design vulnerabilities and priorities\n•    Modern threats against commercial Microsoft Lync services\n•    Demonstration of new attack vectors against target test platform\n\nABOUT FATIH OZAVCI\n\nFatih Ozavci is a Security Researcher, Principal Security Consultant with Sense of Security, and the author of the Viproy VoIP Penetration Testing Kit. Fatih has discovered several previously unknown security vulnerabilities and design flaws in IMS, Unified Communications, Embedded Devices, MDM, Mobility and SAP integrated environments for his customers. He has completed several unique penetration testing services during his career of more than 15 years. His current research is based on securing IMS/UC services, IPTV systems, attacking mobile VoIP clients, VoIP service level vulnerabilities, SaaS, mobility security testing, hardware hacking and MDM analysis. Fatih has presented his VoIP and mobile research at BlackHat USA’14, DefCon 22 and 21, Troopers’15, Cluecon 2013 and Ruxcon 2013. He has also provided VoIP and Mobility Security Testing training at AustCert’14, Kiwicon’15 and Troopers’15 events."
  },
  "vulnerability-exploitation-in-docker-container-environments": {
    "author": "anthony-bettini",
    "description": "According to Forrester, 53% of IT respondents say their biggest concern about containers is security. Containerization is not only prevalent in browsers (Google Chrome), desktop applications (Adobe Reader X), and mobile operating systems (Apple iOS), but is also invading the data center via Docker. Docker and other LXC-based containerization solutions provide isolation via Linux control groups (cgroups). However, containers can still be exploited and even with kernel-level isolation, critical data can be stolen. In this presentation, the FlawCheck team will exploit real-world Docker implementations and show what can be done to mitigate the risk.",
    "plaintextTitle": "Vulnerability Exploitation in Docker Container Environments",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Bettini-Vulnerability-Exploitation-In-Docker-Container-Environments.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Bettini-Vulnerability-Exploitation-In-Docker-Container-Environments-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=77-jaeUKH7c"
      }
    ],
    "youtubeDescription": "by Anthony Bettini\n\nAccording to Forrester, 53% of IT respondents say their biggest concern about containers is security. Containerization is not only prevalent in browsers (Google Chrome), desktop applications (Adobe Reader X), and mobile operating systems (Apple iOS), but is also invading the data center via Docker. Docker and other LXC-based containerization solutions provide isolation via Linux control groups (cgroups). However, containers can still be exploited and even with kernel-level isolation, critical data can be stolen. In this presentation, the FlawCheck team will exploit real-world Docker implementations and show what can be done to mitigate the risk."
  },
  "watching-the-watchdog-protecting-kerberos-authentication-with-network-monitoring": {
    "author": "tal-beery",
    "description": "Being the default authentication protocol for Windows-based networks, the Kerberos protocol is a prime target for attackers, especially for APTs attackers, seeking to steal the user's identity and steal secrets from the enterprise's data center.  In late 2014 and early 2015, we saw a lot of research on the attacker side, yielding the Golden Ticket, Forged PAC (MS14-068) and the Skeleton Key attacks. Now it is the time to present the defensive side research. We will expose a novel method of detecting and defeating ALL of these attacks (and others) based solely on network monitoring. We continue to show a novel variant of the Golden Ticket attack, the \"Diamond PAC\" attack, that is able to evade a naïve network monitoring detection and provide a detection solution for it. The talk includes the release of the \"Kerberos Leash\" tool - a free tool we developed that implements some of the detection techniques for the benefit of the security community.",
    "plaintextTitle": "Watching the Watchdog: Protecting Kerberos Authentication with Network Monitoring",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Beery-Watching-The-Watchdog-Protecting-Kerberos-Authentication-With-Network-Monitoring.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Beery-Watching-The-Watchdog-Protecting-Kerberos-Authentication-With-Network-Monitoring-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7qbSFYVQJ7A"
      }
    ],
    "youtubeDescription": "by Tal Be'ery  &  Michael Cherny\n\nBeing the default authentication protocol for Windows-based networks, the Kerberos protocol is a prime target for attackers, especially for APTs attackers, seeking to steal the user's identity and steal secrets from the enterprise's data center.\nIn late 2014 and early 2015, we saw a lot of research on the attacker side, yielding the Golden Ticket, Forged PAC (MS14-068) and the Skeleton Key attacks. Now it is the time to present the defensive side research. We will expose a novel method of detecting and defeating ALL of these attacks (and others) based solely on network monitoring. We continue to show a novel variant of the Golden Ticket attack, the \"Diamond PAC\" attack, that is able to evade a naïve network monitoring detection and provide a detection solution for it. The talk includes the release of the \"Kerberos Leash\" tool - a free tool we developed that implements some of the detection techniques for the benefit of the security community."
  },
  "your-scripts-in-my-page-what-could-possibly-go-wrong": {
    "author": "ben-stock",
    "description": "When it comes to web security, there is the one policy to rule them all: The Same-origin Policy. Thanks to this policy, sites hosted on disjunct origins are nice and cleanly separated, thus preventing the leakage of sensitive information into the hands of unauthorized parties. Unfortunately, HTML predates the Same-origin Policy and, thus, was not designed with the origin-based security model in mind. In consequence, HTML tags can freely reference cross-domain locations and include cross-domain content in their hosting web pages.  In this talk, we will present an attack, resulting from this circumstance, that has been widely overlooked in the past but affects a surprisingly high number of Web sites: Information leakage via cross-domain script inclusion.  Modern web sites frequently generate JavaScript on-the-fly via server-side scripting, incorporating personalized user data in the process. Thanks to HTML's general ignorance of the Same-origin Policy, an attacker is able to include such dynamic scripts into web pages under his control using script-tags pointing to the vulnerable site. This, in turn, allows him to learn many of the secrets contained in these scripts, through the scripts interaction with the page it is included in. In our experiments, we were able to obtain personal information such as name & address of the logged-in user, leak CSRF tokens, read the users emails, and occasionally fully compromise the user's account. All possible by simply including a script-URL into one of our web pages.  To systematically investigate the issue, we conducted a study on its prevalence in a set of 150 top-ranked domains, in which we observed that a third of the examined sites utilize dynamic JavaScript. Using our attack techniques, we able to leak sensitive data from more than 80% of these sites via remote script inclusion. In the talk we will present the study in general, and the most interesting cases in detail, showing the wide range of possible attack variations along with a bag of tricks how the including page can be prepared to efficiently leak a script's secrets. Furthermore, we present an efficient detection mechanism, in the form of a browser extension, as well as defensive measure, which enable robust protection.",
    "plaintextTitle": "Your Scripts in My Page - What Could Possibly Go Wrong?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Stock-Your-Scripts-In-My-Page-What-Could-Possibly-Go-Wrong.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Mnkgg3q51Ps"
      }
    ],
    "youtubeDescription": "by Ben Stock  &  Martin Johns  &  Sebastian Lekies\n\nWhen it comes to web security, there is the one policy to rule them all: The Same-origin Policy. Thanks to this policy, sites hosted on disjunct origins are nice and cleanly separated, thus preventing the leakage of sensitive information into the hands of unauthorized parties. Unfortunately, HTML predates the Same-origin Policy and, thus, was not designed with the origin-based security model in mind. In consequence, HTML tags can freely reference cross-domain locations and include cross-domain content in their hosting web pages.\n\nIn this talk, we will present an attack, resulting from this circumstance, that has been widely overlooked in the past but affects a surprisingly high number of Web sites: Information leakage via cross-domain script inclusion.\n\nModern web sites frequently generate JavaScript on-the-fly via server-side scripting, incorporating personalized user data in the process. Thanks to HTML's general ignorance of the Same-origin Policy, an attacker is able to include such dynamic scripts into web pages under his control using script-tags pointing to the vulnerable site. This, in turn, allows him to learn many of the secrets contained in these scripts, through the scripts interaction with the page it is included in. In our experiments, we were able to obtain personal information such as name & address of the logged-in user, leak CSRF tokens, read the users emails, and occasionally fully compromise the user's account. All possible by simply including a script-URL into one of our web pages.\n\nTo systematically investigate the issue, we conducted a study on its prevalence in a set of 150 top-ranked domains, in which we observed that a third of the examined sites utilize dynamic JavaScript. Using our attack techniques, we able to leak sensitive data from more than 80% of these sites via remote script inclusion. In the talk we will present the study in general, and the most interesting cases in detail, showing the wide range of possible attack variations along with a bag of tricks how the including page can be prepared to efficiently leak a script's secrets. Furthermore, we present an efficient detection mechanism, in the form of a browser extension, as well as defensive measure, which enable robust protection."
  },
  "pentesting-vehicles-with-cantoolz": {
    "author": "alexey-sintsov",
    "description": "CANToolz is an open-source framework for working with CAN bus. In this presentation we will demonstrate use-cases and examples of black-box analyses of CAN network and ECU devices. This framework based on modules and libraries that can be used all together in different combos to get exactly what researcher/tester needs. 1.  What tester could do over OBD2 port?UDS scanning, sub-function scanningTester tool testing and traffic analysis2. CAN Switch/Hub scanningWhat messages could be routed from one bus to another?3. Understanding the trafficHow to find \"what means what\"Finding control framesFinding status frames4. Running MitMDIY: anti-thief system Also, you could use CANToolz for integration/security tests as part of developing process (SDLC), and we will cover this part as well.",
    "plaintextTitle": "(Pen)Testing Vehicles with CANToolz",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Sintsov-Pen-Testing-Vehicles-With-Cantoolz.pdf",
        "type": "Presentation"
      }
    ]
  },
  "50-thousand-needles-in-5-million-haystacks-understanding-old-malware-tricks-to-find-new-malware-families": {
    "author": "veronica-valeros",
    "description": "The malware landscape is characterised by its rapid and constant evolution. Defenders often find themselves one step behind, resulting at best in monetary losses and in most extreme cases even endangering human lives. Corporations with the unique challenges they face, must assume that sooner or later malware infections will get through their security perimeter. Efforts should then be focused on early detection to contain and quickly mitigate the threats before they manage to cause any substantial damage. Even today's most stealth malware, if it's controlled remotely, needs an active network communication for reporting back to the attacker. This activity gives us a competitive visibility advantage. Nowadays we have the computational power and mechanisms to process huge amounts of data. Machine learning give us the algorithms to analyse network data in order to find specific types of behaviour. The challenge is how to use this technology to detect what matters most: malicious behaviours that pose a high risk to companies. In this talk we address four key challenges related to automatic malware detection in the network traffic: how to detect malware changing its network behaviour over time (e.g. changing different parts of the URL), how to mitigate potential mislabeling of the training data and how to perform large scale multi-class detection. We also introduce a training mechanism that allows to automate the learning process and improves the precision of the classifiers. We present unique algorithms that helps to solve different problems in each of the identified challenges. Results of our research constitute part of a working intrusion detection system that consumes real network traffic from more than 5 million users per day. We show how these methods can be used to learn from well known malware samples, generalise the behaviour and consequently find novel threats. We illustrate the detection performance of each algorithm presenting real examples of malware detected by algorithms described in this work. We also elaborate on how the found infections would have been otherwise missed using traditional detection tools.",
    "plaintextTitle": "50 Thousand Needles in 5 Million Haystacks: Understanding Old Malware Tricks to Find New Malware Families",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Valeros-50-Thousand-Needles-In-5-Million-Haystacks-Understanding-Old-Malware-Tricks-To-Find-New-Malware-Families.pdf",
        "type": "Presentation"
      }
    ]
  },
  "ai-based-antivirus-can-alphaav-win-the-battle-in-which-man-has-failed": {
    "author": "thomas-lei-wang",
    "description": "This talk will introduce our work on AI based Antivirus using deep learning. We can control the false positive rate less than 0.05% and false negative rate less than 12%. We think it's OK for production and it's already in production since Jan 2016. Android malware can often evade anti-malware security software if the author changes a few lines of code or designs the program to automatically mutate before each new infection or add shell on their app.  Deep learning involves training an artificial neural network with many layers of simulated neurons using huge quantities of data. The networks trained to recognize the characteristics of malicious code by looking at ten million of examples of malware and non-malware files, could offer a far better way to catch such malicious code. We build a deep learning system for Android anti-malware. We select high-quality app features data with only a little size, and use innovative normalization preprocessing, unique activation function and advanced multilayer artificial neural network to recognize the unknown malware variants and defense zero-day attacks. Our deep learning system has high precision (99.96%) and high recall (88%).",
    "plaintextTitle": "AI based Antivirus: Can AlphaAV Win the Battle in which Man Has Failed?",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Wang-AI-Based-Antivirus-Can-Alphaav-Win-The-Battle-In-Which-Man-Has-Failed.pdf",
        "type": "Presentation"
      }
    ]
  },
  "another-brick-off-the-wall-deconstructing-web-application-firewalls-using-automata-learning": {
    "author": "george-argyros",
    "description": "Web Applications Firewalls (WAFs) are fundamental building blocks of modern application security. For example, the PCI standard for organizations handling credit card transactions dictates that any application facing the internet should be either protected by a WAF or successfully pass a code review process. Nevertheless, despite their popularity and importance, auditing web application firewalls remains a challenging and complex task. Finding attacks that bypass the firewall usually requires expert domain knowledge for a specific vulnerability class. Thus, penetration testers not armed with this knowledge are left with publicly available lists of attack strings, like the XSS Cheat Sheet, which are usually insufficient for thoroughly evaluating the security of a WAF product. In this presentation we introduce a novel, efficient, approach for bypassing WAFs using automata learning algorithms. We show that automata learning algorithms can be used to obtain useful models of WAFs. Given such a model, we show how to construct, either manually or automatically, a grammar describing the set of possible attacks which are then tested against the obtained model for the firewall. Moreover, if our system fails to find an attack, a regular expression model of the firewall is generated for further analysis. Using this technique we found over 10 previously unknown vulnerabilities in popular WAFs such as Mod-Security, PHPIDS and Expose allowing us to mount SQL Injection and XSS attacks bypassing the firewalls. Finally, we present LightBulb, an open source python framework for auditing web applications firewalls using the techniques described above. In the release we include the set of grammars used to find the vulnerabilities presented.",
    "plaintextTitle": "Another Brick Off the Wall: Deconstructing Web Application Firewalls Using Automata Learning",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Argyros-Another-Brick-Off-The-Wall-Deconstructing-Web-Application-Firewalls-Using-Automata-Learning.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Argyros-Another-Brick-Off-The-Wall-Deconstructing-Web-Application-Firewalls-Using-Automata-Learning-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Argyros-Another-Brick-Off-The-Wall-Deconstructing-Web-Application-Firewalls-Using-Automata-Learning-too-lightbulb-framework.zip",
        "type": "Source"
      }
    ]
  },
  "armageddon-how-your-smartphone-cpu-breaks-software-level-security-and-privacy": {
    "author": "moritz-lipp",
    "description": "In the last years, mobile devices and smartphones have become the most important personal computing platform. Besides phone calls and managing the personal address book, they are also used to approve bank transfers and digitally sign official documents, thus storing very sensitive secrets. Their exposure or misappropriation would not only be a fatal infringement of privacy, but could also lead to disastrous consequences in terms of financial security and identity theft. So what if it is possible to silently monitor and track what the user is doing on his smartphone or recovering encryption keys without any permissions or privileges? In this talk, we will show that all of this is possible by mounting cache side-channel attacks on ARM that have been believed to work solely on x86 architecture. We will discuss how we overcame the challenges to perform such attacks on smartphones and demonstrate their immense attack potential. We prepared a live demo to show an unprivileged app that records the exact timestamps of user input activity. We will also present how two apps on a system can communicate with each other, circumventing the permission system and show how we can attack Bouncy Castles AES implementation. We will release source code that allows the user to perform platform-independent attacks within minutes. It serves as a starting point for research on cache side-channel attacks on smartphones and a foundation to build more sophisticated attacks.",
    "plaintextTitle": "ARMageddon: How Your Smartphone CPU Breaks Software-Level Security and Privacy",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Lipp-ARMageddon-How-Your-Smartphone-CPU-Breaks-Software-Level-Security-And-Privacy.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Lipp-ARMageddon-How-Your-Smartphone-CPU-Breaks-Software-Level-Security-And-Privacy-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://github.com/iaik/armageddon",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=9KsnFWejpQg"
      }
    ],
    "youtubeDescription": "by Moritz Lipp  &  Clémentine Maurice\n\nIn the last years, mobile devices and smartphones have become the most important personal computing platform. Besides phone calls and managing the personal address book, they are also used to approve bank transfers and digitally sign official documents, thus storing very sensitive secrets. Their exposure or misappropriation would not only be a fatal infringement of privacy, but could also lead to disastrous consequences in terms of financial security and identity theft. So what if it is possible to silently monitor and track what the user is doing on his smartphone or recovering encryption keys without any permissions or privileges?\n\nIn this talk, we will show that all of this is possible by mounting cache side-channel attacks on ARM that have been believed to work solely on x86 architecture. We will discuss how we overcame the challenges to perform such attacks on smartphones and demonstrate their immense attack potential. We prepared a live demo to show an unprivileged app that records the exact timestamps of user input activity. We will also present how two apps on a system can communicate with each other, circumventing the permission system and show how we can attack Bouncy Castles AES implementation. We will release source code that allows the user to perform platform-independent attacks within minutes. It serves as a starting point for research on cache side-channel attacks on smartphones and a foundation to build more sophisticated attacks."
  },
  "attacking-windows-by-windows": {
    "author": "yin-liang",
    "description": "Since win8, Microsoft introduced a variety of exploit mitigations into Windows kernel, such as Kernel DEP,KASLR,SMEP; this made the exploit of Windows kernel much more difficult. Suppose that we find a Windows kernel 0day, which can change from 0 to 1, or 1 to 0 - how can we gain system privileges with it? This presentation will introduce a new common method which can be exploited from win2k to win10 to answer this question.",
    "plaintextTitle": "Attacking Windows by Windows",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Liang-Attacking-Windows-By-Windows.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=LwoHpiGB2Ug"
      }
    ],
    "youtubeDescription": "【欢迎订阅我是歌手官方频道】 Subscribe I AM A SINGER: https://goo.gl/ZDZX3c\n\n【精彩看点】徐佳莹《浪费》 \n\n《我是歌手第四季》超清完整版全集：https://goo.gl/zLfstX\n《我是歌手第四季》单曲纯享: http://dwz.cn/2MIwJj\n《我是歌手第四季》徐佳莹个人集锦:https://goo.gl/fxyy3S\n《我是歌手第四季歌手直播间》播放列表：https://goo.gl/c6XuUe\n\n■□更多精彩官方视频，请关注我们■□\n湖南卫视YouTube官方频道：http://goo.gl/tl9QpW\n芒果TV YouTube官方频道：http://goo.gl/8xLl57\n\n■□其他我是歌手精彩节目■□\n《我是歌手第四季-谁来踢馆》整片播放列表: https://goo.gl/xPiBWd\n《我是歌手第四季-谁来踢馆》单曲集锦播放列表: https://goo.gl/J3y72O\n《我是歌手第四季-踢馆歌手专题区》单曲播放列表: https://goo.gl/TwJxvZ\n《我是歌手第三季》超清全集播放列表: http://goo.gl/T7EHTU\n《我是歌手第二季》超清全集播放列表: http://goo.gl/9O2ff5\n《我是歌手第一季》超清全集播放列表: http://goo.gl/U8fA9K\n《我是歌手第三季巅峰会》播放列表: https://goo.gl/DbtUcH\n《我是歌手第二季双年巅峰会》播放列表: https://goo.gl/abifH6"
  },
  "automating-incident-response-sit-back-and-relax-bots-are-taking-over…": {
    "author": "elvis-hovor",
    "description": "Our research focuses on illustrating the value of automating functions and processes within Incident Response. Traditional response capabilities are largely contingent upon highly-skilled, specialized resources. Reduction of such necessities and constraints through automation are a precursor to overcoming inefficiencies, and speeding up response and operations center capabilities.  To prove out our research, we developed an approach leveraging orchestration of cyber architectures and open-source IR tools. Taking into account the limited use of automation, we measure and contrast capabilities in human-driven versus automated incident response processes. Specifically, our solution automatically confirms alerts/events (typically analyzed manually), correlates events likely associated with an incident, and determines scope and context of potential breaches.  While our proposed automated capability may not comprehensively analyze all complex incidents with the highest degree of accuracy, it abstracts and automates processes/tasks typically considered mundane by swamped analysts or responders and further hunts for threats associated with the incident across a network. Machines and intelligence can't solve everything, while qualified human analysts don't scale. As such, IR teams are best served by having automated generation and prioritization of analytics and insights (actionable to humans), as opposed to having responders determine how to best crunch data while attempting to mitigate an incident.  An automated IR capability is most suitable for Security Operations Center (SOC) teams that encounter large swaths of security alerts frequently, have (relatively mature) IR processes, seek to ask more questions of data received, and adopt a more proactive detection, triage, and response capability.",
    "plaintextTitle": "Automating Incident Response: Sit Back and Relax Bots are Taking Over…",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Hovor-Automating-Incident-Investigations-Sit-Back-And-Relax-Bots-Are-Taking-Over.pdf",
        "type": "Presentation"
      }
    ]
  },
  "backslash-powered-scanning-hunting-unknown-vulnerability-classes": {
    "author": "james-kettle",
    "description": "Existing web scanners search for server-side injection vulnerabilities by throwing a canned list of technology-specific payloads at a target and looking for signatures - almost like an anti-virus. In this presentation, I'll share the conception and development of an alternative approach, capable of finding and confirming both known and unknown classes of injection vulnerabilities. Evolved from classic manual techniques, this approach reaps many of the benefits of manual testing including casual WAF evasion, a tiny network footprint, and flexibility in the face of input filtering. \n\nTrue to its heritage, this approach also manages to harness some pitfalls that will be all too familiar to experienced manual testers. I'll share some of the more entertaining findings and lessons learned from unleashing this prototype on a few thousand sites, and release a purpose-built stealthy-scanning toolkit. Finally, I'll show how it can be taken far beyond injection hunting, leaving you with numerous leads for future research.",
    "plaintextTitle": "Backslash Powered Scanning: Hunting Unknown Vulnerability Classes",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Kettle-Backslash-Powered Scanning-Hunting-Unknown-Vulnerability-Classes.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Kettle-Backslash-Powered Scanning-Hunting-Unknown-Vulnerability-Classes-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Kettle-Backslash-Powered Scanning-Hunting-Unknown-Vulnerability-Classes-backslashPoweredScanner.zip",
        "type": "Source"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Kettle-Backslash-Powered Scanning-Hunting-Unknown-Vulnerability-Classes-distributeDamage.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=srdKq0DckXQ"
      }
    ],
    "youtubeDescription": "Addy Osmani on Progressive Web Apps across all frameworks.\n\nProgressive Web Apps can be built using any JavaScript library or framework, whether it's React, Angular 2.0, Ember or Polymer. In this talk, we'll dive into how to craft offline, lightning fast web apps using these solutions. Learn how to take advantage of Service Workers, Server-side Rendering and an application \"shell\" architecture to optimize for first meaningful paint, fast-first load and repeat visits. \n\nWatch more Chrome talks at I/O 2016 here: https://goo.gl/JoMLpB \nSee all the talks from Google I/O 2016 here: https://goo.gl/olw6kV\nSubscribe to the Chrome Developers channel at http://goo.gl/LLLNvf \n\n#io16 #GoogleIO #GoogleIO2016"
  },
  "breaking-bhad-abusing-belkin-home-automation-devices": {
    "author": "scott-tenaglia",
    "description": "In 2013 and 2014 several high profile vulnerabilities were found in Belkin's WeMo line of home automation devices. Belkin not only patched most of those vulnerabilities, but also maintains a very regular update cycle, which makes them one of the more responsive players in the IoT space. Therefore, we thought it would be interesting to revisit this line of IoT products to see how we could break or abuse them. What we found are multiple vulnerabilities in both the device and the Android app that can be used to obtain a root shell on the device, run arbitrary code on the phone paired with the device, deny service to the device, and launch DoS attacks without rooting the device. The talk will walk through the details of heap overflow, SQL injection, and code injection zero days, as well as their associated exploits. We will also introduces a new technique for achieving code execution via SQL injection into a SQLite database on an embedded device. The talk will conclude with demonstrations of rooting a WeMo device and injecting code into the WeMo Android app from a WeMo device. That's right, we will show you how to make your IoT hack your phone.",
    "plaintextTitle": "Breaking BHAD: Abusing Belkin Home Automation Devices",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Tenaglia-Breaking-Bhad-Abusing-Belkin-Home-Automation-Devices.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=f7z56SVUjP0"
      }
    ],
    "youtubeDescription": "by Scott Tenaglia  &  Joe Tanen\n\nIn 2013 and 2014 several high profile vulnerabilities were found in Belkin's WeMo line of home automation devices. Belkin not only patched most of those vulnerabilities, but also maintains a very regular update cycle, which makes them one of the more responsive players in the IoT space. Therefore, we thought it would be interesting to revisit this line of IoT products to see how we could break or abuse them. What we found are multiple vulnerabilities in both the device and the Android app that can be used to obtain a root shell on the device, run arbitrary code on the phone paired with the device, deny service to the device, and launch DoS attacks without rooting the device.\n\nThe talk will walk through the details of heap overflow, SQL injection, and code injection zero days, as well as their associated exploits. We will also introduces a new technique for achieving code execution via SQL injection into a SQLite database on an embedded device. The talk will conclude with demonstrations of rooting a WeMo device and injecting code into the WeMo Android app from a WeMo device. That's right, we will show you how to make your IoT hack your phone."
  },
  "breaking-big-data-evading-analysis-of-the-metadata-of-your-life": {
    "author": "david-venable",
    "description": "You are under surveillance. We all are. If you're targeted by a government, nothing you can do will save you. But even if you aren't, the metadata of your life is being gathered and stockpiled by collection capabilities that even Orwell couldn't have imagined, and it's not just being done by governments. The big data industry is rapidly growing and may soon be on par with NSA-style mass surveillance, but with a different goal: to learn everything they can about you in order to sell your information, and sell you the next new thing.   Encryption is only half the battle. Your metadata is often more valuable than your data. Every route you drive, every social media post you make, every aisle you visit in the grocery store, every email, every check-in, and every site you browse is being collected and correlated. The intelligence community calls this pattern-of-life analysis, and there's not much you can do to prevent it. Hiding behind seven proxies won't protect you from Google, the NSA, or the app on your phone with global permissions. This complete erosion of privacy impacts every one of us, and there is a complete lack of transparency around this.  In this talk, a former NSA professional will cover a variety of the techniques used by the mass surveillance industry to analyze an individual's metadata and develop a profile of you, your activities, your affiliations, and what you are likely to buy next. Techniques that can be used to prevent selected activities from being associated with your true persona will be covered, with a focus on making your true persona blend in with the masses.",
    "plaintextTitle": "Breaking Big Data: Evading Analysis of the Metadata of Your Life",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Venable-Breaking-Big-Data-Evading-Analysis-Of-The-Metadata-Of-Your-Life.pdf",
        "type": "Presentation"
      }
    ]
  },
  "bypassing-clangs-safestack-for-fun-and-profit": {
    "author": "enes-goktas",
    "description": "SafeStack, a new compiler feature currently only available in clang[1] and underway for GCC[2], protects return addresses on the stack from being overwritten through memory vulnerabilities. SafeStack (-fsanitize=safe-stack) is intended to replace the stack cookies (-fstack-protector). It separates the data and the return addresses on the original stack, and puts the former in the unsafe stack and the latter in the safe stack. We investigate the implementation of the safe stack to see if there are still ways to get to it and overwrite the return addresses. In this presentation we show implementation issues that allow an attacker to get to the safe stack. In addition, we demonstrate two new fundamental strategies to efficiently find the safe stack, namely through Thread Spraying and allocation oracles. Thread Spraying is a technique to force the application to spawn many safe stacks and to reduce the entropy of the safe stacks significantly. With allocation oracles we can determine the sizes of the unallocated holes in the address space and as such the distance from the known regions to the hidden regions.  Sources [1] http://clang.llvm.org/docs/SafeStack.html [2] https://gcc.gnu.org/ml/gcc/2016-04/msg00083.html",
    "plaintextTitle": "Bypassing Clang's SafeStack for Fun and Profit",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Goktas-Bypassing-Clangs-SafeStack.pdf",
        "type": "Presentation"
      }
    ]
  },
  "bypassing-secure-boot-using-fault-injection": {
    "author": "niek-timmers",
    "description": "More and more embedded systems implement Secure Boot to assure the integrity and confidentiality of all software executed after power-on reset. These implementations are bypassed using logical flaws, for example as shown in the following iPhone boot ROM exploits: SHAtter [1] and limera1n [2]. However, the early stages of Secure Boot (i.e. ROM or 1st stage bootloader) are often of insignificant size and therefore logically exploitable vulnerabilities are not guaranteed to be present. In such situations, other attacks may be used to exploit the embedded system. An example of such an attack is Fault Injection, which works by injecting faults into the target to change its intended behavior. The early stages of Secure Boot are executed in a privileged context and therefore interesting to gain control of before mounting other attacks compromising the target's assets (e.g. encryption keys, code, data, privileged access).\n\nThe community has produced various papers and presentations about Fault Injection and Secure Boot. Some notable examples are: Exide's talk at Recon 2014 [3] and Brett Miller's talk at Blackhat Europe 2015 [4] cover the principles of Fault Injection. Also, Colin O'Flynn's continuous efforts show casing his open source Fault Injection test bench: Chip Whisperer [5][6]. Job de Haas' presentation at HITB 2013 [7] details the complete, but high level, attack surface of Secure Boot.\n\nThis talk starts with a brief introduction to both Secure Boot and Fault injection which form the foundation of the rest of the talk. For example, we will introduce the different Fault Injection techniques and briefly describe the characteristics. But we refrain from describing Fault Injection attacks in detail as these are already covered by the community. As this talk builds upon the efforts produced by the community, we go into greater detail about different strategies to bypass Secure Boot.\n\nThe Fault Injection attack surface of Secure Boot implementations is determined by the specifics of their design and implementation. Using a generic Secure Boot design we detail multiple vulnerabilities (~10) using examples in source code, disassembly and hardware. We will determine what the impact is of the target's design on its Fault Injection attack surface: from high-level architecture to low-level implementation details. We will consider: dedicated peripherals (e.g. DMA), enforced decryption of the software, specific code constructs, fault injection countermeasures, compiler optimizations and the instruction set. Based on those considerations we describe novel attack strategies, including a combination of fault injection and software exploitation.\n\nAdditionally, we provide insights on how to overcome challenges (timing, target modification, glitch shape, etc.) faced when performing Fault Injection attacks on high speed feature rich System on Chips (SOC) such as those found in smart phones.\n\nThe practicality of voltage Fault Injection attacks on a fast (~1 GHz) and feature rich system on chip (SOC) is demonstrated using two live demos: \n\t1. Fault injection demo 1: target characterization\n\t2. Fault injection demo 2: bypassing Secure Boot\n\nWe conclude this talk with an overview of good and bad practices when implementing software and hardware countermeasures against fault injection. These can be used by the developers of Secure Boot implementations to minimize the risk of Fault Injection attacks.\n\nSources:\n[1]: https://www.theiphonewiki.com/wiki/SHA-1_Image_Segment_Overflow\n[2]: https://www.theiphonewiki.com/wiki/Limera1n\n[3]: https://recon.cx/2014/slides/REcon2014-exide-Glitching_For_n00bs.pdf\n[4]: https://www.blackhat.com/docs/eu-15/materials/eu-15-Giller-Implementing-Electrical-Glitching-Attacks.pdf\n[5]: https://www.cosade.org/cosade14/presentations/session9_c.pdf\n[6]: https://www.blackhat.com/us-14/training/advanced-embedded-hardware-hacking-power-analysis-and-glitching-with-the-chipwhisperer.html\n[7]: https://conference.hitb.org/hitbsecconf2013kul/materials/D2T3%20-%20Job%20de%20Haas%20-%2020%20Ways%20Past%20Secure%20Boot.pdf",
    "plaintextTitle": "Bypassing Secure Boot Using Fault Injection",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Timmers-Bypassing-Secure-Boot-Using-Fault-Injection.pdf",
        "type": "Presentation"
      }
    ]
  },
  "chasing-foxes-by-the-numbers-patterns-of-life-and-activity-in-hacker-forums": {
    "author": "christopher-ahlberg",
    "description": "Cyber criminals, hacktivists, and the occasional state actor tend to congregate in underground forums and come in many forms - in clear, deep, and dark web, focused geographically and linguistically, and focused by areas - carding, reverse engineering, hacking, etc.  In this presentation we analyze a very large corpus of forum posts from surface and deep web spanning more than 3 years - including forums originating in the United States, Russia, Palestine/Gaza, Ukraine, Iran, China (in local language), etc. Based on this corpus we establish a series of patterns of actor behavior that can be used for targeting illicit behavior and actors, establish research pivot points, and detect actor focus on products, technologies, and vulnerabilities.  The analysis will lay out techniques for how to analyze forum and actor behavior based on meta data analysis, without detailed human analysis of individual messages/posts. We will demonstrate how we can use the below techniques to establish patterns both inside and across forums (tracking actor traversals of the web), and crossing boundaries of clear/deep/dark web.:Natural language processingTemporal pattern analysisSocial network analysis, etc.",
    "plaintextTitle": "Chasing Foxes by the Numbers: Patterns of Life and Activity in Hacker Forums",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Ahlberg-Chasing-Foxes-By-The-Numbers-Patterns-Of-Life-And-Activity-In-Hacker-Forums.pdf",
        "type": "Presentation"
      }
    ]
  },
  "code-deobfuscation-intertwining-dynamic-static-and-symbolic-approaches": {
    "author": "robin-david",
    "description": "Over the years, obfuscation has taken a significant place in the software protection field. The term generally embraces any mean aiming at slowing down the analysis of a program, either by an analyst or an automated algorithm. As such, it has gained a certain popularity in the video-game industry. Unfortunately, it has also gained popularity in the malware underground ecosystem, leading to the need of deobfuscation techniques. The only property that should be preserved by obfuscation is the semantic of the program, i.e. its behavior. Hence, in the broadest sense, deobfuscation is the mean to make the behavior of the malware more intelligible, taken as a fact that recovering the original program is impossible in the general case. The first step toward understanding a binary program is to disassemble it in order to obtain a good representation of its Control-Flow Graph (CFG). As a consequence, obfuscation techniques (also) aim at fooling existing disassembly tools and techniques. Standard obfuscations usually target either static analysis (CFG flattening, self-modification, etc.) or dynamic analysis (anti-debugging tricks, VM detection or runtime monitoring). Thus, taking advantages of different approaches might become essential to handle obfuscated codes. While static analysis cover the whole program but is quickly fooled by obfuscations such as self-modification, dynamic analysis helps getting a real execution trace of the program but is limited to one or a few execution paths. In between, dynamic symbolic execution (DSE) -- aka concolic execution -- helps covering more new paths in the program using symbolic values and automatic solvers. This technique has already been fruitfully applied for various purposes such as test generation [1], vulnerability discovery [2] and more recently deobfuscation [3]. Unfortunately, the main problem is that it hardly scales on large obfuscated codes. We show in this talk how to combine in a successful way several disassembly techniques -- namely dynamic analysis, several state-of-the-art variants of symbolic execution and static analysis, in order to help recovering a more precise CFG of the obfuscated code under analysis. Especially, dynamic analysis brings robustness to tricky obfuscations such as self-modification, variants of symbolic executions can answer both feasibility and infeasibility queries arising during the deobfuscation process, and standard static analysis can be guided in a safe way to extend the disassembly. These analyses are implemented in the open-source framework BINSEC. They are articulated around three components: * BINSEC/SE: the core dynamic symbolic engine * Pinsec: a Pin-based dynamic instrumenter * IDASec: an IDA plugin allowing to lift analysis data into IDA, making them straightly usable for the reverse-engineer. This talk will explain in detail the method and how it is implemented in BINSEC. Practical examples will focus on the detection of opaque predicates and call stack tampering, with case-studies based on Tigress, o-llvm and several commercial packers. The end goal is to empower the reverse-engineering by giving the analyst semantic information about the program such as obfuscation in order to hold all the cards in hand for a better and deeper understanding of the binary being analyzed. [1] {BHUSA2014} Contemporary Automatic Program Analysis. Julian Cohen [2] {RECON14,HITB14, Shakacon2014} Fuzzing and Patch Analysis SAGEly Advice. Richard Johnson [3] {CCS15} Symbolic Execution of Obfuscated Code. Babak Yadegari, Saumya Debray",
    "plaintextTitle": "Code Deobfuscation: Intertwining Dynamic Static and Symbolic Approaches",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-David-Code-Deobfuscation-Intertwining-Dynamic-Static-And-Symbolic-Approaches.pdf",
        "type": "Presentation"
      }
    ]
  },
  "ctx-eliminating-breach-with-context-hiding": {
    "author": "dimitris-karakostas",
    "description": "The BREACH attack presented at Black Hat USA 2013 still has not been mitigated, despite new developments and optimizations presented at Black Hat Asia 2016. This class of attacks presents itself in all practical web applications which use compression, together with encryption, and has not been fixed in even the most recent versions of TLS 1.3.  In this talk, we present a generic defence method which eliminates compression-detectability features of existing protocols. We introduce CTX, Context Transformation Extension, a cryptographic method which defends against BREACH, CRIME, TIME, and generally any compression side-channel attack. CTX uses context hiding in a per-origin manner to separate secrets from different origins in order to avoid cross-compressibility. In this talk, we will show a demo of the defence and illustrate how it eliminates the attack implemented in Rupture. We will release an open source implementation of CTX in popular web frameworks both for client-side and server-side web applications. Our implementation runs at the application layer, is opt-in, and does not require modifications to web standards or the underlying web server.",
    "plaintextTitle": "CTX: Eliminating BREACH with Context Hiding",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Karakostas-Ctx-Eliminating-BREACH-With-Context-Hiding.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Karakostas-Ctx-Eliminating-BREACH-With-Context-Hiding-wp.pdf",
        "type": "Source"
      }
    ]
  },
  "cyber-judo-offensive-cyber-defense": {
    "author": "tal-beery",
    "description": "In this talk, we will show how defenders can take a few pages out of the attackers' book in order to better protect their organization against advanced, targeted attacks.Cyber-attacks and defenses are commonly considered to be very different, or even orthogonal, disciplines. However, these allegedly disperse disciplines have many common aspects, and can use each other methods. In fact, attackers have long been using defensive techniques in their offense in order to make it more successful. Most notably, the more aware attackers are encrypting their network attacks to escape the eyes of defensive monitoring systems. It's time for defenders to rise up and respond by using attackers' methods against them.Some of the defensive \"offensive\" methods we would discuss in out talk includes:Using the attacker's technique of injecting Kerberos errors, in order to gracefully mitigate attacks against authentication such as Over-Pass-the-Hash and Pass-the-TicketLeveraging on the attackers' internal network reconnaissance methods to pin-point identify attackers in real-timeTaking advantage of a known encryption vulnerability in NTLM in order to identify attackers Brute-Force attacks",
    "plaintextTitle": "Cyber Judo: Offensive Cyber Defense",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Beery-Grady-Cyber-Judo-Offensive-Cyber-Defense.pdf",
        "type": "Presentation"
      }
    ]
  },
  "detach-me-not-dos-attacks-against-4g-cellular-users-worldwide-from-your-desk": {
    "author": "dr.-silke-holtmanns",
    "description": "Ever since the public revelation of global surveillance and the exploits targeting the mobile communication backend, the general awareness of security and privacy in telecommunication industry has increased. Misusing the technical features of mobile core network technology - specifically the Signaling System 7 (SS7) - has disclosed numerous ways to locate, track and manipulate the routine cellular activities of cellphone users. In fact, the SMS-based key recovery mechanism becoming vulnerable because of the SS7 vulnerabilities.  Many mobile network operators rush to upgrade their networks to 4G/LTE from 2G and 3G, not only to improve the service, but also the security. With relatively more security and privacy features, Diameter protocol - the successor of SS7 in Long Term Evolution (LTE) networks are believed to guarantee more protection to the network itself and to the end-users. However, Diameter inherits many functionalities and traits of the SS7 network. Therefore, some attacks are also possible there e.g. location tracking in LTE by abusing the Diameter-based interconnection. In this talk, we dig deeper into the Diameter interconnection to uncover the Denial of Service (DoS) attacks to detach targeted mobile phone users from the network and disrupt the network nodes. We first discuss the current status of interconnection or mobile telephony core network security, followed by outlining several DoS attacks against targeted users and the LTE network itself. We discuss the practicalities of such attacks with the help of live/recorded demo, network logs and wireshark traces during this talk. Our proposed solution includes improvised measures in the interconnection edge nodes, proper security configurations in LTE networks and strategies for improvising filtering policies of firewalls that defend the system from roaming abuses.",
    "plaintextTitle": "Detach Me Not - DoS Attacks Against 4G Cellular Users Worldwide from your Desk",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Holtmanns-Detach-Me-Not.pdf",
        "type": "Presentation"
      }
    ]
  },
  "drama-how-your-dram-becomes-a-security-problem": {
    "author": "michael-schwarz",
    "description": "In this talk, we will present our research into how the design of DRAM common to all computers and many other devices makes these computers and devices insecure. Since our attack methodology targets the DRAM, it is mostly independent of software flaws, operating system, virtualization technology and even CPU. The attack is based on the presence of a row buffer in all DRAM modules. While this buffer is of vital importance to the way DRAM works physically, they also provide an attack surface for a side channel attack. These side channel attacks allow an unprivileged user to gain knowledge and spy on anybody sharing the same system even when located on a different CPU or running in a different Virtual Machine. We will show that we can exploit this side channel even in the limited environment of a sandboxed JavaScript application despite the countermeasures implemented in modern browsers. We will demonstrate the attack by sending data from a virtual machine without network hardware to the internet via the DRAM row buffer. The JavaScript library to exploit this attack vector will be made open source. Further these attacks enabled us to reverse engineer the complex addressing function of the CPU. This knowledge has real world implication for other software attacks on hardware, such as the row hammer attack. We will discuss how our finding led to moving the row hammer attack to DDR4 ram and how this research enabled other researchers to do software based fault injection attacks on cryptographic keys. We present an easy-to-use tool that can reverse engineer the CPUs addressing function fully automated. This tool is open source and can be used to reproduce the presented attacks, improve existing rowhammer-based attacks and to find new attacks.",
    "plaintextTitle": "DRAMA: How Your DRAM Becomes a Security Problem",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Schwarz-How-Your-DRAM-Becomes-A-Security-Problem.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Schwarz-How-Your-DRAM-Becomes-A-Security-Problem-wp.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Schwarz-How-Your-DRAM-Becomes-A-Security-Problem-tool.zip",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=lSU6YzjIIiQ"
      }
    ],
    "youtubeDescription": "by Michael Schwarz  &  Anders Fogh\n\nIn this talk, we will present our research into how the design of DRAM common to all computers and many other devices makes these computers and devices insecure. Since our attack methodology targets the DRAM, it is mostly independent of software flaws, operating system, virtualization technology and even CPU. The attack is based on the presence of a row buffer in all DRAM modules. While this buffer is of vital importance to the way DRAM works physically, they also provide an attack surface for a side channel attack. These side channel attacks allow an unprivileged user to gain knowledge and spy on anybody sharing the same system even when located on a different CPU or running in a different Virtual Machine. We will show that we can exploit this side channel even in the limited environment of a sandboxed JavaScript application despite the countermeasures implemented in modern browsers.\n\nWe will demonstrate the attack by sending data from a virtual machine without network hardware to the internet via the DRAM row buffer. The JavaScript library to exploit this attack vector will be made open source. Further these attacks enabled us to reverse engineer the complex addressing function of the CPU. This knowledge has real world implication for other software attacks on hardware, such as the row hammer attack. We will discuss how our finding led to moving the row hammer attack to DDR4 ram and how this research enabled other researchers to do software based fault injection attacks on cryptographic keys. We present an easy-to-use tool that can reverse engineer the CPUs addressing function fully automated. This tool is open source and can be used to reproduce the presented attacks, improve existing rowhammer-based attacks and to find new attacks."
  },
  "effective-file-format-fuzzing-–-thoughts-techniques-and-results": {
    "author": "mateusz-jurczyk",
    "description": "Fuzzing, as a native software testing technique, is an extremely popular approach to vulnerability hunting in today's security field. The reasons are plenty: it is relatively easy to start with, features out-of-the-box tools which can be used with little to no development, only requires an initial time to set up, scales extremely well, and most importantly – often achieves good results against modern software. All of the qualities make fuzzing complementary to manual security reviews, if not replacing them altogether in some cases.  However, fuzzing also follows Bushnell's law, as it is \"easy to learn, but hard to master.\" While it is trivial to flip bits in the input data and wait for programs to crash, it is similarly easy to forget that there is much more to it. The overall process consists of a number of stages, and the final outcome is a product of the effectiveness of all of them. In order to get the most out of fuzzing, it is necessary to answer many questions: How to generate or mutate the inputs? How to create an initial corpus of data? How to detect software failures? How to minimize the offending samples, and recognize unique bugs? How to deal with programs expecting user interaction, using data consistency checks, compression or encryption? The list goes on and on.  The aim of the talk is to address each question as comprehensively as possible, sharing the methods, ideas, measurements and algorithms we have developed during many years spent on fuzzing both open and closed-source software. The information will be supported by our corresponding results of two years of fuzzing FreeType, Wireshark, Hex-Rays IDA Pro, Adobe Reader, Adobe Flash Player and the Windows kernel (among other software), for a total of over 130 vulnerabilities fixed in a wide range of commits and bulletins. We will demystify fuzzing as a black box technique that \"just works\" regardless of the technical details, and show how each of its parts can be taken apart and optimized for maximum performance, enabling us to find new waves of bugs in mature code bases which could have been previously thought of as fuzz-clean.",
    "plaintextTitle": "Effective File Format Fuzzing – Thoughts Techniques and Results",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Jurczyk-Effective-File-Format-Fuzzing-Thoughts-Techniques-And-Results.pdf",
        "type": "Presentation"
      }
    ]
  },
  "ego-market-when-peoples-greed-for-fame-benefits-large-scale-botnets": {
    "author": "masarah-paquet-clouston",
    "description": "Want to give your blog a push or your \"gun show\" more views? Then why not buy 50,000 fake followers for $1,000! Click farms from down South or botnets such as Game over Zeus will be more than happy to supply them for you. For this talk, a criminologist and a security researcher teamed up to hunt a large-scale botnet dubbed Linux/Moose 2.0 that conducts social media fraud. The hunt was fastidious since Linux/Moose 2.0 has stealth features and runs only on embedded systems such as consumer routers or Internet of Things (IoT) devices. Using honeypots set up across the world, we managed to get virtual routers infected to learn how this botnet spread and operated. To do so, we performed an HTTPS man-in-the-middle attack to decrypt its traffic. This gave us an impressive amount of information on the botnet's activities: the name of the fake accounts it uses, its modus operandi to create fake followings and the identification of its consumers, companies and individuals. This talk will be of interest to a wide audience. First, it will present the elaborate methodology that was used to infect custom honeypots with Linux/Moose 2.0 and led to contributions to the open-source Cowrie Honeypot Project. Second, it will describe the technical details behind the man-in-the-middle attack conducted to decrypt the traffic. Analyses from the decrypted traffic will be presented: what's the botnet's sneaky modus operandi to create fake endorsement and what sly techniques it uses to avoid detection. The presentation will further increase its draw by placing the botnet's activities within a larger-scope: the criminal market for social media fraud. With the data gathered from the decrypted traffic and open-source research, market dynamics behind social media fraud will be presented. Finally, we will cover how botnet operators, wholesalers and online merchants leverage each other to create a criminal market that easily supports money laundering.",
    "plaintextTitle": "EGO MARKET: When People's Greed for Fame Benefits Large-Scale Botnets",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Paquet-Clouston-Ego-Market_When-Greed-for-Fame-Benefits-Large-Scale-Botnets.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Paquet-Clouston-Ego-Market_When-Greed-for-Fame-Benefits-Large-Scale-Botnets-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=9pmKj0P9_ow"
      }
    ],
    "youtubeDescription": "by Masarah Paquet-Clouston  &  Olivier Bilodeau\n\nWant to give your blog a push or your \"gun show\" more views? Then why not buy 50,000 fake followers for $1,000! Click farms from down South or botnets such as Game over Zeus will be more than happy to supply them for you. For this talk, a criminologist and a security researcher teamed up to hunt a large-scale botnet dubbed Linux/Moose 2.0 that conducts social media fraud. The hunt was fastidious since Linux/Moose 2.0 has stealth features and runs only on embedded systems such as consumer routers or Internet of Things (IoT) devices. Using honeypots set up across the world, we managed to get virtual routers infected to learn how this botnet spread and operated. To do so, we performed an HTTPS man-in-the-middle attack to decrypt its traffic. This gave us an impressive amount of information on the botnet's activities: the name of the fake accounts it uses, its modus operandi to create fake followings and the identification of its consumers, companies and individuals.\n\nThis talk will be of interest to a wide audience. First, it will present the elaborate methodology that was used to infect custom honeypots with Linux/Moose 2.0 and led to contributions to the open-source Cowrie Honeypot Project. Second, it will describe the technical details behind the man-in-the-middle attack conducted to decrypt the traffic. Analyses from the decrypted traffic will be presented: what's the botnet's sneaky modus operandi to create fake endorsement and what sly techniques it uses to avoid detection. The presentation will further increase its draw by placing the botnet's activities within a larger-scope: the criminal market for social media fraud. With the data gathered from the decrypted traffic and open-source research, market dynamics behind social media fraud will be presented. Finally, we will cover how botnet operators, wholesalers and online merchants leverage each other to create a criminal market that easily supports money laundering."
  },
  "flip-feng-shui-rowhammering-the-vms-isolation": {
    "author": "kaveh-razavi",
    "description": "We show how an attacker virtual machine (VM) can induce Rowhammer bit flips over memory used by another VM on the same host even under strong hardware-enforced memory isolation in a \"fully controlled way\". In many cloud settings, memory deduplication is used to reduce the memory footprint of VMs significantly by keeping a single copy of multiple memory pages with the same contents. The memory deduplication process scans the memory periodically to find memory pages with the same contents, then keeps one copy in the physical memory (i.e., the primary page) and releases the copies to the system. We show that by guessing the contents of a target page in a victim VM, an attacker VM can easily control the primary page, or in other words, the location of the victim's memory page on physical memory. By placing the victim page on a physical memory location with the right vulnerable bit offset, determined in the first stage of our exploit, we can perform a reliable and deterministic Rowhammer across VMs. We used this new technique, named flip feng shui, to corrupt the page cache of a victim VM hosting RSA public keys. We exemplify end-to-end attacks (a) breaking OpenSSH public-key authentication, thereby allowing remote OpenSSH access using a newly generated private key, and (b) forging GPG signatures from trusted keys, thereby compromising the Ubuntu/Debian updating mechanism, all without relying on any software vulnerability. Unlike other Rowhammer-based cryptographic fault attacks, ours is quite practical: it does not make any assumption on the environment nor requires the knowledge of the CPU's memory addressing function. We discuss practical defenses against flip feng shui attacks at the end.",
    "plaintextTitle": "Flip Feng Shui: Rowhammering the VM's Isolation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Razavi-Flip-Feng-Shui-Rowhammering-The-VMs-Isolation.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Razavi-Flip-Feng-Shui-Rowhammering-The-VMs-Isolation-wp.pdf",
        "type": "White Paper"
      }
    ]
  },
  "ghost-in-the-plc-designing-an-undetectable-programmable-logic-controller-rootkit": {
    "author": "ali-abbasi",
    "description": "Programmable Logic Controllers (PLCs) are a family of embedded devices used for physical process control. Similar to other embedded devices, PLCs are vulnerable to cyber attacks. Because they are used to control the physical processes of critical infrastructures, compromised PLCs constitute a significant security and safety risk. In this research, we investigate attacks against PLCs from two different perspectives. We show how to circumvent current host-based detection mechanisms applicable to PLCs by avoiding typical function hooking or modifying kernel data structure. We then introduce a novel attack against a PLC that allows the adversary to stealthily manipulate the physical process it controls by tampering with the device I/O at a low level. The attack is feasible due to lack of hardware interrupt on the PLC's SoC and intensified by Pin Control subsystem inability for hardware level Pin Configuration detection. Our study is meant to be used as a basis for the design of more robust detection techniques specifically tailored for PLCs.",
    "plaintextTitle": "Ghost in the PLC: Designing an Undetectable Programmable Logic Controller Rootkit",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Abbasi-Ghost-In-The-PLC-Designing-An-Undetectable-Programmable-Logic-Controller-Rootkit.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Abbasi-Ghost-In-The-PLC-Designing-An-Undetectable-Programmable-Logic-Controller-Rootkit-wp.pdf",
        "type": "White Paper"
      }
    ]
  },
  "gpu-security-exposed": {
    "author": "justin-taft",
    "description": "GPUs are found in millions of devices, allowing for stunning imagery to be generated on phones, tablets, and televisions. However, if we take a deeper look at how GPUs are programmed, the overall picture becomes much more bleak. GPUs directly accessing CPU memory, sensitive images not being cleared from graphics memory, and thin graphic APIs wrapping vendor specific implementations paint a darker picture. Recently discovered privilege escalation and DoS vulnerabilities uncovered by NCC Group will be discussed. These vulnerabilities affect many popular devices.",
    "plaintextTitle": "GPU Security Exposed",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Taft-GPU-Security-Exposed.pdf",
        "type": "Presentation"
      }
    ]
  },
  "how-to-fool-an-adc-part-ii-or-hiding-destruction-of-turbine-with-a-little-help-of-signal-processing": {
    "author": "alexander-bolshev",
    "description": "We live in the analog world but program and develop digital systems. The key element connecting these two worlds is ADC (analog-to-digital converter), small integrated circuit (IC) that transforms physical variable (amperage or voltage) into a bunch of bytes. Most modern systems that interact with real world (like embedded systems, industrial control systems (ICS) and even a kettle in your kitchen) make decisions based on the value that has been received from ADC. Thus, it is important to use ADC and interpret its data correctly. Ignoring this fact, especially in the ICS and embedded world, could lead to decreasing safety of the process, and in the worst case, to the catastrophic conditions.Let's look at the ADC mechanisms from security perspective. Imagine that you have an ADC that monitors state of some analog process (e.g. industrial controller sending analog signal to the motor or turbine to change its speed or some other parameter). This ADC could be inside safety system that will shutdown motor in case of incorrect signal value. Will it be possible to generate such analog signal that will be misinterpreted by safety system? For example, could we supply signal that causes vibration issue in the motor or turbine (and will destroy it after some time), but is treated as a correct plain signal (e.g. constant 5V) by the safety ADC? In the previous research, we have proven that it is possible (at least with Successive approximation ADC). However, the most-popular industry type of the ADC is sigma-delta. In this talk, we will focus on its features, \"design vulnerabilities\" and attacks leading to the misinterpretations of the analog signal. Various exploit signal variants and crafting methods will be shown; we will review some of the popular \"industry standard\" ADC behaviors in case of such attacks. Also, we will discuss attack scenarios in the areas of ICS, embedded and radio-frequency systems. The talk will be concluded with possible consequences and mitigations.",
    "plaintextTitle": "How to Fool an ADC Part II or Hiding Destruction of Turbine with a Little Help of Signal Processing",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Gonzalez-How-To-Fool-An-ADC-Part-II-Or-Hiding-Destruction-Of-Turbine-With-A-Little-Help-Of-Signal-Processing.pdf",
        "type": "Presentation"
      }
    ]
  },
  "i-know-what-you-saw-last-minute-the-chrome-browser-case": {
    "author": "ran-dubin",
    "description": "Every day, hundreds of millions of Internet users view videos online - in particular on mobile phones whose numbers are clearly going to increase. Currently, most of the video streaming web sites including YouTube are using HTTP Adaptive Streaming (HAS). Dynamic Adaptive Streaming over HTTP (DASH) is de facto standard method for HAS. In DASH, each quality representation is encoded in to variable bit rates (VBRs). VBR vary the amount of output data per time segment and does not attempt to control the output bit rate of the encoder, so that the distortion will not vary significantly. DASH often uses HTTP byte range mode. In this mode, the byte range of each segment request can be different. This depends on the client's network conditions and playout buffer levels. Previous research has shown that information can be extracted from multimedia streams. Saponas et al. uncovered security issues with consumer electronic gadgets that enables information retrieval such as video titles classification. So if it has already been done, what's new? Since these works have been conducted, there have been several changes in video traffic over the internet: Adaptive byte range selection over HTTP - This means that a single title download from the same quality will look different each time. VBR adaptive streaming with multiple representation layers - Each title can be represent by multiple quality without explicit order. HTTP version 2 - new secure and HTTP multiplexed session network protocol makes the classification much more difficult. This paper presents an algorithm for encrypted HTTP adaptive video streaming title classification. By Exploiting the HAS multi bit-rate encoding, data mining, network reverse engineering and machine learning, we demonstrate that current network encryption efforts are not enough in order to protect user content anonymity and their viewing titles can be recognized. We evaluated our algorithm on a new YouTube popular videos dataset that was collected from the internet under real-world network conditions. Our algorithm's classification accuracy is 98%.",
    "plaintextTitle": "I Know What You Saw Last Minute - The Chrome Browser Case",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Dubin-I-Know-What-You-Saw-Last-Minute-The-Chrome-Browser-Case.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Dubin-I-Know-What-You-Saw-Last-Minute-The-Chrome-Browser-Case-WP.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ARkPBm6AcNA"
      }
    ],
    "youtubeDescription": "Patrick Kettner, Product Manager for Microsoft Edge, talks about the \"progressive\" in PWAs, service workers, AppCache, and more!\n\nWatch more recordings from Chrome Dev Summit '16 at: https://goo.gl/TkgXYM\nSubscribe to the channel: https://www.youtube.com/chromedevelopers \nMusic by Terra Monk: https://goo.gl/xolmTV"
  },
  "inside-web-attacks-the-real-payloads": {
    "author": "john-graham-cumming",
    "description": "When serious vulnerabilities like ShellShock or ImageTragick are revealed, the announcement is often accompanied by PoC code. But what are the real payloads that attackers attempt to use when exploiting these vulnerabilities? Seeing the real payloads people use is often very difficult, but CloudFlare is in a unique position. By offering security services to over 4 million websites and detecting the exploitation of vulnerabilities like ShellShock or ImageTragick, we are able to see the actual payloads that attackers are using.",
    "plaintextTitle": "Inside Web Attacks: The Real Payloads",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=qRkXkBu-nBY"
      }
    ],
    "youtubeDescription": "Aiding and abetting the periodically frantic life in the Gildersleeve home was family cook and housekeeper Birdie Lee Coggins (Lillian Randolph). Although in the first season, under writer Levinson, Birdie was often portrayed as saliently less than bright, she slowly developed as the real brains and caretaker of the household under writers John Whedon, Sam Moore and Andy White. In many of the later episodes Gildersleeve has to acknowledge Birdie's commonsense approach to some of his predicaments. By the early 1950s, Birdie was heavily depended on by the rest of the family in fulfilling many of the functions of the household matriarch, whether it be giving sound advice to an adolescent Leroy or tending Marjorie's children.\n\nBy the late 1940s, Marjorie slowly matures to a young woman of marrying age. During the 9th season (September 1949-June 1950) Marjorie meets and marries (May 10) Walter \"Bronco\" Thompson (Richard Crenna), star football player at the local college. The event was popular enough that Look devoted five pages in its May 23, 1950 issue to the wedding. After living in the same household for a few years with their twin babies Ronnie and Linda, the newlyweds move next door to keep the expanding Gildersleeve clan close together.\n\nLeroy, aged 10--11 during most of the 1940s, is the all-American boy who grudgingly practices his piano lessons, gets bad report cards, fights with his friends and cannot remember to not slam the door. Although he is loyal to his Uncle Mort, he is always the first to deflate his ego with a well-placed \"Ha!!!\" or \"What a character!\" Beginning in the Spring of 1949, he finds himself in junior high and is at last allowed to grow up, establishing relationships with the girls in the Bullard home across the street. From an awkward adolescent who hangs his head, kicks the ground and giggles whenever Brenda Knickerbocker comes near, he transforms himself overnight (November 28, 1951) into a more mature young man when Babs Winthrop (both girls played by Barbara Whiting) approaches him about studying together. From then on, he branches out with interests in driving, playing the drums and dreaming of a musical career.\n\nhttp://en.wikipedia.org/wiki/Great_Gildersleeve"
  },
  "locknote-conclusions-and-key-takeaways-from-black-hat-europe-2016": {
    "author": "jeff-moss",
    "description": "At the close of this year's conference, join Black Hat Founder Jeff Moss and members of the esteemed Black Hat Review Board for an insightful conversation on the most pressing issues facing the InfoSec community. This Locknote will feature a candid discussion on the key takeaways coming out of Black Hat Europe and how these trends will impact future InfoSec strategies.",
    "plaintextTitle": "Locknote: Conclusions and Key Takeaways from Black Hat Europe 2016",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=zyjCcup0zAE"
      }
    ],
    "youtubeDescription": "by Jeff Moss  &  Marion Marschalek  &  Haroon Meer  &  Jennifer Savage\n\nAt the close of this year's conference, join Black Hat Founder Jeff Moss and members of the esteemed Black Hat Review Board for an insightful conversation on the most pressing issues facing the InfoSec community. This Locknote will feature a candid discussion on the key takeaways coming out of Black Hat Europe and how these trends will impact future InfoSec strategies."
  },
  "mobile-espionage-in-the-wild-pegasus-and-nation-state-level-attacks": {
    "author": "max-bazaliy",
    "description": "This briefing will take an in-depth look at the technical capabilities of mobile attacks that are being leveraged against real targets for the purpose of espionage. We will focus on Pegasus, a lawful intercept product, and the features and exploit chain it used. We will describe how we discovered and tracked the developer's infrastructure prior to the attack, and how we later caught a sample of the elusive malcode being used against a prominent human rights defender. This spyware is professionally developed and highly advanced in its use of 0days, obfuscation, encryption, function hooking, and ability to go unnoticed. We will detail the technical features of the exploit chain including the analysis of various 0day vulnerabilities that the toolkit was using. We will also look in-depth at how this espionage software utilizes remote jailbreaks and backdoors to embed itself into the device. You will learn all of the technical details about this attack and also how to take steps to defend yourself against similar attacks. You will also gain valuable insight into how researchers identify and track sophisticated, nation-state level malware that targets high risk groups (e.g. human rights organizations, corporations, etc).",
    "plaintextTitle": "Mobile Espionage in the Wild: Pegasus and Nation-State Level Attacks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Bazaliy-Mobile-Espionage-in-the-Wild-Pegasus-and-Nation-State-Level-Attacks.pdf",
        "type": "Presentation"
      }
    ]
  },
  "narcos-counterfeiters-and-scammers-an-approach-to-visualize-illegal-markets": {
    "author": "andrew-lewman",
    "description": "Counterfeiting is a global issue - one that has become even more complex as this illegal activity has moved online. Cybercriminals create thousands of websites round-the-clock - at almost no cost - as part of their digital marketing strategy to lure unsuspecting shoppers. These fraudsters often stay one step ahead of law enforcement's countermeasures by using false identities and proxies to buy domain names in multiple countries. They are able to react quickly to takedown efforts. If need be, they can set up replacement websites within minutes thanks to an architecture of backup servers.  To prevent scams or abuses, some typically monitor domain registrations and watch for new domain names. This way they hope to identify websites that could, in the future, be host to malicious activity. Unfortunately, this approach has several limitations that we will spell out in our presentation. For instance, the data source used – TLD zonefiles mainly – does not disclose subdomains when some potentially harmfull websites are hosted there. At the contrary, DNS requests disclose fully qualified domain names.  In \"Narcos, Counterfeiters and Scammers: An Approach to Visualize Illegal Markets,\" Andrew Lewman and Stevan Keraudy will present their new research which offers a more effective approach based on the analysis of billions of DNS requests that goes far beyond traditional zonefile studies.  We will share our methodology, which includes an automatic detection, analysis and clustering of illegal websites in order to find relevant information on fraudsters and their online strategy. For a given example, we filtered data from over a billion DNS cache miss requests a day to a few thousand counterfeit websites. Among those, we identify several hundred of domain names that belong to the same illegal organization. We will present our results during the talk. To illustrate our method, we will present use cases on counterfeiters, narcos and scammers networks.",
    "plaintextTitle": "Narcos Counterfeiters and Scammers: An Approach to Visualize Illegal Markets",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Lewman-Narcos-Counterfeiters-And-Scammers-An-Approach-To-Visualize-Illegal-Markets.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=1ZuM4crhAMk"
      }
    ],
    "youtubeDescription": "1-DarkWeb Markets, Counterfeiters & Scammers: @Andrew Lewman, Stevan Keraudy\n\nNovember 3, 2016 11 03 10 25 58 2\n\n1-Narcos, Counterfeiters and Scammers: An Approach to Visualize Illegal Markets\n\n@AndrewLewman, Stevan Keraudy\n\n@FarsightSecInc Farsight Security @CybelAngel BlackHat Europe, London\n\nCounterfeiting is a global issue - one that has become even more complex as this illegal activity has moved online. Cybercriminals create thousands of websites round-the-clock - at almost no cost - as part of their digital marketing strategy to lure unsuspecting shoppers. These fraudsters often stay one step ahead of law enforcement's countermeasures by using false identities and proxies to buy domain names in multiple countries. They are able to react quickly to takedown efforts. If need be, they can set up replacement websites within minutes thanks to an architecture of backup servers.\n\nTo prevent scams or abuses, some typically monitor domain registrations and watch for new domain names. This way they hope to identify websites that could, in the future, be host to malicious activity. Unfortunately, this approach has several limitations that we will spell out in our presentation. For instance, the data source used – TLD zonefiles mainly – does not disclose subdomains when some potentially harmfull websites are hosted there. At the contrary, DNS requests disclose fully qualified domain names.\n\nIn \"Narcos, Counterfeiters and Scammers: An Approach to Visualize Illegal Markets,\" Andrew Lewman and Stevan Keraudy will present their new research which offers a more effective approach based on the analysis of billions of DNS requests that goes far beyond traditional zonefile studies.\n\nWe will share our methodology, which includes an automatic detection, analysis and clustering of illegal websites in order to find relevant information on fraudsters and their online strategy. For a given example, we filtered data from over a billion DNS cache miss requests a day to a few thousand counterfeit websites. Among those, we identify several hundred of domain names that belong to the same illegal organization. We will present our results during the talk. To illustrate our method, we will present use cases on counterfeiters, narcos and scammers networks."
  },
  "pocket-sized-badness-why-ransomware-comes-as-a-plot-twist-in-the-cat-mouse-game": {
    "author": "federico-maggi",
    "description": "While we have grown accustomed to stealthy malware, specifically written to gain and maintain control of the victim machines to abuse their resources, ransomware really comes as a \"plot twist!\" After 10+ years of stealthy malware, spread mainly for building botnets and steal information, for the second time we're witnessing a growth of disruptive malware, and an interest for direct and fast profit. Ransomware is a particularly striking example of disruptive malware, both on mobile and desktop targets: While traditional mass malware must fly under the radar to fulfill its goals, a ransomware attack that remains unaccountable has failed miserably. It must show up to inform and frighten the victim! As a result, the human psychological response to the attack plays a significant role in the success of ransomware schemes. And, given the remarkable revenue, the scheme seems to be working fairly well. This talk will describe the technical impact of disruptive malware and its game-changing approach, which made us (at least) rethink our incident-response plans. We will focus on mobile ransomware as a representative, extreme case study. Albeit not very studied, we are currently tracking 10 distinct families, and collected tenths of thousands distinct samples in three months. In this talk, we will go through the most notorious families such as Koler, SLocker, Svpeng (and mention the other notable ones), overviewing their social-engineering tricks and how they are technically implemented. This will include, for instance, how an app can effectively lock a device to forcefully display the typical threatening message that informs the victim of what just happened, or how crypto and file-system APIs are (ab)used to surreptitiously encrypt the valuable data. After having overviewed these aspects, we will describe how they can be effectively detected with specific static features. We will present a lightweight Smali emulator to track the instruction sequences that implement device-locking mechanisms. To detect malicious encryption attempts, we will present a static, dataflow-based program-analysis technique and tool that track file-system operations (e.g., file listing, file reading) to determine if they are \"connected\" to encryption flows. Since the most recent families have started to abuse the device-administration API (e.g., to lock the device), obfuscated method names and reflection to hinder automatic static analysis, we will show a couple of counter-tricks. Last, we will show how the threatening messages can be recognized from normal text using a language-analysis technique, which classifies text based on the appearance of key terms frequently found in ransomware samples but not in benign sources. Since static program-analysis approaches like ours can be time and resource consuming, we describe a fast triaging pre-filtering technique to quickly discard strikingly benign applications. This filter is generic and ransomware-agnostic. Thus, in principle, it could be applied to any app-vetting pipeline. With this talk we will release the source code of a prototype that implements (part of) the described techniques, and a dataset comprising tenths of thousands of ransomware applications targeting the Android platform, each labeled with the set of features that characterize their statically-extracted behavior.",
    "plaintextTitle": "Pocket-Sized Badness: Why Ransomware Comes as a Plot Twist in the Cat-Mouse Game",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Maggi-Pocket-Sized-Badness-Why-Ransomware-Comes-As-A-Plot-Twist-In-The-Cat-Mouse-Game.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://github.com/necst/heldroid",
        "type": "Source"
      }
    ]
  },
  "randomization-cant-stop-bpf-jit-spray": {
    "author": "elena-reshetova",
    "description": "Linux Berkeley Packet Filters (BPF) is a mechanism that was originally introduced in Linux kernel 2.5 as a way to perform fast line-speed filtering of network packets. In Linux kernel 3.0 a Just-In-Time (JIT) compiler was added, effectively transforming it into a general-purpose mechanism to safely support interpreted code injected into a Linux kernel. In fact, it has been even called the \"universal in-kernel virtual machine\" [1]. Nowadays BPF usages are not limited just by packet filtering, but are also used in mechanisms such as seccomp [2], various tracepoints [3] and others, making it an attractive target for an attacker. The original JIT-spray attack against BPF JIT compiler was first described in 2012 [4] with the proof of concept implementation available [5]. It used the ability to pass the exploit payload as constants in BPF instructions and the fact that filter address was relatively easy to guess given enough filters loaded in the kernel. After that the upstream kernel merged patches that addressed the attack by randomizing the load offset of a filter. However, this didn't remove the actual problem (possibility of providing payload in BPF instructions) but only stopped the original proof of concept code from working. It was thought that this is a sufficient mitigation to the attack because the difficulty of guessing the correct load offset was very high.This talk will present a modified proof of concept code [6] that demonstrates the possibility of successful BPF JIT-spray attack on the 4.4 upstream Linux kernel. The idea of the modification is to create long enough filters to make sure they spawn beyond one memory page and render the payload in a way that random jumps to page start with a small offset search is enough to guess the payload address. The attack was first announced on Linux kernel-hardening mailing list in march this year and got a considerable attention in the grsecurity forum post [7] and LWN front page [8].The kernel patches that address this attack were merged to upstream kernel [9] and expected to appear for 4.7. Sources:[1] https://lwn.net/Articles/599755/[2] https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt[3] https://lwn.net/Articles/632686/[4] http://mainisusuallyafunction.blogspot.fi/2012/11/attacking-hardened-linux-systems-with.html[5] https://github.com/kmcallister/alameda[6] https://github.com/01org/jit-spray-poc-for-ksp[7] https://forums.grsecurity.net/viewtopic.php?t=4463&p=16260#p16260[8] https://lwn.net/Articles/686098/[9] http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=4f3446bb809f20ad56cadf712e6006815ae7a8f9",
    "plaintextTitle": "Randomization Can't Stop BPF JIT Spray",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Reshetova-Randomization-Can't-Stop-BPF-JIT-Spray.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Reshetova-Randomization-Can't-Stop-BPF-JIT-Spray-wp.pdf",
        "type": "Source"
      }
    ]
  },
  "real-world-post-quantum-cryptography-introducing-the-openquantumsafe-software-project": {
    "author": "jennifer-fernick",
    "description": "Almost all of the widely-used cryptography on the internet will be broken or substantially compromised by large-scale quantum computers. It is also true that anything that ever has been - or will be - sent over a network using vulnerable cryptographic algorithms can be subject to storage and later decryption once a quantum computer becomes available. As a consequence, a global movement toward developing quantum-resistant cryptography has begun. In this presentation, I demonstrate the world's first open-source library offering a full range of secure implementations of quantum-safe cryptographic algorithms, as well as key benchmarks, challenges to integration, and forthcoming protocol upgrades and software contributions resulting from our work.",
    "plaintextTitle": "Real-World Post-Quantum Cryptography: Introducing the OpenQuantumSafe Software Project",
    "material": []
  },
  "rooting-every-android-from-extension-to-exploitation": {
    "author": "di-shen",
    "description": "These years, Keen Lab of Tencent (formerly known as the Keen Team), worked on various Linux kernel bugs and applied some of them to Android devices for rooting. Rooting latest Android devices is more and more interesting and challenging in 2016. With SELinux being enforced more strictly, not many attack surfaces in kernel can be accessed by local user on Android. So, currently Linux Wireless-Extensions(WEXT) IOCTL is a really awesome attack surface in Android kernel. An Android application is able to invoke WEXT IOCTL interface via socket, and escalate privilege with WEXT-related kernel vulnerability. SELinux will not deny these kind of invoking.  Normally, a Wireless-Extension on Android is implemented by Wi-Fi chipset vendor as a Linux kernel module. There are multiple chipsets available for Android devices, so different Android phone may have different implementation of WEXT. Broadcom Wi-Fi chipset is used on Google Nexus 6p, Huawei Mate 8, Samsung Galaxy and many other premium-end smartphones. Mediatek device always have its own Wi-Fi chipset. The rest of the devices, like Nexus 5x and Nexus 7, use Qualcomm chipset. We've found several different kernel bugs in every mentioned implementations of Linux WEXT on Android. With these vulnerabilities, we can gain root privilege on every Android device, no matter what Wi-Fi chipset it has.  In this talk, we will not only introduce how to audit source code of WEXT on Android but also give three case studies of exploiting local privilege escalation vulnerabilities found in Broadcom, Qualcomm and Mediatek's implementation of WEXT.  The first case study is exploiting a stack overflow vulnerability in Qualcomm WEXT, which requires building a special JOP chain to bypass PXN restriction in ARM64 Linux kernel. Only X19~X2n registers can be controlled when the overflow is triggered, so finding proper JOP gadgets to achieve kernel code execution is a challenge.  The second case study is exploiting a data/BSS overflow vulnerability in Mediatek WEXT, which requires controlling PC by overwrite a function pointer in data section. The offset of function pointer is unknown, so another info leak vulnerability in WEXT will also be introduced here. This exploit doesn't need any hardcoded kernel symbol to gain root on most of Mediatek devices.  The third case study is exploiting a use-after-free vulnerability in Broadcom WEXT; it requires two threads race into a kernel function in the same time to trigger a use-after-free issue due to race conditions. So we have to refill the freed object in very short time. Spraying kernel heap stably and quickly is a big challenge. Another interesting point of this case is that attacker (an untrusted application) need to ask 'system_server' process to trigger that UAF vulnerability in kernel via binder IPC.  In summary, this presentation offers all exploitation techniques about rooting Android with mentioned WEXT vulnerabilities. Some ideas (e.g. the method of kernel heap spraying on Android) that have never been discussed before.",
    "plaintextTitle": "Rooting EVERY Android: From Extension to Exploitation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Shen-Rooting-Every-Android-From-Extension-To-Exploitation.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Shen-Rooting-Every-Android-From-Extension-To-Exploitation-wp.pdf",
        "type": "White Paper"
      }
    ]
  },
  "signing-into-one-billion-mobile-app-accounts-effortlessly-with-oauth2.0": {
    "author": "ronghai-yang",
    "description": "OAuth2.0 protocol has been widely adopted by mainstream Identity Providers (IdPs) to support Single-Sign-On services. Since this protocol was originally designed to serve the authorization need for 3rd party websites, different vulnerabilities have been uncovered when adapting OAuth to support mobile app authentication. To the best of our knowledge, all the attacks discovered so far, including BlackHat USA'16 [3], CCS'14 [2] and ACSAC'15 [7], etc,  require the interactions with the victim, for example via malicious apps or network eavesdropping, etc. On the contrary, we have discovered a new type of widespread but incorrect usages of OAuth, which can be exploited remotely by an attacker to sign into a victim's mobile app account without any involvement/ awareness of the victim. The root cause of this vulnerability is a common, but misplaced trust in the authenticating information received by the 3rd party app's backend server from its own client-side mobile app, which in turn, relies on potentially tampered information obtained from the client-side mobile app of the IdP. To confirm the widespread nature of the vulnerability, we have developed an exploit for this new vulnerability among three top-tier IdPs which support SSO services for many 3rd party mobile apps and serve billions of registered users worldwide. Our empirical findings are alarming: on average, 46.26% of the mobile apps under test are found to be vulnerable to the new attack. Our incomplete list of vulnerable applications include top-ranked mobile apps for travel planning, hotel-reservation, personal-finance-management, private-chatting, dating-service, online-shopping, video/music streaming etc.  The total number of downloads for our incomplete list of popular but vulnerable apps already exceeds 2.4 billion. As such, a massive amount of extremely sensitive personal information is wide-open for grab as a result of this vulnerability. For some of the vulnerable apps, the online-currency/ service credits associated with the victim's mobile app account are also at the disposal of the attacker. Although our current attack is demonstrated over the Android platform, the exploit itself is platform-agnostic: any iOS or Android user of the vulnerable mobile app is affected as long as he/ she has used the OAuth2.0-based SSO service with the app before. It is therefore urgent for the various affected parties involved to take immediate preventive and remedial actions when implementing OAuth2.0-based SSO services for mobile applications.",
    "plaintextTitle": "Signing Into One Billion Mobile App Accounts Effortlessly with OAuth2.0",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Yang-Signing-Into-Billion-Mobile-Apps-Effortlessly-With-OAuth20.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Yang-Signing-Into-Billion-Mobile-Apps-Effortlessly-With-OAuth20-wp.pdf",
        "type": "Source"
      }
    ]
  },
  "stumping-the-mobile-chipset": {
    "author": "adam-donenfeld",
    "description": "Following recent security issues discovered in Android, Google made a number of changes to tighten security across its fragmented landscape. However, Google is not alone in the struggle to keep Android safe. Qualcomm, a supplier of 80% of the chipsets in the Android ecosystem, has almost as much effect on Android's security as Google.   OEMs own some responsibility for low security standards, but the role of chipset manufacturers in the Android project is frequently underestimated. These manufacturers can have a devastating impact on the security of a mobile device. With the ubiquity of the Qualcomm chipsets used in Android devices, and the modifications that are made at the lowest-level in the Android project, a security breach in chipset code is often critical.  In this talk we will present the communication interfaces and protocols of hardware kernel modules. We will show how they work with each other and the security architecture of Qualcomm chipsets -- the most popular Android chipset -- upon which most of OEMs rely. We will show how a few minor cracks in this architecture can have dire effects.  Lastly, we will present multiple zero-day, privilege escalation vulnerabilities affecting most Android devices in the market today in multiple subsystems of Android's Linux kernel, all from code introduced by the chipset vendor. We will demonstrate an exploit for one of these zero-days which allows an attacker to completely compromise a device, running arbitrary code in kernel from any zero privileged application. The exploit dubbed 'Qualaroot,' is just one of the many severe vulnerabilities in Qualcomm's chipset code - used by all the flagship Android devices in the market.",
    "plaintextTitle": "Stumping the Mobile Chipset",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Donenfeld-Stumping-The-Mobile-Chipset.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Donenfeld-Stumping-The-Mobile-Chipset-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=vAo76EjL_m4"
      }
    ],
    "youtubeDescription": "Following recent security issues discovered in Android, Google made a number of changes to tighten security across its fragmented landscape. However, Google is not alone in the struggle to keep Android safe. Qualcomm, a supplier of 80% of the chipsets in the Android ecosystem, has almost as much effect on Android’s security as Google. With this in mind, we decided to examine Qualcomm’s code in Android devices. During our research, we found multiple privilege escalation vulnerabilities in multiple subsystems introduced by Qualcomm to all its Android devices in multiple different subsystems. In this presentation we will review not only the privilege escalation vulnerabilities we found, but also demonstrate and present a detailed exploitation, overcoming all the existing mitigations in Android’s Linux kernel to run kernel-code, elevating privileges and thus gaining root privileges and completely bypassing SELinux.\n\nAdam Donenfeld is a lead mobile security researcher at Check Point with vast experience in the mobile research field. From a young age he has been hacking and reverse engineering for fun and profit. Prior to Check Point Adam served in an Israeli elite intelligence unit, as a security researcher. In his free time, Adam studies German."
  },
  "talking-behind-your-back-attacks-and-countermeasures-of-ultrasonic-cross-device-tracking": {
    "author": "vasilios-mavroudis",
    "description": "Cross-device tracking (XDT) technologies are currently the \"Holy Grail\" for marketers because they allow to track the user's visited content across different devices to then push relevant, more targeted content. For example, if a user clicks on a particular advertisement while browsing the web at home, the advertisers are very interested in collecting this information to display, later on, related advertisements on other devices belonging to the same user (e.g., phone, tablet).  Currently, the most recent innovation in this area is ultrasonic cross-device tracking (uXDT), which is the use of the ultrasonic spectrum as a communication channel to \"pair\" devices for the aforementioned tracking purposes. Technically, this pairing happens through a receiver application installed on the phone or tablet. The business model is that users will receive rewards or useful services for keeping those apps active, pretty much like it happens for proximity-marketing apps (e.g., Shopkick), where users receive deals for walk-ins recorded by their indoor-localizing apps.  This talk will describe and demonstrate the practical security and privacy risks that arise with the adoption of uXDT-enabled systems. The uXDT technology has caught the attention of major companies (e.g., IDG Ventures, Google, Nestle, Dominos), many of which either invested in uXDT providers (e.g., SilverPush, Signal360, Audible Magic), or approached such companies as clients. Unfortunately, unbeknownst to the users, we found that numerous mobile applications, some with millions of downloads, include uXDT advertising frameworks that actively listen for ultrasounds, with no opt-out option for the users! Security experts and the authorities (e.g., the Federal Trade Commission) have promptly raised concerns about uXDT, but until now no comprehensive security analysis of the technology has been released.  In this talk, we will explore the uXDT ecosystem, dig into the inner workings of popular uXDT frameworks, and perform an in-depth technical analysis of the underlying technology, exposing both implementation & design vulnerabilities, and critical security & privacy shortcomings that we discovered. In the offensive part of our talk, we will demonstrate (through practical demo sessions) how an attacker can exploit uXDT frameworks to reveal the true IP addresses of users who browse the Internet through anonymity networks (e.g., VPNs or Tor). Moreover, we will describe how an attacker can tamper with the \"pairing\" process or affect the results of the advertising/bidding algorithms. For example, an attacker equipped with a simple beacon-emitting device (e.g., a smartphone) can walk into a Starbucks at peak hour and launch a profile-corruption attack against all customers currently taking advantage of uXDT-enabled apps.  In the defensive part of our talk, we will introduce three countermeasures that we designed, implemented, and will publicly release. These include (1) a mobile application that detects ultrasound beacons \"in the air\" with the goal of raising awareness, (2) a browser extension that acts as a personal firewall by selectively filtering ultrasonic beacons, and (3) an brand-new OS permission control in Android that allows applications to declaratively ask access to the ultrasound spectrum. We will go into the technical details and provide remediation advice useful both for the users and developers.",
    "plaintextTitle": "Talking Behind Your Back: Attacks and Countermeasures of Ultrasonic Cross-Device Tracking",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Mavroudis-Talking-Behind-Your-Back-Attacks-And-Countermeasures-Of-Ultrasonic-Cross-Device-Tracking.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=GRPYF9b7_tA"
      }
    ],
    "youtubeDescription": "For the first time, we examine the different facets of the ultrasound tracking ecosystem. \n\nWe show that ultrasound cross-device tracking deployments can be abused to perform stealthy deanonymization attacks (e.g., to unmask users who browse the Internet through anonymity networks such as Tor), to inject fake or spoofed audio beacons, and to leak a user's private information.\n\n\nFor the technical details of our work please visit http://ubeacsec.org"
  },
  "towards-a-policy-agnostic-control-flow-integrity-implementation": {
    "author": "dean-sullivan",
    "description": "Control-flow integrity (CFI) is a general defense against code-reuse attacks. In theory, a CFI implementation mitigates control-flow hijacking by verifying that the control-flow transfer follows its legitimate path. However, CFI and its current implementations suffer from deficiencies with regard to either security or practicality: 1) they assume the extraction of a precise control-flow graph, which is not generally possible; 2) prior implementations have resulted in significant performance overhead; and 3) efficient software-based CFI implementations (e.g. Microsoft's Control-Flow Guard, GCC/LLVM's VTable Verification, Google's IFCC) often make concessions in the face of such performance limitations, weakening the policy's security.\n\nTo date, almost all \"efficient\" CFI defenses can be shown to be bypassable. Weakening the CFI policy to achieve improved performance, in one form or another, is the culprit. A signficant amount of research has been conducted to address this singular point. While prior work has demonstrated significant improvements on these fronts, no existing CFI countermeasure has been able to address a new class of stealthy adversaries that bend control-flow hijacking attacks around the CFI policy itself. These attacks maliciously mimick the behavior of an ideally protected CFI application.\n\nTo tackle these shortcomings, recent CFI defenses have begun to incorporate architectural or hardware/software co-design principles to strengthen the security guarantees of the defense. Intel has recently proposed its Control-flow Enforcement Technology (CET) along with the NSA and several research solutions. Much like past approaches, however, these systems are making concessions with the CFI policy to handle complex code contstructs, shared-libraries or multi-tasking, or otherwise improve the performance of the protected application.\n\nWe present a general-purpose, hardware-enhanced CFI scheme that tackles these issues and allows the enforcement of diverse CFI policies.  We provide a detailed analysis of existing hardware-assisted CFI defenses and show that our solution is more secure, efficient, and scalable. We demonstrate how careful systems-software and architectural design considerations can address prior issues with CFI implementations. We will elaborate on a CFI platform that handles shared-libraries with compiler-supported ISA extensions, as well as incorporating features to handle multi-tasking and interoperation with legacy applications.  Our evaluation includes a detailed analysis of known bypasses of existing CFI protected systems, both in software and hardware, aimed to highlight why past approaches have failed. We further demonstrate that our approach shows resilience to these attacks and CFI vulnerabilities. Finally, we evaluate our solution against compute-intesive workloads and show high efficiency.",
    "plaintextTitle": "Towards a Policy-Agnostic Control-Flow Integrity Implementation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Sullivan-Towards-A-Policy-Agnostic-Control-Flow-Integrity-Implementation.pdf",
        "type": "Presentation"
      }
    ]
  },
  "use-after-use-after-free-exploit-uaf-by-generating-your-own": {
    "author": "guanxing-wen",
    "description": "This talk will introduce Use-After-Use-After-Free (UAUAF), a novel and relatively universal exploitation technique for UAF vulnerabilities in Adobe Flash. By leveraging a sequence of object occupations and releases, UAUAF can transform a UAF into a multi-class type confusion. Full memory access is gained upon the mitigations recently added by Adobe. More importantly, this talk will illustrate UAUAF by CVE-2016-1097, a real UAF 0day that I reported to Adobe in May. Exploitation process, i.e., from discovering the 0day, gaining full memory access, chaining ROP gadgets, to the final code execution will be presented in detail.",
    "plaintextTitle": "Use-After-Use-After-Free: Exploit UAF by Generating Your Own",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Wen-Use-After-Use-After-Free-Exploit-UAF-By-Generating-Your-Own.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Wen-Use-After-Use-After-Free-Exploit-UAF-By-Generating-Your-Own-wp.pdf",
        "type": "Source"
      }
    ]
  },
  "when-virtualization-encounter-afl-a-portable-virtual-device-fuzzing-framework-with-afl": {
    "author": "jack-tang",
    "description": "Along with virtualization technology adopted by both enterprise and customer popularly, virtual machines escape attacking become more and more critical which could NOT be ignored. Because of virtual devices' nature character (virtual device emulation is in host level, guest can access virtual devices with arbitrary data), they are a big attack surface to achieve virtual machine escaping. In fact among those reported virtual machines escape attacking, the virtual device attacking hold big ratio. For example, the VENOM attacking (Reference 8.1). Several fuzzing methods towards virtual devices have been released including dump I/O traces and replay in guest OS, conformance fuzzing to constraint virtual device in proper internal state and so forth. However, rare of them considered calculating and controlling code coverage and control in intension. And also, rare of them consider keep their fuzzing framework portable for difference virtualization software. So what happens when virtualization fuzzing encounter with AFL? We would like give you one possible answer. Our portable virtual device fuzzing framework with AFL could solve both of the two challenges—code coverage feedback and portability.",
    "plaintextTitle": "When Virtualization Encounter AFL: A Portable Virtual Device Fuzzing Framework with AFL",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Li-When-Virtualization-Encounters-AFL-A-Portable-Virtual-Device-Fuzzing-Framework-With-AFL.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Li-When-Virtualization-Encounters-AFL-A-Portable-Virtual-Device-Fuzzing-Framework-With-AFL-wp.pdf",
        "type": "Source"
      }
    ]
  },
  "wifi-based-imsi-catcher": {
    "author": "piers-ohanlon",
    "description": "We introduce a new type of IMSI catcher which operates over WiFi. Whilst existing Stingray type IMSI catchers exploit 2-4G radio protocols to track movements of mobile subscribers, in this talk, we introduce two new approaches to track mobile devices which exploit authentication protocols that operate over WiFi. These protocols are now widely implemented in most modern mobile OSes, allowing for the creation of a low cost IMSI catcher.We demonstrate how users may be tracked on a range of smartphones and tablets including those running iOS , Android and other mobile OSs. This tracking can be performed silently and automatically without any interaction from the tracked user. We have developed a proof of concept system that demonstrates our IMSI catcher employing passive and active techniques.Finally, we present guidelines for vendors and cellular network operators to mitigate the user privacy issues that arise.",
    "plaintextTitle": "WiFi-Based IMSI Catcher",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-OHanlon-WiFi-IMSI-Catcher.pdf",
        "type": "Presentation"
      }
    ]
  },
  "witchcraft-compiler-collection-towards-self-aware-computer-programs": {
    "author": "jonathan-brossard",
    "description": "With this presentation, we take a new approach to reverse engineering. Instead of attempting to decompile code, we seek to undo the work of the linker and produce relocatable files, the typical output of a compiler. The main benefit of the later technique over the former being that it does work. Once achieved universal code 'reuse' by relinking those relocatable objects as arbitrary shared libraries, we'll create a form of binary reflection, add scripting capabilities and in memory debugging using a JIT compiler, to attain automated API prototyping and annotation, which, we will argue, constitutes a primary form of binary code self awareness. Finally, we'll see how abusing the dynamic linker internals shall elegantly solve a number of complex tasks for us, such as calling a given function within a binary without having to craft a valid input to reach it. The applications in terms of vulnerability exploitation, functional testing, static analysis validation and more generally computer wizardry being tremendous, we'll have fun demoing some new exploits in real life applications, and commit public program profanity, such as turning PEs into ELFs, functional scripting of sshd in memory, stealing crypto routines without even disassembling them, among other things that were never supposed to work. All the above techniques have been implemented into the Wichcraft Compiler Collection, to be released as proper open source software (MIT/BSD-2 licenses).",
    "plaintextTitle": "Witchcraft Compiler Collection: Towards Self Aware Computer Programs",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Brossard-Witchcraft-Compiler-Collection-Towards-Self-Aware-Computer-Programs.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/eu-16/materials/eu-16-Brossard-Witchcraft-Compiler-Collection-Towards-Self-Aware-Computer-Programs-wp.pdf",
        "type": "Source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=J5g0udW2jMQ"
      }
    ],
    "youtubeDescription": "by Jonathan Brossard\n\nWith this presentation, we take a new approach to reverse engineering. Instead of attempting to decompile code, we seek to undo the work of the linker and produce relocatable files, the typical output of a compiler. The main benefit of the later technique over the former being that it does work. Once achieved universal code 'reuse' by relinking those relocatable objects as arbitrary shared libraries, we'll create a form of binary reflection, add scripting capabilities and in memory debugging using a JIT compiler, to attain automated API prototyping and annotation, which, we will argue, constitutes a primary form of binary code self awareness.\n\nFinally, we'll see how abusing the dynamic linker internals shall elegantly solve a number of complex tasks for us, such as calling a given function within a binary without having to craft a valid input to reach it. The applications in terms of vulnerability exploitation, functional testing, static analysis validation and more generally computer wizardry being tremendous, we'll have fun demoing some new exploits in real life applications, and commit public program profanity, such as turning PEs into ELFs, functional scripting of sshd in memory, stealing crypto routines without even disassembling them, among other things that were never supposed to work. All the above techniques have been implemented into the Wichcraft Compiler Collection, to be released as proper open source software (MIT/BSD-2 licenses)."
  },
  "Crocker": {
    "author": "",
    "description": "Forty-five years ago the Arpanet came into existence, connecting computers with permanent, leased lines.  Within a few years multiple networks were interconnected to form today's Internet.  Billions of users, trillions of dollars of commerce and a new “flat” world emerged.  Two of the less attractive consequences of the explosive growth were the myriad security problems and the wrangling over Internet governance issues.Dr. Crocker will talk a bit about the early history, particularly the creation of the Requests for Comments and the positive impact the open approach had on technology development, and then focus on current activities, both positive and negative.  Security technologies such as DNSSEC and rPKI hold some promise of improving the game, but they are but a small sample of what needs to be done.Meanwhile, a variety of policy issues permeate the security arena.  He'll also talk briefly about ICANN, what it does, and, perhaps more important, what it doesn't do.Dr. Crocker will close with a challenge to the Black Hat community.",
    "plaintextTitle": "Let's Fix the Mess ",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=8a7hTBIGkBk"
      }
    ],
    "youtubeDescription": "Metro Atlanta's traffic is a mess for all of us, and businesses are choosing to locate elsewhere because of it. Harry Norman Realtors CEO Dan Parmer tells why he endorses the Atlanta transportation sales tax referendum, and urges YOU to vote for it on July 31."
  },
  "Dhanjani": {
    "author": "",
    "description": "Homes and offices inspired by concept of Internet of Things (IoT) are here and so are the related high impact attack vectors. Your next-door lock, sprinkler system, light bulb, pet feeder, door sensor, thermostat, and baby monitor are likely to be vulnerable to attack. Remotely.In this talk, we will break open emerging home automation products to build a solid threat model and see actual examples of vulnerabilities: from how an attacker can remotely cause blackout at your home (or your high-rise condo or office) and exploit various physical sensors that you will come to depend on. These aren't vulnerabilities you can just patch with a software update.This talk will cover demonstration of vulnerabilities that can cause a sustained blackout by malicious malware, design issues that can lead to spying from baby monitors, and the remote shut off of electronic devices in the home.We know the implications of critical infrastructure vulnerabilities that are based on traditional protocols. It is time to talk about next-generation infrastructure that is destined to empower our future and our safety.",
    "plaintextTitle": "Abusing the Internet of Things: Blackouts, Freakouts, and Stakeouts ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Dhanjani/Asia-14-Dhanjani-Abusing-The-Internet-Of-Things-Blackouts-Freakouts-And-Stakeouts.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7QvtMhlipzs"
      }
    ],
    "youtubeDescription": ""
  },
  "Ortiz": {
    "author": "",
    "description": "We will dive deep into the JPEG algorithm and then explore numerous published hiding techniques, explained in plain English (as opposed to Ph.D. mathematical lingo). Some techniques are extremely difficult to detect, while others have high capacity (15% to 30%). You will be amazed at how much data can be hidden in a JPEG with almost no visible change (and ZERO quality degradation), even when comparing images side by side. Then, we'll discuss several approaches to automated detection. We will demonstrate detection against the techniques applied. The entire talk is sprinkled with images and live demonstrations. Finally, I will present a customized implementation with full cryptography and detection mitigation. Best of all, you get the program to use yourself - this will be fun!",
    "plaintextTitle": "Advanced JPEG Steganography and Detection ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Ortiz/Asia-14-Ortiz-Advanced-JPEG-Steganography-And-Detection.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=BQPkRlbVFEs"
      }
    ],
    "youtubeDescription": ""
  },
  "Balduzzi": {
    "author": "",
    "description": "Automatic Identification System (AIS) is a promoted standard and implementation for vessels traffic safety and monitoring. With more than 400,000 installations worldwide, AIS is currently mandatory for commercial vessels and a de-facto solution for leisure crafts since 2006. In our research on AIS, we identified numerous vulnerabilities and problems affecting both the implementation of AIS services, that collect/provide access to AIS data, and the foundations of the AIS protocol used in radio-frequency (RF) communications. Our concerns affect all AIS transponders deployed on ships worldwide. This talk is divided in two parts: We first introduce the audience to AIS and the problems that we identified, and then we disclose and discuss a series of novel 2.0 vulnerabilities and attacks.",
    "plaintextTitle": "AIS Exposed. Understanding Vulnerabilities and Attacks 2.0 ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Balduzzi/Asia-14-Balduzzi-AIS-Exposed-Understanding-Vulnerabilities-And-Attacks.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5rt9dzu3I7U"
      }
    ],
    "youtubeDescription": ""
  },
  "Aldridge": {
    "author": "",
    "description": "Many organizations have implemented robust security tool suites and “checked the box” on security logging standards. Yet many of these same organizations have not considered how these tools would effectively support an incident investigation effort.This presentation begins by outlining a typical intrusion investigation process. It then presents a series of scenarios where investigators need the capability to rapidly obtain information from the environment to further their investigation. Each scenario will contain a case study and present recommended technical and process prerequisites.",
    "plaintextTitle": "Beyond 'Check The Box': Powering Intrusion Investigations ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Aldridge/WP-Asia-14-Aldridge-Beyond-Check-The-Box-Powering-Intrusion-Investigations.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Aldridge/Asia-14-Aldridge-Beyond-Check-The-Box-Powering-Intrusion-Investigations.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=yR255k_VglA"
      }
    ],
    "youtubeDescription": ""
  },
  "Dunning": {
    "author": "",
    "description": "How much do you trust the hardware shipped to your office or purchased at the local computer store. It may surprise you how easy it can be to change hardware into a Trojan. This presentation will show attendees how they can change computer peripherals from around the house into an attack platform. The great thing is you don't need a great understanding of hardware to leverage this attack.I have created a special hardware attack platform called The Glitch. It is a small reprogrammable multipurpose device designed specifically for security testing. As part of its functionality, it has been designed to embed in existing hardware; making it a unique attack vector.In addition to modifying hardware, attendees will also learn about threats from modified firmware. The ever-growing open source community loves to create/modify existing firmware on embedded devices. We will briefly discuss the impact of modified firmware as a staging point inside a corporate network.",
    "plaintextTitle": "Building Trojan Hardware at Home ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Dunning/Asia-14-Dunning-Building-Trojan-Hardware-At-Home.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=QJ4KZ8vlo4g"
      }
    ],
    "youtubeDescription": ""
  },
  "Keenan": {
    "author": "",
    "description": "\"I'm from the government and I'm here to help you\" takes on a sinister new meaning as jurisdictions around the world stumble over each other to 'set the people's data free'. New York City now has an Open Data Law and boasts in subway ads that 'our apps are whiz kid certified' (i.e. third party), which of course translates to 'we didn't pay for them, and don't blame us if somebody got it wrong and the bus don't come.' This session reports on my (and other people's) research aimed at prying out data that you're probably not supposed to have from Open Government Systems around the world.  Recent findings from the Asia Pacific region are included.\"Torturing\" a number of systems using off-the-shelf data analytic tools, and a bit of basic techno-wizardry (without breaking any laws), yielded some fascinating and unexpected information. Which union was shilling for political contributions for which candidate?  Who has the most expensive home in town? Did a politician's wife vote for her own husband? An illustration of a shady \"secondary industry\" based on mining Open Government data will also be presented.There are ways to build these systems well, and examples will be presented of the transformation from \"terrible\" to \"not so bad.\" Applying classic computer science and accounting principles like 'least privilege' and 'segregation of duties' the presentation will suggest some ways to have our Open Data cake without letting data snoopers eat too much of it.",
    "plaintextTitle": "Disasters in the Making:  How I Torture Open Government Data Systems for Fun, Profit, and Time Travel ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Keenan/Asia-14-Keenan-Disasters-In-The-Making-How-I-Torture-Open-Government-Data-Systems-For-Fun-Profit-And-Time-Travel.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Nh9E2Lnvcik"
      }
    ],
    "youtubeDescription": ""
  },
  "Grand": {
    "author": "",
    "description": "On-chip debug interfaces can provide chip-level control of a hardware device and are a primary attack vector to extract program code/data, modify memory contents, or affect device operation on the fly. Depending on the complexity of the target device, manually locating debug connections can be a difficult and time-consuming task, sometimes requiring physical destruction or modification of the device.In this session, Joe will present the JTAGulator, an open source hardware tool that assists in identifying on-chip debug interfaces from test points, vias, or components pads on a circuit board. He will discuss traditional hardware reverse engineering methods, details of JTAG and UART functionality, and how JTAGulator can simplify the task of discovering such interfaces. JTAGulators and target hardware will be available for hands-on experimentation by attendees.",
    "plaintextTitle": "Discovering Debug Interfaces with the JTAGulator ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Grand/Asia-14-Grand-Discovering-Debug-Interfaces-With-The-JTAGulator.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Grand/Asia-14-Grand-Discovering-Debug-Interfaces-With-The-JTAGulator.zip",
        "type": "source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=xi5jSN7NCi4"
      }
    ],
    "youtubeDescription": ""
  },
  "Yason": {
    "author": "",
    "description": "With the release of Internet Explorer 10 in Windows 8, an improved version of IE's Protected Mode sandbox, called Enhanced Protected Mode (EPM), was introduced. With the use of the new AppContainer process isolation mechanism introduced in Windows 8, EPM aims to further limit the impact of a successful IE compromise by limiting both read and write access and limiting the capabilities of the sandboxed IE process.As with other new security features integrated in widely deployed software, it is just prudent to look at how EPM works internally and also evaluate its effectiveness. This presentation aims to provide both by delving deep into the internals and assessing the security of IE 10's Enhanced Protected Mode sandbox.The first part of this presentation will focus on the inner workings of the EPM sandbox where topics such as the sandbox restrictions in place, the inter-process communication mechanism in use, the services exposed by the higher-privileged broker process, and more are discussed. The second part of this presentation will cover the security aspect of the EPM sandbox where its limitations are assessed and potential avenues for sandbox escape are discussed.Finally, in the end of the presentation, an EPM sandbox escape exploit will be demonstrated. The details of the underlying vulnerability, including the thought process that went through in discovering it will also be discussed.",
    "plaintextTitle": "Diving Into IE 10's Enhanced Protected Mode Sandbox ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Yason/WP-Asia-14-Yason-Diving-Into-IE10s-Enhanced-Protected-Mode-Sandbox.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Yason/Asia-14-Yason-Diving-Into-IE10s-Enhanced-Protected-Mode-Sandbox.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=1tBCuYL69Ww"
      }
    ],
    "youtubeDescription": ""
  },
  "Illera": {
    "author": "",
    "description": "In our previous presentation, we learned how did the security in some car ECUs work, and we demonstrated how it could be bypassed to modify their internal parameters, and even to recover a bricked ECU. All of this was done over K-Line, a protocol that was used on all vehicles up to 2010. This time, we will go one step further, introducing the security existing in modern CAN bus enabled vehicles, and of course, how it can be bypassed. We will show a custom made tool that costs less than $20 to build and that is able to access the CAN bus system, giving the possibility of taking control over a CAN enabled vehicle remotely just by hooking four wires.Besides this, we will talk about a very interesting topic, car forensics, giving an overview of the current situation of this field. A demonstration will be done that will show how the gathered data can be used for legal purposes, and the project for a tool to extract and parse this information will be introduced.",
    "plaintextTitle": "Dude, WTF in My CAN!   ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Garcia-Illera/Asia-14-Garcia-Illera-Dude-WTF-In-My-Can.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Y1YmJ0ZYMic"
      }
    ],
    "youtubeDescription": "By: Alberto Garcia Illera & Javier Vazquez Vidal\n\nIn our previous presentation, we learned how did the security in some car ECUs work, and we demonstrated how it could be bypassed to modify their internal parameters, and even to recover a bricked ECU. All of this was done over K-Line, a protocol that was used on all vehicles up to 2010. This time, we will go one step further, introducing the security existing in modern CAN bus enabled vehicles, and of course, how it can be bypassed. We will show a custom made tool that costs less than $20 to build and that is able to access the CAN bus system, giving the possibility of taking control over a CAN enabled vehicle remotely just by hooking four wires.\n\nBesides this, we will talk about a very interesting topic, car forensics, giving an overview of the current situation of this field. A demonstration will be done that will show how the gathered data can be used for legal purposes, and the project for a tool to extract and parse this information will be introduced."
  },
  "Haruyama": {
    "author": "",
    "description": "PlugX is one of the most notorious RAT used for targeted attacks and the author still extends its implementation aggressively.So far, some excellent malware researchers published reports about PlugX's behavior and decryption of important binaries like config data. The information included in PlugX config can be used for identifying attacker groups, but parsing the configs of many specimens is tough work because the config has more than one version, and the algorithm for decrypting it also changes due to the author's continual update.This presentation shows the result of an approach categorizing PlugX variants based on detailed analysis of config data and code. The result seems to indicate multiple attacker groups using common information such as C2 hostname/IP, installed service name, config size, debug string, characteristic double word value, and so on.I will also introduce the latest variant with several anti-reversing techniques.",
    "plaintextTitle": "I Know You Want Me - Unplugging PlugX ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Haruyama/Asia-14-Haruyama-I-Know-You-Want-Me-Unplugging-PlugX.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Haruyama/BHAsia_haruyama_suzuki.zip",
        "type": "source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=bRxCXbGZyFg"
      }
    ],
    "youtubeDescription": ""
  },
  "Femerling": {
    "author": "",
    "description": "New Apps are being published every week, dreaming to become the new hot App, where short development time and low costs are crucial. Many of these Apps are developed with their respective native platform technologies, however, a new tendency is to use cross-platform technologies with the spirit of developing once and run on multiple platforms to save time and keep low costs. But how is security and privacy affected with all these technologies mixing?This presentation digs under the hood of current top mobile cross-platform technologies such as PhoneGap, Corona, RhoMobile, Xamarin and MoSync that uses HTML5, .NET, C++ and scripting languages to write Apps that run on multiple platforms (iOS, Android, Windows Phone, etc.).We will cover how to reverse engineer and audit these kinds of Apps, using static and dynamic tools and techniques differently from native Apps, to understand how they work and to uncover bugs.Many of the popular games are being developed with these kinds of technologies, so if you are a mobile auditor or a game cracker this talk will get you going on how to hack these Apps. Be ready to read code!",
    "plaintextTitle": "The Inner Workings of Mobile Cross-Platform Technologies ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/RosesFemerling/Asia-14-RosesFemerling-The-Inner-Workings-Of-Mobile-Cross-Platform-Technologies.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=0jVrcfBO6vo"
      }
    ],
    "youtubeDescription": ""
  },
  "Nafeez": {
    "author": "",
    "description": "JavaScript today has a presence in almost every single website across the Internet. Aggressive research is in progress in the security community to come up with better security features in JavaScript everyday. Unfortunately, many security features of JS are a double-edged sword. In this presentation, we will show how some of the security features in JavaScript can be used maliciously by an attacker to kill other security features in any website. More specifically, we will see how the sandboxing features of ECMAScript 5 can break and make security in modern day applications. We also take a few real world examples like OWASP CSRFGUARD and use some of the major security features of JS to bypass CSRF protection offered by this OWASP library in many different ways.",
    "plaintextTitle": "JS Suicide: Using JavaScript Security Features to Kill JS Security ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Nafeez/Asia-14-Nafeez-JS-Suicide-Using-JavaScript-Security-Features-To-Kill-JS-Security.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=y6CnUiW0J8g"
      }
    ],
    "youtubeDescription": ""
  },
  "Wilkinson": {
    "author": "",
    "description": "The devices we carry betray us to those who want to invade our privacy by emitting uniquely identifiable signals. The most common example is the wireless signals emitted by your mobile phone (even whilst tucked safely into your pocket). Such signals may be used to track you, or be used toward more malicious intent.This talk will discuss the process the author has gone through to build a resilient, modular, reliable, distributed, tracking framework - originally spawned as a PoC tool in 2012 by the name 'Snoopy'. The dog is back, and with more bite - looking beyond just Wi-Fi. Also, he's now airborne via a quadcopter.",
    "plaintextTitle": "The Machines That Betrayed Their Masters ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Wilkinson/Asia-14-Wilkinson-The-Machines-That-Betrayed-Their-Masters.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=NiiI_oZ7y64"
      }
    ],
    "youtubeDescription": "By: Glenn Wilkinson\n\nThe devices we carry betray us to those who want to invade our privacy by emitting uniquely identifiable signals. The most common example is the wireless signals emitted by your mobile phone (even whilst tucked safely into your pocket). Such signals may be used to track you, or be used toward more malicious intent.\n\nThis talk will discuss the process the author has gone through to build a resilient, modular, reliable, distributed, tracking framework - originally spawned as a PoC tool in 2012 by the name 'Snoopy'. The dog is back, and with more bite - looking beyond just Wi-Fi. Also, he's now airborne via a quadcopter."
  },
  "Nve": {
    "author": "",
    "description": "In a context of offensive security research, I identified that there are many vulnerabilities that let someone to change DNS servers of an objective. Additionally, there is always a recent history about main DNS servers hacked (WhatsApp, Qatar's, etc). On the other hand, there are tools or techniques to exploit these effectively, with the usual needs in offensive operations, secrecy and effectiveness. This is a talk useful for Phishers, hackers and LEAs.",
    "plaintextTitle": "OFFENSIVE: Exploiting DNS Servers Changes ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Nve/Asia-14-Nve-Offensive-Exploiting-DNS-Servers-Changes.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=Q3siIqS9LVA"
      }
    ],
    "youtubeDescription": ""
  },
  "Erickson": {
    "author": "",
    "description": "Microsoft has often used Fix It patches, which are a subset of Application Compatibility Fixes, as a way to stop newly identified active exploitation methods against their products. A common Fix It patch type used to prevent exploitation is the previously undocumented In Memory Fix It. This research first focuses on analyzing these in-memory patches. By extracting information from them researchers are able to better understand the vulnerabilities that Microsoft intended to patch. The research then focuses on reverse engineering the patches and using this information to provide the ability to create patches which can be used to maintain persistence on a system.",
    "plaintextTitle": "Persist It: Using and Abusing Microsoft's Fix It Patches  ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Erickson/WP-Asia-14-Erickson-Persist-It-Using-And-Abusing-Microsofts-Fix-It-Patches.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Erickson/Asia-14-Erickson-Persist-It-Using-And-Abusing-Microsofts-Fix-It-Patches.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=pJ9yuuMO03Y"
      }
    ],
    "youtubeDescription": ""
  },
  "Chow": {
    "author": "",
    "description": "Privacy-by-Design (PbD) has become the de facto standard, regulatory-approved approach towards addressing privacy concerns with products and services. PbD is a strategy where privacy concerns are brought into the design of products rather than tacked onto the end. Because privacy has a relative lack of experienced specialists and because of its close relationship to security, privacy often becomes the responsibility of the security practitioner.While a security practitioner already has much of the necessary background to do privacy, there are some aspects of privacy that may be less familiar. The main technical difference is that in security, the information transmitted to the attacker should often have no semantic content. For instance, if a user is sending another party a bit of information or storing a bit of information on a device, the attacker is supposed to not be able to guess with more than 50% accuracy whether the bit is 1 or 0. In other words, assuming appropriate security controls, the attacker is completely frozen out and, in a rigorous sense, has no knowledge about the user's data. With privacy, the adversary often has some of the user's data with full awareness and consent.This brings about several difficulties. First, how do you describe the data collected to the user? For security, the null dataset is easy to understand. When the dataset is not null, describing the data collected becomes an issue, and the consent also becomes a problem. Second, what can the privacy adversary infer about the released data? These inferences are often unclear to the user. The inference problem is compounded by the auxiliary knowledge of the attacker, i.e. what other data the attacker knows about the user or in general. The user often does not understand the extent of this knowledge. The inference problem, what it is possible to deduce with what certainty, is central to privacy. Hence, that is why, while the lingua franca of security is cryptography, the lingua franca of privacy is statistics, machine learning, and data mining.This talk presents a privacy crash course aimed at security specialists and includes tips and recommendations for doing Privacy-by-Design.",
    "plaintextTitle": "Privacy-by-Design for the Security Practitioner ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Chow/WP-Asia-14-Chow-Privacy-By-Design-For-The-Security-Practitioner.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Chow/Asia-14-Chow-Privacy-By-Design-For-The-Security-Practitioner.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=L1hDGn6_8MA"
      }
    ],
    "youtubeDescription": ""
  },
  "Trachtenberg": {
    "author": "",
    "description": "We are interested in the ability to lie convincingly about the contents of an encrypted file, a variation of \"deniable encryption\" from the cryptography literature. A reasonable scenario may involve a businessman traveling through dangerous territory with sensitive documents, who, if kidnapped or under duress, wants to be able to convincingly lie to his kidnappers about the contents of his documents.We will thus release a tool that allows users to encrypt a text in such a way that it can be decrypted not just to the original text (using the correct key), but also to other possible texts (using decoy keys). For example, with one key, the text might decrypt to \"Don't cry for me Argentina\", but with the right key, it would decrypt to \"Don't try to meet Angelina.\"",
    "plaintextTitle": "Say It Ain't So - An Implementation of Deniable Encryption ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Trachtenberg/WP-Asia-14-Trachtenberg-Say-It-Ain't-So-An-Implementation-Of-Deniable-Encryption.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Trachtenberg/Asia-14-Trachtenberg-Say-It-Ain't-So-An-Implementation-Of-Deniable-Encryption.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Trachtenberg/DeniableDist.zip",
        "type": "source"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=9v3_xhzcZOs"
      }
    ],
    "youtubeDescription": ""
  },
  "Marcussen": {
    "author": "",
    "description": "Hosted payment gateways may offer an instant PCI compliance option for enterprises of any size. These solutions usually concede flow control between the merchant website and payment gateway to the end user's browser. This is a flawed design and leaves the merchant account highly exposed. In addition to traditional price manipulation and replay attacks, it can allow an attacker to hijack their API access. Once the account has been hijacked, the attacker can bypass payment forge payment received notifications or even issue refunds. In this presentation, I will demonstrate how using GPU clusters and cloud computing can allow an attacker to hijack merchant accounts in a short timeframe.",
    "plaintextTitle": "Solutum Cumulus Mediocris ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Marcussen/Asia-14-Marcussen-Solutum-Cumulus-Mediocris.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=x_WzXDagfS4"
      }
    ],
    "youtubeDescription": ""
  },
  "Boire": {
    "author": "",
    "description": "In today's threat landscape, targeted intrusion by government actors is something faced not only by other nation-states, but also by corporate entities, activists, dissidents, and journalists. While the technology industry has started to come to grips with security requirements in a time of persistent threats, journalists and media organizations are only just now waking up to these hazards.This talk will cover the range of attacks being carried out and examine the attacker motivation, effectiveness, and how tradecraft varies by geographical origin. From initial exploitation vectors, covering 0day-bearing documents, targeted spear-phishing and watering hole attacks to implants both custom nation-state designed and commercial, we will use specific case studies of actual compromises to illustrate the pervasiveness with which the 4th estate is being compromised.",
    "plaintextTitle": "Tomorrow's News is Today's Intel: Journalists as Targets and Compromise Vectors ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Huntley/BH_Asia_2014_Boire_Huntley.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=7mI-qCRohWU"
      }
    ],
    "youtubeDescription": ""
  },
  "Niemietz": {
    "author": "",
    "description": "In this presentation, we describe high-impact user interface attacks on Android-based mobile devices, additionally focusing on showcasing the possible mitigation techniques for such attacks. We discuss which UI redressing attacks can be transferred from the desktop- to the mobile-browser field. Our main contribution is a demonstration of a browser less tap-jacking attack, which greatly enriches the impact of previous work on this matter. With this technique, we can perform unauthorized home screen navigation and attempt actions like (premium number) phone calls without having been granted appropriate privileges. We will show, with an 0day, how an attacker can install applications in the background though it should be fixed by Google in Android v4.",
    "plaintextTitle": "UI Redressing Attacks on Android Devices Revisited ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Niemietz/Asia-14-Niemietz-UI-Redressing-Attacks-On-Android-Devices-Revisited.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=QwqZLIEP2Gc"
      }
    ],
    "youtubeDescription": ""
  },
  "Liu": {
    "author": "",
    "description": "As more and more rich interactive web applications are based on the HTML5's new capabilities by introducing native methods to improve user interactive experiences, XSS still ranks among as the top 3 vulnerabilities in the web application. There is a growing trend to one of its type - DOM-based XSS with the shift to the HTML5. However, due to the client nature of DOM-based XSS, there is no effective way to detect it in the open community. This work implemented tainted checking into the JavaScriptCore JavaScript engine and WebKit browser render engine. We modified String object by adding a tainted attribute to all DOM input interface, propagating this tainted attribute through all the String operations and detecting it at the DOM output interface. If the output was tainted, then we claimed the web application is DOM-based XSS vulnerable. By harnessing the power of PhantomJS, a headless browser for automation, we developed an ultimate DOM-based XSS detection scanner and a cloud infrastructure scanning our target products actively. It successfully caught production DOM-based XSS issues and reported back to us.",
    "plaintextTitle": "Ultimate Dom Based XSS Detection Scanner on Cloud ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Liu/Asia-14-Liu-Ultimate-Dom-Based-XSS-Detection-Scanner-On-Cloud.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=S9mCqd_RyD8"
      }
    ],
    "youtubeDescription": ""
  },
  "Davis": {
    "author": "",
    "description": "For a number of years I have been interested in USB host security, which can only be comprehensively tested using a combination of software and bespoke hardware to emulate various USB devices. After developing several different approaches to testing USB (which I've publicly discussed at various conferences), I have identified over 100 bugs covering all the major operating systems. The response from the vendors has often been along these lines: \"thank you for the bug, but as you need physical access to plug in your rogue device, the impact is actually quite low.\" However, due to recent advances in a number of remoting technologies, USB attacks can now be launched over a network. The talk will describe how these technologies work, the resulting impact on the world of USB bugs and show a live demo remotely triggering a USB kernel bug in Windows 2012 server.",
    "plaintextTitle": "USB Attacks Need Physical Access Right? Not Any More... ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Davis/WP-Asia-14-Davis-USB-Attacks-Need-Physical-Access-Right-Not-Any-More.pdf",
        "type": "White Paper"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Davis/Asia-14-Davis-USB-Attacks-Need-Physical-Access-Right-Not-Any-More.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=90MIjgh5ESU"
      }
    ],
    "youtubeDescription": ""
  },
  "Yang": {
    "author": "",
    "description": "On March 20th, 2013, shortly after 2PM, several South Korean financial institutions and TV networks were impacted by unknown malware, which wiped all the data off their computer hard drives before force-rebooting them, thereby sending them into the limbs.That coordinated melt down was due to several dormant viruses, later deemed \"Wiper\", pre-set by their makers to wake up at 2pm. Much was speculated regarding how those were planted in the targeted networks in the first place. In this paper, we lift the lid on the initial infection vector: The targeted infrastructures were running a security management server, to coordinate patching policies across the corporate network from a central point. We demonstrate how the attackers compromised this server, and made it dispatch malicious updates to the computers under its rule.We then examine several samples of Wiper used in the attack, and go through the relationships between them; at this point, we show that based on some distinctive characteristics, and the coding style of their author(s), they have ties to other APT cases, some of which we could trace back to 2009.Based on the connections established above, we end by examining attribution hypotheses.",
    "plaintextTitle": "Z:\\Make Troy\\, Not War: Case Study of the Wiper APT in Korea, and Beyond ",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-14/materials/Yang/Asia-14-Yang-Z-Make-Troy-Not-War-Case-Study-Of-The-Wiper-APT-In-Korea-And-Beyond.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=cDiII2wyhng"
      }
    ],
    "youtubeDescription": ""
  },
  "Meyerson-PhD": {
    "author": "",
    "description": "As an industry we have counted on a steady drumbeat of technology advances to drive semiconductors and resultant microprocessors to ever-higher levels of integration and performance. That drumbeat was Moore's Law, the rough doubling of technology density every 18 months for the past three or more decades. However, within a period of two or three further beats that drum goes silent, and it has already quieted significantly, as many technology elements approach physical limits. A result of this has been the emergence of a host of new system architectures employing accelerative elements such as FPGA's and GPU's, first generation novel processors based on Synaptic designs, and a host of new software approaches, all designed to continue to drive progress in Information Technology and compensate for the loss of one key past accelerant.Resultant performance gains exceeding 100X now enable deep encryption and real time data analytics supporting InfoSec without degrading system performance, while at the same time introducing entirely new system elements, hardware and software, that must similarly be secured. New assistive capabilities arise in the field of Artificial Intelligence, while at the same time causing concern about the long-term impact of this emergent technology. I will focus on the key changes coming in the technologies that underlay our industry, and the impact that accelerated innovation has had on our expectations of what Information Technology can truly accomplish, along with associated risks.",
    "plaintextTitle": "Information Technology Systems in a Post-Silicon World",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Meyerson-Information-Technology-Systems-In-A-Post-Silicon-World.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=bm6ScvNygUU"
      }
    ],
    "youtubeDescription": "What's beyond silicon? There have been a number of proposals: protein computers, DNA computers, optical computers, quantum computers, molecular computers."
  },
  "Filiol": {
    "author": "Irolla",
    "description": "Mobile banking is about to become the de facto standard for banking activities. Banking apps on smartphones and tablets - are becoming more widespread and this evolution aims at strongly limiting the classical access to banks (physical, through PC browser, through ATM). The aim is to first cut the cost but also to make the personal data explode. Then three critical issues arise because we entrust those mobile applications by feeding them with passwords, private information, and access to one of the most critical parts of our liking (money): Do those applications protect our private life and especially which kind of information is leaking to the bank? Are they containing vulnerabilities that could be exploited by attackers? In this talk, we are going to present a deep analysis of many banking apps collected in the world. We have performed static and dynamic analysis based on the binaries AND the source code. We will show that almost all apps are endangering our private data (sometimes severely) but in a few cases the presence of vulnerabilities are extremely concerning. While we tried to contact all the relevant banks for a free, detailed technical feedback and to help them fixing their apps, we will explain that a few of them did not care about this feedback and therefore did not want to take any security measure. This talk contains demos and operational results on existing apps and will bring a particular focus on banks from Asia and Australia (Pacific area).",
    "plaintextTitle": "(In)Security of Mobile Banking",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Filiol-InSecurity-Of-Mobile-Banking.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5LuNK-cw4uM"
      }
    ],
    "youtubeDescription": "http://media.ccc.de/browse/congress/2014/31c3_-_6530_-_en_-_saal_6_-_201412272145_-_in_security_of_mobile_banking_-_ericfiliol_-_paul_irolla.html\n\nThis talk presents a deep analysis of banking mobile apps available in the world. Based on static and dynamic analysis as well as on the analysis of the final source code we show that a vast majority of them are not respecting users' privacy and users' data protection. Worse a few of them contains critical bugs\n\nericfiliol, Paul Irolla\n\nHelp us caption & translate this video!\n\nhttp://amara.org/v/FuH5/"
  },
  "Choi": {
    "author": "",
    "description": "API wrapping technique is commonly used among malwares and code obfuscators. One of the advanced API wrapping techniques is runtime-obfuscation used by Themida. Runtime-obfuscation makes it difficult to reverse engineer by obfuscating API function on each run. So far, binary pattern matching or pattern-based code optimization techniques have been used to identify the original API functions from the runtime-obfuscated functions. Applying a new obfuscation pattern easily breaks these pattern-based approaches.In this talk, I present a more resilient API deobfuscation scheme based on memory access analysis. This method utilizes memory access pattern of runtime-obfuscation technique. The embedded runtime-obfuscator in the packed binary obfuscates one API function at a time. While an API function is obfuscated, each memory value of the instructions is read, the instruction is transformed into obfuscated instructions, and the obfuscated instructions are written into a newly allocated memory block. Thus, a set of memory write addresses during one API function obfuscation process is a superset of the corresponding obfuscated API function addresses. API deobfuscator is implemented based on the explained memory access analysis. Every memory write address is recorded after an API function is read from memory before the next API function is read. After each API function is obfuscated, a map from each API function into obfuscated function addresses is constructed. The original API functions are identified by applying the target addresses of obfuscated function calls to the map.The API deobfuscator utilizes Intel Pin to track memory accesses. The tool executes Themida packed binary files until the original entry point and restores every obfuscated API function call to the original API function call. The deobfuscated process can be analyzed by common debuggers such as Ollydbg.",
    "plaintextTitle": "API Deobfuscator: Identifying Runtime-Obfuscated API Calls via Memory Access Analysis",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Choi-API-Deobfuscator-Indentifying-Runtime-Obfuscated-API-Calls-Via-Memory-Access-Analysis.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=5ykTyi2_cTA"
      }
    ],
    "youtubeDescription": "by Seokwoo Choi\n\nAPI wrapping technique is commonly used among malwares and code obfuscators. One of the advanced API wrapping techniques is runtime-obfuscation used by Themida. Runtime-obfuscation makes it difficult to reverse engineer by obfuscating API function on each run. So far, binary pattern matching or pattern-based code optimization techniques have been used to identify the original API functions from the runtime-obfuscated functions. Applying a new obfuscation pattern easily breaks these pattern-based approaches.\n\nIn this talk, I present a more resilient API deobfuscation scheme based on memory access analysis. This method utilizes memory access pattern of runtime-obfuscation technique. The embedded runtime-obfuscator in the packed binary obfuscates one API function at a time. While an API function is obfuscated, each memory value of the instructions is read, the instruction is transformed into obfuscated instructions, and the obfuscated instructions are written into a newly allocated memory block. Thus, a set of memory write addresses during one API function obfuscation process is a superset of the corresponding obfuscated API function addresses. API deobfuscator is implemented based on the explained memory access analysis. Every memory write address is recorded after an API function is read from memory before the next API function is read. After each API function is obfuscated, a map from each API function into obfuscated function addresses is constructed. The original API functions are identified by applying the target addresses of obfuscated function calls to the map.\n\nThe API deobfuscator utilizes Intel Pin to track memory accesses. The tool executes Themida packed binary files until the original entry point and restores every obfuscated API function call to the original API function call. The deobfuscated process can be analyzed by common debuggers such as Ollydbg."
  },
  "Mantin": {
    "author": "",
    "description": "RC4 is the most popular stream cipher in the world, and in particular is used to protect a significant portion of SSL/TLS sessions. In this session, we will show how an old vulnerability of RC4 can be used to mount a partial plaintext recovery attack on SSL-protected data, when RC4 is the chosen cipher. As opposed to BEAST, POODLE, CRIME, and other attacks on SSL that were published in the recent years, including the attack by Bernstein et-al on the usage of RC4, the new attack is not limited to recovery of temporal session tokens, but can be used to steal parts of permanent secret data such as account credentials when delivered as POST parameters. Furthermore, one of the variants of the new attack requires only passive eavesdropping to SSL connections, and presents the first practical attack on SSL that does not require active Man-in-the-Middle. Another unique characteristic of the new attack allows one of its variants to recover with non-negligible probability, parts of a secret that was transmitted only once over the TLS connection.",
    "plaintextTitle": "Bar-Mitzva Attack: Breaking SSL with 13-Year Old RC4 Weakness",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Mantin-Bar-Mitzvah-Attack-Breaking-SSL-With-13-Year-Old-RC4-Weakness.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Mantin-Bar-Mitzvah-Attack-Breaking-SSL-With-13-Year-Old-RC4-Weakness-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=AHkUCD_EYok"
      }
    ],
    "youtubeDescription": "by Itsik Mantin\n\nRC4 is the most popular stream cipher in the world, and in particular is used to protect a significant portion of SSL/TLS sessions. In this session, we will show how an old vulnerability of RC4 can be used to mount a partial plaintext recovery attack on SSL-protected data, when RC4 is the chosen cipher. As opposed to BEAST, POODLE, CRIME, and other attacks on SSL that were published in the recent years, including the attack by Bernstein et-al on the usage of RC4, the new attack is not limited to recovery of temporal session tokens, but can be used to steal parts of permanent secret data such as account credentials when delivered as POST parameters. Furthermore, one of the variants of the new attack requires only passive eavesdropping to SSL connections, and presents the first practical attack on SSL that does not require active Man-in-the-Middle. Another unique characteristic of the new attack allows one of its variants to recover with non-negligible probability, parts of a secret that was transmitted only once over the TLS connection."
  },
  "Prado": {
    "author": "Wang",
    "description": "In this talk, we will demonstrate and unveil the latest developments on browser specific weaknesses including creative new mechanisms to compromise confidentiality, successfully perform login and history detection, serve mixed content, deliver malicious ghost binaries without a C&C server, exploit cache/timing side channels to extract secrets from third-party domains, and leverage new HTML5 features to carry out more stealthy attacks. This is a practical presentation with live demos that will challenge your knowledge of the Same Origin Policy and push the limits of what is possible with today's web clients.",
    "plaintextTitle": "Browsers Gone Wild",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Prado-Browsers-Gone-Wild.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=nsjCQlEsgW8"
      }
    ],
    "youtubeDescription": "by Angelo Prado &  Xiaoran Wang\n\nIn this talk, we will demonstrate and unveil the latest developments on browser specific weaknesses including creative new mechanisms to compromise confidentiality, successfully perform login and history detection, serve mixed content, deliver malicious ghost binaries without a C&C server, exploit cache/timing side channels to extract secrets from third-party domains, and leverage new HTML5 features to carry out more stealthy attacks. This is a practical presentation with live demos that will challenge your knowledge of the Same Origin Policy and push the limits of what is possible with today's web clients."
  },
  "Kaluzny": {
    "author": "Olejarka",
    "description": "Online banking applications are particularly exposed to malware attacks. To minimize losses, banks have invested in malware detection mechanisms which are not running as programs on client machine but either server-side or by JavaScript in the risky application. We have tested many solutions which are using different detection methods such as behavioral patterns, web injects signatures, or user input analysis. Our research points out clearly: even \"100% malware proof solutions\" have serious implementation errors. It is only a matter of time when malware creators will start targeting their guns against these vulnerabilities, effectively bypassing or abusing costly countermeasures. Is it a road to failure or can we improve them?",
    "plaintextTitle": "Bypassing Malware Detection Mechanisms in Online Banking",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Kaluzny-Bypassing-Malware-Detection-Mechanisms-In-Online-Banking.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Kaluzny-Bypassing-Malware-Detection-Mechanisms-In-Online-Banking-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ZLgPh3tc6ko"
      }
    ],
    "youtubeDescription": "by Jakub Kaluzny &  Mateusz Olejarka\n\nOnline banking applications are particularly exposed to malware attacks. To minimize losses, banks have invested in malware detection mechanisms which are not running as programs on client machine but either server-side or by JavaScript in the risky application. We have tested many solutions which are using different detection methods such as behavioral patterns, web injects signatures, or user input analysis. Our research points out clearly: even \"100% malware proof solutions\" have serious implementation errors. It is only a matter of time when malware creators will start targeting their guns against these vulnerabilities, effectively bypassing or abusing costly countermeasures. Is it a road to failure or can we improve them?"
  },
  "Jung": {
    "author": "Lee",
    "description": "Android malware are getting complicated with advanced code protection technologies such as obfuscation, packing, bytecode injection, and method hiding and so on. In order to defeat those, static and dynamic analysis tools have been used such as IDA, Smali, mobile sandboxes etc. However, malware are smart enough to differentiate their behavior at runtime or hide their intentions by detecting a running environment.In this presentation, we are introducing the first interactive android binary debugger DABiD (Dynamic Android Binary Debugger) which reveals hidden claws of malware. DABiD is equipped with three key features. First of all, DABiD detects dynamic changes at runtime and reflects them on the fly. This feature enables analysts to confront with dynamic code modification technologies such as packing or bytecode injection. Secondly, DABiD monitors dynamically loaded classes and prepares them for debugging. Analysts do not need to dump or analyze newly loaded jars or dalvik executables manually. Thirdly, analysts are able to modify instructions to control execution flow or disable certain instructions. This feature helps analysts for effective debugging. As well as advanced features, DABiD provides basic functions such as automatic setup for debugging, decoding dalvik executable, setting breakpoints, getting data of register, and stack frame and so on. DABiD can run on a Smartphone and root permission is not required.",
    "plaintextTitle": "DABiD: The Powerful Interactive Android Debugger for Android Malware Analysis",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Jung-DABiD-The-Powerful-Interactive-Android-Debugger-For-Android-Malware-Analysis.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=HWwUwuho2GM"
      }
    ],
    "youtubeDescription": "by Jin-hyuk Jung &  Jieun Lee\n\nAndroid malware are getting complicated with advanced code protection technologies such as obfuscation, packing, bytecode injection, and method hiding and so on. In order to defeat those, static and dynamic analysis tools have been used such as IDA, Smali, mobile sandboxes etc. However, malware are smart enough to differentiate their behavior at runtime or hide their intentions by detecting a running environment.\n\nIn this presentation, we are introducing the first interactive android binary debugger DABiD (Dynamic Android Binary Debugger) which reveals hidden claws of malware. DABiD is equipped with three key features. First of all, DABiD detects dynamic changes at runtime and reflects them on the fly. This feature enables analysts to confront with dynamic code modification technologies such as packing or bytecode injection. Secondly, DABiD monitors dynamically loaded classes and prepares them for debugging. Analysts do not need to dump or analyze newly loaded jars or dalvik executables manually. Thirdly, analysts are able to modify instructions to control execution flow or disable certain instructions. This feature helps analysts for effective debugging. As well as advanced features, DABiD provides basic functions such as automatic setup for debugging, decoding dalvik executable, setting breakpoints, getting data of register, and stack frame and so on. DABiD can run on a Smartphone and root permission is not required."
  },
  "Karam": {
    "author": "Kamluk",
    "description": "The blockchain is the public ledger stacking all bitcoin/altcoins transactions. It is constantly growing as \"completed\"\u009d blocks are automatically added to it with a new set of records. The blocks are added to the blockchain in a linear and chronological order. The blockchain has complete information about the addresses and their balances right from the genesis block to the most recently completed block through the mining process. Depending on the crypto-currency and the implementation of its protocols, there would be a fixed open space, where data can be stored, referenced or hosted on the blockchain within encrypted transactions and their records. This very versatile nature of the blockchain offers great opportunities for future innovation especially in decentralized systems.The research focus revolves around the threat of embedding decentralized chunks of malware on the blockchain by either hosting it or referencing it with cascaded pointers. Transactions and data are encrypted throughout the blockchain networks using different versions of public/private key encryption. Could malware survive eternally inside crypto-transactions? A proof of concept will be explained highlighting the concerns revolving around the \"abuse and bloating\"\u009d of the blockchain while comparing it to previous malware hosting and deployment models.In this talk, INTERPOL will frame the scope of this future threat and provide potential solutions for a threat surrounding the blockchain technology.",
    "plaintextTitle": "Decentralized Malware on the Blockchain",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=KkixID3ICNg"
      }
    ],
    "youtubeDescription": "by Christian Karam &  Vitaly Kamluk\n\nThe blockchain is the public ledger stacking all bitcoin/altcoins transactions. It is constantly growing as \"completed\" blocks are automatically added to it with a new set of records. The blocks are added to the blockchain in a linear and chronological order. The blockchain has complete information about the addresses and their balances right from the genesis block to the most recently completed block through the mining process. Depending on the crypto-currency and the implementation of its protocols, there would be a fixed open space, where data can be stored, referenced or hosted on the blockchain within encrypted transactions and their records. This very versatile nature of the blockchain offers great opportunities for future innovation especially in decentralized systems.\n\nThe research focus revolves around the threat of embedding decentralized chunks of malware on the blockchain by either hosting it or referencing it with cascaded pointers. Transactions and data are encrypted throughout the blockchain networks using different versions of public/private key encryption. Could malware survive eternally inside crypto-transactions? A proof of concept will be explained highlighting the concerns revolving around the \"abuse and bloating\"\u009d of the blockchain while comparing it to previous malware hosting and deployment models.\n\nIn this talk, INTERPOL will frame the scope of this future threat and provide potential solutions for a threat surrounding the blockchain technology."
  },
  "Partush": {
    "author": "Ben-Sinai",
    "description": "We present two new attacks against social navigation services. These attacks are based on creating a large number of reputed \"bot drivers,\" and controlling their reported locations and movements pattern using fake GPS reports. We show how these attacks can be used to compromise social navigation systems by applying them to Waze - a prominent social navigation application used by over 50 million drivers.\n\nThe first attack allows us to compromise user privacy by tracking the location and movement of users at any location. This attack is facilitated by automatically interacting with the application, capturing screen data, and parsing it using OCR techniques to produce location information over time.\n\nThe second attack can fake traffic jams and dramatically influence routing decisions. This attack effectively influences the unpublished server-side Waze routing algorithm and allows us to direct users to a particular route.\n\nWhen combined, these attacks can be used to influence the driving directions produced for a given user.\n\nWe present several techniques for preventing the attacks, and show that effective mitigation likely requires the use of additional carrier information.",
    "plaintextTitle": "Exploiting Social Navigation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Partush-Exploiting-Social-Navigation.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Partush-Exploiting-Social-Navigation-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ooExs8FJUK4"
      }
    ],
    "youtubeDescription": "by Nimrod Partush &  Meital Ben Sinai &  Shir Yadid\n\nWe present two new attacks against social navigation services. These attacks are based on creating a large number of reputed \"bot drivers,\" and controlling their reported locations and movements pattern using fake GPS reports. We show how these attacks can be used to compromise social navigation systems by applying them to Waze - a prominent social navigation application used by over 50 million drivers. The first attack allows us to compromise user privacy by tracking the location and movement of users at any location. This attack is facilitated by automatically interacting with the application, capturing screen data, and parsing it using OCR techniques to produce location information over time. The second attack can fake traffic jams and dramatically influence routing decisions. This attack effectively influences the unpublished server-side Waze routing algorithm and allows us to direct users to a particular route. When combined, these attacks can be used to influence the driving directions produced for a given user. We present several techniques for preventing the attacks, and show that effective mitigation likely requires the use of additional carrier information."
  },
  "Barisani": {
    "author": "",
    "description": "The availability of modern System on a Chip (SoC) parts, having low power consumption and high integration of most computer components in a single chip, empowers the open source community in creating all kind of embedded systems.The presentation illustrates the journey that we have taken to develop an open hardware board first of its kind: the USB armory, an open source hardware design, implementing a flash drive sized computer for security applications.The security features of the USB armory System on a Chip (SoC), combined with the openness of the board design, is meant to empower developers and users with a fully customizable USB trusted device for open and innovative personal security applications.The presentation explores the lessons learned in making a small form factor, high specifications, embedded device with solely open source tools, its architecture and security features such as secure boot and ARM TrustZone implementation.The security applications of the implemented concept are explored, illustrating the advantage of an open USB device with increased computational power.The first open source application for the platform, developed by Inverse Path, for advanced file encryption functionality, will also be covered.",
    "plaintextTitle": "Forging the USB Armory",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Barisani-Forging-The-USB-Armory.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=MsK2V_iO9Z4"
      }
    ],
    "youtubeDescription": "by Andrea Barisani\n\nThe availability of modern System on a Chip (SoC) parts, having low power consumption and high integration of most computer components in a single chip, empowers the open source community in creating all kind of embedded systems.\n\nThe presentation illustrates the journey that we have taken to develop an open hardware board first of its kind: the USB armory, an open source hardware design, implementing a flash drive sized computer for security applications.\n\nThe security features of the USB armory System on a Chip (SoC), combined with the openness of the board design, is meant to empower developers and users with a fully customizable USB trusted device for open and innovative personal security applications.\n\nThe presentation explores the lessons learned in making a small form factor, high specifications, embedded device with solely open source tools, its architecture and security features such as secure boot and ARM TrustZone implementation.\n\nThe security applications of the implemented concept are explored, illustrating the advantage of an open USB device with increased computational power.\n\nThe first open source application for the platform, developed by Inverse Path, for advanced file encryption functionality, will also be covered."
  },
  "Sabanal": {
    "author": "",
    "description": "The introduction of the new Android Runtime (ART) brings several improvements in Android. But, as with any new technology, it also brings new ways to conduct or enhance malicious activities. In this presentation, we will detail one of those ways.Once an attacker or malware has gained access to the Android device, the next step is to find ways to hide itself and gain persistence, and this is usually achieved by installing a rootkit. The majority of these rootkits are kernel mode rootkits and the common way of achieving persistence is by modifying files in the system partition. However, recent advancements in Android security, such as verified boot, have made this increasingly difficult. This presentation will demonstrate how to go around this difficulty by taking the game out of kernel mode and out of the system partition. We will show you how to take advantage of the mechanisms of ART to create a user mode rootkit. We will start with a discussion of past Android rootkit research and how these techniques have become increasingly difficult to use in modern Android systems. Then we will go deep into ART internals where we will discuss the file formats and mechanisms relevant to rootkit creation. After we have understood the mechanisms involved, we will then discuss methods of crafting the rootkit i.e. what to change, where to find them, and how to change them, and techniques on gaining persistence on the system. We will also examine the limitations of this approach and possible future work in this area.The talk will conclude with a live demonstration of an ART rootkit.",
    "plaintextTitle": "Hiding Behind Android Runtime (ART)",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Sabanal-Hiding-Behind-ART.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Sabanal-Hiding-Behind-ART-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=tSQxuxmzXCc"
      }
    ],
    "youtubeDescription": "by Paul Sabanal\n\nThe introduction of the new Android Runtime (ART) brings several improvements in Android. But, as with any new technology, it also brings new ways to conduct or enhance malicious activities. In this presentation, we will detail one of those ways.\n\nOnce an attacker or malware has gained access to the Android device, the next step is to find ways to hide itself and gain persistence, and this is usually achieved by installing a rootkit. The majority of these rootkits are kernel mode rootkits and the common way of achieving persistence is by modifying files in the system partition. However, recent advancements in Android security, such as verified boot, have made this increasingly difficult. This presentation will demonstrate how to go around this difficulty by taking the game out of kernel mode and out of the system partition. We will show you how to take advantage of the mechanisms of ART to create a user mode rootkit.\n\nWe will start with a discussion of past Android rootkit research and how these techniques have become increasingly difficult to use in modern Android systems. Then we will go deep into ART internals where we will discuss the file formats and mechanisms relevant to rootkit creation. After we have understood the mechanisms involved, we will then discuss methods of crafting the rootkit i.e. what to change, where to find them, and how to change them, and techniques on gaining persistence on the system. We will also examine the limitations of this approach and possible future work in this area.\n\nThe talk will conclude with a live demonstration of an ART rootkit."
  },
  "Evenchick": {
    "author": "",
    "description": "Controller Area Network (CAN) is found in a number of systems, and is the main form of networking used in the automotive industry. Every new car has multiple CAN buses that let controllers communicate. This bus controls everything from the camshaft on your engine to your power seats.In this talk, we will present and release CANard, an open-source toolkit which allows easy scripting of CAN bus tasks. This toolkit allows us to easily work with CAN, to talk to automotive controllers, perform diagnostic actions, and fuzz the protocols.We will start with a brief introduction to CAN, look at the required hardware, and then start sending and receiving messages. We will explore CANard's features, and see several demos of real world vulnerabilities using our tool. We'll demonstrate how to read and clear fault codes, crack diagnostics security, and fuzz controllers to take over vehicle operation.The talk will focus on practical applications. By the end of the talk, attendees will not only gain an understanding of automotive systems, but will also have the tools to attack them.",
    "plaintextTitle": "Hopping on the CAN Bus",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Evenchick-Hopping-On-The-Can-Bus.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Evenchick-Hopping-On-The-Can-Bus-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=U1yecKUmnFo"
      }
    ],
    "youtubeDescription": "by Eric Evenchick\n\nController Area Network (CAN) is found in a number of systems, and is the main form of networking used in the automotive industry. Every new car has multiple CAN buses that let controllers communicate. This bus controls everything from the camshaft on your engine to your power seats.\n\nIn this talk, we will present and release CANard, an open-source toolkit which allows easy scripting of CAN bus tasks. This toolkit allows us to easily work with CAN, to talk to automotive controllers, perform diagnostic actions, and fuzz the protocols.\n\nWe will start with a brief introduction to CAN, look at the required hardware, and then start sending and receiving messages. We will explore CANard's features, and see several demos of real world vulnerabilities using our tool. We'll demonstrate how to read and clear fault codes, crack diagnostics security, and fuzz controllers to take over vehicle operation.\n\nThe talk will focus on practical applications. By the end of the talk, attendees will not only gain an understanding of automotive systems, but will also have the tools to attack them."
  },
  "Jia": {
    "author": "",
    "description": "Numerous websites customize their services according to different geo-locations of users, to provide more relevant content and better responsiveness, including Google, Craigslist, Google Maps, etc. Recently, mobile devices further allow web applications to directly read users' geo-location information from GPS sensors. However, if such websites leave location-sensitive content in the browser cache, other sites can sniff users' geo-locations by utilizing timing side-channels.In this presentation, we demonstrate that such geo-location leakage channels are widely open in popular web applications today, including 62% of 55 Alexa Top 100 websites and 11 map service websites. With geo-inference attacks that measure the timing of browser cache queries, we can locate users' countries, cities, and neighborhoods in our case studies. We show that such attacks affect all five mainstream browsers (e.g., Chrome and Firefox) as well as TorBrowser in certain cases. We also discuss whether existing defenses can effectively prevent such attacks and additional support required for a better defense deployment.",
    "plaintextTitle": "I Know Where You've Been: Geo-Inference Attacks via the Browser Cache",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Jia-I-Know-Where-You've-Been-Geo-Inference-Attacks-Via-The-Browser-Cache.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=lGb0AACAk1A"
      }
    ],
    "youtubeDescription": "by Yaoqi Jia\n\nNumerous websites customize their services according to different geo-locations of users, to provide more relevant content and better responsiveness, including Google, Craigslist, Google Maps, etc. Recently, mobile devices further allow web applications to directly read users' geo-location information from GPS sensors. However, if such websites leave location-sensitive content in the browser cache, other sites can sniff users' geo-locations by utilizing timing side-channels.\n\nIn this presentation, we demonstrate that such geo-location leakage channels are widely open in popular web applications today, including 62% of 55 Alexa Top 100 websites and 11 map service websites. With geo-inference attacks that measure the timing of browser cache queries, we can locate users' countries, cities, and neighborhoods in our case studies. We show that such attacks affect all five mainstream browsers (e.g., Chrome and Firefox) as well as TorBrowser in certain cases. We also discuss whether existing defenses can effectively prevent such attacks and additional support required for a better defense deployment."
  },
  "Cuthbert": {
    "author": "",
    "description": "The current state of theoretical attacks against wireless networks should allow this wireless world to be fully subverted for all but some edge cases. Devices can be fooled into connecting to spoofed networks, authentication to wireless networks can either be cracked or intercepted, and our ability to capture credentials at a network level has long been established. Often, the most significant protection users have is hitting the right button on an error message they rarely understand. Worse for the user, these attacks can be repeated per wireless network allowing an attacker to target the weakest link.This combination of vulnerable and heavily used communications should mean that an attacker needs just arrive at a location and setup for credentials and access to start dropping from the sky. However, the reality is far from this; karma attacks work poorly against modern devices, network authentication of the weakest sort defeats rogue Aps and interception tools struggle to find useful details.",
    "plaintextTitle": "Manna from Heaven: Improving the State of Wireless Rogue AP Attacks",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Cuthbert-Manna-From-Heaven-Improving-The-State-Of-Wireless-Rogue-AP-Attacks.pptx",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=szroUxCD13I"
      }
    ],
    "youtubeDescription": "These are the videos from Defcon Wireless Village 2014:\nhttp://www.irongeek.com/i.php?page=videos/defcon-wireless-village-2014/mainlist"
  },
  "Van-den-Breekel": {
    "author": "",
    "description": "We present the first vulnerabilities in EMV (Europay, MasterCard and Visa) Contactless that do not use legacy modes and that are applicable to practically all EMV Contactless cards and terminals. In particular, we show that a relay attack can be performed with very limited resources and widely available off-the-shelf hardware. Our proof-of-concept relay attack proves that a criminal can pay at a Point-of-Sale terminal, using the card inside a wallet of a victim, while the victim is arbitrary far away from the terminal. Using EMV and Android specific optimizations, we show the world's first relayed transaction that is faster for certain cards than a transaction performed directly with the same card. Therefore, the most obvious countermeasure, timing restriction, will likely not be effective at all.Furthermore, we identified other vulnerabilities in cards from certain issuers, and in the most used type of Point-of-Sale terminals in the Netherlands. For instance, certain Maestro cards have a vulnerability that concerns the distribution process of the cards. Furthermore, certain Visa cards break the EMV security requirements by using secret keys that are not unique. The most used type of Point-of-Sale terminals in the Netherlands is vulnerable to a Denial-of-Service attack, which presumably is the result of a buffer overflow.Our findings have significant implications for the acceptance of contactless transactions by the public. Indeed, contactless transactions will not be widely accepted by customers if they are not confident about the security of contactless cards, and banks can suffer significant reputational damage.",
    "plaintextTitle": "Relaying EMV Contactless Transactions Using Off-the-Shelf Android Devices",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-VandenBreekel-Relaying-EMV-Contactless-Transactions-Using-Off-The-Shelf-Android-Devices.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-VandenBreekel-Relaying-EMV-Contactless-Transactions-Using-Off-The-Shelf-Android-Devices-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=oW1BNsYTQTk"
      }
    ],
    "youtubeDescription": "by Jordi Van den Breekel\n\nWe present the first vulnerabilities in EMV (Europay, MasterCard and Visa) Contactless that do not use legacy modes and that are applicable to practically all EMV Contactless cards and terminals. In particular, we show that a relay attack can be performed with very limited resources and widely available off-the-shelf hardware. Our proof-of-concept relay attack proves that a criminal can pay at a Point-of-Sale terminal, using the card inside a wallet of a victim, while the victim is arbitrary far away from the terminal. Using EMV and Android specific optimizations, we show the world's first relayed transaction that is faster for certain cards than a transaction performed directly with the same card. Therefore, the most obvious countermeasure, timing restriction, will likely not be effective at all.\n\nFurthermore, we identified other vulnerabilities in cards from certain issuers, and in the most used type of Point-of-Sale terminals in the Netherlands. For instance, certain Maestro cards have a vulnerability that concerns the distribution process of the cards. Furthermore, certain Visa cards break the EMV security requirements by using secret keys that are not unique. The most used type of Point-of-Sale terminals in the Netherlands is vulnerable to a Denial-of-Service attack, which presumably is the result of a buffer overflow.\n\nOur findings have significant implications for the acceptance of contactless transactions by the public. Indeed, contactless transactions will not be widely accepted by customers if they are not confident about the security of contactless cards, and banks can suffer significant reputational damage."
  },
  "Johnson": {
    "author": "Stavrou",
    "description": "We have discovered an attack that allows a non-privileged application to continually force the generation and logging of sensitive process information in a readable log file using the /system/bin/dumpstate binary on Samsung devices. The log output of the dumpstate binary includes the Android logs, kernel log, and other process-dependent log data. However, starting with Android 4.1, reading the Android logs is no longer permitted to user applications because the READ_LOGS permission was removed, but we were able to circumvent this limitation. To achieve this, we crafted an exploit that requires an application with the seemingly innocuous android.permission.RECEIVE_BOOT_COMPLETED permission. Reading the Android logs empowers a non-privileged user application to obtain private data circumventing all permission checks. The approach to obtain the Android log data has worked on all Samsung devices we have examined ranging from the Samsung Galaxy S1 up to and including the Samsung Galaxy S5 and the Samsung Note 4. The Android log generally contains private data written by the Android Operating System (OS), Google applications, and user applications. Moreover, we have identified 12 Samsung builds for Android where the Android OS writes the text of notifications by default to the Android log. Using our attacks on these 12 builds, we are able to get access to Facebook Messenger messages, text messages (including password resets), Google Chat messages, WhatsApp messages, missed calls, turn-by-turn directions from Google Maps, the sender and subject of emails, and any other notification. Our proof-of-concept application can obtain the text from all notifications that the Android OS receives for these builds. This enables a user application to obtain immensely private data from the user of these vulnerable Samsung devices. These builds are for the previous generation of Samsung devices that are still currently being sold in retail stores (e.g., Samsung Galaxy S4, Samsung Note 3, Samsung Note Pro 12.2, etc.).",
    "plaintextTitle": "Resurrecting the READ_LOGS Permission on Samsung Devices",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Johnson-Resurrecting-The-READ-LOGS-Permission-On-Samsung-Devices.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Johnson-Resurrecting-The-READ-LOGS-Permission-On-Samsung-Devices-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=PrMQ6lRyZ2Q"
      }
    ],
    "youtubeDescription": "by Ryan Johnson &  Angelos Stavrou\n\nWe have discovered an attack that allows a non-privileged application to continually force the generation and logging of sensitive process information in a readable log file using the /system/bin/dumpstate binary on Samsung devices. The log output of the dumpstate binary includes the Android logs, kernel log, and other process-dependent log data. However, starting with Android 4.1, reading the Android logs is no longer permitted to user applications because the READ_LOGS permission was removed, but we were able to circumvent this limitation. To achieve this, we crafted an exploit that requires an application with the seemingly innocuous android.permission.RECEIVE_BOOT_COMPLETED permission. Reading the Android logs empowers a non-privileged user application to obtain private data circumventing all permission checks. The approach to obtain the Android log data has worked on all Samsung devices we have examined ranging from the Samsung Galaxy S1 up to and including the Samsung Galaxy S5 and the Samsung Note 4. The Android log generally contains private data written by the Android Operating System (OS), Google applications, and user applications. Moreover, we have identified 12 Samsung builds for Android where the Android OS writes the text of notifications by default to the Android log. Using our attacks on these 12 builds, we are able to get access to Facebook Messenger messages, text messages (including password resets), Google Chat messages, WhatsApp messages, missed calls, turn-by-turn directions from Google Maps, the sender and subject of emails, and any other notification. Our proof-of-concept application can obtain the text from all notifications that the Android OS receives for these builds. This enables a user application to obtain immensely private data from the user of these vulnerable Samsung devices. These builds are for the previous generation of Samsung devices that are still currently being sold in retail stores (e.g., Samsung Galaxy S4, Samsung Note 3, Samsung Note Pro 12.2, etc.)."
  },
  "Subramanian": {
    "author": "",
    "description": "The Security Content Automation Protocol (SCAP) federates a number of open standards that are used to enumerate software flaws and configuration issues related to security. They measure systems to find vulnerabilities and offer methods to score those findings in order to evaluate the possible impact. There are a number of SCAP components such as Common Vulnerabilities and Exposures (CVE), Common Configuration Enumeration (CCE), Common Platform Enumeration (CPE), Common Remediation Enumeration (CRE), Extensible Configuration Checklist Description Format (XCCDF), and Open Vulnerability and Assessment Language (OVAL). Malware Attribute Enumeration and Characterization (MAEC) is a standardized language for encoding and communicating high-fidelity information about malware based upon attributes such as behaviors, artifacts, and attack patterns. These standards render data in the form of XML. Although these standards are linked to each other, there is a lack of commonality in their XML schema definitions. There is a need for a unique common metadata schema to represent important aspects relevant for designing efficient search engines. This common metadata supports distribution of data across various repositories that render SCAP content. Across all security content databases unique identification and a short description will be common. In addition, this model makes building of references to multiple components of SCAP intuitive. Differentiating attributes of security content can be represented as a list of properties, each property being a key-value pair. For example, in the case of CVE, (CVSS, 9.4) represents the key CVSS and a score of 9.4, where CVSS is Common Vulnerability Severity Score. In this model, modifications to the schema of SCAP components can easily be accommodated by just adding or deleting a property key-value pair without changing the model. Searching on this metadata enables fast response to queries and helps interlace various SCAP components; e.g., OVAL references CVE and each CVE depends on various platforms and products denoted by CPEs. This model enables Natural Language Processing (NLP) and render meaningful responses to queries such as most vulnerable applications OVAL definitions, vulnerabilities in Adobe Reader in 2014, what was released yesterday etc. This enables recognizing dates, SCAP components requested, products, platforms, or vendors. NLP supports an understanding of the intent of search in the repositories, thereby enriching user experience while benefiting from SCAP content to measure security posture of the systems. This archetype aids to resolve vulnerabilities before an attack happens. This model helps understand an incident in your machine and analyse if it is a malware attack. It will further help to scrutinize which vulnerability was exploited by the malware and most importantly, fix this attack.",
    "plaintextTitle": "Security Content Metadata Model with an Efficient Search Methodology for Real Time Monitoring and Threat Intelligence",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Subramanian-Security-Content-Metadata-Model-With-An-Efficient-Search-Methodology-For-Real-Time-Monitoring-And-Threat-Intelligence.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Subramanian-Security-Content-Metadata-Model-With-An-Efficient-Search-Methodology-For-Real-Time-Monitoring-And-Threat-Intelligence-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_ESGBPmf0mc"
      }
    ],
    "youtubeDescription": "After the attacks, at the request of the White House, Hayden intensified and expanded NSA wiretapping operations of various communications between Americans and terrorist suspects abroad in hopes of detecting and preventing another terrorist attack. These initial efforts were executed without a court order and after being revealed by The New York Times, were subsequently placed under judicial review. Over time, the NSA’s efforts grew into the multidimensional programs exposed by Edward Snowden, including the collection and storage of phone and email metadata covering billions of calls and messages between American citizens. \n\nIn conversation with Amy Zegart, General Hayden provides an insider’s account about the origins and development of the NSA programs. He discusses the directives and mechanisms to control them, and the disagreements within the Bush administration about the extent of the wiretapping. He offers his views on the justification, legal status, scale, and effectiveness of the NSA monitoring."
  },
  "Grassi": {
    "author": "Guerrero",
    "description": "A large part of the mobile applications in the store are developed leveraging frameworks for cross platform development, in order to code once and run on every mobile platform. But are those frameworks secure or is the developer trading off security for ease of development?\n\nWe will explore and analyze the most popular cross platform frameworks for mobile development, exposing the vulnerabilities found in them, and detail how serious the implications are of using them in terms of security.",
    "plaintextTitle": "The Nightmare Behind the Cross Platform Mobile Apps Dream",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Grassi-The-Nightmare-Behind-The-Cross-Platform-Mobile-Apps-Dream.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=wOvIhQjUwSM"
      }
    ],
    "youtubeDescription": "by Marco Grassi &  Sebastian Guerrero\n\nA large part of the mobile applications in the store are developed leveraging frameworks for cross platform development, in order to code once and run on every mobile platform. But are those frameworks secure or is the developer trading off security for ease of development? We will explore and analyze the most popular cross platform frameworks for mobile development, exposing the vulnerabilities found in them, and detail how serious the implications are of using them in terms of security."
  },
  "Singh": {
    "author": "",
    "description": "Point of Sale (POS) malwares have been stealing the limelight this year. They have been the elemental factor in some of the biggest breaches uncovered in the past couple of years.This talk will cover the aspects of what happens after these details have been sent to the malware authors. The entire ecosystem of credit card frauds can be broadly classified into these three steps:1. Purchase of raw details and dumps2. Converting them to plastic cash/cards3. Shop! Shop! Shop!The focus of this talk will be on the above-mentioned points and how they form an organized network of cyber-crime.There have been talks on the POS malware and the big breaches that it has caused. We know that millions of details have been stolen, but the aftermath is hardly discussed. It is important to understand the complete fraud ecosystem if we have to kill its roots. The talk will involve details of forums, which have only privileged access, internal details of the buyers/sellers, personal chats, and IRC encounters that makes it unique and research oriented.",
    "plaintextTitle": "The Underground Ecosystem of Credit Card Frauds",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Singh-The-Underground-Ecosystem-Of-Credit-Card-Frauds.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Singh-The-Underground-Ecosystem-Of-Credit-Card-Frauds-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=DE4JgUzr5Hs"
      }
    ],
    "youtubeDescription": "by Abhinav Singh\n\nPoint of Sale (POS) malwares have been stealing the limelight this year. They have been the elemental factor in some of the biggest breaches uncovered in the past couple of years.\n\nThis talk will cover the aspects of what happens after these details have been sent to the malware authors. The entire ecosystem of credit card frauds can be broadly classified into these three steps:\n\n1. Purchase of raw details and dumps\n2. Converting them to plastic cash/cards\n3. Shop! Shop! Shop!\n\nThe focus of this talk will be on the above-mentioned points and how they form an organized network of cyber-crime.\n\nThere have been talks on the POS malware and the big breaches that it has caused. We know that millions of details have been stolen, but the aftermath is hardly discussed. It is important to understand the complete fraud ecosystem if we have to kill its roots. The talk will involve details of forums, which have only privileged access, internal details of the buyers/sellers, personal chats, and IRC encounters that makes it unique and research oriented."
  },
  "Searle": {
    "author": "",
    "description": "Join Justin Searle for a two-hour workshop where he'll take you through the modbus network protocol standard and walk you through hands-on exercises, including analyzing modbus network captures, configuring modbus endpoint simulators, and generating your own modbus traffic to query and fuzz modbus devices. Come prepared with your laptops, a DVD drive, and an installed version of vmware player to take full advantage of this workshop!",
    "plaintextTitle": "Understanding SCADA's Modbus Protocol",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=oVDYaG2HInU"
      }
    ],
    "youtubeDescription": "by Justin Searle\n\nJoin Justin Searle for a two-hour workshop where he'll take you through the modbus network protocol standard and walk you through hands-on exercises, including analyzing modbus network captures, configuring modbus endpoint simulators, and generating your own modbus traffic to query and fuzz modbus devices. Come prepared with your laptops, a DVD drive, and an installed version of vmware player to take full advantage of this workshop!"
  },
  "Park": {
    "author": "",
    "description": "Recently, Android application employs some techniques to protect their code such as APKProtect, DexGuard, BangCle, Ijiami, and LIAPP. These tools modify original DEX (Dalvik Executable) or replace original DEX to second DEX(for unpacking&loader) generated by packing tool. The tools employ many anti-analysis techniques to prevent being analyzed such as anti-debugging (for gdb), anti-jdwp (for java debugger), anti-tamper and obfuscation for dalvik and native code. Even they are using self-debugging (self-ptrace) techniques. These techniques cause a reverse engineer to be annoyed and devastated. Also, tools and systems which automatically analyze Android application cannot analyze them correctly because of their anti-analysis technique. However, we propose a novel general unpacking method without getting root privilege for unpacking. In this presentation, we are going to show you how it works.",
    "plaintextTitle": "We Can Still Crack You! General Unpacking Method for Android Packer (no root)",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Park-We-Can-Still-Crack-You-General-Unpacking-Method-For-Android-Packer-No-Root.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=UVCckhcuoec"
      }
    ],
    "youtubeDescription": "by Yeongung Park\n\nRecently, Android application employs some techniques to protect their code such as APKProtect, DexGuard, BangCle, Ijiami, and LIAPP. These tools modify original DEX (Dalvik Executable) or replace original DEX to second DEX(for unpacking&loader) generated by packing tool. The tools employ many anti-analysis techniques to prevent being analyzed such as anti-debugging (for gdb), anti-jdwp (for java debugger), anti-tamper and obfuscation for dalvik and native code. Even they are using self-debugging (self-ptrace) techniques. These techniques cause a reverse engineer to be annoyed and devastated. Also, tools and systems which automatically analyze Android application cannot analyze them correctly because of their anti-analysis technique. However, we propose a novel general unpacking method without getting root privilege for unpacking. In this presentation, we are going to show you how it works."
  },
  "devaluing-attack-disincentivizing-threats-against-the-next-billion-devices": {
    "author": "dino-dai-zovi",
    "description": "Cyberattacks are not like natural disasters or other forces of nature, nor are they like diseases or other autonomously evolving and spreading agents (yet). They are ultimately and fundamentally driven by rational human action. As such, economics is the best way to view attacker and defender strategies. The traditional approach to defense is to raise the cost for your attackers by making attacks as difficult as possible. This, unfortunately, has a tendency to raise costs for the defender and their users too and does not scale well. An alternative and more scalable strategy is to reduce the value to the attacker of a successful attack. What does this look like? This strategy is already in use in many forms around us and we will point out where it is being employed successfully. Does it work? We will examine the phases of an intrusion common to both financially-motivated and state-sponsored attackers in order to show how defenses based on lowering the value versus raising the cost affect both the attacker and defender. Finally, we will explore what this strategy means for the security threats against the next billion devices.",
    "plaintextTitle": "Devaluing Attack: Disincentivizing Threats Against the Next Billion Devices",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-DaiZovi-Devaluing-Attack-Disincentivizing-Threats-Against-The-Next-Billion-Devices.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=_A6Y62AcQ2g"
      }
    ],
    "youtubeDescription": "by Dino Dai Zovi\n\nCyberattacks are not like natural disasters or other forces of nature, nor are they like diseases or other autonomously evolving and spreading agents (yet). They are ultimately and fundamentally driven by rational human action. As such, economics is the best way to view attacker and defender strategies. The traditional approach to defense is to raise the cost for your attackers by making attacks as difficult as possible. This, unfortunately, has a tendency to raise costs for the defender and their users too and does not scale well. An alternative and more scalable strategy is to reduce the value to the attacker of a successful attack. What does this look like? This strategy is already in use in many forms around us and we will point out where it is being employed successfully. Does it work? We will examine the phases of an intrusion common to both financially-motivated and state-sponsored attackers in order to show how defenses based on lowering the value versus raising the cost affect both the attacker and defender. Finally, we will explore what this strategy means for the security threats against the next billion devices."
  },
  "a-new-cve-2015-0057-exploit-technology": {
    "author": "yu-wang",
    "description": "February 10, 2015, Patch Tuesday - Microsoft corporation pushed many system-level patches including CVE-2015-0057/MS15-010. On the same day, Udi Yavo - the CTO of the enSilo company released a technology blog[1]. As the discoverer of the vulnerability, Udi described the CVE-2015-0057 exploit in detail and demonstrated the process of exploiting the vulnerability on the 64-bit Windows 10 Technical Preview operating system. Four months later, on the 17th of June, a new variant of the Dyre banking trojan was caught by FireEye[2]. This variant of Dyre will attempt to exploit CVE-2013-3660 and CVE-2015-0057 to obtain system privileges and this is the first time CVE-2015-0057 was found to be exploited in the wild. On July 8th, NCC Group published their technical blog[3]. In that blog, they described their exploit method in detail, which can work reliably on all 32/64-bit Windows - from Windows XP to Windows 8.1.  It is worth noting that, in this year, we have repeatedly captured APT class zero-day attacks[4] [5] - all of which target the Windows kernel Win32K subsystem's User Mode Callback mechanism. This leads us to re-visit this old-school kernel attack surface. This topic will focus on CVE-2015-0057 and the User Mode Callback mechanism. We will examine the User Mode Callback mechanism from two aspects: exploit methodology and vulnerability detection. Additionally, from an attacker's perspective, this talk will also reveal some new exploit techniques.  [1] http://breakingmalware.com/vulnerabilities/one-bit-rule-bypassing-windows-10-protections-using-single-bit [2] https://www.fireeye.com/blog/threat-research/2015/07/dyre_banking_trojan.html [3] https://www.nccgroup.trust/globalassets/newsroom/uk/blog/documents/2015/07/exploiting-cve-2015.pdf [4] https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html [5] https://www.fireeye.com/blog/threat-research/2015/09/attack_exploitingmi.html",
    "plaintextTitle": "A New CVE-2015-0057 Exploit Technology",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Wang-A-New-CVE-2015-0057-Exploit-Technology.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Wang-A-New-CVE-2015-0057-Exploit-Technology-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ZG_PElDTe98"
      }
    ],
    "youtubeDescription": "by Yu Wang\n\nFebruary 10, 2015, Patch Tuesday - Microsoft corporation pushed many system-level patches including CVE-2015-0057/MS15-010. On the same day, Udi Yavo - the CTO of the enSilo company released a technology blog[1]. As the discoverer of the vulnerability, Udi described the CVE-2015-0057 exploit in detail and demonstrated the process of exploiting the vulnerability on the 64-bit Windows 10 Technical Preview operating system. Four months later, on the 17th of June, a new variant of the Dyre banking trojan was caught by FireEye[2]. This variant of Dyre will attempt to exploit CVE-2013-3660 and CVE-2015-0057 to obtain system privileges and this is the first time CVE-2015-0057 was found to be exploited in the wild. On July 8th, NCC Group published their technical blog[3]. In that blog, they described their exploit method in detail, which can work reliably on all 32/64-bit Windows - from Windows XP to Windows 8.1.\n\nIt is worth noting that, in this year, we have repeatedly captured APT class zero-day attacks[4] [5] - all of which target the Windows kernel Win32K subsystem's User Mode Callback mechanism. This leads us to re-visit this old-school kernel attack surface. This topic will focus on CVE-2015-0057 and the User Mode Callback mechanism. We will examine the User Mode Callback mechanism from two aspects: exploit methodology and vulnerability detection. Additionally, from an attacker's perspective, this talk will also reveal some new exploit techniques.\n\n[1] http://breakingmalware.com/vulnerabilities/one-bit-rule-bypassing-windows-10-protections-using-single-bit\n[2] https://www.fireeye.com/blog/threat-research/2015/07/dyre_banking_trojan.html\n[3] https://www.nccgroup.trust/globalassets/newsroom/uk/blog/documents/2015/07/exploiting-cve-2015.pdf\n[4] https://www.fireeye.com/blog/threat-research/2015/04/probable_apt28_useo.html\n[5] https://www.fireeye.com/blog/threat-research/2015/09/attack_exploitingmi.html"
  },
  "android-commercial-spyware-disease-and-medication": {
    "author": "mustafa-saad",
    "description": "Android-based smartphones are gaining significant advantages on its counterparts in terms of market share among users. The increasing usage of Android OS make it ideal target for attackers. There is an urgent need to develop solutions that guard the user's privacy and can monitor, detect and block these eavesdropping applications. In this paper, two proposed paradigm are presented. The first proposed paradigm is a spyware application to highlight the security weaknesses' \"disease.\" The spyware application has been used to deeply understand the vulnerabilities in the Android operating system, and to study how the spyware can be developed to abuse these vulnerabilities for intercepting victim's privacy such as received SMS, incoming calls and outgoing calls. The spyware abuses the Internet service to transfer the intercepted information from victim's cell phone illegally to a cloud database. The Android OS permission subsystem and the broadcast receiver subsystem contribute to form a haven for the spyware by granting it absolute control to listen, intercept and track the victim's privacy. The second proposed paradigm is a new detection paradigm \"medication\" based on fuzz testing technique to mitigate known vulnerabilities. In this proposal, anti-spyware solution \"DroidSmartFuzzer\" has been designed. The implementation of the anti-spyware application has been used to mitigate the risks of the mentioned attacks. It should be noted that the proposed paradigm \"DroidSmart-Fuzzer\" and its fuzzing test cases are designed not only to catch the proposed spyware application but also to catch any similar malicious application designed to intercept one or more of the listed privacies. According to high rate installation of commercial spyware which increased in 2014 as mentioned in Google Android Security report [1] , Lacoon research team report [2], ALCATEL-LUCENT mobile malware reports [3], [4], [5], [6], and Joshua Dalman and Valerie Hantke research on Black Hat USA 2015 [7]. DroidSmartFuzzer has been tested against the top 15 commercial spyware [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], two free spy applications on Google Play[23], [24], two free spy applications on Amazon store [25], [26] and the proposed spyware application.",
    "plaintextTitle": "Android Commercial Spyware Disease and Medication",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Saad-Android-Commercial-Spyware-Disease-And-Medication.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Saad-Android-Commercial-Spyware-Disease-And-Medication-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=iwUNe0hh8h0"
      }
    ],
    "youtubeDescription": "by Mustafa Saad\n\nAndroid-based smartphones are gaining significant advantages on its counterparts in terms of market share among users. The increasing usage of Android OS make it ideal target for attackers. There is an urgent need to develop solutions that guard the user's privacy and can monitor, detect and block these eavesdropping applications. In this paper, two proposed paradigm are presented. The first proposed paradigm is a spyware application to highlight the security weaknesses' \"disease.\" The spyware application has been used to deeply understand the vulnerabilities in the Android operating system, and to study how the spyware can be developed to abuse these vulnerabilities for intercepting victim's privacy such as received SMS, incoming calls and outgoing calls. The spyware abuses the Internet service to transfer the intercepted information from victim's cell phone illegally to a cloud database. The Android OS permission subsystem and the broadcast receiver subsystem contribute to form a haven for the spyware by granting it absolute control to listen, intercept and track the victim's privacy. The second proposed paradigm is a new detection paradigm \"medication\" based on fuzz testing technique to mitigate known vulnerabilities. In this proposal, anti-spyware solution \"DroidSmartFuzzer\" has been designed. The implementation of the anti-spyware application has been used to mitigate the risks of the mentioned attacks. It should be noted that the proposed paradigm \"DroidSmart-Fuzzer\" and its fuzzing test cases are designed not only to catch the proposed spyware application but also to catch any similar malicious application designed to intercept one or more of the listed privacies.\n\nAccording to high rate installation of commercial spyware which increased in 2014 as mentioned in Google Android Security report [1] , Lacoon research team report [2], ALCATEL-LUCENT mobile malware reports [3], [4], [5], [6], and Joshua Dalman and Valerie Hantke research on Black Hat USA 2015 [7]. DroidSmartFuzzer has been tested against the top 15 commercial spyware [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], two free spy applications on Google Play[23], [24], two free spy applications on Amazon store [25], [26] and the proposed spyware application."
  },
  "automated-detection-of-firefox-extension-reuse-vulnerabilities": {
    "author": "ahmet-buyukkayhan",
    "description": "Major web browsers provide extension mechanisms that allow third parties to modify the browser's behavior, enhance its functionality and GUI, and integrate it with popular web services. Extensions can often access private browsing information such as cookies, history, password stores and sensitive system resources. Consequently, malicious extensions, or attacks directed at legitimate vulnerable extensions, pose a significant security risk to users. The research community presented studies and tools that analyze the security properties of extensions and proposed various defenses against these threats. However, the possible interactions between multiple browser extensions have not been well-studied from a security perspective.   In this presentation, we identify a novel extension-reuse vulnerability that allows adversaries to launch stealthy attacks against users. This attack uses the existing functionality from legitimate extensions to avoid the inclusion of security-sensitive API calls within the malicious extension itself. We then present CROSSFIRE, a lightweight static analyzer for Firefox legacy extensions to automatically discover instances of extension-reuse vulnerabilities, generate exploits that confirm the presence of vulnerabilities, and output exploit templates to assist users of the tool in rapidly constructing proof-of-concept exploits. We analyzed 2,000 Firefox extensions with CrossFire and found that popular extensions, downloaded by millions of users, contain numerous exploitable extension-reuse vulnerabilities. We also performed a case study to show that malicious extensions exploiting extension-reuse vulnerabilities are indeed effective at cloaking themselves from extension vetters.",
    "plaintextTitle": "Automated Detection of Firefox Extension-Reuse Vulnerabilities",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Buyukkayhan-Automated-Detection-Of-Firefox-Extension-Reuse-Vulnerabilities.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=s9TcgKLhreY"
      }
    ],
    "youtubeDescription": "by Ahmet Buyukkayhan & William Robertson\n\nMajor web browsers provide extension mechanisms that allow third parties to modify the browser's behavior, enhance its functionality and GUI, and integrate it with popular web services. Extensions can often access private browsing information such as cookies, history, password stores and sensitive system resources. Consequently, malicious extensions, or attacks directed at legitimate vulnerable extensions, pose a significant security risk to users. The research community presented studies and tools that analyze the security properties of extensions and proposed various defenses against these threats. However, the possible interactions between multiple browser extensions have not been well-studied from a security perspective.\n\nIn this presentation, we identify a novel extension-reuse vulnerability that allows adversaries to launch stealthy attacks against users. This attack uses the existing functionality from legitimate extensions to avoid the inclusion of security-sensitive API calls within the malicious extension itself. We then present CROSSFIRE, a lightweight static analyzer for Firefox legacy extensions to automatically discover instances of extension-reuse vulnerabilities, generate exploits that confirm the presence of vulnerabilities, and output exploit templates to assist users of the tool in rapidly constructing proof-of-concept exploits. We analyzed 2,000 Firefox extensions with CrossFire and found that popular extensions, downloaded by millions of users, contain numerous exploitable extension-reuse vulnerabilities. We also performed a case study to show that malicious extensions exploiting extension-reuse vulnerabilities are indeed effective at cloaking themselves from extension vetters."
  },
  "automated-dynamic-firmware-analysis-at-scale-a-case-study-on-embedded-web-interfaces": {
    "author": "andrei-costin",
    "description": "Embedded devices are becoming more widespread, interconnected, and web-enabled than ever. However, recent studies showed that these devices are far from being secure. Moreover, many embedded systems rely on web interfaces for user interaction or administration. Unfortunately, web security is known to be difficult, and therefore the web interfaces of embedded systems represent a considerable attack surface.  In this paper, we present the first fully automated framework that applies dynamic firmware analysis techniques to achieve, in a scalable manner, automated vulnerability discovery within embedded firmware images. We apply our framework to study the security of embedded web interfaces running in Commercial Off-The-Shelf (COTS) embedded devices, such as routers, DSL/cable modems, VoIP phones, IP/CCTV cameras. We introduce a methodology and implement a scalable framework for discovery of vulnerabilities in embedded web interfaces regardless of the vendor, device, or architecture. To achieve this goal, our framework performs full system emulation to achieve the execution of firmware images in a software-only environment, i.e., without involving any physical embedded devices. Then, we analyze the web interfaces within the firmware using both static and dynamic tools. We also present some interesting case studies, and discuss the main challenges associated with the dynamic analysis of firmware images and their web interfaces and network services. The observations we make in this paper shed light on an important aspect of embedded devices which was not previously studied at a large scale. Insights from this paper can help users, programmers and auditors in efficiently testing and securing their Internet-enabled embedded devices.  We validate our framework by testing it on 1925 firmware images from 54 different vendors. We discover important vulnerabilities in 185 firmware images, affecting nearly a quarter of vendors in our dataset. We also perform comprehensive failure analysis. We show that by applying relatively easy fixes during corrective maintenance it is possible to remediate at least 61.3% of emulation failures and at least 25.2% of web interface launch failures. These experimental results demonstrate the effectiveness of our approach.",
    "plaintextTitle": "Automated Dynamic Firmware Analysis at Scale: A Case Study on Embedded Web Interfaces",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Costin-Automated-Dynamic-Firmware-Analysis-At-Scale-A-Case-Study-On-Embedded-Web-Interfaces.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Costin-Automated-Dynamic-Firmware-Analysis-At-Scale-A-Case-Study-On-Embedded-Web-Interfaces-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=VE9-2nc36q4"
      }
    ],
    "youtubeDescription": "Black Hat Asia 2016: Automated Dynamic Firmware Analysis at Scale: A Case Study on Embedded Web Interfaces\n\nPresented by: Andrei Costin\nhttps://www.blackhat.com/asia-16/briefings.html#automated-dynamic-firmware-analysis-at-scale-a-case-study-on-embedded-web-interfaces \nEmbedded devices are becoming more widespread, interconnected, and web-enabled than ever. However, recent studies showed that these devices are far from being secure. Moreover, many embedded systems rely on web interfaces for user interaction or administration. Unfortunately, web security is known to be difficult, and therefore the web interfaces of embedded systems represent a considerable attack surface.\n\nIn this paper, we present the first fully automated framework that applies dynamic firmware analysis techniques to achieve, in a scalable manner, automated vulnerability discovery within embedded firmware images. We apply our framework to study the security of embedded web interfaces running in Commercial Off-The-Shelf (COTS) embedded devices, such as routers, DSL/cable modems, VoIP phones, IP/CCTV cameras. We introduce a methodology and implement a scalable framework for discovery of vulnerabilities in embedded web interfaces regardless of the vendor, device, or architecture. To achieve this goal, our framework performs full system emulation to achieve the execution of firmware images in a software-only environment, i.e., without involving any physical embedded devices. Then, we analyze the web interfaces within the firmware using both static and dynamic tools. We also present some interesting case studies, and discuss the main challenges associated with the dynamic analysis of firmware images and their web interfaces and network services. The observations we make in this paper shed light on an important aspect of embedded devices which was not previously studied at a large scale. Insights from this paper can help users, programmers and auditors in efficiently testing and securing their Internet-enabled embedded devices.\n\nWe validate our framework by testing it on 1925 firmware images from 54 different vendors. We discover important vulnerabilities in 185 firmware images, affecting nearly a quarter of vendors in our dataset. We also perform comprehensive failure analysis. We show that by applying relatively easy fixes during corrective maintenance it is possible to remediate at least 61.3% of emulation failures and at least 25.2% of web interface launch failures. These experimental results demonstrate the effectiveness of our approach."
  },
  "break-out-of-the-truman-show-active-detection-and-escape-of-dynamic-binary-instrumentation": {
    "author": "ke-sun",
    "description": "Dynamic Binary Instrumentation (DBI) is an important and powerful technique to analyze runtime code behaviors for different usage including performance tuning, instruction analysis, new processor feature simulation and so on. For these usages, reasonable transparency is good enough to minimize side effect and collect correct results. As the security community starts to extend DBI usage to security defense, it becomes very important to keep DBI tools fully transparent to the exploits/malware being analyzed. In past years, various approaches have been reported to make DBI environment detectable by the targeted code. Current DBI detection studies mainly focus on detection methods such as memory inspection, resource and performance monitor, etc.\n\nGiven the imperfection of the binary translation process, more active detection methods can be used by specifically designed code to target the bug or blind spots of the DBI tools and identify the presence of the DBI by the execution results.   \n\nThis talk focuses on such active detection techniques by exploiting the weakness of the DBI tools such as the incapability of handling 32-bit/64-bit cross-mode codes and other bugs. Moreover, this presentation will discuss that the anti-DBI practice can be taken one step further - not only to detect the DBI environment, but also to escape from its control, and reverse the game.",
    "plaintextTitle": "Break Out of the Truman Show: Active Detection and Escape of Dynamic Binary Instrumentation",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Sun-Break-Out-Of-The-Truman-Show-Active-Detection-And-Escape-Of-Dynamic-Binary-Instrumentation.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=VGmvx2B5qdo"
      }
    ],
    "youtubeDescription": "by Ke Sun & Xiaoning Li\n\nDynamic Binary Instrumentation (DBI) is an important and powerful technique to analyze runtime code behaviors for different usage including performance tuning, instruction analysis, new processor feature simulation and so on. For these usages, reasonable transparency is good enough to minimize side effect and collect correct results. As the security community starts to extend DBI usage to security defense, it becomes very important to keep DBI tools fully transparent to the exploits/malware being analyzed. In past years, various approaches have been reported to make DBI environment detectable by the targeted code. Current DBI detection studies mainly focus on detection methods such as memory inspection, resource and performance monitor, etc.\n\nGiven the imperfection of the binary translation process, more active detection methods can be used by specifically designed code to target the bug or blind spots of the DBI tools and identify the presence of the DBI by the execution results.\n\nThis talk focuses on such active detection techniques by exploiting the weakness of the DBI tools such as the incapability of handling 32-bit/64-bit cross-mode codes and other bugs. Moreover, this presentation will discuss that the anti-DBI practice can be taken one step further - not only to detect the DBI environment, but also to escape from its control, and reverse the game."
  },
  "bypassing-browser-security-policies-for-fun-and-profit": {
    "author": "rafay-baloch",
    "description": "Mobile browsers in comparison to desktop browsers are relatively new and have not gone under same level of scrutiny. Browser vendors have introduced and implemented tons of protection mechanisms against memory corruption exploits, which makes it very difficult to write a reliable exploit that would work under all circumstances. This leaves us with the \"other\" category of Client Side attacks. In this presentation, we will present our research about bypassing core security policies implemented inside browsers such as the \"Same Origin Policy,\" and \"Content Security Policy,\" etc.   We will present several bypasses that were found in various mobile browsers during our research. In addition, we will also uncover other interesting security flaws found during our research such as Address Bar Spoofing, Content Spoofing, Cross Origin CSS Attacks, Charset Inheritance, CSP Bypass, Mixed Content Bypass, etc., as found in Android Browsers. We will also talk about the testing methodology that we used to uncover several android zero days.  Apart from the theory, our presentation will also disclose a dozen of the most interesting examples of security vulnerabilities and weaknesses highlighted above, which we identified in the most popular Android third-party web browsers, and in Android WebView itself.   We will explain the root cause of the bug and demonstrate their exploitation, show examples of vulnerable code and, where possible, patches that were issued to address these vulnerabilities. Finally, we will demonstrate a sample test suite which can be used to assess basic security properties of any mobile web/browser.",
    "plaintextTitle": "Bypassing Browser Security Policies for Fun and Profit",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Baloch-Bypassing-Browser-Security-Policies-For-Fun-And-Profit.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Baloch-Bypassing-Browser-Security-Policies-For-Fun-And-Profit-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=P5R4KeCzO-Q"
      }
    ],
    "youtubeDescription": "by Rafay Baloch\n\nMobile browsers in comparison to desktop browsers are relatively new and have not gone under same level of scrutiny. Browser vendors have introduced and implemented tons of protection mechanisms against memory corruption exploits, which makes it very difficult to write a reliable exploit that would work under all circumstances. This leaves us with the \"other\" category of Client Side attacks. In this presentation, we will present our research about bypassing core security policies implemented inside browsers such as the \"Same Origin Policy,\" and \"Content Security Policy,\" etc.\n\nWe will present several bypasses that were found in various mobile browsers during our research. In addition, we will also uncover other interesting security flaws found during our research such as Address Bar Spoofing, Content Spoofing, Cross Origin CSS Attacks, Charset Inheritance, CSP Bypass, Mixed Content Bypass, etc., as found in Android Browsers. We will also talk about the testing methodology that we used to uncover several android zero days.\n\nApart from the theory, our presentation will also disclose a dozen of the most interesting examples of security vulnerabilities and weaknesses highlighted above, which we identified in the most popular Android third-party web browsers, and in Android WebView itself.\n\nWe will explain the root cause of the bug and demonstrate their exploitation, show examples of vulnerable code and, where possible, patches that were issued to address these vulnerabilities. Finally, we will demonstrate a sample test suite which can be used to assess basic security properties of any mobile web/browser."
  },
  "cantact-an-open-tool-for-automotive-exploitation": {
    "author": "eric-evenchick",
    "description": "Controller Area Network (CAN) remains the leading protocol for networking automotive controllers. Access to CAN gives an attacker the ability to modify system operation, perform diagnostic actions, and disable the system. CAN is also used in SCADA networks and industrial control systems.Historically, software and hardware for CAN has been expensive and targeted at automotive OEMs. Last year, we launched CANtact, an open source hardware CAN bus tool for PCs. This provides a low cost solution for converting CAN to USB and getting on the bus.However, once connected to CAN, software is needed to make sense of traffic on the bus. CANtact is a new tool for this purpose. It allows the user to view CAN traffic, decode messages, and perform diagnostic actions in a graphical environment.Existing CAN software is focused on developing systems, CANtact is designed for breaking them. The tool has been designed with reverse engineering and fuzzing in mind.In this talk, we'll introduce the CANtact software, provide details about its design, and explain how it can be used to perform analysis on CAN systems. We'll also look into some of the analysis techinques that are useful for reverse engineering CAN systems.",
    "plaintextTitle": "CANtact: An Open Tool for Automotive Exploitation",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=77PXh8mqH98"
      }
    ],
    "youtubeDescription": "https://www.nsec.io/2016/01/cantact-an-open-tool-for-automotive-exploitation/\n\nController Area Network (CAN) remains the leading protocol for networking automotive controllers. Access to CAN gives an attacker the ability to modify system operation, perform diagnostic actions, and disable the system. CAN is also used in SCADA networks and industrial control systems.\nHistorically, software and hardware for CAN has been expensive and targeted at automotive OEMs. Last year, we launched CANtact, an open source hardware CAN tool for PCs. This provides a low cost solution for converting CAN to USB and getting on the bus.\n\nHowever, once connected to CAN, software is needed to make sense of traffic on the bus. CANtact is a new tool for this purpose. It allows the user to view CAN traffic, decode messages, and perform diagnostic actions in a graphical environment.\nExisting CAN software is focused on developing systems, CANtact is designed for breaking them. The tool has been designed with reverse engineering and fuzzing in mind.\n\nIn this talk, we’ll introduce the CANtact software, provide details about its design, and explain how it can be used to perform analysis on CAN systems. We’ll also look into some of the analysis techinques that are useful for reverse engineering CAN systems."
  },
  "dscompromised-a-windows-dsc-attack-framework": {
    "author": "ryan-kazanciyan",
    "description": "DSCompromised is a PowerShell-based toolkit that leverages Windows Desired State Configuration (DSC) for command-and-control, malware persistence, and automatic re-infection of compromised systems. Never heard of DSC before? Worry not! We'll first explain the basics of how DSC, Microsoft's next-gen enterprise management technology, works - and how it can be controlled and abused by an attacker. Next, we'll walk through the steps necessary to use our DSCompromised framework to set up a command-and-control server, generate payloads, infect a victim, and even restore a remediated system back to a compromised state.  Finally, we'll pivot from the attacker/red team perspective to that of a blue team defender or incident responder. We'll illustrate the signs that DSC might be abused on a compromised system, and how to detect and investigate the forensic evidence it leaves behind. This presentation includes source code and on-screen demonstrations of multiple attack scenarios.",
    "plaintextTitle": "DSCompromised: A Windows DSC Attack Framework",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Kazanciyan-DSCompromised-A-Windows-DSC-Attack-Framework.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=MWnTg3cQ_mo"
      }
    ],
    "youtubeDescription": "by Ryan Kazanciyan & Matt Hastings\n\nDSCompromised is a PowerShell-based toolkit that leverages Windows Desired State Configuration (DSC) for command-and-control, malware persistence, and automatic re-infection of compromised systems. Never heard of DSC before? Worry not! We'll first explain the basics of how DSC, Microsoft's next-gen enterprise management technology, works - and how it can be controlled and abused by an attacker. Next, we'll walk through the steps necessary to use our DSCompromised framework to set up a command-and-control server, generate payloads, infect a victim, and even restore a remediated system back to a compromised state.\n\nFinally, we'll pivot from the attacker/red team perspective to that of a blue team defender or incident responder. We'll illustrate the signs that DSC might be abused on a compromised system, and how to detect and investigate the forensic evidence it leaves behind. This presentation includes source code and on-screen demonstrations of multiple attack scenarios."
  },
  "enterprise-apps-bypassing-the-ios-gatekeeper": {
    "author": "avi-bashan",
    "description": "A critical component of Apple's security model is how the App Store serves as gatekeeper for all code on iOS devices. This makes Apple's Developer Enterprise Program its achilles heel, allowing enterprises to bypass the store's code validation process and deploy their own apps directly to devices. \n\nIn recent years we have witnessed a rise in usage of iOS Enterprise apps. This fact is  especially alarming when considering how these certificates can be easily used for illegitimate purposes by anyone from known state-actor spies like Hacking Team (RCS) to Chinese app piracy stores. \n\nApple has tried to mitigate these issues in iOS 9 by introducing new features like requiring user intervention in order to use enterprise signed apps, but are these measures enough? We'll demonstrate, using zero-day novel attack, how to leverage new security features in iOS 9 to install a malicious enterprise app on a user's phone.\n\nIn this session, we will give an overview on how enterprise-signed apps have been used to attack iOS devices and examples of usages discovered in the wild. We'll share real world statistics about the prevalence of Enterprise apps installed on iOS devices and show which enterprise apps are the most popular. In addition we'll reveal our zero day vulnerability.",
    "plaintextTitle": "Enterprise Apps: Bypassing the iOS Gatekeeper",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Bashan-Enterprise-Apps-Bypassing-The-iOS-Gatekeeper.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Bashan-Enterprise-Apps-Bypassing-The-iOS-Gatekeeper-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=m4_vAlkyqRc"
      }
    ],
    "youtubeDescription": "by Avi Bashan & Ohad Bobrov\n\nA critical component of Apple's security model is how the App Store serves as gatekeeper for all code on iOS devices. This makes Apple's Developer Enterprise Program its achilles heel, allowing enterprises to bypass the store's code validation process and deploy their own apps directly to devices.\n\nIn recent years we have witnessed a rise in usage of iOS Enterprise apps. This fact is especially alarming when considering how these certificates can be easily used for illegitimate purposes by anyone from known state-actor spies like Hacking Team (RCS) to Chinese app piracy stores.\n\nApple has tried to mitigate these issues in iOS 9 by introducing new features like requiring user intervention in order to use enterprise signed apps, but are these measures enough? We'll demonstrate, using zero-day novel attack, how to leverage new security features in iOS 9 to install a malicious enterprise app on a user's phone.\n\nIn this session, we will give an overview on how enterprise-signed apps have been used to attack iOS devices and examples of usages discovered in the wild. We'll share real world statistics about the prevalence of Enterprise apps installed on iOS devices and show which enterprise apps are the most popular. In addition we'll reveal our zero day vulnerability."
  },
  "exploiting-linux-and-pax-aslrs-weaknesses-on-32-bit-and-64-bit-systems": {
    "author": "dr-hector-marco-gisbert",
    "description": "In this work, we present four weaknesses in current Linux and PaX ASLR design and implementation: 1) Too low entropy 2) Non-uniform distribution 3) Correlation between objects 4) Inheritance  A proof of concept exploiting the correlation weakness is presented, which bypasses the Full ASLR Linux in 64-bit systems in less than one second - the system is protected. A deep analysis of all these weaknesses enabled us to propose a new ASLR design. A proof of concept on Linux will be named ASLR-NG, which overcomes all current ASLRs including PaX solution. Finally, we present ASLRA, a suit tool to analyze the ASLR entropy of Linux.",
    "plaintextTitle": "Exploiting Linux and PaX ASLR's Weaknesses on 32-bit and 64-bit Systems",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Marco-Gisbert-Exploiting-Linux-And-PaX-ASLRS-Weaknesses-On-32-And-64-Bit-Systems.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Marco-Gisbert-Exploiting-Linux-And-PaX-ASLRS-Weaknesses-On-32-And-64-Bit-Systems-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=p0TgWhU04pg"
      }
    ],
    "youtubeDescription": "by Dr. Hector Marco-Gisbert & Dr. Ismael Ripoll\n\nIn this work, we present four weaknesses in current Linux and PaX ASLR design and implementation:\n\n1) Too low entropy\n2) Non-uniform distribution\n3) Correlation between objects\n4) Inheritance\n\nA proof of concept exploiting the correlation weakness is presented, which bypasses the Full ASLR Linux in 64-bit systems in less than one second - the system is protected. A deep analysis of all these weaknesses enabled us to propose a new ASLR design. A proof of concept on Linux will be named ASLR-NG, which overcomes all current ASLRs including PaX solution. Finally, we present ASLRA, a suit tool to analyze the ASLR entropy of Linux."
  },
  "hacking-a-professional-drone": {
    "author": "nils-rodday",
    "description": "Professional drones are now actively used across various industries  (for example utility companies, law enforcement and first responder organizations, government agencies and universities) to perform daily critical operations. In this Briefing, Nils Rodday performs a live hack which exploits vulnerabilities of the professional drone and effectively compromises the security of the system to take over control. He also examines practical fixes and approaches for remediating these compromises.",
    "plaintextTitle": "Hacking a Professional Drone",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Rodday-Hacking-A-Professional-Drone.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=JRVb-xE1zTI"
      }
    ],
    "youtubeDescription": "by Nils Rodday\n\nProfessional drones are now actively used across various industries (for example utility companies, law enforcement and first responder organizations, government agencies and universities) to perform daily critical operations. In this Briefing, Nils Rodday performs a live hack which exploits vulnerabilities of the professional drone and effectively compromises the security of the system to take over control. He also examines practical fixes and approaches for remediating these compromises."
  },
  "hey-your-parcel-looks-bad-fuzzing-and-exploiting-parcel-ization-vulnerabilities-in-android": {
    "author": "qidan-he",
    "description": "Binder is the heart of Android IPC and parcel is its blood. Most things in Android can and are intended to be parceled/unparceled from one process to another. Starting an activity? An intent will be parceled at caller side and eventually unparceled at receiver side. Calling an service? Same, except the receiver side is usually system_server or other privileged service process. Playing a video? Parcels are silently constructed and sent crossed /dev/binder to mediaserver.   Wait, what if the parcel is bad? Evil attacking process can craft malformed marshalled byte stream, thus triggering vulnerability in the receiver side's processing function, corrupting some memory and achieving privilege escalation. We call it \"BadParcel.\" By fuzzing and code auditing, we have managed to find such high-severity vulnerabilities, most of which are also effective for current Android 6.0, enabling zero-permission attacking application to execute code in target high-privilege process like mediaserver and system_server. We will introduce how we write and run our custom fuzzers to effectively generate crashes and identify those bugs, including discussion and work on integration with ASAN and AFL. Besides, we will also present how to exploit one of those bugs, turning it from a simple benign-looking info-leak like index-out-of-bound, to reliable full PC control and shell code execution in mediaserver. We will elaborate the heap spray and memory fengshui technique we use, which we believe could shed some light on exploiting these kind of bugs.",
    "plaintextTitle": "Hey Your Parcel Looks Bad - Fuzzing and Exploiting Parcel-ization Vulnerabilities in Android",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-He-Hey-Your-Parcel-Looks-Bad-Fuzzing-And-Exploiting-Parcelization-Vulnerabilities-In-Android.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-He-Hey-Your-Parcel-Looks-Bad-Fuzzing-And-Exploiting-Parcelization-Vulnerabilities-In-Android-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=I1JR_LriyDQ"
      }
    ],
    "youtubeDescription": "by Qidan He\n\nBinder is the heart of Android IPC and parcel is its blood. Most things in Android can and are intended to be parceled/unparceled from one process to another. Starting an activity? An intent will be parceled at caller side and eventually unparceled at receiver side. Calling an service? Same, except the receiver side is usually system_server or other privileged service process. Playing a video? Parcels are silently constructed and sent crossed /dev/binder to mediaserver.\n\nWait, what if the parcel is bad? Evil attacking process can craft malformed marshalled byte stream, thus triggering vulnerability in the receiver side's processing function, corrupting some memory and achieving privilege escalation. We call it \"BadParcel.\" By fuzzing and code auditing, we have managed to find such high-severity vulnerabilities, most of which are also effective for current Android 6.0, enabling zero-permission attacking application to execute code in target high-privilege process like mediaserver and system_server. We will introduce how we write and run our custom fuzzers to effectively generate crashes and identify those bugs, including discussion and work on integration with ASAN and AFL. Besides, we will also present how to exploit one of those bugs, turning it from a simple benign-looking info-leak like index-out-of-bound, to reliable full PC control and shell code execution in mediaserver. We will elaborate the heap spray and memory fengshui technique we use, which we believe could shed some light on exploiting these kind of bugs."
  },
  "im-not-a-human-breaking-the-google-recaptcha": {
    "author": "iasonas-polakis",
    "description": "Since their inception, captchas have been widely used for preventing fraudsters from performing illicit actions. Nevertheless, economic incentives have resulted in an arms race, where fraudsters develop automated solvers and, in turn, captcha services tweak their design to break the solvers. Recent work, however, presented a generic attack that can be applied to any text-based captcha scheme. Fittingly, Google recently unveiled the latest version of reCaptcha. The goal of their new system is twofold; to minimize the effort for legitimate users, while requiring tasks that are more challenging to computers than text recognition. ReCaptcha is driven by an \"advanced risk analysis system\" that evaluates requests and selects the difficulty of the captcha that will be returned. Users may be required to click in a checkbox, or identify images with similar content.\n\nIn this paper, we conduct a comprehensive study of reCaptcha, and explore how the risk analysis is influenced by each aspect of the request. Through extensive experimentation, we identify flaws that allow adversaries to effortlessly influence the risk analysis process, bypass restrictions, and deploy large-scale attacks. Subsequently, we design a novel low-cost attack that leverages deep learning technologies for the semantic annotation of images. Our system is extremely effective, automatically solving 70.78% of the image reCaptcha challenges, while requiring only 19 seconds per challenge. We also apply our attack to the Facebook image captcha and achieve an accuracy of 83.5%. Based on our experimental findings, we propose a series of safeguards and modifications for impacting the scalability and accuracy of our attacks. Overall, while our study focuses on reCaptcha, our findings have wide implications; as the semantic information conveyed via images is increasingly within the realm of automated reasoning, the future of captchas relies on the exploration of novel directions.",
    "plaintextTitle": "I'm Not a Human: Breaking the Google reCAPTCHA",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Sivakorn-Im-Not-a-Human-Breaking-the-Google-reCAPTCHA.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Sivakorn-Im-Not-a-Human-Breaking-the-Google-reCAPTCHA-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=8iMU9HbJ7Wo"
      }
    ],
    "youtubeDescription": "by Iasonas Polakis  &  Suphannee Sivakorn\n\nSince their inception, captchas have been widely used for preventing fraudsters from performing illicit actions. Nevertheless, economic incentives have resulted in an arms race, where fraudsters develop automated solvers and, in turn, captcha services tweak their design to break the solvers. Recent work, however, presented a generic attack that can be applied to any text-based captcha scheme. Fittingly, Google recently unveiled the latest version of reCaptcha. The goal of their new system is twofold; to minimize the effort for legitimate users, while requiring tasks that are more challenging to computers than text recognition. ReCaptcha is driven by an \"advanced risk analysis system\" that evaluates requests and selects the difficulty of the captcha that will be returned. Users may be required to click in a checkbox, or identify images with similar content.\n\nIn this paper, we conduct a comprehensive study of reCaptcha, and explore how the risk analysis is influenced by each aspect of the request. Through extensive experimentation, we identify flaws that allow adversaries to effortlessly influence the risk analysis process, bypass restrictions, and deploy large-scale attacks. Subsequently, we design a novel low-cost attack that leverages deep learning technologies for the semantic annotation of images. Our system is extremely effective, automatically solving 70.78% of the image reCaptcha challenges, while requiring only 19 seconds per challenge. We also apply our attack to the Facebook image captcha and achieve an accuracy of 83.5%. Based on our experimental findings, we propose a series of safeguards and modifications for impacting the scalability and accuracy of our attacks. Overall, while our study focuses on reCaptcha, our findings have wide implications; as the semantic information conveyed via images is increasingly within the realm of automated reasoning, the future of captchas relies on the exploration of novel directions."
  },
  "incident-response-at-scale-building-a-next-generation-soc": {
    "author": "omer-cohen",
    "description": "When the ratio of security personnel to endpoints/users/customers is so low, managing the amount of incidents that come in becomes impossible. In this talk we will discuss these Monitoring & Incident Response challenges, and how most of the processes can be (semi-)automated to lower the initial triage and full resolution timeline, increase visibility and over ability to protect your organization.",
    "plaintextTitle": "Incident Response @ Scale - Building a Next Generation SOC",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Cohen-Incident-Response-At-Scale-Building-A-Next-Generation-SOC.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=kYCJXwBaZR4"
      }
    ],
    "youtubeDescription": "by Omer Cohen\n\nWhen the ratio of security personnel to endpoints/users/customers is so low, managing the amount of incidents that come in becomes impossible. In this talk we will discuss these Monitoring & Incident Response challenges, and how most of the processes can be (semi-)automated to lower the initial triage and full resolution timeline, increase visibility and over ability to protect your organization."
  },
  "lets-see-whats-out-there-mapping-the-wireless-iot": {
    "author": "tobias-zillner",
    "description": "\"Radio... The final IoT frontier. These are the problems of penetration testers. Our continuing mission: To explore strange new signals... To seek out new devices; new protocols... To boldly detect what no one is aware of!\"  The Internet of Things (IoT) is considered to be the next phase of the Internet revolution - linking more and more objects of the real world to the virtual world and enabling anytime, anyplace and anything communication. Due to the vast increase in popularity and distribution, the IoT has become an interesting target for attackers. Because it is becoming more and more common for IoT devices to communicate over wireless channels, direct physical access to the targeted systems or network is no longer necessary. The attack range is then only dependent on the antennas used and the power of their transmitters.   Nowadays many companies are beginning to think about targeted attacks in the wireless world as a real threat but nobody is aware of what devices are out there, which protocols are used for communication and what information is transmitted. This huge attack surface is often a massive blind spot in cyber security strategies.  This talk provides insight into the problems that arise during security assessments in the wireless world, state-of-the-art wireless signal identification and what best practices should be used for revealing unknown signals.   The focus will be on the needs of a typical penetration tester, and in addition to the problem identification, we will release and demo a new tool that enables security testers to easily map the radio spectrum and identify unknown communication and devices.",
    "plaintextTitle": "Let's See What's Out There - Mapping the Wireless IoT",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Zillner-Lets-See-Whats-Out-There-Mapping-The-Wireless-IOT.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=75xU6PMd00o"
      }
    ],
    "youtubeDescription": "by Tobias Zillner\n\n\"Radio... The final IoT frontier.\nThese are the problems of penetration testers.\nOur continuing mission:\nTo explore strange new signals...\nTo seek out new devices; new protocols...\nTo boldly detect what no one is aware of!\"\n\nThe Internet of Things (IoT) is considered to be the next phase of the Internet revolution - linking more and more objects of the real world to the virtual world and enabling anytime, anyplace and anything communication. Due to the vast increase in popularity and distribution, the IoT has become an interesting target for attackers. Because it is becoming more and more common for IoT devices to communicate over wireless channels, direct physical access to the targeted systems or network is no longer necessary. The attack range is then only dependent on the antennas used and the power of their transmitters.\n\nNowadays many companies are beginning to think about targeted attacks in the wireless world as a real threat but nobody is aware of what devices are out there, which protocols are used for communication and what information is transmitted. This huge attack surface is often a massive blind spot in cyber security strategies.\n\nThis talk provides insight into the problems that arise during security assessments in the wireless world, state-of-the-art wireless signal identification and what best practices should be used for revealing unknown signals.\n\nThe focus will be on the needs of a typical penetration tester, and in addition to the problem identification, we will release and demo a new tool that enables security testers to easily map the radio spectrum and identify unknown communication and devices."
  },
  "locknote-conclusions-and-key-takeaways-from-black-hat-asia-2016": {
    "author": "jeff-moss",
    "description": "At the close of this year's conference, join Black Hat Founder Jeff Moss and members of the esteemed Black Hat Review Board for an insightful conversation on the most pressing issues facing the InfoSec community. This Locknote will feature a candid discussion on the key takeaways coming out of Black Hat Asia and how these trends will impact future InfoSec strategies.",
    "plaintextTitle": "Locknote: Conclusions and Key Takeaways from Black Hat Asia 2016",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=B7V0Ld40Auk"
      }
    ],
    "youtubeDescription": "by Jeff Moss, Dino Dai Zovi, Chris Wysopal & Vincenco Iozzo\n\nAt the close of this year's conference, join Black Hat Founder Jeff Moss and members of the esteemed Black Hat Review Board for an insightful conversation on the most pressing issues facing the InfoSec community. This Locknote will feature a candid discussion on the key takeaways coming out of Black Hat Asia and how these trends will impact future InfoSec strategies."
  },
  "multivariate-solutions-to-emerging-passive-dns-challenges": {
    "author": "paul-vixie",
    "description": "These days, most threat intelligence analysts know how to use passive DNS to pivot on initial indicators: given one bad domain, analysts will routinely use passive DNS to identify other domains using the same IP address or name servers, etc.  Less discussed are the corner cases that make simple passive DNS methods hard to successfully employ. For example, if a domain's name servers are shared with 100,000 other domains (including many legitimate domains!), \"guilt by association\" based solely on name server commonality can become difficult.  Fortunately, it is still possible to identify related bad domains by employing passive DNS along with various other attributes rather than just focusing on a single screening factor such as shared name servers. Audience members will learn about the emerging challenges to using Passive DNS and specific steps they can take to successfully overcome them.",
    "plaintextTitle": "Multivariate Solutions to Emerging Passive DNS Challenges",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Vixie-Multivariate-Solutions-to-Emerging-Passive-DNS-Challenges.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=LrLK4zWRWAA"
      }
    ],
    "youtubeDescription": "by Paul Vixie\n\nThese days, most threat intelligence analysts know how to use passive DNS to pivot on initial indicators: given one bad domain, analysts will routinely use passive DNS to identify other domains using the same IP address or name servers, etc.\n\nLess discussed are the corner cases that make simple passive DNS methods hard to successfully employ. For example, if a domain's name servers are shared with 100,000 other domains (including many legitimate domains!), \"guilt by association\" based solely on name server commonality can become difficult.\n\nFortunately, it is still possible to identify related bad domains by employing passive DNS along with various other attributes rather than just focusing on a single screening factor such as shared name servers. Audience members will learn about the emerging challenges to using Passive DNS and specific steps they can take to successfully overcome them."
  },
  "never-trust-your-inputs-causing-catastrophic-physical-consequences-from-the-sensor-or-how-to-fool-adc": {
    "author": "alexander-bolshev",
    "description": "Our world is analog. Computers are digital. When a microcontroller in an Industrial Control System (ICS) or embedded system acquires data from the physical world it uses analog-to-digital converters (ADC) to transform amperage or voltage into a useful unit of measurement. Decisions on how to control physical applications are taken based on the interpretation of the measured data. Certain pieces of process data must be accurate at all times in order to maintain efficiency and safety of the process. Understanding data sources and their pathways is essential to understanding how the attacker might perturb the process potentially causing \"catastrophic physical consequences.\"  Development and usage of systems with ADCs is well understood and mastered to perfection. But let's look at it from the security perspective. In the production environment, the state of the physical process is estimated based on the measured physical phenomena like temperature or velocity which are converted to a voltage (V) value by a sensor or a transmitter. The signal may be consumed by two devices: process control equipment (PLC or RTU) and by Digital Acquisition system (DAQ) that sends data for historical logging and \"big data\" analysis. What if you want to perturb the process, but keep it secret to the monitoring systems like DAQ? What if you could generate a specific analog signal that will be interpreted by these two components in a completely different way? E.g. PLC will read 7 V and DAQ will read 1 V (corresponding to 400 and 20 units of temperature). You can do a lot of fun things if you understand how ADC works.   In this talk, we will discuss a rarely-addressed topic of analog signals processing security. Tampering with the frequency and phase can cause ADC outputting spurious digital signal; modifying the ranges can cause integer overflow and trigger logic vulnerability in the PLC/embedded software. We will analyze several attack vectors on ADC, misconfiguration of signal scaling and every other design detail that allow the attacker to fool ADC (and all systems depending on its output signal). We will illustrate how outlined vulnerabilities can be exploited in the software (demo) and conclude with the consequences of such attacks in the context of exploiting physical processes.",
    "plaintextTitle": "Never Trust Your Inputs: Causing 'Catastrophic Physical Consequences' from the Sensor (or How to Fool ADC)",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Bolshev-Never-Trust-Your-Inputs-Causing-Catastrophic-Physical-Consequences-From-The-Sensor.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=0BHmoxAw-sA"
      }
    ],
    "youtubeDescription": "by Alexander Bolshev & Marina Krotofil\n\nOur world is analog. Computers are digital. When a microcontroller in an Industrial Control System (ICS) or embedded system acquires data from the physical world it uses analog-to-digital converters (ADC) to transform amperage or voltage into a useful unit of measurement. Decisions on how to control physical applications are taken based on the interpretation of the measured data. Certain pieces of process data must be accurate at all times in order to maintain efficiency and safety of the process. Understanding data sources and their pathways is essential to understanding how the attacker might perturb the process potentially causing \"catastrophic physical consequences.\"\n\nDevelopment and usage of systems with ADCs is well understood and mastered to perfection. But let's look at it from the security perspective. In the production environment, the state of the physical process is estimated based on the measured physical phenomena like temperature or velocity which are converted to a voltage (V) value by a sensor or a transmitter. The signal may be consumed by two devices: process control equipment (PLC or RTU) and by Digital Acquisition system (DAQ) that sends data for historical logging and \"big data\" analysis. What if you want to perturb the process, but keep it secret to the monitoring systems like DAQ? What if you could generate a specific analog signal that will be interpreted by these two components in a completely different way? E.g. PLC will read 7 V and DAQ will read 1 V (corresponding to 400 and 20 units of temperature). You can do a lot of fun things if you understand how ADC works.\n\nIn this talk, we will discuss a rarely-addressed topic of analog signals processing security. Tampering with the frequency and phase can cause ADC outputting spurious digital signal; modifying the ranges can cause integer overflow and trigger logic vulnerability in the PLC/embedded software. We will analyze several attack vectors on ADC, misconfiguration of signal scaling and every other design detail that allow the attacker to fool ADC (and all systems depending on its output signal). We will illustrate how outlined vulnerabilities can be exploited in the software (demo) and conclude with the consequences of such attacks in the context of exploiting physical processes."
  },
  "numchecker-a-system-approach-for-kernel-rootkit-detection": {
    "author": "xueyang-wang",
    "description": "Kernel rootkits are stealthy and can have unrestricted access to system resources. In our talk, we will present NumChecker, a new Virtual Machine Monitor (VMM) based framework to detect and identify control-flow modifying kernel rootkits in a guest Virtual Machine (VM). NumChecker detects and identifies malicious modifications to a system call in the guest VM by measuring low-level events that occur during the system call's execution. To efficiently measure these events, NumChecker leverages the Hardware Performance Counters (HPCs) in modern processors. HPCs today are able to measure a large number of low-level events that are related to program behavior. We implement NumChecker on Linux with the Kernel-based Virtual Machine. The results on a number of real-world kernel rootkits show that NumChecker is practical and effective.",
    "plaintextTitle": "NumChecker: A System Approach for Kernel Rootkit Detection and Identification",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Guo-NumChecker-A-System-Approach-For-Kernel-Rootkit-Detection-And-Identification.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=TgMsMwsfoQ0"
      }
    ],
    "youtubeDescription": "by Xueyang Wang & Xiaofei Guo\n\nKernel rootkits are stealthy and can have unrestricted access to system resources. In our talk, we will present NumChecker, a new Virtual Machine Monitor (VMM) based framework to detect and identify control-flow modifying kernel rootkits in a guest Virtual Machine (VM). NumChecker detects and identifies malicious modifications to a system call in the guest VM by measuring low-level events that occur during the system call's execution.\n\nTo efficiently measure these events, NumChecker leverages the Hardware Performance Counters (HPCs) in modern processors. HPCs today are able to measure a large number of low-level events that are related to program behavior. We implement NumChecker on Linux with the Kernel-based Virtual Machine. The results on a number of real-world kernel rootkits show that NumChecker is practical and effective."
  },
  "practical-new-developments-in-the-breach-attack": {
    "author": "dionysios-zindros",
    "description": "In 2013, BREACH was the sensation of Black Hat USA, introducing a still not mitigated attack vector that exploited compression to compromise SSL connections.  In this talk, we propose new methods to practically extend the attack against the most commonly used encryption ciphers. We describe a command-and-control technique to exploit plain HTTP connections in order to perform the attack in a persistent manner. We also present new statistical methods that can be used to bypass noise present in block ciphers as well as to avoid noise present in usual web applications. Parallelization and optimization techniques are also explored.  We will close the talk by proposing novel mitigation techniques. Finally, we will reveal our tool implementation, as well as experimental results on popular web services.",
    "plaintextTitle": "Practical New Developments in the BREACH Attack",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Karakostas-Practical-New-Developments-In-The-BREACH-Attack.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Karakostas-Practical-New-Developments-In-The-BREACH-Attack-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=T4iTwNLPv4g"
      }
    ],
    "youtubeDescription": "by Dionysios Zindros & Dimitris Karakostas\n\nIn 2013, BREACH was the sensation of Black Hat USA, introducing a still not mitigated attack vector that exploited compression to compromise SSL connections.\n\nIn this talk, we propose new methods to practically extend the attack against the most commonly used encryption ciphers. We describe a command-and-control technique to exploit plain HTTP connections in order to perform the attack in a persistent manner. We also present new statistical methods that can be used to bypass noise present in block ciphers as well as to avoid noise present in usual web applications. Parallelization and optimization techniques are also explored.\n\nWe will close the talk by proposing novel mitigation techniques. Finally, we will reveal our tool implementation, as well as experimental results on popular web services."
  },
  "rapid-radio-reversing": {
    "author": "michael-ossmann",
    "description": "Wireless security researchers have an unprecedented array of tools at their disposal today. Although Software-Defined Radio (SDR) is the single most valuable tool for reverse engineering wireless signals, it is sometimes faster and easier to use other tools for portions of the reverse engineering process. I'll discuss how beneficial a hybrid SDR/non-SDR approach has been to security researchers, and I'll walk through an example of the process.",
    "plaintextTitle": "Rapid Radio Reversing",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Ossmann-Rapid-Radio-Reversing.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Ossmann-Rapid-Radio-Reversing-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=y8Ooq5-3hvU"
      }
    ],
    "youtubeDescription": "https://www.blackhat.com/asia-16/briefings.html#rapid-radio-reversing\nhttps://greatscottgadgets.com/\nWireless security researchers have an unprecedented array of tools at their disposal today. Although Software-Defined Radio (SDR) is the single most valuable tool for reverse engineering wireless signals, it is sometimes faster and easier to use other tools for portions of the reverse engineering process. I'll discuss how beneficial a hybrid SDR/non-SDR approach has been to security researchers, and I'll walk through an example of the process.\n\nToolkit used:\n- osmocom_fft  https://github.com/DanielG/gr-osmosdr/blob/master/apps/osmocom_fft\n- inspectrum  https://github.com/miek/inspectrum\n- rfcat  https://bitbucket.org/atlas0fd00m/rfcat"
  },
  "su-a-cyder-homebrewing-malware-for-ios-like-a-b0$$": {
    "author": "chilik-tamir",
    "description": "Developing malware for iOS devices has never been easier, so here is a tool to do it for you. Apple's development policy has changed, BIG TIME. What was once an Android realm problem, may be turning into a new headache for Apple. Homebrewing of Malware on iOS is now possible without leaving a trace. In this workshop, you will develop and execute your first iOS Malware sample utilizing the su-A-Cyder framework for iOS Malware PoC. Tools and Techniques will be presented live and released after the talk.",
    "plaintextTitle": "su-a-Cyder: Homebrewing Malware for iOS Like a B0$$!",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Tamir-Su-A-Cyder-Homebrewing-Malware-For-iOS-Like-A-B0SS.pdf",
        "type": "Presentation"
      }
    ]
  },
  "the-kitchens-finally-burned-down-dlp-security-bakeoff": {
    "author": "zach-lanier",
    "description": "Despite a plethora of data security and protection standards and certifications, companies and their systems are still leaking information like a sieve. For instance, Data Loss Prevention (DLP) solutions have often been touted as the \"silver bullet\" that will keep corporations from becoming the next headline. With deployment models ranging from a fat agent on an endpoint, to a blinky-lights box surveilling all network traffic, to some unified threat management gateway with DLP secret sauce, these solutions are ripe for bypass -- or worse.\n\nThis talk will discuss our previous and current research into a handful of DLP solutions, including their capabilities and their shortcomings. We will demonstrate flaws in administrative and programmatic interfaces and the inspection engines themselves.",
    "plaintextTitle": "The Kitchen's Finally Burned Down: DLP Security Bakeoff",
    "material": [
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=9-906rJ2HXA"
      }
    ],
    "youtubeDescription": "by Zach Lanier & Kelly Lum\n\nDespite a plethora of data security and protection standards and certifications, companies and their systems are still leaking information like a sieve. For instance, Data Loss Prevention (DLP) solutions have often been touted as the \"silver bullet\" that will keep corporations from becoming the next headline. With deployment models ranging from a fat agent on an endpoint, to a blinky-lights box surveilling all network traffic, to some unified threat management gateway with DLP secret sauce, these solutions are ripe for bypass -- or worse.\n\nThis talk will discuss our previous and current research into a handful of DLP solutions, including their capabilities and their shortcomings. We will demonstrate flaws in administrative and programmatic interfaces and the inspection engines themselves."
  },
  "the-perl-jam-2-the-camel-strikes-back": {
    "author": "netanel-rubin",
    "description": "Presenting \"The Perl Jam: Exploiting a 20 Year-old Vulnerability\" at 31c3 opened a Pandora's Box full of Perl debates and controversies. Many of these debates originated from the Perl community itself, with unforgiving arguments such as \"vulnerabilities are the developer's fault\", \"RTFM\" and \"I really hate the Camel abuse in the presentation\" that were mostly directed at me.  This is why I'm proud to say that this year I finally got the message - finding vulnerabilities in core modules is not enough. I need to prove there are problems in the most fundamental aspects of the Perl language, or the Perl community will keep ignoring the many language issues. So I did, and we are going to analyze it in a presentation filled with lolz, WATs, and 0-days, so maybe this time something will change.  Join me for a journey in which we will delve into more 0-days in Bugzilla, an RCE on everyone who follows CGI.pm documentation, and precious WTF moments with basically any other CGI module in the world, including (but not limited to) Mojolicious, Catalyst and PSGI, affecting almost every Perl based CGI application in existence.  I hope this talk will finally prove that developers are NOT the fault here, it's the LANGUAGE, and its anti-intuitive, fail-prone 'TMTOWTDI' syntax. Btw, maybe it's time to check your $$references ;)",
    "plaintextTitle": "The Perl Jam 2: The Camel Strikes Back",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Rubin-The-Perl-Jam-2-The-Camel-Strikes-Back.pdf",
        "type": "Presentation"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=BYl3-c2JSL8"
      }
    ],
    "youtubeDescription": "by Netanel Rubin\n\nPresenting \"The Perl Jam: Exploiting a 20 Year-old Vulnerability\" at 31c3 opened a Pandora's Box full of Perl debates and controversies. Many of these debates originated from the Perl community itself, with unforgiving arguments such as \"vulnerabilities are the developer's fault\", \"RTFM\" and \"I really hate the Camel abuse in the presentation\" that were mostly directed at me.\n\nThis is why I'm proud to say that this year I finally got the message - finding vulnerabilities in core modules is not enough. I need to prove there are problems in the most fundamental aspects of the Perl language, or the Perl community will keep ignoring the many language issues. So I did, and we are going to analyze it in a presentation filled with lolz, WATs, and 0-days, so maybe this time something will change.\n\nJoin me for a journey in which we will delve into more 0-days in Bugzilla, an RCE on everyone who follows CGI.pm documentation, and precious WTF moments with basically any other CGI module in the world, including (but not limited to) Mojolicious, Catalyst and PSGI, affecting almost every Perl based CGI application in existence.\n\nI hope this talk will finally prove that developers are NOT the fault here, it's the LANGUAGE, and its anti-intuitive, fail-prone 'TMTOWTDI' syntax. Btw, maybe it's time to check your $$references ;)"
  },
  "the-security-wolf-of-wall-street-fighting-crime-with-high-frequency-classification-and-natural-language-processing": {
    "author": "thibault-reuille",
    "description": "In a world where threat actors move fast and the Internet evolves in a non-deterministic fashion, turning threat intelligence into automated protection has proven to be a challenge for the information security industry. While traditional threat research methods will never go away, there is an increasing need for powerful decision models that can process data in a real-time fashion and scale to incorporate increasingly-rich sources of threat intel. This talk will focus on one way to build a scalable machine learning infrastructure in real-time on a massive amount of DNS data (approximately 80B queries per day). \n\nIn this talk, we will offer a sneak peek into how OpenDNS does scalable data science. We will touch on two core components, Big Data engineering and Big Data science, and specifically how they are used to implement a real-time threat detection systems for large-scale network traffic.\n\nTo begin, we will detail Avalanche, a stream processing framework that helps OpenDNS data scientists create their own data processing pipelines using a modular graph-oriented representation. Each node acts as a data stream processor running as a process, thread or EC2 instance. In this graph database, the edges represent streaming channels connecting the different inputs and outputs of the nodes. The whole data pipeline can then easily be scaled and deployed to hundreds of instances in an AWS cloud.\n\nThe Avalanche project's paradigm is to translate the approach that the finance world has been using for decades in high frequency or quantitative trading and apply it to traffic analysis. Applying intelligent detection models as close as possible to the data source holds the key to build a truly predictive security system, one where requests are classified and filtered on the fly. In our particular case at OpenDNS, we see a strong interest in integrating such a detection pipeline at the resolver level. \n\nWe will next discuss how we integrate our statistical model NLP-Rank (a model that does large scale phishing detection) with Avalanche, and show some benchmarks. At its core, NLP-Rank is a fraud detection system that applies machine learning to the HTML content of a domain's web page to extract relevant terms and identify whether the content is potentially malicious or not. In this sense we are automating the security analyst's decision-making process in judging whether a website is legitimate or not. Typically when an analyst performs a review for a domain or URL in question, the analyst visits the site in a TOR browser, analyzes the content, and identifies the themes/summarize the page before deciding whether it's a fake or a false positive. \n\nIn this talk, we will describe how we have automated this process at OpenDNS. We will also discuss the unique characteristics of NLP-Rank, including its machine learning techniques. Additionally, we will discuss the design and implementation of our phishing classification system. We will provide an overview of data preprocessing techniques and the information retrieval/natural language processing techniques used by our classifier. We will then discuss how Avalanche manages the results of NLP-Rank, how we add those results to our blocklists and our corpus, and Avalanche's overall performance.",
    "plaintextTitle": "The Security Wolf of Wall Street: Fighting Crime with High-Frequency Classification and Natural Language Processing",
    "material": [
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Reuille-The-Security-Wolf-Of-Wall-Street-Fighting-Crime-With-High-Frequency-Classification-And-Natural-Language-Processing.pdf",
        "type": "Presentation"
      },
      {
        "link": "https://www.blackhat.com/docs/asia-16/materials/asia-16-Reuille-The-Security-Wolf-Of-Wall-Street-Fighting-Crime-With-High-Frequency-Classification-And-Natural-Language-Processing-wp.pdf",
        "type": "White Paper"
      },
      {
        "type": "YouTube",
        "link": "https://www.youtube.com/watch?v=ZIV3gaPHTw4"
      }
    ],
    "youtubeDescription": "by Thibault Reuille & Jeremiah O'Connor\n\nIn a world where threat actors move fast and the Internet evolves in a non-deterministic fashion, turning threat intelligence into automated protection has proven to be a challenge for the information security industry. While traditional threat research methods will never go away, there is an increasing need for powerful decision models that can process data in a real-time fashion and scale to incorporate increasingly-rich sources of threat intel. This talk will focus on one way to build a scalable machine learning infrastructure in real-time on a massive amount of DNS data (approximately 80B queries per day).\n\nIn this talk, we will offer a sneak peek into how OpenDNS does scalable data science. We will touch on two core components, Big Data engineering and Big Data science, and specifically how they are used to implement a real-time threat detection systems for large-scale network traffic.\n\nTo begin, we will detail Avalanche, a stream processing framework that helps OpenDNS data scientists create their own data processing pipelines using a modular graph-oriented representation. Each node acts as a data stream processor running as a process, thread or EC2 instance. In this graph database, the edges represent streaming channels connecting the different inputs and outputs of the nodes. The whole data pipeline can then easily be scaled and deployed to hundreds of instances in an AWS cloud.\n\nThe Avalanche project's paradigm is to translate the approach that the finance world has been using for decades in high frequency or quantitative trading and apply it to traffic analysis. Applying intelligent detection models as close as possible to the data source holds the key to build a truly predictive security system, one where requests are classified and filtered on the fly. In our particular case at OpenDNS, we see a strong interest in integrating such a detection pipeline at the resolver level.\n\nWe will next discuss how we integrate our statistical model NLP-Rank (a model that does large scale phishing detection) with Avalanche, and show some benchmarks. At its core, NLP-Rank is a fraud detection system that applies machine learning to the HTML content of a domain's web page to extract relevant terms and identify whether the content is potentially malicious or not. In this sense we are automating the security analyst's decision-making process in judging whether a website is legitimate or not. Typically when an analyst performs a review for a domain or URL in question, the analyst visits the site in a TOR browser, analyzes the content, and identifies the themes/summarize the page before deciding whether it's a fake or a false positive.\n\nIn this talk, we will describe how we have automated this process at OpenDNS. We will also discuss the unique characteristics of NLP-Rank, including its machine learning techniques. Additionally, we will discuss the design and implementation of our phishing classification system. We will provide an overview of data preprocessing techniques and the information retrieval/natural language processing techniques used by our classifier. We will then discuss how Avalanche manages the results of NLP-Rank, how we add those results to our blocklists and our corpus, and Avalanche's overall performance."
  }
}